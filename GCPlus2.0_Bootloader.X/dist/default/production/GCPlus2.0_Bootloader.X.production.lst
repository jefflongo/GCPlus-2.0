

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Mar 29 04:02:34 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F25K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53  0000                     
    54                           ; Version 2.05
    55                           ; Generated 20/12/2018 GMT
    56                           ; 
    57                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F25K42 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     
    89                           	psect	idataCOMRAM
    90  0017A2                     __pidataCOMRAM:
    91                           	opt callstack 0
    92                           
    93                           ;initializer for _ADCValues
    94  0017A2  80                 	db	128
    95  0017A3  80                 	db	128
    96  0017A4  80                 	db	128
    97  0017A5  80                 	db	128
    98  0017A6  00                 	db	0
    99  0017A7  00                 	db	0
   100                           
   101                           ;initializer for _ADCChannels
   102  0017A8  11                 	db	17
   103  0017A9  12                 	db	18
   104  0017AA  13                 	db	19
   105  0017AB  14                 	db	20
   106  0017AC  15                 	db	21
   107  0017AD  10                 	db	16
   108  0000                     _PIE1bits	set	14737
   109  0000                     _IPR1bits	set	14721
   110  0000                     _PIR1bits	set	14753
   111  0000                     _PIR4bits	set	14756
   112  0000                     _PIE9bits	set	14745
   113  0000                     _PIR9bits	set	14761
   114  0000                     _NVMDAT	set	14819
   115  0000                     _NVMADRL	set	14816
   116  0000                     _NVMCON1	set	14821
   117  0000                     _NVMCON1bits	set	14821
   118  0000                     _NVMCON2	set	14822
   119  0000                     _SMT1PWAIF	set	118031
   120  0000                     _SMT1PWAIE	set	117903
   121  0000                     _TMR0IF	set	118047
   122  0000                     _ADTIF	set	118027
   123  0000                     _ODCONC	set	14946
   124  0000                     _ODCONB	set	14930
   125  0000                     _ODCONA	set	14914
   126  0000                     _WPUC	set	14945
   127  0000                     _WPUB	set	14929
   128  0000                     _WPUA	set	14913
   129  0000                     _ANSELB	set	14928
   130  0000                     _ANSELA	set	14912
   131  0000                     _RB4PPS	set	14860
   132  0000                     _SMT1SIGPPS	set	15058
   133  0000                     _T6INPPS	set	15052
   134  0000                     _PPSLOCKbits	set	15039
   135  0000                     _PPSLOCK	set	15039
   136  0000                     _ANSELC	set	14944
   137  0000                     _DMA1CON0bits	set	15356
   138  0000                     _DMA2CON0	set	15324
   139  0000                     _DMA2CON1bits	set	15325
   140  0000                     _DMA2SIRQ	set	15327
   141  0000                     _DMA2DSZL	set	15310
   142  0000                     _DMA2DSZH	set	15311
   143  0000                     _DMA2SSZL	set	15319
   144  0000                     _DMA2SSZH	set	15320
   145  0000                     _DMA2DSAL	set	15312
   146  0000                     _DMA2DSAH	set	15313
   147  0000                     _DMA2SSAL	set	15321
   148  0000                     _DMA2SSAH	set	15322
   149  0000                     _DMA2SSAU	set	15323
   150  0000                     _DMA1CON0	set	15356
   151  0000                     _DMA1CON1bits	set	15357
   152  0000                     _DMA1SIRQ	set	15359
   153  0000                     _DMA1DSZL	set	15342
   154  0000                     _DMA1DSZH	set	15343
   155  0000                     _DMA1SSZL	set	15351
   156  0000                     _DMA1SSZH	set	15352
   157  0000                     _DMA1DSAL	set	15344
   158  0000                     _DMA1DSAH	set	15345
   159  0000                     _DMA1SSAL	set	15353
   160  0000                     _DMA1SSAH	set	15354
   161  0000                     _DMA1SSAU	set	15355
   162  0000                     _CLC4CON	set	15446
   163  0000                     _CLC4GLS3	set	15455
   164  0000                     _CLC4GLS2	set	15454
   165  0000                     _CLC4GLS1	set	15453
   166  0000                     _CLC4GLS0	set	15452
   167  0000                     _CLC4SEL3	set	15451
   168  0000                     _CLC4SEL2	set	15450
   169  0000                     _CLC4SEL1	set	15449
   170  0000                     _CLC4SEL0	set	15448
   171  0000                     _CLC4POL	set	15447
   172  0000                     _CLC3CON	set	15456
   173  0000                     _CLC3GLS3	set	15465
   174  0000                     _CLC3GLS2	set	15464
   175  0000                     _CLC3GLS1	set	15463
   176  0000                     _CLC3GLS0	set	15462
   177  0000                     _CLC3SEL3	set	15461
   178  0000                     _CLC3SEL2	set	15460
   179  0000                     _CLC3SEL1	set	15459
   180  0000                     _CLC3SEL0	set	15458
   181  0000                     _CLC3POL	set	15457
   182  0000                     _CLC2CON	set	15466
   183  0000                     _CLC2GLS3	set	15475
   184  0000                     _CLC2GLS2	set	15474
   185  0000                     _CLC2GLS1	set	15473
   186  0000                     _CLC2GLS0	set	15472
   187  0000                     _CLC2SEL3	set	15471
   188  0000                     _CLC2SEL2	set	15470
   189  0000                     _CLC2SEL1	set	15469
   190  0000                     _CLC2SEL0	set	15468
   191  0000                     _CLC2POL	set	15467
   192  0000                     _CLC1CON	set	15476
   193  0000                     _CLC1GLS3	set	15485
   194  0000                     _CLC1GLS2	set	15484
   195  0000                     _CLC1GLS1	set	15483
   196  0000                     _CLC1GLS0	set	15482
   197  0000                     _CLC1SEL3	set	15481
   198  0000                     _CLC1SEL2	set	15480
   199  0000                     _CLC1SEL1	set	15479
   200  0000                     _CLC1SEL0	set	15478
   201  0000                     _CLC1POL	set	15477
   202  0000                     _SPI1TXB	set	15633
   203  0000                     _SPI1TCNTL	set	15634
   204  0000                     _SPI1INTFbits	set	15642
   205  0000                     _SPI1TWIDTH	set	15640
   206  0000                     _SPI1STATUSbits	set	15639
   207  0000                     _SPI1CON0	set	15636
   208  0000                     _SPI1CON2	set	15638
   209  0000                     _SPI1CON1	set	15637
   210  0000                     _SPI1BAUD	set	15641
   211  0000                     _SPI1CLK	set	15644
   212  0000                     _ADCPbits	set	16087
   213  0000                     _ADACT	set	16126
   214  0000                     _ADRPT	set	16108
   215  0000                     _ADACQL	set	16115
   216  0000                     _ADREF	set	16125
   217  0000                     _ADCLK	set	16127
   218  0000                     _ADCON3	set	16123
   219  0000                     _ADCON2bits	set	16122
   220  0000                     _ADCON2	set	16122
   221  0000                     _ADCON1	set	16121
   222  0000                     _ADCON0	set	16120
   223  0000                     _ADFLTRL	set	16102
   224  0000                     _ADPCH	set	16113
   225  0000                     _SMT1CON1bits	set	16159
   226  0000                     _SMT1SIG	set	16162
   227  0000                     _SMT1WIN	set	16163
   228  0000                     _SMT1CLK	set	16161
   229  0000                     _SMT1CON1	set	16159
   230  0000                     _SMT1CON0	set	16158
   231  0000                     _SMT1TMRU	set	16148
   232  0000                     _SMT1TMRH	set	16147
   233  0000                     _SMT1TMRL	set	16146
   234  0000                     _SMT1PRU	set	16157
   235  0000                     _SMT1PRH	set	16156
   236  0000                     _SMT1PRL	set	16155
   237  0000                     _CCPTMRS1	set	16223
   238  0000                     _SMT1CPWL	set	16152
   239  0000                     _NCO1ACCL	set	16184
   240  0000                     _IVTBASE	set	16341
   241  0000                     _TRISBbits	set	16323
   242  0000                     _PWM5CON	set	16238
   243  0000                     _PWM5DCL	set	16236
   244  0000                     _PWM5DCH	set	16237
   245  0000                     _T2HLT	set	16301
   246  0000                     _T2CLKCON	set	16302
   247  0000                     _PORTBbits	set	16331
   248  0000                     _T2PR	set	16299
   249  0000                     _T2TMR	set	16298
   250  0000                     _T2RST	set	16303
   251  0000                     _T2CLK	set	16302
   252  0000                     _T2CON	set	16300
   253  0000                     _T6HLT	set	16277
   254  0000                     _T6PR	set	16275
   255  0000                     _T6RST	set	16279
   256  0000                     _T6CLK	set	16278
   257  0000                     _T6CON	set	16276
   258  0000                     _T6TMR	set	16274
   259  0000                     _TMR0H	set	16311
   260  0000                     _T0CON1	set	16313
   261  0000                     _T0CON0	set	16312
   262  0000                     _TABLAT	set	16373
   263  0000                     _TBLPTRL	set	16374
   264  0000                     _TBLPTRH	set	16375
   265  0000                     _TBLPTRU	set	16376
   266  0000                     _PCL	set	16377
   267  0000                     _PCLATH	set	16378
   268  0000                     _PCLATU	set	16379
   269  0000                     _IVTLOCK	set	16340
   270  0000                     _STKPTR	set	16380
   271  0000                     _TRISC	set	16324
   272  0000                     _TRISB	set	16323
   273  0000                     _TRISA	set	16322
   274  0000                     _LATB	set	16315
   275  0000                     _INTCON0bits	set	16338
   276  0000                     _INTCON0	set	16338
   277  0000                     _PORTC	set	16332
   278  0000                     _PORTB	set	16331
   279  0000                     _PORTA	set	16330
   280  0000                     _IVTLOCKED	set	130720
   281  0000                     _GIE	set	130711
   282                           
   283                           ; #config settings
   284  0000                     
   285                           	psect	cinit
   286  000FA2                     __pcinit:
   287                           	opt callstack 0
   288  000FA2                     start_initialization:
   289                           	opt callstack 0
   290  000FA2                     __initialization:
   291                           	opt callstack 0
   292                           
   293                           ; Initialize objects allocated to COMRAM (12 bytes)
   294                           ; load TBLPTR registers with __pidataCOMRAM
   295  000FA2  0EA2               	movlw	low __pidataCOMRAM
   296  000FA4  6EF6               	movwf	tblptrl,c
   297  000FA6  0E17               	movlw	high __pidataCOMRAM
   298  000FA8  6EF7               	movwf	tblptrh,c
   299  000FAA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   300  000FAC  6EF8               	movwf	tblptru,c
   301  000FAE  EE00  F04F         	lfsr	0,__pdataCOMRAM
   302  000FB2  EE10 F00C          	lfsr	1,12
   303  000FB6                     copy_data0:
   304  000FB6  0009               	tblrd		*+
   305  000FB8  006F FFD7 FFEE     	movff	tablat,postinc0
   306  000FBE  50E5               	movf	postdec1,w,c
   307  000FC0  50E1               	movf	fsr1l,w,c
   308  000FC2  E1F9               	bnz	copy_data0
   309                           
   310                           ; Clear objects allocated to BANK5 (256 bytes)
   311  000FC4  EE01  F100         	lfsr	0,__pbssBANK5
   312  000FC8  EE10 F100          	lfsr	1,256
   313  000FCC                     clear_0:
   314  000FCC  6AEE               	clrf	postinc0,c
   315  000FCE  50E5               	movf	postdec1,w,c
   316  000FD0  50E1               	movf	fsr1l,w,c
   317  000FD2  E1FC               	bnz	clear_0
   318  000FD4  50E2               	movf	fsr1h,w,c
   319  000FD6  E1FA               	bnz	clear_0
   320                           
   321                           ; Clear objects allocated to BANK4 (256 bytes)
   322  000FD8  EE01  F000         	lfsr	0,__pbssBANK4
   323  000FDC  EE10 F100          	lfsr	1,256
   324  000FE0                     clear_1:
   325  000FE0  6AEE               	clrf	postinc0,c
   326  000FE2  50E5               	movf	postdec1,w,c
   327  000FE4  50E1               	movf	fsr1l,w,c
   328  000FE6  E1FC               	bnz	clear_1
   329  000FE8  50E2               	movf	fsr1h,w,c
   330  000FEA  E1FA               	bnz	clear_1
   331                           
   332                           ; Clear objects allocated to BANK3 (256 bytes)
   333  000FEC  EE00  F300         	lfsr	0,__pbssBANK3
   334  000FF0  EE10 F100          	lfsr	1,256
   335  000FF4                     clear_2:
   336  000FF4  6AEE               	clrf	postinc0,c
   337  000FF6  50E5               	movf	postdec1,w,c
   338  000FF8  50E1               	movf	fsr1l,w,c
   339  000FFA  E1FC               	bnz	clear_2
   340  000FFC  50E2               	movf	fsr1h,w,c
   341  000FFE  E1FA               	bnz	clear_2
   342                           
   343                           ; Clear objects allocated to BANK2 (256 bytes)
   344  001000  EE00  F200         	lfsr	0,__pbssBANK2
   345  001004  EE10 F100          	lfsr	1,256
   346  001008                     clear_3:
   347  001008  6AEE               	clrf	postinc0,c
   348  00100A  50E5               	movf	postdec1,w,c
   349  00100C  50E1               	movf	fsr1l,w,c
   350  00100E  E1FC               	bnz	clear_3
   351  001010  50E2               	movf	fsr1h,w,c
   352  001012  E1FA               	bnz	clear_3
   353                           
   354                           ; Clear objects allocated to BANK1 (90 bytes)
   355  001014  EE00  F100         	lfsr	0,__pbssBANK1
   356  001018  0E5A               	movlw	90
   357  00101A                     clear_4:
   358  00101A  6AEE               	clrf	postinc0,c
   359  00101C  06E8               	decf	wreg,f,c
   360  00101E  E1FD               	bnz	clear_4
   361                           
   362                           ; Clear objects allocated to COMRAM (41 bytes)
   363  001020  EE00  F001         	lfsr	0,__pbssCOMRAM
   364  001024  0E29               	movlw	41
   365  001026                     clear_5:
   366  001026  6AEE               	clrf	postinc0,c
   367  001028  06E8               	decf	wreg,f,c
   368  00102A  E1FD               	bnz	clear_5
   369                           
   370                           ;
   371                           ; Setup IVTBASE
   372                           ;
   373  00102C  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   374  00102E  6ED5               	movwf	213,c
   375  001030  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   376  001032  6ED6               	movwf	214,c
   377  001034  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   378  001036  6ED7               	movwf	215,c
   379  001038                     end_of_initialization:
   380                           	opt callstack 0
   381  001038                     __end_of__initialization:
   382                           	opt callstack 0
   383  001038  0E00               	movlw	low (__Lmediumconst shr (0+16))
   384  00103A  6EF8               	movwf	tblptru,c
   385  00103C  0100               	movlb	0
   386  00103E  EF0F  F000         	goto	_main	;jump to C main() function
   387                           
   388                           	psect	bssCOMRAM
   389  000001                     __pbssCOMRAM:
   390                           	opt callstack 0
   391  000001                     _buttonsTimers:
   392                           	opt callstack 0
   393  000001                     	ds	15
   394  000010                     _origins:
   395                           	opt callstack 0
   396  000010                     	ds	6
   397  000016                     _outButtons:
   398                           	opt callstack 0
   399  000016                     	ds	4
   400  00001A                     _prevButtons:
   401                           	opt callstack 0
   402  00001A                     	ds	3
   403  00001D                     _SITempByte:
   404                           	opt callstack 0
   405  00001D                     	ds	1
   406  00001E                     _SICMDReceived:
   407                           	opt callstack 0
   408  00001E                     	ds	1
   409  00001F                     _SIByteCounter:
   410                           	opt callstack 0
   411  00001F                     	ds	1
   412  000020                     _SIBitCounter:
   413                           	opt callstack 0
   414  000020                     	ds	1
   415  000021                     _ButtonsID:
   416                           	opt callstack 0
   417  000021                     	ds	1
   418  000022                     _buttonsMessage:
   419                           	opt callstack 0
   420  000022                     	ds	8
   421                           
   422                           	psect	dataCOMRAM
   423  00004F                     __pdataCOMRAM:
   424                           	opt callstack 0
   425  00004F                     _ADCValues:
   426                           	opt callstack 0
   427  00004F                     	ds	6
   428  000055                     _ADCChannels:
   429                           	opt callstack 0
   430  000055                     	ds	6
   431                           
   432                           	psect	bssBANK1
   433  000100                     __pbssBANK1:
   434                           	opt callstack 0
   435  000100                     _SIInputMessage:
   436                           	opt callstack 0
   437  000100                     	ds	36
   438  000124                     _config:
   439                           	opt callstack 0
   440  000124                     	ds	24
   441  00013C                     _buttonsMapByte1:
   442                           	opt callstack 0
   443  00013C                     	ds	15
   444  00014B                     _buttonsMapByte0:
   445                           	opt callstack 0
   446  00014B                     	ds	15
   447                           
   448                           	psect	bssBANK2
   449  000200                     __pbssBANK2:
   450                           	opt callstack 0
   451  000200                     _LUT_CX:
   452                           	opt callstack 0
   453  000200                     	ds	256
   454                           
   455                           	psect	bssBANK3
   456  000300                     __pbssBANK3:
   457                           	opt callstack 0
   458  000300                     _LUT_CY:
   459                           	opt callstack 0
   460  000300                     	ds	256
   461                           
   462                           	psect	bssBANK4
   463  000400                     __pbssBANK4:
   464                           	opt callstack 0
   465  000400                     _LUT_SX:
   466                           	opt callstack 0
   467  000400                     	ds	256
   468                           
   469                           	psect	bssBANK5
   470  000500                     __pbssBANK5:
   471                           	opt callstack 0
   472  000500                     _LUT_SY:
   473                           	opt callstack 0
   474  000500                     	ds	256
   475                           
   476                           	psect	cstackBANK0
   477  000060                     __pcstackBANK0:
   478                           	opt callstack 0
   479  000060                     main@flashBuffer:
   480                           	opt callstack 0
   481                           
   482                           ; 64 bytes @ 0x0
   483  000060                     	ds	64
   484  0000A0                     main@cmd:
   485                           	opt callstack 0
   486                           
   487                           ; 36 bytes @ 0x40
   488  0000A0                     	ds	36
   489  0000C4                     main@btnMsg:
   490                           	opt callstack 0
   491                           
   492                           ; 2 bytes @ 0x64
   493  0000C4                     	ds	2
   494  0000C6                     main@btnMsg_374:
   495                           	opt callstack 0
   496                           
   497                           ; 2 bytes @ 0x66
   498  0000C6                     	ds	2
   499  0000C8                     main@msgAnswer:
   500                           	opt callstack 0
   501                           
   502                           ; 36 bytes @ 0x68
   503  0000C8                     	ds	36
   504  0000EC                     main@len:
   505                           	opt callstack 0
   506                           
   507                           ; 1 bytes @ 0x8C
   508  0000EC                     	ds	1
   509  0000ED                     main@len_375:
   510                           	opt callstack 0
   511                           
   512                           ; 1 bytes @ 0x8D
   513  0000ED                     	ds	1
   514  0000EE                     main@flashBufferIdx:
   515                           	opt callstack 0
   516                           
   517                           ; 1 bytes @ 0x8E
   518  0000EE                     	ds	1
   519  0000EF                     main@cmdLen:
   520                           	opt callstack 0
   521                           
   522                           ; 1 bytes @ 0x8F
   523  0000EF                     	ds	1
   524  0000F0                     main@addr:
   525                           	opt callstack 0
   526                           
   527                           ; 2 bytes @ 0x90
   528  0000F0                     	ds	2
   529  0000F2                     main@gcpLocked:
   530                           	opt callstack 0
   531                           
   532                           ; 1 bytes @ 0x92
   533  0000F2                     	ds	1
   534  0000F3                     main@inBut:
   535                           	opt callstack 0
   536                           
   537                           ; 3 bytes @ 0x93
   538  0000F3                     	ds	3
   539  0000F6                     main@i:
   540                           	opt callstack 0
   541                           
   542                           ; 1 bytes @ 0x96
   543  0000F6                     	ds	1
   544                           
   545                           	psect	cstackCOMRAM
   546  00002A                     __pcstackCOMRAM:
   547                           	opt callstack 0
   548  00002A                     ?_buttonsGetMessage:
   549                           	opt callstack 0
   550  00002A                     ?_buttonsGetOrigins:
   551                           	opt callstack 0
   552  00002A                     ?_buttonsGetMapByte0:
   553                           	opt callstack 0
   554  00002A                     ?_buttonsGetMapByte1:
   555                           	opt callstack 0
   556  00002A                     ?___wmul:
   557                           	opt callstack 0
   558  00002A                     portsInit@state:
   559                           	opt callstack 0
   560  00002A                     EEPROMReadByte@address:
   561                           	opt callstack 0
   562  00002A                     EEPROMWriteByte@data:
   563                           	opt callstack 0
   564  00002A                     ADCInit@syCh:
   565                           	opt callstack 0
   566  00002A                     buttonsUpdate@PA:
   567                           	opt callstack 0
   568  00002A                     buttonsGetMessage@triggersMode:
   569                           	opt callstack 0
   570  00002A                     buttonsSetOrigins@triggersMode:
   571                           	opt callstack 0
   572  00002A                     PGMEraseRow@addr:
   573                           	opt callstack 0
   574  00002A                     PGMReadBlock@addr:
   575                           	opt callstack 0
   576  00002A                     buttonsSetMapByte0@map:
   577                           	opt callstack 0
   578  00002A                     buttonsSetMapByte1@map:
   579                           	opt callstack 0
   580  00002A                     SIGetCommand@msg:
   581                           	opt callstack 0
   582  00002A                     ___wmul@multiplier:
   583                           	opt callstack 0
   584  00002A                     memset@p1:
   585                           	opt callstack 0
   586                           
   587                           ; 2 bytes @ 0x0
   588  00002A                     	ds	1
   589  00002B                     EEPROMWriteByte@address:
   590                           	opt callstack 0
   591  00002B                     ADCInit@cxCh:
   592                           	opt callstack 0
   593  00002B                     buttonsUpdate@PB:
   594                           	opt callstack 0
   595                           
   596                           ; 1 bytes @ 0x1
   597  00002B                     	ds	1
   598  00002C                     ??_buttonsGetMessage:
   599  00002C                     ??_PGMEraseRow:
   600  00002C                     ADCInit@cyCh:
   601                           	opt callstack 0
   602  00002C                     buttonsUpdate@PC:
   603                           	opt callstack 0
   604  00002C                     buttonsSetMapByte0@i:
   605                           	opt callstack 0
   606  00002C                     buttonsSetMapByte1@i:
   607                           	opt callstack 0
   608  00002C                     buttonsGetMapByte0@i:
   609                           	opt callstack 0
   610  00002C                     buttonsGetMapByte1@i:
   611                           	opt callstack 0
   612  00002C                     SIGetCommand@i:
   613                           	opt callstack 0
   614  00002C                     configFlashAll@data:
   615                           	opt callstack 0
   616  00002C                     PGMReadBlock@data:
   617                           	opt callstack 0
   618  00002C                     ___wmul@multiplicand:
   619                           	opt callstack 0
   620  00002C                     memset@c:
   621                           	opt callstack 0
   622                           
   623                           ; 2 bytes @ 0x2
   624  00002C                     	ds	1
   625  00002D                     ??_ADCInit:
   626  00002D                     buttonsUpdate@i:
   627                           	opt callstack 0
   628  00002D                     buttonsGetMessage@analogMode:
   629                           	opt callstack 0
   630                           
   631                           ; 1 bytes @ 0x3
   632  00002D                     	ds	1
   633  00002E                     ??_PGMReadBlock:
   634  00002E                     configFlashAll@i:
   635                           	opt callstack 0
   636  00002E                     PGMWriteBlock@addr:
   637                           	opt callstack 0
   638  00002E                     ___wmul@product:
   639                           	opt callstack 0
   640  00002E                     memset@n:
   641                           	opt callstack 0
   642  00002E                     buttonsUpdate@toggledButtons:
   643                           	opt callstack 0
   644                           
   645                           ; 3 bytes @ 0x4
   646  00002E                     	ds	2
   647  000030                     ?___awdiv:
   648                           	opt callstack 0
   649  000030                     PGMWriteBlock@data:
   650                           	opt callstack 0
   651  000030                     PGMReadBlock@i:
   652                           	opt callstack 0
   653  000030                     SISendMessage@msg:
   654                           	opt callstack 0
   655  000030                     ___awdiv@dividend:
   656                           	opt callstack 0
   657  000030                     memset@p:
   658                           	opt callstack 0
   659                           
   660                           ; 2 bytes @ 0x6
   661  000030                     	ds	1
   662  000031                     ADCInit@sxCh:
   663                           	opt callstack 0
   664                           
   665                           ; 1 bytes @ 0x7
   666  000031                     	ds	1
   667  000032                     ??_PGMWriteBlock:
   668  000032                     ADCInit@i:
   669                           	opt callstack 0
   670  000032                     SISendMessage@len:
   671                           	opt callstack 0
   672  000032                     configInit@data:
   673                           	opt callstack 0
   674  000032                     ___awdiv@divisor:
   675                           	opt callstack 0
   676                           
   677                           ; 2 bytes @ 0x8
   678  000032                     	ds	1
   679  000033                     ??_SISendMessage:
   680                           
   681                           ; 1 bytes @ 0x9
   682  000033                     	ds	1
   683  000034                     configInit@i:
   684                           	opt callstack 0
   685  000034                     ___awdiv@counter:
   686                           	opt callstack 0
   687  000034                     PGMWriteBlock@i:
   688                           	opt callstack 0
   689                           
   690                           ; 2 bytes @ 0xA
   691  000034                     	ds	1
   692  000035                     ___awdiv@sign:
   693                           	opt callstack 0
   694                           
   695                           ; 1 bytes @ 0xB
   696  000035                     	ds	1
   697  000036                     ___awdiv@quotient:
   698                           	opt callstack 0
   699                           
   700                           ; 2 bytes @ 0xC
   701  000036                     	ds	2
   702  000038                     SISendMessage@idx:
   703                           	opt callstack 0
   704  000038                     buttonsBuildLUT@LUT:
   705                           	opt callstack 0
   706                           
   707                           ; 2 bytes @ 0xE
   708  000038                     	ds	1
   709  000039                     SISendMessage@leftToSend:
   710                           	opt callstack 0
   711                           
   712                           ; 1 bytes @ 0xF
   713  000039                     	ds	1
   714  00003A                     buttonsBuildLUT@minVal:
   715                           	opt callstack 0
   716                           
   717                           ; 1 bytes @ 0x10
   718  00003A                     	ds	1
   719  00003B                     buttonsBuildLUT@maxVal:
   720                           	opt callstack 0
   721                           
   722                           ; 1 bytes @ 0x11
   723  00003B                     	ds	1
   724  00003C                     buttonsBuildLUT@origin:
   725                           	opt callstack 0
   726                           
   727                           ; 1 bytes @ 0x12
   728  00003C                     	ds	1
   729  00003D                     buttonsBuildLUT@dz:
   730                           	opt callstack 0
   731                           
   732                           ; 1 bytes @ 0x13
   733  00003D                     	ds	1
   734  00003E                     buttonsBuildLUT@dzMode:
   735                           	opt callstack 0
   736                           
   737                           ; 1 bytes @ 0x14
   738  00003E                     	ds	1
   739  00003F                     buttonsBuildLUT@invert:
   740                           	opt callstack 0
   741                           
   742                           ; 1 bytes @ 0x15
   743  00003F                     	ds	1
   744  000040                     ??_buttonsBuildLUT:
   745                           
   746                           ; 1 bytes @ 0x16
   747  000040                     	ds	3
   748  000043                     _buttonsBuildLUT$1169:
   749                           	opt callstack 0
   750                           
   751                           ; 2 bytes @ 0x19
   752  000043                     	ds	2
   753  000045                     buttonsBuildLUT@range:
   754                           	opt callstack 0
   755                           
   756                           ; 2 bytes @ 0x1B
   757  000045                     	ds	2
   758  000047                     buttonsBuildLUT@tempVal:
   759                           	opt callstack 0
   760                           
   761                           ; 2 bytes @ 0x1D
   762  000047                     	ds	2
   763  000049                     buttonsBuildLUT@i:
   764                           	opt callstack 0
   765                           
   766                           ; 2 bytes @ 0x1F
   767  000049                     	ds	2
   768  00004B                     buttonsBuildLUT@radius:
   769                           	opt callstack 0
   770                           
   771                           ; 2 bytes @ 0x21
   772  00004B                     	ds	2
   773  00004D                     ??_main:
   774                           
   775                           ; 1 bytes @ 0x23
   776  00004D                     	ds	2
   777                           
   778 ;;
   779 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   780 ;;
   781 ;; *************** function _main *****************
   782 ;; Defined at:
   783 ;;		line 79 in file "main.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;		None
   786 ;; Auto vars:     Size  Location     Type
   787 ;;  len             1  141[BANK0 ] unsigned char 
   788 ;;  len             1  140[BANK0 ] unsigned char 
   789 ;;  btnMsg          2  102[BANK0 ] PTR unsigned char 
   790 ;;		 -> buttonsMessage(8), 
   791 ;;  btnMsg          2  100[BANK0 ] PTR unsigned char 
   792 ;;		 -> buttonsMessage(8), 
   793 ;;  flashBuffer    64    0[BANK0 ] unsigned char [64]
   794 ;;  msgAnswer      36  104[BANK0 ] unsigned char [36]
   795 ;;  cmd            36   64[BANK0 ] unsigned char [36]
   796 ;;  inBut           3  147[BANK0 ] struct .
   797 ;;  addr            2  144[BANK0 ] unsigned int 
   798 ;;  i               1  150[BANK0 ] unsigned char 
   799 ;;  gcpLocked       1  146[BANK0 ] unsigned char 
   800 ;;  cmdLen          1  143[BANK0 ] unsigned char 
   801 ;;  flashBufferI    1  142[BANK0 ] unsigned char 
   802 ;; Return value:  Size  Location     Type
   803 ;;                  1    wreg      void 
   804 ;; Registers used:
   805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   811 ;;      Params:         0       0       0       0       0       0       0       0       0
   812 ;;      Locals:         0     151       0       0       0       0       0       0       0
   813 ;;      Temps:          2       0       0       0       0       0       0       0       0
   814 ;;      Totals:         2     151       0       0       0       0       0       0       0
   815 ;;Total ram usage:      153 bytes
   816 ;; Hardware stack levels required when called:    6
   817 ;; This function calls:
   818 ;;		_ADCInit
   819 ;;		_EEPROMReadByte
   820 ;;		_EEPROMWriteByte
   821 ;;		_PGMReadBlock
   822 ;;		_PGMWriteBlock
   823 ;;		_SIClear
   824 ;;		_SIGetCommand
   825 ;;		_SIInit
   826 ;;		_SISendMessage
   827 ;;		_bootPayload
   828 ;;		_buttonsBuildLUTs
   829 ;;		_buttonsGetMapByte0
   830 ;;		_buttonsGetMapByte1
   831 ;;		_buttonsGetMessage
   832 ;;		_buttonsGetOrigins
   833 ;;		_buttonsInit
   834 ;;		_buttonsSetMapByte0
   835 ;;		_buttonsSetMapByte1
   836 ;;		_buttonsSetOrigins
   837 ;;		_buttonsUpdate
   838 ;;		_configFlashAll
   839 ;;		_configInit
   840 ;;		_configSetDefault
   841 ;;		_portsInit
   842 ;; This function is called by:
   843 ;;		Startup code after reset
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847                           	psect	text0
   848  00001E                     __ptext0:
   849                           	opt callstack 0
   850  00001E                     _main:
   851                           	opt callstack 25
   852                           
   853                           ;main.c: 82: char cmd[0x24];;main.c: 83: char msgAnswer[0x24];;main.c: 84: uint8_t gcpLo
      +                          cked = 1;
   854                           
   855                           ;incstack = 0
   856  00001E  0E01               	movlw	1
   857  000020  0100               	movlb	0	; () banked
   858  000022  6FF2               	movwf	main@gcpLocked& (0+255),b
   859                           
   860                           ;main.c: 85: uint16_t addr;;main.c: 88: uint8_t flashBuffer[64];;main.c: 89: uint8_t fla
      +                          shBufferIdx = 0;
   861  000024  0E00               	movlw	0
   862  000026  6FEE               	movwf	main@flashBufferIdx& (0+255),b
   863                           
   864                           ; BSR set to: 0
   865                           ;main.c: 103: portsInit();
   866  000028  ECD6  F009         	call	_portsInit	;wreg free
   867                           
   868                           ;main.c: 106: inButtons_t inBut;;main.c: 107: inBut.PORTA = PORTA;
   869  00002C  006F FF28  F0F3    	movff	16330,main@inBut	;volatile
   870                           
   871                           ;main.c: 108: inBut.PORTB = PORTB;
   872  000032  006F FF2C  F0F4    	movff	16331,main@inBut+1	;volatile
   873                           
   874                           ;main.c: 109: inBut.PORTC = PORTC;
   875  000038  006F FF30  F0F5    	movff	16332,main@inBut+2	;volatile
   876                           
   877                           ;main.c: 112: PGMReadBlock(0x2000, flashBuffer);
   878  00003E  0E20               	movlw	32
   879  000040  6E2B               	movwf	PGMReadBlock@addr+1,c
   880  000042  0E00               	movlw	0
   881  000044  6E2A               	movwf	PGMReadBlock@addr,c
   882  000046  0E60               	movlw	low main@flashBuffer
   883  000048  6E2C               	movwf	PGMReadBlock@data,c
   884  00004A  0E00               	movlw	high main@flashBuffer
   885  00004C  6E2D               	movwf	PGMReadBlock@data+1,c
   886  00004E  EC66  F009         	call	_PGMReadBlock	;wreg free
   887                           
   888                           ;main.c: 113: if ((flashBuffer[0] == 0x47) && (flashBuffer[1] == 0x43) && (flashBuffer[2
      +                          ] == 0x2B) && (flashBuffer[3] == 0x32)) {
   889  000052  0E47               	movlw	71
   890  000054  0100               	movlb	0	; () banked
   891  000056  1960               	xorwf	main@flashBuffer& (0+255),w,b
   892  000058  A4D8               	btfss	status,2,c
   893  00005A  D016               	goto	l3981
   894                           
   895                           ; BSR set to: 0
   896  00005C  0E43               	movlw	67
   897  00005E  1961               	xorwf	(main@flashBuffer+1)& (0+255),w,b
   898  000060  A4D8               	btfss	status,2,c
   899  000062  D012               	goto	l3981
   900                           
   901                           ; BSR set to: 0
   902  000064  0E2B               	movlw	43
   903  000066  1962               	xorwf	(main@flashBuffer+2)& (0+255),w,b
   904  000068  A4D8               	btfss	status,2,c
   905  00006A  D00E               	goto	l3981
   906                           
   907                           ; BSR set to: 0
   908  00006C  0E32               	movlw	50
   909  00006E  1963               	xorwf	(main@flashBuffer+3)& (0+255),w,b
   910  000070  A4D8               	btfss	status,2,c
   911  000072  D00A               	goto	l3981
   912                           
   913                           ; BSR set to: 0
   914                           ;main.c: 116: if ((inBut.X || inBut.Y || inBut.Z) && (NCO1ACCL == 0)) {
   915  000074  A7F4               	btfss	(main@inBut+1)& (0+255),3,b
   916                           
   917                           ; BSR set to: 0
   918  000076  B5F4               	btfsc	(main@inBut+1)& (0+255),2,b
   919  000078  D002               	goto	u3190
   920                           
   921                           ; BSR set to: 0
   922  00007A  A1F4               	btfss	(main@inBut+1)& (0+255),0,b
   923  00007C  D005               	goto	l3981
   924  00007E                     u3190:
   925                           
   926                           ; BSR set to: 0
   927  00007E  013F               	movlb	63	; () banked
   928  000080  5138               	movf	56,w,b	;volatile
   929  000082  B4D8               	btfsc	status,2,c
   930                           
   931                           ; BSR set to: 63
   932                           ;main.c: 117: bootPayload();
   933  000084  EC93  F00A         	call	_bootPayload	;wreg free
   934  000088                     l3981:
   935                           
   936                           ;main.c: 118: };main.c: 119: };main.c: 121: NCO1ACCL = 0;
   937  000088  0E00               	movlw	0
   938  00008A  013F               	movlb	63	; () banked
   939  00008C  6F38               	movwf	56,b	;volatile
   940                           
   941                           ; BSR set to: 63
   942                           ;main.c: 123: configInit();
   943  00008E  EC3B  F00A         	call	_configInit	;wreg free
   944                           
   945                           ;main.c: 124: if (config.triggersMode == 1) {
   946  000092  0101               	movlb	1	; () banked
   947  000094  053B               	decf	(_config+23)& (0+255),w,b
   948  000096  A4D8               	btfss	status,2,c
   949  000098  D003               	goto	l3989
   950                           
   951                           ; BSR set to: 1
   952                           ;main.c: 125: ANSELC |= 0x21;
   953  00009A  0E21               	movlw	33
   954  00009C  013A               	movlb	58	; () banked
   955  00009E  1360               	iorwf	96,f,b	;volatile
   956  0000A0                     l3989:
   957                           
   958                           ;main.c: 126: };main.c: 128: ADCInit(config.SXChan, config.SYChan, config.CXChan, config
      +                          .CYChan);
   959  0000A0  0060  F4CC  F02A   	movff	_config+15,ADCInit@syCh
   960  0000A6  0060  F4D0  F02B   	movff	_config+16,ADCInit@cxCh
   961  0000AC  0060  F4D4  F02C   	movff	_config+17,ADCInit@cyCh
   962  0000B2  0101               	movlb	1	; () banked
   963  0000B4  5132               	movf	(_config+14)& (0+255),w,b
   964  0000B6  EC74  F004         	call	_ADCInit
   965                           
   966                           ;main.c: 129: buttonsInit();
   967  0000BA  ECEB  F008         	call	_buttonsInit	;wreg free
   968                           
   969                           ;main.c: 130: SIInit();
   970  0000BE  EC21  F008         	call	_SIInit	;wreg free
   971                           
   972                           ;main.c: 134: if (!inBut.X && !inBut.Y && !inBut.A) {
   973  0000C2  0100               	movlb	0	; () banked
   974  0000C4  A7F4               	btfss	(main@inBut+1)& (0+255),3,b
   975                           
   976                           ; BSR set to: 0
   977  0000C6  B5F4               	btfsc	(main@inBut+1)& (0+255),2,b
   978  0000C8  D006               	goto	l4003
   979                           
   980                           ; BSR set to: 0
   981  0000CA  BFF5               	btfsc	(main@inBut+2)& (0+255),7,b
   982  0000CC  D004               	goto	l4003
   983                           
   984                           ; BSR set to: 0
   985                           ;main.c: 135: configSetDefault();
   986  0000CE  EC2B  F009         	call	_configSetDefault	;wreg free
   987                           
   988                           ;main.c: 136: configFlashAll();
   989  0000D2  EC58  F00B         	call	_configFlashAll	;wreg free
   990  0000D6                     l4003:
   991                           
   992                           ;main.c: 137: };main.c: 139: buttonsBuildLUTs();
   993  0000D6  EC06  F007         	call	_buttonsBuildLUTs	;wreg free
   994                           
   995                           ;main.c: 140: buttonsSetOrigins(config.triggersMode);
   996  0000DA  0101               	movlb	1	; () banked
   997  0000DC  513B               	movf	(_config+23)& (0+255),w,b
   998  0000DE  EC09  F00A         	call	_buttonsSetOrigins
   999                           
  1000                           ;main.c: 142: INTCON0 = 0x80;
  1001  0000E2  0E80               	movlw	128
  1002  0000E4  6ED2               	movwf	16338,c	;volatile
  1003  0000E6                     l4009:
  1004                           
  1005                           ;main.c: 145: inBut.PORTA = PORTA;
  1006  0000E6  006F FF28  F0F3    	movff	16330,main@inBut	;volatile
  1007                           
  1008                           ;main.c: 146: inBut.PORTB = PORTB;
  1009  0000EC  006F FF2C  F0F4    	movff	16331,main@inBut+1	;volatile
  1010                           
  1011                           ;main.c: 147: inBut.PORTC = PORTC;
  1012  0000F2  006F FF30  F0F5    	movff	16332,main@inBut+2	;volatile
  1013                           
  1014                           ;main.c: 149: if (inBut.X || inBut.Y || inBut.ST) {
  1015  0000F8  0100               	movlb	0	; () banked
  1016  0000FA  A7F4               	btfss	(main@inBut+1)& (0+255),3,b
  1017                           
  1018                           ; BSR set to: 0
  1019  0000FC  B5F4               	btfsc	(main@inBut+1)& (0+255),2,b
  1020  0000FE  D001               	goto	u3270
  1021                           
  1022                           ; BSR set to: 0
  1023  000100  BDF3               	btfsc	main@inBut& (0+255),6,b
  1024  000102                     u3270:
  1025                           
  1026                           ; BSR set to: 0
  1027  000102  0004               	clrwdt		;# 
  1028                           
  1029                           ;main.c: 151: };main.c: 152: buttonsUpdate();
  1030  000104  ECED  F002         	call	_buttonsUpdate	;wreg free
  1031                           
  1032                           ;main.c: 153: cmdLen = SIGetCommand(cmd);
  1033  000108  0EA0               	movlw	low main@cmd
  1034  00010A  6E2A               	movwf	SIGetCommand@msg,c
  1035  00010C  0E00               	movlw	high main@cmd
  1036  00010E  6E2B               	movwf	SIGetCommand@msg+1,c
  1037  000110  ECD4  F00A         	call	_SIGetCommand	;wreg free
  1038  000114  0100               	movlb	0	; () banked
  1039  000116  6FEF               	movwf	main@cmdLen& (0+255),b
  1040                           
  1041                           ; BSR set to: 0
  1042                           ;main.c: 155: if (cmdLen > 0) {
  1043  000118  51EF               	movf	main@cmdLen& (0+255),w,b
  1044  00011A  B4D8               	btfsc	status,2,c
  1045  00011C  D7E4               	goto	l4009
  1046                           
  1047                           ; BSR set to: 0
  1048                           ;main.c: 156: INTCON0bits.GIE = 0;
  1049  00011E  9ED2               	bcf	16338,7,c	;volatile
  1050                           
  1051                           ;main.c: 157: switch(cmd[0]) {
  1052  000120  D214               	goto	l4349
  1053  000122                     l4029:
  1054                           
  1055                           ; BSR set to: 0
  1056                           ;main.c: 159: case 0xFF:;main.c: 160: msgAnswer[0] = 0x09;
  1057  000122  0E09               	movlw	9
  1058  000124  6FC8               	movwf	main@msgAnswer& (0+255),b
  1059                           
  1060                           ;main.c: 161: msgAnswer[1] = 0x00;
  1061  000126  0E00               	movlw	0
  1062  000128  6FC9               	movwf	(main@msgAnswer+1)& (0+255),b
  1063                           
  1064                           ;main.c: 162: msgAnswer[2] = 0x03;
  1065  00012A  0E03               	movlw	3
  1066  00012C  6FCA               	movwf	(main@msgAnswer+2)& (0+255),b
  1067                           
  1068                           ; BSR set to: 0
  1069                           ;main.c: 163: SISendMessage(msgAnswer, 3);
  1070  00012E  0EC8               	movlw	low main@msgAnswer
  1071  000130  6E30               	movwf	SISendMessage@msg,c
  1072  000132  0E00               	movlw	high main@msgAnswer
  1073  000134  6E31               	movwf	SISendMessage@msg+1,c
  1074  000136  0E03               	movlw	3
  1075  000138  6E32               	movwf	SISendMessage@len,c
  1076  00013A  EC9A  F006         	call	_SISendMessage	;wreg free
  1077                           
  1078                           ;main.c: 164: break;
  1079  00013E  D249               	goto	l4351
  1080  000140                     l4035:
  1081                           
  1082                           ; BSR set to: 0
  1083  000140  51A2               	movf	(main@cmd+2)& (0+255),w,b
  1084                           
  1085                           ; Switch size 1, requested type "simple"
  1086                           ; Number of cases is 2, Range of values is 1 to 2
  1087                           ; switch strategies available:
  1088                           ; Name         Instructions Cycles
  1089                           ; simple_byte            7     4 (average)
  1090                           ;	Chosen strategy is simple_byte
  1091  000142  0A01               	xorlw	1	; case 1
  1092  000144  A4D8               	btfss	status,2,c
  1093  000146  0A03               	xorlw	3	; case 2
  1094                           
  1095                           ; BSR set to: 0
  1096                           ;main.c: 182: SISendMessage(buttonsGetMessage(cmd[1], config.triggersMode), 8);
  1097  000148  0060  F4EC  F02A   	movff	_config+23,buttonsGetMessage@triggersMode
  1098  00014E  51A1               	movf	(main@cmd+1)& (0+255),w,b
  1099  000150  EC6F  F007         	call	_buttonsGetMessage
  1100  000154  0060  F0A8  F030   	movff	?_buttonsGetMessage,SISendMessage@msg
  1101  00015A  0060  F0AC  F031   	movff	?_buttonsGetMessage+1,SISendMessage@msg+1
  1102  000160  0E08               	movlw	8
  1103  000162  6E32               	movwf	SISendMessage@len,c
  1104  000164  EC9A  F006         	call	_SISendMessage	;wreg free
  1105                           
  1106                           ;main.c: 183: break;
  1107  000168  D234               	goto	l4351
  1108  00016A                     l4039:
  1109                           
  1110                           ; BSR set to: 0
  1111                           ;main.c: 186: case 0x42:;main.c: 187: SISendMessage(buttonsGetOrigins(), 10);
  1112  00016A  ECB5  F00A         	call	_buttonsGetOrigins	;wreg free
  1113  00016E  0060  F0A8  F030   	movff	?_buttonsGetOrigins,SISendMessage@msg
  1114  000174  0060  F0AC  F031   	movff	?_buttonsGetOrigins+1,SISendMessage@msg+1
  1115  00017A  0E0A               	movlw	10
  1116  00017C  6E32               	movwf	SISendMessage@len,c
  1117  00017E  EC9A  F006         	call	_SISendMessage	;wreg free
  1118                           
  1119                           ;main.c: 188: break;
  1120  000182  D227               	goto	l4351
  1121  000184                     l4041:
  1122                           
  1123                           ; BSR set to: 0
  1124                           ;main.c: 191: if ((cmd[1] == 0x47) && (cmd[2] == 0x43) && (cmd[3] == 0x2B) && (cmd[4] ==
      +                           0x32) && cmdLen == 5) {
  1125  000184  0E47               	movlw	71
  1126  000186  19A1               	xorwf	(main@cmd+1)& (0+255),w,b
  1127  000188  A4D8               	btfss	status,2,c
  1128  00018A  D012               	goto	l4053
  1129                           
  1130                           ; BSR set to: 0
  1131  00018C  0E43               	movlw	67
  1132  00018E  19A2               	xorwf	(main@cmd+2)& (0+255),w,b
  1133  000190  A4D8               	btfss	status,2,c
  1134  000192  D00E               	goto	l4053
  1135                           
  1136                           ; BSR set to: 0
  1137  000194  0E2B               	movlw	43
  1138  000196  19A3               	xorwf	(main@cmd+3)& (0+255),w,b
  1139  000198  A4D8               	btfss	status,2,c
  1140  00019A  D00A               	goto	l4053
  1141                           
  1142                           ; BSR set to: 0
  1143  00019C  0E32               	movlw	50
  1144  00019E  19A4               	xorwf	(main@cmd+4)& (0+255),w,b
  1145  0001A0  A4D8               	btfss	status,2,c
  1146  0001A2  D006               	goto	l4053
  1147                           
  1148                           ; BSR set to: 0
  1149  0001A4  0E05               	movlw	5
  1150  0001A6  19EF               	xorwf	main@cmdLen& (0+255),w,b
  1151  0001A8  A4D8               	btfss	status,2,c
  1152  0001AA  D002               	goto	l4053
  1153                           
  1154                           ; BSR set to: 0
  1155                           ;main.c: 192: gcpLocked = 0;
  1156  0001AC  0E00               	movlw	0
  1157  0001AE  D001               	goto	L1
  1158  0001B0                     l4053:
  1159                           
  1160                           ; BSR set to: 0
  1161                           ;main.c: 194: gcpLocked = 1;
  1162  0001B0  0E01               	movlw	1
  1163  0001B2                     L1:
  1164  0001B2  6FF2               	movwf	main@gcpLocked& (0+255),b
  1165  0001B4                     l146:
  1166                           
  1167                           ;main.c: 195: };main.c: 196: msgAnswer[0] = 0x00;
  1168  0001B4  0E00               	movlw	0
  1169  0001B6  0100               	movlb	0	; () banked
  1170  0001B8                     L2:
  1171  0001B8  6FC8               	movwf	main@msgAnswer& (0+255),b
  1172  0001BA                     l4055:
  1173                           
  1174                           ; BSR set to: 0
  1175                           ;main.c: 197: SISendMessage(msgAnswer, 1);
  1176  0001BA  0EC8               	movlw	low main@msgAnswer
  1177  0001BC  6E30               	movwf	SISendMessage@msg,c
  1178  0001BE  0E00               	movlw	high main@msgAnswer
  1179  0001C0  6E31               	movwf	SISendMessage@msg+1,c
  1180  0001C2  0E01               	movlw	1
  1181  0001C4  6E32               	movwf	SISendMessage@len,c
  1182  0001C6  EC9A  F006         	call	_SISendMessage	;wreg free
  1183                           
  1184                           ;main.c: 198: break;
  1185  0001CA  D203               	goto	l4351
  1186  0001CC                     l4057:
  1187                           
  1188                           ; BSR set to: 0
  1189                           ;main.c: 201: if (!gcpLocked) {
  1190  0001CC  51F2               	movf	main@gcpLocked& (0+255),w,b
  1191  0001CE  A4D8               	btfss	status,2,c
  1192  0001D0  D013               	goto	l148
  1193                           
  1194                           ; BSR set to: 0
  1195                           ;main.c: 202: msgAnswer[0] = 0x01;
  1196  0001D2  0E01               	movlw	1
  1197  0001D4  6FC8               	movwf	main@msgAnswer& (0+255),b
  1198                           
  1199                           ;main.c: 203: msgAnswer[1] = (((2U & 0x1FFF) << 3) | (0U & 0x0007)) & 0xFFUL;
  1200  0001D6  0E10               	movlw	16
  1201  0001D8  6FC9               	movwf	(main@msgAnswer+1)& (0+255),b
  1202                           
  1203                           ;main.c: 204: msgAnswer[2] = ((((2U & 0x1FFF) << 3) | (0U & 0x0007)) >> 8) & 0xFF;
  1204  0001DA  0E00               	movlw	0
  1205  0001DC  6FCA               	movwf	(main@msgAnswer+2)& (0+255),b
  1206                           
  1207                           ;main.c: 205: msgAnswer[3] = (((2U & 0x1FFF) << 3) | (0U & 0x0007)) & 0xFFUL;
  1208  0001DE  0E10               	movlw	16
  1209  0001E0  6FCB               	movwf	(main@msgAnswer+3)& (0+255),b
  1210                           
  1211                           ;main.c: 206: msgAnswer[4] = ((((2U & 0x1FFF) << 3) | (0U & 0x0007)) >> 8) & 0xFF;
  1212  0001E2  0E00               	movlw	0
  1213  0001E4  6FCC               	movwf	(main@msgAnswer+4)& (0+255),b
  1214                           
  1215                           ; BSR set to: 0
  1216                           ;main.c: 207: SISendMessage(msgAnswer, 5);
  1217  0001E6  0EC8               	movlw	low main@msgAnswer
  1218  0001E8  6E30               	movwf	SISendMessage@msg,c
  1219  0001EA  0E00               	movlw	high main@msgAnswer
  1220  0001EC  6E31               	movwf	SISendMessage@msg+1,c
  1221  0001EE  0E05               	movlw	5
  1222  0001F0  6E32               	movwf	SISendMessage@len,c
  1223  0001F2  EC9A  F006         	call	_SISendMessage	;wreg free
  1224                           
  1225                           ;main.c: 208: } else {
  1226  0001F6  D1ED               	goto	l4351
  1227  0001F8                     l148:
  1228                           
  1229                           ; BSR set to: 0
  1230                           ;main.c: 209: msgAnswer[0] = 0xFF;
  1231  0001F8  69C8               	setf	main@msgAnswer& (0+255),b
  1232  0001FA  D7DF               	goto	l4055
  1233  0001FC                     l4065:
  1234                           
  1235                           ; BSR set to: 0
  1236                           ;main.c: 215: if (!gcpLocked) {
  1237  0001FC  51F2               	movf	main@gcpLocked& (0+255),w,b
  1238  0001FE  A4D8               	btfss	status,2,c
  1239  000200  D7FB               	goto	l148
  1240                           
  1241                           ; BSR set to: 0
  1242                           ;main.c: 216: if (cmdLen > 3) {
  1243  000202  0E03               	movlw	3
  1244  000204  65EF               	cpfsgt	main@cmdLen& (0+255),b
  1245  000206  D020               	goto	l4089
  1246                           
  1247                           ; BSR set to: 0
  1248                           ;main.c: 217: addr = cmd[2];
  1249  000208  0060  F288  F0F0   	movff	main@cmd+2,main@addr
  1250  00020E  6BF1               	clrf	(main@addr+1)& (0+255),b
  1251                           
  1252                           ; BSR set to: 0
  1253                           ;main.c: 218: addr = addr << 8;
  1254  000210  51F0               	movf	main@addr& (0+255),w,b
  1255  000212  6FF1               	movwf	(main@addr+1)& (0+255),b
  1256  000214  6BF0               	clrf	main@addr& (0+255),b
  1257                           
  1258                           ; BSR set to: 0
  1259                           ;main.c: 219: addr |= cmd[1];
  1260  000216  51A1               	movf	(main@cmd+1)& (0+255),w,b
  1261  000218  13F0               	iorwf	main@addr& (0+255),f,b
  1262                           
  1263                           ; BSR set to: 0
  1264                           ;main.c: 220: for (i = 3; i < cmdLen; i++) {
  1265  00021A  0E03               	movlw	3
  1266  00021C  6FF6               	movwf	main@i& (0+255),b
  1267  00021E  D00F               	goto	l4083
  1268  000220                     l4077:
  1269                           
  1270                           ; BSR set to: 0
  1271                           ;main.c: 221: EEPROMWriteByte(addr++, cmd[i]);
  1272  000220  0EA0               	movlw	low main@cmd
  1273  000222  25F6               	addwf	main@i& (0+255),w,b
  1274  000224  6ED9               	movwf	fsr2l,c
  1275  000226  6ADA               	clrf	fsr2h,c
  1276  000228  0E00               	movlw	high main@cmd
  1277  00022A  22DA               	addwfc	fsr2h,f,c
  1278  00022C  50DF               	movf	indf2,w,c
  1279  00022E  6E2A               	movwf	EEPROMWriteByte@data,c
  1280  000230  51F0               	movf	main@addr& (0+255),w,b
  1281  000232  EC9A  F00B         	call	_EEPROMWriteByte
  1282  000236  0100               	movlb	0	; () banked
  1283  000238  4BF0               	infsnz	main@addr& (0+255),f,b
  1284  00023A  2BF1               	incf	(main@addr+1)& (0+255),f,b
  1285                           
  1286                           ; BSR set to: 0
  1287  00023C  2BF6               	incf	main@i& (0+255),f,b
  1288  00023E                     l4083:
  1289                           
  1290                           ; BSR set to: 0
  1291  00023E  51EF               	movf	main@cmdLen& (0+255),w,b
  1292  000240  5DF6               	subwf	main@i& (0+255),w,b
  1293  000242  B0D8               	btfsc	status,0,c
  1294  000244  D7B7               	goto	l146
  1295  000246  D7EC               	goto	l4077
  1296  000248                     l4089:
  1297                           
  1298                           ; BSR set to: 0
  1299                           ;main.c: 226: msgAnswer[0] = 0xFE;
  1300  000248  0EFE               	movlw	254
  1301  00024A  D7B6               	goto	L2
  1302  00024C                     l4095:
  1303                           
  1304                           ; BSR set to: 0
  1305                           ;main.c: 236: if (!gcpLocked) {
  1306  00024C  51F2               	movf	main@gcpLocked& (0+255),w,b
  1307  00024E  A4D8               	btfss	status,2,c
  1308  000250  D7D3               	goto	l148
  1309                           
  1310                           ; BSR set to: 0
  1311                           ;main.c: 237: if (cmdLen == 4) {
  1312  000252  0E04               	movlw	4
  1313  000254  19EF               	xorwf	main@cmdLen& (0+255),w,b
  1314  000256  A4D8               	btfss	status,2,c
  1315  000258  D7F7               	goto	l4089
  1316                           
  1317                           ; BSR set to: 0
  1318                           ;main.c: 238: addr = cmd[2];
  1319  00025A  0060  F288  F0F0   	movff	main@cmd+2,main@addr
  1320  000260  6BF1               	clrf	(main@addr+1)& (0+255),b
  1321                           
  1322                           ; BSR set to: 0
  1323                           ;main.c: 239: addr = addr << 8;
  1324  000262  51F0               	movf	main@addr& (0+255),w,b
  1325  000264  6FF1               	movwf	(main@addr+1)& (0+255),b
  1326  000266  6BF0               	clrf	main@addr& (0+255),b
  1327                           
  1328                           ; BSR set to: 0
  1329                           ;main.c: 240: addr |= cmd[1];
  1330  000268  51A1               	movf	(main@cmd+1)& (0+255),w,b
  1331  00026A  13F0               	iorwf	main@addr& (0+255),f,b
  1332                           
  1333                           ; BSR set to: 0
  1334                           ;main.c: 241: uint8_t len = cmd[3];
  1335  00026C  0060  F28C  F0EC   	movff	main@cmd+3,main@len
  1336                           
  1337                           ; BSR set to: 0
  1338                           ;main.c: 242: if (len == 0) {
  1339  000272  51EC               	movf	main@len& (0+255),w,b
  1340  000274  B4D8               	btfsc	status,2,c
  1341  000276  D7E8               	goto	l4089
  1342                           
  1343                           ; BSR set to: 0
  1344                           ;main.c: 246: msgAnswer[0] = 0x00;
  1345  000278  0E00               	movlw	0
  1346  00027A  6FC8               	movwf	main@msgAnswer& (0+255),b
  1347                           
  1348                           ;main.c: 247: for (i = 0; i < len && i < 0x20; i++) {
  1349  00027C  0E00               	movlw	0
  1350  00027E  6FF6               	movwf	main@i& (0+255),b
  1351  000280  D015               	goto	l4121
  1352  000282                     l4115:
  1353                           
  1354                           ; BSR set to: 0
  1355                           ;main.c: 248: msgAnswer[i + 1] = EEPROMReadByte(addr++);
  1356  000282  51F6               	movf	main@i& (0+255),w,b
  1357  000284  6E4D               	movwf	??_main& (0+255),c
  1358  000286  6A4E               	clrf	(??_main+1)& (0+255),c
  1359  000288  0E01               	movlw	1
  1360  00028A  264D               	addwf	??_main,f,c
  1361  00028C  0E00               	movlw	0
  1362  00028E  224E               	addwfc	??_main+1,f,c
  1363  000290  0EC8               	movlw	low main@msgAnswer
  1364  000292  244D               	addwf	??_main,w,c
  1365  000294  6ED9               	movwf	fsr2l,c
  1366  000296  0E00               	movlw	high main@msgAnswer
  1367  000298  204E               	addwfc	??_main+1,w,c
  1368  00029A  6EDA               	movwf	fsr2h,c
  1369  00029C  51F0               	movf	main@addr& (0+255),w,b
  1370  00029E  ECAC  F00B         	call	_EEPROMReadByte
  1371  0002A2  6EDF               	movwf	indf2,c
  1372  0002A4  0100               	movlb	0	; () banked
  1373  0002A6  4BF0               	infsnz	main@addr& (0+255),f,b
  1374  0002A8  2BF1               	incf	(main@addr+1)& (0+255),f,b
  1375                           
  1376                           ; BSR set to: 0
  1377  0002AA  2BF6               	incf	main@i& (0+255),f,b
  1378  0002AC                     l4121:
  1379                           
  1380                           ; BSR set to: 0
  1381  0002AC  51EC               	movf	main@len& (0+255),w,b
  1382  0002AE  5DF6               	subwf	main@i& (0+255),w,b
  1383  0002B0  B0D8               	btfsc	status,0,c
  1384  0002B2  D003               	goto	u3420
  1385                           
  1386                           ; BSR set to: 0
  1387  0002B4  0E1F               	movlw	31
  1388  0002B6  65F6               	cpfsgt	main@i& (0+255),b
  1389  0002B8  D7E4               	goto	l4115
  1390  0002BA                     u3420:
  1391                           
  1392                           ; BSR set to: 0
  1393                           ;main.c: 249: };main.c: 250: SISendMessage(msgAnswer, len + 1);
  1394  0002BA  0EC8               	movlw	low main@msgAnswer
  1395  0002BC  6E30               	movwf	SISendMessage@msg,c
  1396  0002BE  0E00               	movlw	high main@msgAnswer
  1397  0002C0  6E31               	movwf	SISendMessage@msg+1,c
  1398  0002C2  29EC               	incf	main@len& (0+255),w,b
  1399  0002C4  6E32               	movwf	SISendMessage@len,c
  1400  0002C6  EC9A  F006         	call	_SISendMessage	;wreg free
  1401  0002CA  D183               	goto	l4351
  1402  0002CC                     l170:
  1403                           
  1404                           ; BSR set to: 0
  1405  0002CC  00FF               	reset		;# 
  1406                           
  1407                           ;main.c: 264: break;
  1408  0002CE  D181               	goto	l4351
  1409  0002D0                     l4133:
  1410                           
  1411                           ; BSR set to: 0
  1412                           ;main.c: 268: msgAnswer[0] = 0xFD;
  1413  0002D0  0EFD               	movlw	253
  1414  0002D2  D772               	goto	L2
  1415  0002D4                     l4137:
  1416                           
  1417                           ; BSR set to: 0
  1418                           ;main.c: 273: if (!gcpLocked) {
  1419  0002D4  51F2               	movf	main@gcpLocked& (0+255),w,b
  1420  0002D6  A4D8               	btfss	status,2,c
  1421  0002D8  D78F               	goto	l148
  1422                           
  1423                           ; BSR set to: 0
  1424                           ;main.c: 274: if (cmdLen == (N_BUTTONS + 1)) {
  1425  0002DA  0E10               	movlw	16
  1426  0002DC  19EF               	xorwf	main@cmdLen& (0+255),w,b
  1427  0002DE  A4D8               	btfss	status,2,c
  1428  0002E0  D7B3               	goto	l4089
  1429                           
  1430                           ; BSR set to: 0
  1431                           ;main.c: 275: buttonsSetMapByte0(&cmd[1]);
  1432  0002E2  0EA1               	movlw	low (main@cmd+1)
  1433  0002E4  6E2A               	movwf	buttonsSetMapByte0@map,c
  1434  0002E6  0E00               	movlw	high (main@cmd+1)
  1435  0002E8  6E2B               	movwf	buttonsSetMapByte0@map+1,c
  1436  0002EA  EC84  F00B         	call	_buttonsSetMapByte0	;wreg free
  1437  0002EE  D762               	goto	l146
  1438  0002F0                     l4153:
  1439                           
  1440                           ; BSR set to: 0
  1441                           ;main.c: 289: if (!gcpLocked) {
  1442  0002F0  51F2               	movf	main@gcpLocked& (0+255),w,b
  1443  0002F2  A4D8               	btfss	status,2,c
  1444  0002F4  D781               	goto	l148
  1445                           
  1446                           ; BSR set to: 0
  1447                           ;main.c: 290: if (cmdLen == (N_BUTTONS + 1)) {
  1448  0002F6  0E10               	movlw	16
  1449  0002F8  19EF               	xorwf	main@cmdLen& (0+255),w,b
  1450  0002FA  A4D8               	btfss	status,2,c
  1451  0002FC  D7A5               	goto	l4089
  1452                           
  1453                           ; BSR set to: 0
  1454                           ;main.c: 291: buttonsSetMapByte1(&cmd[1]);
  1455  0002FE  0EA1               	movlw	low (main@cmd+1)
  1456  000300  6E2A               	movwf	buttonsSetMapByte1@map,c
  1457  000302  0E00               	movlw	high (main@cmd+1)
  1458  000304  6E2B               	movwf	buttonsSetMapByte1@map+1,c
  1459  000306  EC6E  F00B         	call	_buttonsSetMapByte1	;wreg free
  1460  00030A  D754               	goto	l146
  1461  00030C                     l4169:
  1462                           
  1463                           ; BSR set to: 0
  1464                           ;main.c: 305: if (!gcpLocked) {
  1465  00030C  51F2               	movf	main@gcpLocked& (0+255),w,b
  1466  00030E  A4D8               	btfss	status,2,c
  1467  000310  D773               	goto	l148
  1468                           
  1469                           ; BSR set to: 0
  1470                           ;main.c: 306: uint8_t* btnMsg = buttonsGetMapByte0();
  1471  000312  EC27  F00B         	call	_buttonsGetMapByte0	;wreg free
  1472  000316  0060  F0A8  F0C4   	movff	?_buttonsGetMapByte0,main@btnMsg
  1473  00031C  0060  F0AC  F0C5   	movff	?_buttonsGetMapByte0+1,main@btnMsg+1
  1474                           
  1475                           ;main.c: 307: msgAnswer[0] = 0x00;
  1476  000322  0E00               	movlw	0
  1477  000324  0100               	movlb	0	; () banked
  1478  000326  6FC8               	movwf	main@msgAnswer& (0+255),b
  1479                           
  1480                           ; BSR set to: 0
  1481                           ;main.c: 308: for (i = 0; i < N_BUTTONS; i++) {
  1482  000328  0E00               	movlw	0
  1483  00032A  6FF6               	movwf	main@i& (0+255),b
  1484  00032C                     l4177:
  1485                           
  1486                           ; BSR set to: 0
  1487  00032C  0E0E               	movlw	14
  1488  00032E  65F6               	cpfsgt	main@i& (0+255),b
  1489  000330  D001               	goto	l4181
  1490  000332  D018               	goto	l4187
  1491  000334                     l4181:
  1492                           
  1493                           ; BSR set to: 0
  1494                           ;main.c: 309: msgAnswer[i + 1] = btnMsg[i];
  1495  000334  51F6               	movf	main@i& (0+255),w,b
  1496  000336  25C4               	addwf	main@btnMsg& (0+255),w,b
  1497  000338  6ED9               	movwf	fsr2l,c
  1498  00033A  0E00               	movlw	0
  1499  00033C  21C5               	addwfc	(main@btnMsg+1)& (0+255),w,b
  1500  00033E  6EDA               	movwf	fsr2h,c
  1501  000340  51F6               	movf	main@i& (0+255),w,b
  1502  000342  6E4D               	movwf	??_main& (0+255),c
  1503  000344  6A4E               	clrf	(??_main+1)& (0+255),c
  1504  000346  0E01               	movlw	1
  1505  000348  264D               	addwf	??_main,f,c
  1506  00034A  0E00               	movlw	0
  1507  00034C  224E               	addwfc	??_main+1,f,c
  1508  00034E  0EC8               	movlw	low main@msgAnswer
  1509  000350  244D               	addwf	??_main,w,c
  1510  000352  6EE1               	movwf	fsr1l,c
  1511  000354  0E00               	movlw	high main@msgAnswer
  1512  000356  204E               	addwfc	??_main+1,w,c
  1513  000358  6EE2               	movwf	fsr1h,c
  1514  00035A  006F FF7F FFE7     	movff	indf2,indf1
  1515                           
  1516                           ; BSR set to: 0
  1517  000360  2BF6               	incf	main@i& (0+255),f,b
  1518  000362  D7E4               	goto	l4177
  1519  000364                     l4187:
  1520                           
  1521                           ; BSR set to: 0
  1522                           ;main.c: 310: };main.c: 311: SISendMessage(msgAnswer, N_BUTTONS + 1);
  1523  000364  0EC8               	movlw	low main@msgAnswer
  1524  000366  6E30               	movwf	SISendMessage@msg,c
  1525  000368  0E00               	movlw	high main@msgAnswer
  1526  00036A  6E31               	movwf	SISendMessage@msg+1,c
  1527  00036C  0E10               	movlw	16
  1528  00036E  6E32               	movwf	SISendMessage@len,c
  1529  000370  EC9A  F006         	call	_SISendMessage	;wreg free
  1530                           
  1531                           ;main.c: 312: } else {
  1532  000374  D12E               	goto	l4351
  1533  000376                     l4191:
  1534                           
  1535                           ; BSR set to: 0
  1536                           ;main.c: 319: if (!gcpLocked) {
  1537  000376  51F2               	movf	main@gcpLocked& (0+255),w,b
  1538  000378  A4D8               	btfss	status,2,c
  1539  00037A  D73E               	goto	l148
  1540                           
  1541                           ; BSR set to: 0
  1542                           ;main.c: 320: uint8_t* btnMsg = buttonsGetMapByte1();
  1543  00037C  EC0D  F00B         	call	_buttonsGetMapByte1	;wreg free
  1544  000380  0060  F0A8  F0C6   	movff	?_buttonsGetMapByte1,main@btnMsg_374
  1545  000386  0060  F0AC  F0C7   	movff	?_buttonsGetMapByte1+1,main@btnMsg_374+1
  1546                           
  1547                           ;main.c: 321: msgAnswer[0] = 0x00;
  1548  00038C  0E00               	movlw	0
  1549  00038E  0100               	movlb	0	; () banked
  1550  000390  6FC8               	movwf	main@msgAnswer& (0+255),b
  1551                           
  1552                           ; BSR set to: 0
  1553                           ;main.c: 322: for (i = 0; i < N_BUTTONS; i++) {
  1554  000392  0E00               	movlw	0
  1555  000394  6FF6               	movwf	main@i& (0+255),b
  1556  000396                     l4199:
  1557                           
  1558                           ; BSR set to: 0
  1559  000396  0E0E               	movlw	14
  1560  000398  65F6               	cpfsgt	main@i& (0+255),b
  1561  00039A  D001               	goto	l4203
  1562  00039C  D7E3               	goto	l4187
  1563  00039E                     l4203:
  1564                           
  1565                           ; BSR set to: 0
  1566                           ;main.c: 323: msgAnswer[i + 1] = btnMsg[i];
  1567  00039E  51F6               	movf	main@i& (0+255),w,b
  1568  0003A0  25C6               	addwf	main@btnMsg_374& (0+255),w,b
  1569  0003A2  6ED9               	movwf	fsr2l,c
  1570  0003A4  0E00               	movlw	0
  1571  0003A6  21C7               	addwfc	(main@btnMsg_374+1)& (0+255),w,b
  1572  0003A8  6EDA               	movwf	fsr2h,c
  1573  0003AA  51F6               	movf	main@i& (0+255),w,b
  1574  0003AC  6E4D               	movwf	??_main& (0+255),c
  1575  0003AE  6A4E               	clrf	(??_main+1)& (0+255),c
  1576  0003B0  0E01               	movlw	1
  1577  0003B2  264D               	addwf	??_main,f,c
  1578  0003B4  0E00               	movlw	0
  1579  0003B6  224E               	addwfc	??_main+1,f,c
  1580  0003B8  0EC8               	movlw	low main@msgAnswer
  1581  0003BA  244D               	addwf	??_main,w,c
  1582  0003BC  6EE1               	movwf	fsr1l,c
  1583  0003BE  0E00               	movlw	high main@msgAnswer
  1584  0003C0  204E               	addwfc	??_main+1,w,c
  1585  0003C2  6EE2               	movwf	fsr1h,c
  1586  0003C4  006F FF7F FFE7     	movff	indf2,indf1
  1587                           
  1588                           ; BSR set to: 0
  1589  0003CA  2BF6               	incf	main@i& (0+255),f,b
  1590  0003CC  D7E4               	goto	l4199
  1591  0003CE                     l4213:
  1592                           
  1593                           ; BSR set to: 0
  1594                           ;main.c: 333: if (!gcpLocked) {
  1595  0003CE  51F2               	movf	main@gcpLocked& (0+255),w,b
  1596  0003D0  A4D8               	btfss	status,2,c
  1597  0003D2  D712               	goto	l148
  1598                           
  1599                           ; BSR set to: 0
  1600                           ;main.c: 334: buttonsBuildLUTs();
  1601  0003D4  EC06  F007         	call	_buttonsBuildLUTs	;wreg free
  1602  0003D8  D6ED               	goto	l146
  1603  0003DA                     l4223:
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;main.c: 344: if (!gcpLocked) {
  1607  0003DA  51F2               	movf	main@gcpLocked& (0+255),w,b
  1608  0003DC  A4D8               	btfss	status,2,c
  1609  0003DE  D70C               	goto	l148
  1610                           
  1611                           ; BSR set to: 0
  1612                           ;main.c: 345: flashBufferIdx = 0;
  1613  0003E0  0E00               	movlw	0
  1614  0003E2  6FEE               	movwf	main@flashBufferIdx& (0+255),b
  1615                           
  1616                           ;main.c: 346: msgAnswer[0] = 0x00;
  1617  0003E4  0E00               	movlw	0
  1618  0003E6  D6E8               	goto	L2
  1619  0003E8                     l4231:
  1620                           
  1621                           ; BSR set to: 0
  1622                           ;main.c: 355: if (!gcpLocked) {
  1623  0003E8  51F2               	movf	main@gcpLocked& (0+255),w,b
  1624  0003EA  A4D8               	btfss	status,2,c
  1625  0003EC  D705               	goto	l148
  1626                           
  1627                           ; BSR set to: 0
  1628                           ;main.c: 356: for (i = 1; i < cmdLen; i++) {
  1629  0003EE  0E01               	movlw	1
  1630  0003F0  6FF6               	movwf	main@i& (0+255),b
  1631  0003F2  D013               	goto	l4243
  1632  0003F4                     l4235:
  1633                           
  1634                           ; BSR set to: 0
  1635                           ;main.c: 357: flashBuffer[flashBufferIdx++] = cmd[i];
  1636  0003F4  0EA0               	movlw	low main@cmd
  1637  0003F6  25F6               	addwf	main@i& (0+255),w,b
  1638  0003F8  6ED9               	movwf	fsr2l,c
  1639  0003FA  6ADA               	clrf	fsr2h,c
  1640  0003FC  0E00               	movlw	high main@cmd
  1641  0003FE  22DA               	addwfc	fsr2h,f,c
  1642  000400  0E60               	movlw	low main@flashBuffer
  1643  000402  25EE               	addwf	main@flashBufferIdx& (0+255),w,b
  1644  000404  6EE1               	movwf	fsr1l,c
  1645  000406  6AE2               	clrf	fsr1h,c
  1646  000408  0E00               	movlw	high main@flashBuffer
  1647  00040A  22E2               	addwfc	fsr1h,f,c
  1648  00040C  006F FF7F FFE7     	movff	indf2,indf1
  1649                           
  1650                           ; BSR set to: 0
  1651  000412  2BEE               	incf	main@flashBufferIdx& (0+255),f,b
  1652                           
  1653                           ; BSR set to: 0
  1654                           ;main.c: 358: flashBufferIdx &= 63;
  1655  000414  0E3F               	movlw	63
  1656  000416  17EE               	andwf	main@flashBufferIdx& (0+255),f,b
  1657                           
  1658                           ; BSR set to: 0
  1659  000418  2BF6               	incf	main@i& (0+255),f,b
  1660  00041A                     l4243:
  1661                           
  1662                           ; BSR set to: 0
  1663  00041A  51EF               	movf	main@cmdLen& (0+255),w,b
  1664  00041C  5DF6               	subwf	main@i& (0+255),w,b
  1665  00041E  B0D8               	btfsc	status,0,c
  1666  000420  D6C9               	goto	l146
  1667  000422  D7E8               	goto	l4235
  1668  000424                     l4251:
  1669                           
  1670                           ; BSR set to: 0
  1671                           ;main.c: 369: if (!gcpLocked) {
  1672  000424  51F2               	movf	main@gcpLocked& (0+255),w,b
  1673  000426  A4D8               	btfss	status,2,c
  1674  000428  D6E7               	goto	l148
  1675                           
  1676                           ; BSR set to: 0
  1677                           ;main.c: 370: if (cmdLen == 2) {
  1678  00042A  0E02               	movlw	2
  1679  00042C  19EF               	xorwf	main@cmdLen& (0+255),w,b
  1680  00042E  A4D8               	btfss	status,2,c
  1681  000430  D70B               	goto	l4089
  1682                           
  1683                           ; BSR set to: 0
  1684                           ;main.c: 371: uint8_t len = cmd[1];
  1685  000432  0060  F284  F0ED   	movff	main@cmd+1,main@len_375
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;main.c: 372: if (len == 0) {
  1689  000438  51ED               	movf	main@len_375& (0+255),w,b
  1690  00043A  B4D8               	btfsc	status,2,c
  1691  00043C  D705               	goto	l4089
  1692                           
  1693                           ; BSR set to: 0
  1694                           ;main.c: 376: msgAnswer[0] = 0x00;
  1695  00043E  0E00               	movlw	0
  1696  000440  6FC8               	movwf	main@msgAnswer& (0+255),b
  1697                           
  1698                           ;main.c: 377: for (i = 0; i < len && i < 0x20; i++) {
  1699  000442  0E00               	movlw	0
  1700  000444  6FF6               	movwf	main@i& (0+255),b
  1701  000446  D01A               	goto	l4273
  1702  000448                     l4265:
  1703                           
  1704                           ; BSR set to: 0
  1705                           ;main.c: 378: msgAnswer[i + 1] = flashBuffer[flashBufferIdx++];
  1706  000448  0E60               	movlw	low main@flashBuffer
  1707  00044A  25EE               	addwf	main@flashBufferIdx& (0+255),w,b
  1708  00044C  6ED9               	movwf	fsr2l,c
  1709  00044E  6ADA               	clrf	fsr2h,c
  1710  000450  0E00               	movlw	high main@flashBuffer
  1711  000452  22DA               	addwfc	fsr2h,f,c
  1712  000454  51F6               	movf	main@i& (0+255),w,b
  1713  000456  6E4D               	movwf	??_main& (0+255),c
  1714  000458  6A4E               	clrf	(??_main+1)& (0+255),c
  1715  00045A  0E01               	movlw	1
  1716  00045C  264D               	addwf	??_main,f,c
  1717  00045E  0E00               	movlw	0
  1718  000460  224E               	addwfc	??_main+1,f,c
  1719  000462  0EC8               	movlw	low main@msgAnswer
  1720  000464  244D               	addwf	??_main,w,c
  1721  000466  6EE1               	movwf	fsr1l,c
  1722  000468  0E00               	movlw	high main@msgAnswer
  1723  00046A  204E               	addwfc	??_main+1,w,c
  1724  00046C  6EE2               	movwf	fsr1h,c
  1725  00046E  006F FF7F FFE7     	movff	indf2,indf1
  1726                           
  1727                           ; BSR set to: 0
  1728  000474  2BEE               	incf	main@flashBufferIdx& (0+255),f,b
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;main.c: 379: flashBufferIdx &= 63;
  1732  000476  0E3F               	movlw	63
  1733  000478  17EE               	andwf	main@flashBufferIdx& (0+255),f,b
  1734                           
  1735                           ; BSR set to: 0
  1736  00047A  2BF6               	incf	main@i& (0+255),f,b
  1737  00047C                     l4273:
  1738                           
  1739                           ; BSR set to: 0
  1740  00047C  51ED               	movf	main@len_375& (0+255),w,b
  1741  00047E  5DF6               	subwf	main@i& (0+255),w,b
  1742  000480  B0D8               	btfsc	status,0,c
  1743  000482  D003               	goto	u3590
  1744                           
  1745                           ; BSR set to: 0
  1746  000484  0E1F               	movlw	31
  1747  000486  65F6               	cpfsgt	main@i& (0+255),b
  1748  000488  D7DF               	goto	l4265
  1749  00048A                     u3590:
  1750                           
  1751                           ; BSR set to: 0
  1752                           ;main.c: 380: };main.c: 381: SISendMessage(msgAnswer, len + 1);
  1753  00048A  0EC8               	movlw	low main@msgAnswer
  1754  00048C  6E30               	movwf	SISendMessage@msg,c
  1755  00048E  0E00               	movlw	high main@msgAnswer
  1756  000490  6E31               	movwf	SISendMessage@msg+1,c
  1757  000492  29ED               	incf	main@len_375& (0+255),w,b
  1758  000494  6E32               	movwf	SISendMessage@len,c
  1759  000496  EC9A  F006         	call	_SISendMessage	;wreg free
  1760  00049A  D09B               	goto	l4351
  1761  00049C                     l4285:
  1762                           
  1763                           ; BSR set to: 0
  1764                           ;main.c: 394: if (!gcpLocked) {
  1765  00049C  51F2               	movf	main@gcpLocked& (0+255),w,b
  1766  00049E  A4D8               	btfss	status,2,c
  1767  0004A0  D6AB               	goto	l148
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;main.c: 395: if (cmdLen == 3) {
  1771  0004A2  0E03               	movlw	3
  1772  0004A4  19EF               	xorwf	main@cmdLen& (0+255),w,b
  1773  0004A6  A4D8               	btfss	status,2,c
  1774  0004A8  D6CF               	goto	l4089
  1775                           
  1776                           ; BSR set to: 0
  1777                           ;main.c: 396: addr = cmd[2];
  1778  0004AA  0060  F288  F0F0   	movff	main@cmd+2,main@addr
  1779  0004B0  6BF1               	clrf	(main@addr+1)& (0+255),b
  1780                           
  1781                           ; BSR set to: 0
  1782                           ;main.c: 397: addr = addr << 8;
  1783  0004B2  51F0               	movf	main@addr& (0+255),w,b
  1784  0004B4  6FF1               	movwf	(main@addr+1)& (0+255),b
  1785  0004B6  6BF0               	clrf	main@addr& (0+255),b
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;main.c: 398: addr |= cmd[1];
  1789  0004B8  51A1               	movf	(main@cmd+1)& (0+255),w,b
  1790  0004BA  13F0               	iorwf	main@addr& (0+255),f,b
  1791                           
  1792                           ; BSR set to: 0
  1793                           ;main.c: 399: if (addr & 63) {
  1794  0004BC  0E3F               	movlw	63
  1795  0004BE  15F0               	andwf	main@addr& (0+255),w,b
  1796  0004C0  6E4D               	movwf	??_main& (0+255),c
  1797  0004C2  0E00               	movlw	0
  1798  0004C4  15F1               	andwf	(main@addr+1)& (0+255),w,b
  1799  0004C6  6E4E               	movwf	(??_main+1)& (0+255),c
  1800  0004C8  504D               	movf	??_main,w,c
  1801  0004CA  104E               	iorwf	??_main+1,w,c
  1802  0004CC  A4D8               	btfss	status,2,c
  1803  0004CE  D6BC               	goto	l4089
  1804                           
  1805                           ; BSR set to: 0
  1806                           ;main.c: 404: PGMWriteBlock(addr, flashBuffer);
  1807  0004D0  0060  F3C0  F02E   	movff	main@addr,PGMWriteBlock@addr
  1808  0004D6  0060  F3C4  F02F   	movff	main@addr+1,PGMWriteBlock@addr+1
  1809  0004DC  0E60               	movlw	low main@flashBuffer
  1810  0004DE  6E30               	movwf	PGMWriteBlock@data,c
  1811  0004E0  0E00               	movlw	high main@flashBuffer
  1812  0004E2  6E31               	movwf	PGMWriteBlock@data+1,c
  1813  0004E4  ECAA  F008         	call	_PGMWriteBlock	;wreg free
  1814  0004E8  D665               	goto	l146
  1815  0004EA                     l4313:
  1816                           
  1817                           ; BSR set to: 0
  1818                           ;main.c: 419: if (!gcpLocked) {
  1819  0004EA  51F2               	movf	main@gcpLocked& (0+255),w,b
  1820  0004EC  A4D8               	btfss	status,2,c
  1821  0004EE  D684               	goto	l148
  1822                           
  1823                           ; BSR set to: 0
  1824                           ;main.c: 420: if (cmdLen == 3) {
  1825  0004F0  0E03               	movlw	3
  1826  0004F2  19EF               	xorwf	main@cmdLen& (0+255),w,b
  1827  0004F4  A4D8               	btfss	status,2,c
  1828  0004F6  D6A8               	goto	l4089
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;main.c: 421: addr = cmd[2];
  1832  0004F8  0060  F288  F0F0   	movff	main@cmd+2,main@addr
  1833  0004FE  6BF1               	clrf	(main@addr+1)& (0+255),b
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;main.c: 422: addr = addr << 8;
  1837  000500  51F0               	movf	main@addr& (0+255),w,b
  1838  000502  6FF1               	movwf	(main@addr+1)& (0+255),b
  1839  000504  6BF0               	clrf	main@addr& (0+255),b
  1840                           
  1841                           ; BSR set to: 0
  1842                           ;main.c: 423: addr |= cmd[1];
  1843  000506  51A1               	movf	(main@cmd+1)& (0+255),w,b
  1844  000508  13F0               	iorwf	main@addr& (0+255),f,b
  1845                           
  1846                           ; BSR set to: 0
  1847                           ;main.c: 424: PGMReadBlock(addr, flashBuffer);
  1848  00050A  0060  F3C0  F02A   	movff	main@addr,PGMReadBlock@addr
  1849  000510  0060  F3C4  F02B   	movff	main@addr+1,PGMReadBlock@addr+1
  1850  000516  0E60               	movlw	low main@flashBuffer
  1851  000518  6E2C               	movwf	PGMReadBlock@data,c
  1852  00051A  0E00               	movlw	high main@flashBuffer
  1853  00051C  6E2D               	movwf	PGMReadBlock@data+1,c
  1854  00051E  EC66  F009         	call	_PGMReadBlock	;wreg free
  1855  000522  D648               	goto	l146
  1856  000524                     l4335:
  1857                           
  1858                           ; BSR set to: 0
  1859                           ;main.c: 438: if (!gcpLocked) {
  1860  000524  51F2               	movf	main@gcpLocked& (0+255),w,b
  1861  000526  A4D8               	btfss	status,2,c
  1862  000528  D667               	goto	l148
  1863                           
  1864                           ; BSR set to: 0
  1865                           ;main.c: 439: msgAnswer[0] = 0x00;
  1866  00052A  0E00               	movlw	0
  1867  00052C  6FC8               	movwf	main@msgAnswer& (0+255),b
  1868                           
  1869                           ; BSR set to: 0
  1870                           ;main.c: 440: SISendMessage(msgAnswer, 1);
  1871  00052E  0EC8               	movlw	low main@msgAnswer
  1872  000530  6E30               	movwf	SISendMessage@msg,c
  1873  000532  0E00               	movlw	high main@msgAnswer
  1874  000534  6E31               	movwf	SISendMessage@msg+1,c
  1875  000536  0E01               	movlw	1
  1876  000538  6E32               	movwf	SISendMessage@len,c
  1877  00053A  EC9A  F006         	call	_SISendMessage	;wreg free
  1878                           
  1879                           ;main.c: 441: bootPayload();
  1880  00053E  EC93  F00A         	call	_bootPayload	;wreg free
  1881                           
  1882                           ;main.c: 442: } else {
  1883  000542  D047               	goto	l4351
  1884  000544                     l4345:
  1885                           
  1886                           ; BSR set to: 0
  1887                           ;main.c: 449: SIClear();
  1888  000544  ECB6  F00B         	call	_SIClear	;wreg free
  1889                           
  1890                           ;main.c: 450: break;
  1891  000548  D044               	goto	l4351
  1892  00054A                     l4349:
  1893                           
  1894                           ; BSR set to: 0
  1895  00054A  51A0               	movf	main@cmd& (0+255),w,b
  1896                           
  1897                           ; Switch size 1, requested type "simple"
  1898                           ; Number of cases is 22, Range of values is 0 to 255
  1899                           ; switch strategies available:
  1900                           ; Name         Instructions Cycles
  1901                           ; simple_byte           67    34 (average)
  1902                           ;	Chosen strategy is simple_byte
  1903  00054C  0A00               	xorlw	0	; case 0
  1904  00054E  B4D8               	btfsc	status,2,c
  1905  000550  D5E8               	goto	l4029
  1906  000552  0A10               	xorlw	16	; case 16
  1907  000554  B4D8               	btfsc	status,2,c
  1908  000556  D616               	goto	l4041
  1909  000558  0A01               	xorlw	1	; case 17
  1910  00055A  B4D8               	btfsc	status,2,c
  1911  00055C  D637               	goto	l4057
  1912  00055E  0A03               	xorlw	3	; case 18
  1913  000560  B4D8               	btfsc	status,2,c
  1914  000562  D64C               	goto	l4065
  1915  000564  0A01               	xorlw	1	; case 19
  1916  000566  B4D8               	btfsc	status,2,c
  1917  000568  D671               	goto	l4095
  1918  00056A  0A07               	xorlw	7	; case 20
  1919  00056C  B4D8               	btfsc	status,2,c
  1920  00056E  D6AE               	goto	l170
  1921  000570  0A01               	xorlw	1	; case 21
  1922  000572  B4D8               	btfsc	status,2,c
  1923  000574  D6AD               	goto	l4133
  1924  000576  0A03               	xorlw	3	; case 22
  1925  000578  B4D8               	btfsc	status,2,c
  1926  00057A  D6AC               	goto	l4137
  1927  00057C  0A01               	xorlw	1	; case 23
  1928  00057E  B4D8               	btfsc	status,2,c
  1929  000580  D6B7               	goto	l4153
  1930  000582  0A0F               	xorlw	15	; case 24
  1931  000584  B4D8               	btfsc	status,2,c
  1932  000586  D6C2               	goto	l4169
  1933  000588  0A01               	xorlw	1	; case 25
  1934  00058A  B4D8               	btfsc	status,2,c
  1935  00058C  D6F4               	goto	l4191
  1936  00058E  0A39               	xorlw	57	; case 32
  1937  000590  B4D8               	btfsc	status,2,c
  1938  000592  D71D               	goto	l4213
  1939  000594  0A60               	xorlw	96	; case 64
  1940  000596  B4D8               	btfsc	status,2,c
  1941  000598  D5D3               	goto	l4035
  1942  00059A  0A01               	xorlw	1	; case 65
  1943  00059C  B4D8               	btfsc	status,2,c
  1944  00059E  D5E5               	goto	l4039
  1945  0005A0  0A03               	xorlw	3	; case 66
  1946  0005A2  B4D8               	btfsc	status,2,c
  1947  0005A4  D5E2               	goto	l4039
  1948  0005A6  0A32               	xorlw	50	; case 112
  1949  0005A8  B4D8               	btfsc	status,2,c
  1950  0005AA  D717               	goto	l4223
  1951  0005AC  0A01               	xorlw	1	; case 113
  1952  0005AE  B4D8               	btfsc	status,2,c
  1953  0005B0  D71B               	goto	l4231
  1954  0005B2  0A03               	xorlw	3	; case 114
  1955  0005B4  B4D8               	btfsc	status,2,c
  1956  0005B6  D736               	goto	l4251
  1957  0005B8  0A01               	xorlw	1	; case 115
  1958  0005BA  B4D8               	btfsc	status,2,c
  1959  0005BC  D76F               	goto	l4285
  1960  0005BE  0A07               	xorlw	7	; case 116
  1961  0005C0  B4D8               	btfsc	status,2,c
  1962  0005C2  D793               	goto	l4313
  1963  0005C4  0A01               	xorlw	1	; case 117
  1964  0005C6  B4D8               	btfsc	status,2,c
  1965  0005C8  D7AD               	goto	l4335
  1966  0005CA  0A8A               	xorlw	138	; case 255
  1967  0005CC  B4D8               	btfsc	status,2,c
  1968  0005CE  D5A9               	goto	l4029
  1969  0005D0  D7B9               	goto	l4345
  1970  0005D2                     l4351:
  1971                           
  1972                           ;main.c: 452: SIClear();
  1973  0005D2  ECB6  F00B         	call	_SIClear	;wreg free
  1974                           
  1975                           ;main.c: 453: INTCON0bits.GIE = 1;
  1976  0005D6  8ED2               	bsf	16338,7,c	;volatile
  1977  0005D8  D586               	goto	l4009
  1978  0005DA                     __end_of_main:
  1979                           	opt callstack 0
  1980                           
  1981 ;; *************** function _portsInit *****************
  1982 ;; Defined at:
  1983 ;;		line 460 in file "main.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;		None
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;  state           1    0[COMRAM] unsigned char 
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  1    wreg      void 
  1990 ;; Registers used:
  1991 ;;		wreg, status,2
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1997 ;;      Params:         0       0       0       0       0       0       0       0       0
  1998 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1999 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2000 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2001 ;;Total ram usage:        1 bytes
  2002 ;; Hardware stack levels used:    1
  2003 ;; Hardware stack levels required when called:    2
  2004 ;; This function calls:
  2005 ;;		Nothing
  2006 ;; This function is called by:
  2007 ;;		_main
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           	psect	text1
  2012  0013AC                     __ptext1:
  2013                           	opt callstack 0
  2014  0013AC                     _portsInit:
  2015                           	opt callstack 28
  2016                           
  2017                           ;main.c: 462: bool state = (unsigned char)GIE;
  2018                           
  2019                           ;incstack = 0
  2020  0013AC  0E00               	movlw	0
  2021  0013AE  BED2               	btfsc	16338,7,c	;volatile
  2022  0013B0  0E01               	movlw	1
  2023  0013B2  6E2A               	movwf	portsInit@state,c
  2024                           
  2025                           ;main.c: 463: GIE = 0;
  2026  0013B4  9ED2               	bcf	16338,7,c	;volatile
  2027                           
  2028                           ;main.c: 464: PPSLOCK = 0x55;
  2029  0013B6  0E55               	movlw	85
  2030  0013B8  013A               	movlb	58	; () banked
  2031  0013BA  6FBF               	movwf	191,b	;volsfr
  2032                           
  2033                           ;main.c: 465: PPSLOCK = 0xAA;
  2034  0013BC  0EAA               	movlw	170
  2035  0013BE  6FBF               	movwf	191,b	;volsfr
  2036                           
  2037                           ; BSR set to: 58
  2038                           ;main.c: 466: PPSLOCKbits.PPSLOCKED = 0x00;
  2039  0013C0  91BF               	bcf	191,0,b	;volsfr
  2040                           
  2041                           ;main.c: 470: T6INPPS = 0x0C;
  2042  0013C2  0E0C               	movlw	12
  2043  0013C4  6FCC               	movwf	204,b	;volatile
  2044                           
  2045                           ;main.c: 471: SMT1SIGPPS = 0x0C;
  2046  0013C6  0E0C               	movlw	12
  2047  0013C8  6FD2               	movwf	210,b	;volatile
  2048                           
  2049                           ;main.c: 474: RB4PPS = 0x04;
  2050  0013CA  0E04               	movlw	4
  2051  0013CC  6F0C               	movwf	12,b	;volatile
  2052                           
  2053                           ;main.c: 479: PPSLOCK = 0x55;
  2054  0013CE  0E55               	movlw	85
  2055  0013D0  6FBF               	movwf	191,b	;volsfr
  2056                           
  2057                           ;main.c: 480: PPSLOCK = 0xAA;
  2058  0013D2  0EAA               	movlw	170
  2059  0013D4  6FBF               	movwf	191,b	;volsfr
  2060                           
  2061                           ; BSR set to: 58
  2062                           ;main.c: 481: PPSLOCKbits.PPSLOCKED = 0x01;
  2063  0013D6  81BF               	bsf	191,0,b	;volsfr
  2064                           
  2065                           ; BSR set to: 58
  2066                           ;main.c: 482: GIE = state;
  2067  0013D8  A02A               	btfss	portsInit@state,0,c
  2068  0013DA  D002               	goto	u2070
  2069  0013DC  8ED2               	bsf	16338,7,c	;volatile
  2070  0013DE  D001               	goto	u2085
  2071  0013E0                     u2070:
  2072  0013E0  9ED2               	bcf	16338,7,c	;volatile
  2073  0013E2                     u2085:
  2074                           
  2075                           ;main.c: 484: LATB = 0xFF;
  2076  0013E2  68BB               	setf	16315,c	;volatile
  2077                           
  2078                           ;main.c: 487: TRISA = 0xFF;
  2079  0013E4  68C2               	setf	16322,c	;volatile
  2080                           
  2081                           ;main.c: 488: TRISB = 0xFF;
  2082  0013E6  68C3               	setf	16323,c	;volatile
  2083                           
  2084                           ;main.c: 489: TRISC = 0xFF;
  2085  0013E8  68C4               	setf	16324,c	;volatile
  2086                           
  2087                           ;main.c: 490: ANSELA = 0x03;
  2088  0013EA  0E03               	movlw	3
  2089  0013EC  013A               	movlb	58	; () banked
  2090  0013EE  6F40               	movwf	64,b	;volatile
  2091                           
  2092                           ;main.c: 491: ANSELB = 0x00;
  2093  0013F0  0E00               	movlw	0
  2094  0013F2  6F50               	movwf	80,b	;volatile
  2095                           
  2096                           ;main.c: 492: ANSELC = 0x1E;
  2097  0013F4  0E1E               	movlw	30
  2098  0013F6  6F60               	movwf	96,b	;volatile
  2099                           
  2100                           ;main.c: 493: WPUA = 0xFC;
  2101  0013F8  0EFC               	movlw	252
  2102  0013FA  6F41               	movwf	65,b	;volatile
  2103                           
  2104                           ;main.c: 494: WPUB = 0x3F;
  2105  0013FC  0E3F               	movlw	63
  2106  0013FE  6F51               	movwf	81,b	;volatile
  2107                           
  2108                           ;main.c: 495: WPUC = 0xE1;
  2109  001400  0EE1               	movlw	225
  2110  001402  6F61               	movwf	97,b	;volatile
  2111                           
  2112                           ;main.c: 496: ODCONA = 0x00;
  2113  001404  0E00               	movlw	0
  2114  001406  6F42               	movwf	66,b	;volatile
  2115                           
  2116                           ;main.c: 497: ODCONB = 0x10;
  2117  001408  0E10               	movlw	16
  2118  00140A  6F52               	movwf	82,b	;volatile
  2119                           
  2120                           ;main.c: 498: ODCONC = 0x00;
  2121  00140C  0E00               	movlw	0
  2122  00140E  6F62               	movwf	98,b	;volatile
  2123                           
  2124                           ; BSR set to: 58
  2125  001410  0012               	return		;funcret
  2126  001412                     __end_of_portsInit:
  2127                           	opt callstack 0
  2128                           
  2129 ;; *************** function _configInit *****************
  2130 ;; Defined at:
  2131 ;;		line 31 in file "config.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;		None
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;  data            2    8[COMRAM] PTR unsigned char 
  2136 ;;		 -> config(24), 
  2137 ;;  i               1   10[COMRAM] unsigned char 
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  1    wreg      void 
  2140 ;; Registers used:
  2141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2147 ;;      Params:         0       0       0       0       0       0       0       0       0
  2148 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2149 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2150 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2151 ;;Total ram usage:        3 bytes
  2152 ;; Hardware stack levels used:    1
  2153 ;; Hardware stack levels required when called:    5
  2154 ;; This function calls:
  2155 ;;		_EEPROMReadByte
  2156 ;;		_configFlashAll
  2157 ;;		_configSetDefault
  2158 ;; This function is called by:
  2159 ;;		_main
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163                           	psect	text2
  2164  001476                     __ptext2:
  2165                           	opt callstack 0
  2166  001476                     _configInit:
  2167                           	opt callstack 25
  2168                           
  2169                           ;config.c: 32: uint8_t* data = (uint8_t*)&config;
  2170                           
  2171                           ; BSR set to: 58
  2172                           ;incstack = 0
  2173  001476  0E24               	movlw	low _config
  2174  001478  6E32               	movwf	configInit@data,c
  2175  00147A  0E01               	movlw	high _config
  2176  00147C  6E33               	movwf	configInit@data+1,c
  2177                           
  2178                           ;config.c: 33: uint8_t i;;config.c: 34: for (i = 0; i < sizeof(config_t); i++) {
  2179  00147E  0E00               	movlw	0
  2180  001480  6E34               	movwf	configInit@i,c
  2181  001482                     l257:
  2182  001482  0004               	clrwdt		;# 
  2183                           
  2184                           ;config.c: 36: data[i] = EEPROMReadByte(i);
  2185  001484  5034               	movf	configInit@i,w,c
  2186  001486  2432               	addwf	configInit@data,w,c
  2187  001488  6ED9               	movwf	fsr2l,c
  2188  00148A  0E00               	movlw	0
  2189  00148C  2033               	addwfc	configInit@data+1,w,c
  2190  00148E  6EDA               	movwf	fsr2h,c
  2191  001490  5034               	movf	configInit@i,w,c
  2192  001492  ECAC  F00B         	call	_EEPROMReadByte
  2193  001496  6EDF               	movwf	indf2,c
  2194                           
  2195                           ;config.c: 39: if (i == 3U && config.magicCode != 0x322B4347UL) {
  2196  001498  0E03               	movlw	3
  2197  00149A  1834               	xorwf	configInit@i,w,c
  2198  00149C  A4D8               	btfss	status,2,c
  2199  00149E  D012               	goto	l3293
  2200  0014A0  0E47               	movlw	71
  2201  0014A2  0101               	movlb	1	; () banked
  2202  0014A4  1924               	xorwf	_config& (0+255),w,b
  2203  0014A6  E10A               	bnz	u2140
  2204  0014A8  0E43               	movlw	67
  2205  0014AA  1925               	xorwf	(_config+1)& (0+255),w,b
  2206  0014AC  E107               	bnz	u2140
  2207  0014AE  0E2B               	movlw	43
  2208  0014B0  1926               	xorwf	(_config+2)& (0+255),w,b
  2209  0014B2  E104               	bnz	u2140
  2210  0014B4  0E32               	movlw	50
  2211  0014B6  1927               	xorwf	(_config+3)& (0+255),w,b
  2212  0014B8  B4D8               	btfsc	status,2,c
  2213  0014BA  D004               	goto	l3293
  2214  0014BC                     u2140:
  2215                           
  2216                           ; BSR set to: 1
  2217                           ;config.c: 41: configSetDefault();
  2218  0014BC  EC2B  F009         	call	_configSetDefault	;wreg free
  2219                           
  2220                           ;config.c: 42: configFlashAll();
  2221  0014C0  EC58  F00B         	call	_configFlashAll	;wreg free
  2222  0014C4                     l3293:
  2223  0014C4  2A34               	incf	configInit@i,f,c
  2224  0014C6  0E17               	movlw	23
  2225  0014C8  6434               	cpfsgt	configInit@i,c
  2226  0014CA  D7DB               	goto	l257
  2227  0014CC  0012               	return	
  2228  0014CE                     __end_of_configInit:
  2229                           	opt callstack 0
  2230                           
  2231 ;; *************** function _configSetDefault *****************
  2232 ;; Defined at:
  2233 ;;		line 47 in file "config.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;		None
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;		None
  2238 ;; Return value:  Size  Location     Type
  2239 ;;                  1    wreg      void 
  2240 ;; Registers used:
  2241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2247 ;;      Params:         0       0       0       0       0       0       0       0       0
  2248 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2249 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2250 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2251 ;;Total ram usage:        0 bytes
  2252 ;; Hardware stack levels used:    1
  2253 ;; Hardware stack levels required when called:    3
  2254 ;; This function calls:
  2255 ;;		_memset
  2256 ;; This function is called by:
  2257 ;;		_main
  2258 ;;		_configInit
  2259 ;; This function uses a non-reentrant model
  2260 ;;
  2261                           
  2262                           	psect	text3
  2263  001256                     __ptext3:
  2264                           	opt callstack 0
  2265  001256                     _configSetDefault:
  2266                           	opt callstack 27
  2267                           
  2268                           ;config.c: 49: memset((void*)&config, 0, sizeof(config_t));
  2269                           
  2270                           ;incstack = 0
  2271  001256  0E24               	movlw	low _config
  2272  001258  6E2A               	movwf	memset@p1,c
  2273  00125A  0E01               	movlw	high _config
  2274  00125C  6E2B               	movwf	memset@p1+1,c
  2275  00125E  0E00               	movlw	0
  2276  001260  6E2D               	movwf	memset@c+1,c
  2277  001262  0E00               	movlw	0
  2278  001264  6E2C               	movwf	memset@c,c
  2279  001266  0E00               	movlw	0
  2280  001268  6E2F               	movwf	memset@n+1,c
  2281  00126A  0E18               	movlw	24
  2282  00126C  6E2E               	movwf	memset@n,c
  2283  00126E  ECF2  F00A         	call	_memset	;wreg free
  2284                           
  2285                           ;config.c: 52: config.magicCode = 0x322B4347UL;
  2286  001272  0E47               	movlw	71
  2287  001274  0101               	movlb	1	; () banked
  2288  001276  6F24               	movwf	_config& (0+255),b
  2289  001278  0E43               	movlw	67
  2290  00127A  6F25               	movwf	(_config+1)& (0+255),b
  2291  00127C  0E2B               	movlw	43
  2292  00127E  6F26               	movwf	(_config+2)& (0+255),b
  2293  001280  0E32               	movlw	50
  2294  001282  6F27               	movwf	(_config+3)& (0+255),b
  2295                           
  2296                           ; BSR set to: 1
  2297                           ;config.c: 53: config.version = (((2U & 0x1FFF) << 3) | (0U & 0x0007));
  2298  001284  0E00               	movlw	0
  2299  001286  6F29               	movwf	(_config+5)& (0+255),b
  2300  001288  0E10               	movlw	16
  2301  00128A  6F28               	movwf	(_config+4)& (0+255),b
  2302                           
  2303                           ; BSR set to: 1
  2304                           ;config.c: 56: config.SXMin = 0x00;
  2305  00128C  0E00               	movlw	0
  2306  00128E  6F2A               	movwf	(_config+6)& (0+255),b
  2307                           
  2308                           ; BSR set to: 1
  2309                           ;config.c: 57: config.SXMax = 0xFF;
  2310  001290  692B               	setf	(_config+7)& (0+255),b
  2311                           
  2312                           ; BSR set to: 1
  2313                           ;config.c: 58: config.SYMin = 0x00;
  2314  001292  0E00               	movlw	0
  2315  001294  6F2C               	movwf	(_config+8)& (0+255),b
  2316                           
  2317                           ; BSR set to: 1
  2318                           ;config.c: 59: config.SYMax = 0xFF;
  2319  001296  692D               	setf	(_config+9)& (0+255),b
  2320                           
  2321                           ; BSR set to: 1
  2322                           ;config.c: 60: config.CXMin = 0x00;
  2323  001298  0E00               	movlw	0
  2324  00129A  6F2E               	movwf	(_config+10)& (0+255),b
  2325                           
  2326                           ; BSR set to: 1
  2327                           ;config.c: 61: config.CXMax = 0xFF;
  2328  00129C  692F               	setf	(_config+11)& (0+255),b
  2329                           
  2330                           ; BSR set to: 1
  2331                           ;config.c: 62: config.CYMin = 0x00;
  2332  00129E  0E00               	movlw	0
  2333  0012A0  6F30               	movwf	(_config+12)& (0+255),b
  2334                           
  2335                           ; BSR set to: 1
  2336                           ;config.c: 63: config.CYMax = 0xFF;
  2337  0012A2  6931               	setf	(_config+13)& (0+255),b
  2338                           
  2339                           ; BSR set to: 1
  2340                           ;config.c: 64: config.SXChan = 0x11;
  2341  0012A4  0E11               	movlw	17
  2342  0012A6  6F32               	movwf	(_config+14)& (0+255),b
  2343                           
  2344                           ; BSR set to: 1
  2345                           ;config.c: 65: config.SYChan = 0x12;
  2346  0012A8  0E12               	movlw	18
  2347  0012AA  6F33               	movwf	(_config+15)& (0+255),b
  2348                           
  2349                           ; BSR set to: 1
  2350                           ;config.c: 66: config.CXChan = 0x13;
  2351  0012AC  0E13               	movlw	19
  2352  0012AE  6F34               	movwf	(_config+16)& (0+255),b
  2353                           
  2354                           ; BSR set to: 1
  2355                           ;config.c: 67: config.CYChan = 0x14;
  2356  0012B0  0E14               	movlw	20
  2357  0012B2  6F35               	movwf	(_config+17)& (0+255),b
  2358                           
  2359                           ; BSR set to: 1
  2360                           ;config.c: 68: config.axInvert = 0x00;
  2361  0012B4  0E00               	movlw	0
  2362  0012B6  6F36               	movwf	(_config+18)& (0+255),b
  2363                           
  2364                           ; BSR set to: 1
  2365                           ;config.c: 69: config.SDeadzone = 0x18;
  2366  0012B8  0E18               	movlw	24
  2367  0012BA  6F37               	movwf	(_config+19)& (0+255),b
  2368                           
  2369                           ; BSR set to: 1
  2370                           ;config.c: 70: config.CDeadzone = 0x18;
  2371  0012BC  0E18               	movlw	24
  2372  0012BE  6F38               	movwf	(_config+20)& (0+255),b
  2373                           
  2374                           ; BSR set to: 1
  2375                           ;config.c: 71: config.deadzoneMode = 1;
  2376  0012C0  0E01               	movlw	1
  2377  0012C2  6F39               	movwf	(_config+21)& (0+255),b
  2378                           
  2379                           ; BSR set to: 1
  2380                           ;config.c: 74: config.rumbleIntensity = 0xFF;
  2381  0012C4  693A               	setf	(_config+22)& (0+255),b
  2382                           
  2383                           ; BSR set to: 1
  2384                           ;config.c: 77: config.triggersMode = 1;
  2385  0012C6  0E01               	movlw	1
  2386  0012C8  6F3B               	movwf	(_config+23)& (0+255),b
  2387                           
  2388                           ; BSR set to: 1
  2389  0012CA  0012               	return		;funcret
  2390  0012CC                     __end_of_configSetDefault:
  2391                           	opt callstack 0
  2392                           
  2393 ;; *************** function _configFlashAll *****************
  2394 ;; Defined at:
  2395 ;;		line 80 in file "config.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;		None
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;  data            2    2[COMRAM] PTR unsigned char 
  2400 ;;		 -> config(24), 
  2401 ;;  i               1    4[COMRAM] unsigned char 
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  1    wreg      void 
  2404 ;; Registers used:
  2405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2411 ;;      Params:         0       0       0       0       0       0       0       0       0
  2412 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2413 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2414 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2415 ;;Total ram usage:        3 bytes
  2416 ;; Hardware stack levels used:    1
  2417 ;; Hardware stack levels required when called:    4
  2418 ;; This function calls:
  2419 ;;		_EEPROMWriteByte
  2420 ;; This function is called by:
  2421 ;;		_main
  2422 ;;		_configInit
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           	psect	text4
  2427  0016B0                     __ptext4:
  2428                           	opt callstack 0
  2429  0016B0                     _configFlashAll:
  2430                           	opt callstack 25
  2431                           
  2432                           ;config.c: 81: uint8_t i;;config.c: 82: uint8_t* data = (uint8_t*)&config;
  2433                           
  2434                           ; BSR set to: 1
  2435                           ;incstack = 0
  2436  0016B0  0E24               	movlw	low _config
  2437  0016B2  6E2C               	movwf	configFlashAll@data,c
  2438  0016B4  0E01               	movlw	high _config
  2439  0016B6  6E2D               	movwf	configFlashAll@data+1,c
  2440                           
  2441                           ;config.c: 83: for (i = 0; i < sizeof(config_t); i++) {
  2442  0016B8  0E00               	movlw	0
  2443  0016BA  6E2E               	movwf	configFlashAll@i,c
  2444  0016BC                     l3123:
  2445                           
  2446                           ;config.c: 84: EEPROMWriteByte(i, data[i]);
  2447  0016BC  502E               	movf	configFlashAll@i,w,c
  2448  0016BE  242C               	addwf	configFlashAll@data,w,c
  2449  0016C0  6ED9               	movwf	fsr2l,c
  2450  0016C2  0E00               	movlw	0
  2451  0016C4  202D               	addwfc	configFlashAll@data+1,w,c
  2452  0016C6  6EDA               	movwf	fsr2h,c
  2453  0016C8  50DF               	movf	indf2,w,c
  2454  0016CA  6E2A               	movwf	EEPROMWriteByte@data,c
  2455  0016CC  502E               	movf	configFlashAll@i,w,c
  2456  0016CE  EC9A  F00B         	call	_EEPROMWriteByte
  2457  0016D2  2A2E               	incf	configFlashAll@i,f,c
  2458  0016D4  0E17               	movlw	23
  2459  0016D6  642E               	cpfsgt	configFlashAll@i,c
  2460  0016D8  D7F1               	goto	l3123
  2461  0016DA  0012               	return	
  2462  0016DC                     __end_of_configFlashAll:
  2463                           	opt callstack 0
  2464                           
  2465 ;; *************** function _EEPROMWriteByte *****************
  2466 ;; Defined at:
  2467 ;;		line 120 in file "nvm.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;  address         1    wreg     unsigned char 
  2470 ;;  data            1    0[COMRAM] unsigned char 
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;  address         1    1[COMRAM] unsigned char 
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  1    wreg      void 
  2475 ;; Registers used:
  2476 ;;		wreg, status,2, cstack
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2482 ;;      Params:         1       0       0       0       0       0       0       0       0
  2483 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2484 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2485 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2486 ;;Total ram usage:        2 bytes
  2487 ;; Hardware stack levels used:    1
  2488 ;; Hardware stack levels required when called:    3
  2489 ;; This function calls:
  2490 ;;		_NVMUnlock
  2491 ;; This function is called by:
  2492 ;;		_main
  2493 ;;		_configFlashAll
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497                           	psect	text5
  2498  001734                     __ptext5:
  2499                           	opt callstack 0
  2500  001734                     _EEPROMWriteByte:
  2501                           	opt callstack 25
  2502                           
  2503                           ;incstack = 0
  2504                           ;EEPROMWriteByte@address stored from wreg
  2505  001734  6E2B               	movwf	EEPROMWriteByte@address,c
  2506                           
  2507                           ;nvm.c: 121: NVMCON1 = 0;
  2508  001736  0E00               	movlw	0
  2509  001738  0139               	movlb	57	; () banked
  2510  00173A  6FE5               	movwf	229,b	;volsfr
  2511                           
  2512                           ; BSR set to: 57
  2513                           ;nvm.c: 122: NVMADRL = address;
  2514  00173C  0060  F0AF  F9E0   	movff	EEPROMWriteByte@address,14816	;volatile
  2515                           
  2516                           ; BSR set to: 57
  2517                           ;nvm.c: 123: NVMDAT = data;
  2518  001742  0060  F0AB  F9E3   	movff	EEPROMWriteByte@data,14819	;volatile
  2519                           
  2520                           ; BSR set to: 57
  2521                           ;nvm.c: 124: NVMCON1bits.WREN = 1;
  2522  001748  85E5               	bsf	229,2,b	;volsfr
  2523                           
  2524                           ; BSR set to: 57
  2525                           ;nvm.c: 125: NVMUnlock();
  2526  00174A  ECBF  F00B         	call	_NVMUnlock	;wreg free
  2527  00174E                     l324:
  2528  00174E  0139               	movlb	57	; () banked
  2529  001750  B3E5               	btfsc	229,1,b	;volsfr
  2530  001752  D7FD               	goto	l324
  2531                           
  2532                           ; BSR set to: 57
  2533                           ;nvm.c: 127: NVMCON1bits.WREN = 0;
  2534  001754  95E5               	bcf	229,2,b	;volsfr
  2535                           
  2536                           ; BSR set to: 57
  2537  001756  0012               	return		;funcret
  2538  001758                     __end_of_EEPROMWriteByte:
  2539                           	opt callstack 0
  2540                           
  2541 ;; *************** function _EEPROMReadByte *****************
  2542 ;; Defined at:
  2543 ;;		line 113 in file "nvm.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;  address         1    wreg     unsigned char 
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;  address         1    0[COMRAM] unsigned char 
  2548 ;; Return value:  Size  Location     Type
  2549 ;;                  1    wreg      unsigned char 
  2550 ;; Registers used:
  2551 ;;		wreg, status,2
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2557 ;;      Params:         0       0       0       0       0       0       0       0       0
  2558 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2559 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2560 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2561 ;;Total ram usage:        1 bytes
  2562 ;; Hardware stack levels used:    1
  2563 ;; Hardware stack levels required when called:    2
  2564 ;; This function calls:
  2565 ;;		Nothing
  2566 ;; This function is called by:
  2567 ;;		_main
  2568 ;;		_configInit
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572                           	psect	text6
  2573  001758                     __ptext6:
  2574                           	opt callstack 0
  2575  001758                     _EEPROMReadByte:
  2576                           	opt callstack 27
  2577                           
  2578                           ; BSR set to: 57
  2579                           ;incstack = 0
  2580                           ;EEPROMReadByte@address stored from wreg
  2581  001758  6E2A               	movwf	EEPROMReadByte@address,c
  2582                           
  2583                           ;nvm.c: 114: NVMCON1 = 0;
  2584  00175A  0E00               	movlw	0
  2585  00175C  0139               	movlb	57	; () banked
  2586  00175E  6FE5               	movwf	229,b	;volsfr
  2587                           
  2588                           ; BSR set to: 57
  2589                           ;nvm.c: 115: NVMADRL = address;
  2590  001760  0060  F0AB  F9E0   	movff	EEPROMReadByte@address,14816	;volatile
  2591                           
  2592                           ; BSR set to: 57
  2593                           ;nvm.c: 116: NVMCON1bits.RD = 1;
  2594  001766  81E5               	bsf	229,0,b	;volsfr
  2595                           
  2596                           ; BSR set to: 57
  2597                           ;nvm.c: 117: return NVMDAT;
  2598  001768  51E3               	movf	227,w,b	;volatile
  2599                           
  2600                           ; BSR set to: 57
  2601  00176A  0012               	return		;funcret
  2602  00176C                     __end_of_EEPROMReadByte:
  2603                           	opt callstack 0
  2604                           
  2605 ;; *************** function _buttonsUpdate *****************
  2606 ;; Defined at:
  2607 ;;		line 92 in file "buttons.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;		None
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;  toggledButto    3    4[COMRAM] struct .
  2612 ;;  i               1    3[COMRAM] unsigned char 
  2613 ;;  PC              1    2[COMRAM] unsigned char 
  2614 ;;  PB              1    1[COMRAM] unsigned char 
  2615 ;;  PA              1    0[COMRAM] unsigned char 
  2616 ;; Return value:  Size  Location     Type
  2617 ;;                  1    wreg      void 
  2618 ;; Registers used:
  2619 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2620 ;; Tracked objects:
  2621 ;;		On entry : 0/0
  2622 ;;		On exit  : 0/0
  2623 ;;		Unchanged: 0/0
  2624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2625 ;;      Params:         0       0       0       0       0       0       0       0       0
  2626 ;;      Locals:         7       0       0       0       0       0       0       0       0
  2627 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2628 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2629 ;;Total ram usage:        7 bytes
  2630 ;; Hardware stack levels used:    1
  2631 ;; Hardware stack levels required when called:    2
  2632 ;; This function calls:
  2633 ;;		Nothing
  2634 ;; This function is called by:
  2635 ;;		_main
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639                           	psect	text7
  2640  0005DA                     __ptext7:
  2641                           	opt callstack 0
  2642  0005DA                     _buttonsUpdate:
  2643                           	opt callstack 28
  2644                           
  2645                           ;buttons.c: 93: uint8_t i;;buttons.c: 94: uint8_t PA, PB, PC;;buttons.c: 95: inButtons_t
      +                           toggledButtons;;buttons.c: 98: PA = PORTA;
  2646                           
  2647                           ; BSR set to: 57
  2648                           ;incstack = 0
  2649  0005DA  006F FF28  F02A    	movff	16330,buttonsUpdate@PA	;volatile
  2650                           
  2651                           ;buttons.c: 99: PB = PORTB;
  2652  0005E0  006F FF2C  F02B    	movff	16331,buttonsUpdate@PB	;volatile
  2653                           
  2654                           ;buttons.c: 100: PC = PORTC;
  2655  0005E6  006F FF30  F02C    	movff	16332,buttonsUpdate@PC	;volatile
  2656                           
  2657                           ;buttons.c: 101: toggledButtons.PORTA = (uint8_t)(PA ^ prevButtons.PORTA);
  2658  0005EC  501A               	movf	_prevButtons,w,c
  2659  0005EE  182A               	xorwf	buttonsUpdate@PA,w,c
  2660  0005F0  6E2E               	movwf	buttonsUpdate@toggledButtons,c
  2661                           
  2662                           ;buttons.c: 102: toggledButtons.PORTB = (uint8_t)(PB ^ prevButtons.PORTB);
  2663  0005F2  501B               	movf	_prevButtons+1,w,c
  2664  0005F4  182B               	xorwf	buttonsUpdate@PB,w,c
  2665  0005F6  6E2F               	movwf	buttonsUpdate@toggledButtons+1,c
  2666                           
  2667                           ;buttons.c: 103: toggledButtons.PORTC = (uint8_t)(PC ^ prevButtons.PORTC);
  2668  0005F8  501C               	movf	_prevButtons+2,w,c
  2669  0005FA  182C               	xorwf	buttonsUpdate@PC,w,c
  2670  0005FC  6E30               	movwf	buttonsUpdate@toggledButtons+2,c
  2671                           
  2672                           ;buttons.c: 105: prevButtons.PORTA = PA;
  2673  0005FE  0060  F0A8  F01A   	movff	buttonsUpdate@PA,_prevButtons
  2674                           
  2675                           ;buttons.c: 106: prevButtons.PORTB = PB;
  2676  000604  0060  F0AC  F01B   	movff	buttonsUpdate@PB,_prevButtons+1
  2677                           
  2678                           ;buttons.c: 107: prevButtons.PORTC = PC;
  2679  00060A  0060  F0B0  F01C   	movff	buttonsUpdate@PC,_prevButtons+2
  2680                           
  2681                           ;buttons.c: 110: if (toggledButtons.A) buttonsTimers[BUTTON_A_ID] = 0;
  2682  000610  AE30               	btfss	buttonsUpdate@toggledButtons+2,7,c
  2683  000612  D002               	goto	l3447
  2684  000614  0E00               	movlw	0
  2685  000616  6E01               	movwf	_buttonsTimers,c
  2686  000618                     l3447:
  2687                           
  2688                           ;buttons.c: 111: if (toggledButtons.B) buttonsTimers[BUTTON_B_ID] = 0;
  2689  000618  AC30               	btfss	buttonsUpdate@toggledButtons+2,6,c
  2690  00061A  D002               	goto	l3451
  2691  00061C  0E00               	movlw	0
  2692  00061E  6E02               	movwf	_buttonsTimers+1,c
  2693  000620                     l3451:
  2694                           
  2695                           ;buttons.c: 112: if (toggledButtons.X) buttonsTimers[BUTTON_X_ID] = 0;
  2696  000620  A62F               	btfss	buttonsUpdate@toggledButtons+1,3,c
  2697  000622  D002               	goto	l3455
  2698  000624  0E00               	movlw	0
  2699  000626  6E03               	movwf	_buttonsTimers+2,c
  2700  000628                     l3455:
  2701                           
  2702                           ;buttons.c: 113: if (toggledButtons.Y) buttonsTimers[BUTTON_Y_ID] = 0;
  2703  000628  A42F               	btfss	buttonsUpdate@toggledButtons+1,2,c
  2704  00062A  D002               	goto	l3459
  2705  00062C  0E00               	movlw	0
  2706  00062E  6E04               	movwf	_buttonsTimers+3,c
  2707  000630                     l3459:
  2708                           
  2709                           ;buttons.c: 114: if (toggledButtons.ST) buttonsTimers[BUTTON_ST_ID] = 0;
  2710  000630  AC2E               	btfss	buttonsUpdate@toggledButtons,6,c
  2711  000632  D002               	goto	l3463
  2712  000634  0E00               	movlw	0
  2713  000636  6E05               	movwf	_buttonsTimers+4,c
  2714  000638                     l3463:
  2715                           
  2716                           ;buttons.c: 115: if (toggledButtons.DL) buttonsTimers[BUTTON_DL_ID] = 0;
  2717  000638  A62E               	btfss	buttonsUpdate@toggledButtons,3,c
  2718  00063A  D002               	goto	l3467
  2719  00063C  0E00               	movlw	0
  2720  00063E  6E06               	movwf	_buttonsTimers+5,c
  2721  000640                     l3467:
  2722                           
  2723                           ;buttons.c: 116: if (toggledButtons.DR) buttonsTimers[BUTTON_DR_ID] = 0;
  2724  000640  AA2E               	btfss	buttonsUpdate@toggledButtons,5,c
  2725  000642  D002               	goto	l3471
  2726  000644  0E00               	movlw	0
  2727  000646  6E07               	movwf	_buttonsTimers+6,c
  2728  000648                     l3471:
  2729                           
  2730                           ;buttons.c: 117: if (toggledButtons.DD) buttonsTimers[BUTTON_DD_ID] = 0;
  2731  000648  AE2E               	btfss	buttonsUpdate@toggledButtons,7,c
  2732  00064A  D002               	goto	l3475
  2733  00064C  0E00               	movlw	0
  2734  00064E  6E08               	movwf	_buttonsTimers+7,c
  2735  000650                     l3475:
  2736                           
  2737                           ;buttons.c: 118: if (toggledButtons.DU) buttonsTimers[BUTTON_DU_ID] = 0;
  2738  000650  A82E               	btfss	buttonsUpdate@toggledButtons,4,c
  2739  000652  D002               	goto	l3479
  2740  000654  0E00               	movlw	0
  2741  000656  6E09               	movwf	_buttonsTimers+8,c
  2742  000658                     l3479:
  2743                           
  2744                           ;buttons.c: 119: if (toggledButtons.Z) buttonsTimers[BUTTON_Z_ID] = 0;
  2745  000658  A02F               	btfss	buttonsUpdate@toggledButtons+1,0,c
  2746  00065A  D002               	goto	l3483
  2747  00065C  0E00               	movlw	0
  2748  00065E  6E0A               	movwf	_buttonsTimers+9,c
  2749  000660                     l3483:
  2750                           
  2751                           ;buttons.c: 120: if (toggledButtons.RD) buttonsTimers[BUTTON_RD_ID] = 0;
  2752  000660  A22F               	btfss	buttonsUpdate@toggledButtons+1,1,c
  2753  000662  D002               	goto	l3487
  2754  000664  0E00               	movlw	0
  2755  000666  6E0B               	movwf	_buttonsTimers+10,c
  2756  000668                     l3487:
  2757                           
  2758                           ;buttons.c: 121: if (toggledButtons.LD) buttonsTimers[BUTTON_LD_ID] = 0;
  2759  000668  A42E               	btfss	buttonsUpdate@toggledButtons,2,c
  2760  00066A  D002               	goto	l3491
  2761  00066C  0E00               	movlw	0
  2762  00066E  6E0C               	movwf	_buttonsTimers+11,c
  2763  000670                     l3491:
  2764                           
  2765                           ;buttons.c: 122: if (toggledButtons.LA) buttonsTimers[BUTTON_LA_ID] = 0;
  2766  000670  A030               	btfss	buttonsUpdate@toggledButtons+2,0,c
  2767  000672  D002               	goto	l3495
  2768  000674  0E00               	movlw	0
  2769  000676  6E0D               	movwf	_buttonsTimers+12,c
  2770  000678                     l3495:
  2771                           
  2772                           ;buttons.c: 123: if (toggledButtons.RA) buttonsTimers[BUTTON_RA_ID] = 0;
  2773  000678  AA30               	btfss	buttonsUpdate@toggledButtons+2,5,c
  2774  00067A  D002               	goto	l3499
  2775  00067C  0E00               	movlw	0
  2776  00067E  6E0E               	movwf	_buttonsTimers+13,c
  2777  000680                     l3499:
  2778                           
  2779                           ;buttons.c: 124: if (toggledButtons.Z2) buttonsTimers[BUTTON_Z2_ID] = 0;
  2780  000680  AA2F               	btfss	buttonsUpdate@toggledButtons+1,5,c
  2781  000682  D002               	goto	l3503
  2782  000684  0E00               	movlw	0
  2783  000686  6E0F               	movwf	_buttonsTimers+14,c
  2784  000688                     l3503:
  2785                           
  2786                           ;buttons.c: 126: if (!TMR0IF) return;
  2787  000688  0139               	movlb	57	; () banked
  2788  00068A  AFA3               	btfss	163,7,b	;volatile
  2789  00068C  0012               	return	
  2790                           
  2791                           ; BSR set to: 57
  2792                           ;buttons.c: 127: TMR0IF = 0;
  2793  00068E  9FA3               	bcf	163,7,b	;volatile
  2794                           
  2795                           ; BSR set to: 57
  2796                           ;buttons.c: 130: for (i = 0; i < N_BUTTONS; i++) {
  2797  000690  0E00               	movlw	0
  2798  000692  6E2D               	movwf	buttonsUpdate@i,c
  2799  000694                     l3513:
  2800                           
  2801                           ;buttons.c: 131: buttonsTimers[i]++;
  2802  000694  0E01               	movlw	low _buttonsTimers
  2803  000696  242D               	addwf	buttonsUpdate@i,w,c
  2804  000698  6ED9               	movwf	fsr2l,c
  2805  00069A  6ADA               	clrf	fsr2h,c
  2806  00069C  0E00               	movlw	high _buttonsTimers
  2807  00069E  22DA               	addwfc	fsr2h,f,c
  2808  0006A0  2ADF               	incf	indf2,f,c
  2809  0006A2  2A2D               	incf	buttonsUpdate@i,f,c
  2810  0006A4  0E0E               	movlw	14
  2811  0006A6  642D               	cpfsgt	buttonsUpdate@i,c
  2812  0006A8  D7F5               	goto	l3513
  2813                           
  2814                           ;buttons.c: 132: };buttons.c: 134: outButtons.byte0 = 0x00;
  2815  0006AA  0E00               	movlw	0
  2816  0006AC  6E16               	movwf	_outButtons,c
  2817                           
  2818                           ;buttons.c: 135: outButtons.byte1 = 0x80;
  2819  0006AE  0E80               	movlw	128
  2820  0006B0  6E17               	movwf	_outButtons+1,c
  2821                           
  2822                           ;buttons.c: 137: if (buttonsTimers[BUTTON_A_ID] >= 10 && !prevButtons.A) { buttonsTimers
      +                          [BUTTON_A_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_A_ID]; } if (buttonsTimer
      +                          s[BUTTON_A_ID] >= 10 && !prevButtons.A) { buttonsTimers[BUTTON_A_ID] = 10; outButtons.by
      +                          te1
  2823  0006B2  0E09               	movlw	9
  2824  0006B4  6401               	cpfsgt	_buttonsTimers,c
  2825  0006B6  D007               	goto	l3529
  2826  0006B8  BE1C               	btfsc	_prevButtons+2,7,c
  2827  0006BA  D005               	goto	l3529
  2828  0006BC  0E0A               	movlw	10
  2829  0006BE  6E01               	movwf	_buttonsTimers,c
  2830  0006C0  0101               	movlb	1	; () banked
  2831  0006C2  514B               	movf	_buttonsMapByte0& (0+255),w,b
  2832  0006C4  1216               	iorwf	_outButtons,f,c
  2833  0006C6                     l3529:
  2834  0006C6  0E09               	movlw	9
  2835  0006C8  6401               	cpfsgt	_buttonsTimers,c
  2836  0006CA  D007               	goto	l3537
  2837  0006CC  BE1C               	btfsc	_prevButtons+2,7,c
  2838  0006CE  D005               	goto	l3537
  2839  0006D0  0E0A               	movlw	10
  2840  0006D2  6E01               	movwf	_buttonsTimers,c
  2841  0006D4  0101               	movlb	1	; () banked
  2842  0006D6  513C               	movf	_buttonsMapByte1& (0+255),w,b
  2843  0006D8  1217               	iorwf	_outButtons+1,f,c
  2844  0006DA                     l3537:
  2845                           
  2846                           ;buttons.c: 138: if (buttonsTimers[BUTTON_B_ID] >= 10 && !prevButtons.B) { buttonsTimers
      +                          [BUTTON_B_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_B_ID]; } if (buttonsTimer
      +                          s[BUTTON_B_ID] >= 10 && !prevButtons.B) { buttonsTimers[BUTTON_B_ID] = 10; outButtons.by
      +                          te1
  2847  0006DA  0E09               	movlw	9
  2848  0006DC  6402               	cpfsgt	_buttonsTimers+1,c
  2849  0006DE  D007               	goto	l3545
  2850  0006E0  BC1C               	btfsc	_prevButtons+2,6,c
  2851  0006E2  D005               	goto	l3545
  2852  0006E4  0E0A               	movlw	10
  2853  0006E6  6E02               	movwf	_buttonsTimers+1,c
  2854  0006E8  0101               	movlb	1	; () banked
  2855  0006EA  514C               	movf	(_buttonsMapByte0+1)& (0+255),w,b
  2856  0006EC  1216               	iorwf	_outButtons,f,c
  2857  0006EE                     l3545:
  2858  0006EE  0E09               	movlw	9
  2859  0006F0  6402               	cpfsgt	_buttonsTimers+1,c
  2860  0006F2  D007               	goto	l3553
  2861  0006F4  BC1C               	btfsc	_prevButtons+2,6,c
  2862  0006F6  D005               	goto	l3553
  2863  0006F8  0E0A               	movlw	10
  2864  0006FA  6E02               	movwf	_buttonsTimers+1,c
  2865  0006FC  0101               	movlb	1	; () banked
  2866  0006FE  513D               	movf	(_buttonsMapByte1+1)& (0+255),w,b
  2867  000700  1217               	iorwf	_outButtons+1,f,c
  2868  000702                     l3553:
  2869                           
  2870                           ;buttons.c: 139: if (buttonsTimers[BUTTON_X_ID] >= 10 && !prevButtons.X) { buttonsTimers
      +                          [BUTTON_X_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_X_ID]; } if (buttonsTimer
      +                          s[BUTTON_X_ID] >= 10 && !prevButtons.X) { buttonsTimers[BUTTON_X_ID] = 10; outButtons.by
      +                          te1
  2871  000702  0E09               	movlw	9
  2872  000704  6403               	cpfsgt	_buttonsTimers+2,c
  2873  000706  D007               	goto	l3561
  2874  000708  B61B               	btfsc	_prevButtons+1,3,c
  2875  00070A  D005               	goto	l3561
  2876  00070C  0E0A               	movlw	10
  2877  00070E  6E03               	movwf	_buttonsTimers+2,c
  2878  000710  0101               	movlb	1	; () banked
  2879  000712  514D               	movf	(_buttonsMapByte0+2)& (0+255),w,b
  2880  000714  1216               	iorwf	_outButtons,f,c
  2881  000716                     l3561:
  2882  000716  0E09               	movlw	9
  2883  000718  6403               	cpfsgt	_buttonsTimers+2,c
  2884  00071A  D007               	goto	l3569
  2885  00071C  B61B               	btfsc	_prevButtons+1,3,c
  2886  00071E  D005               	goto	l3569
  2887  000720  0E0A               	movlw	10
  2888  000722  6E03               	movwf	_buttonsTimers+2,c
  2889  000724  0101               	movlb	1	; () banked
  2890  000726  513E               	movf	(_buttonsMapByte1+2)& (0+255),w,b
  2891  000728  1217               	iorwf	_outButtons+1,f,c
  2892  00072A                     l3569:
  2893                           
  2894                           ;buttons.c: 140: if (buttonsTimers[BUTTON_Y_ID] >= 10 && !prevButtons.Y) { buttonsTimers
      +                          [BUTTON_Y_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_Y_ID]; } if (buttonsTimer
      +                          s[BUTTON_Y_ID] >= 10 && !prevButtons.Y) { buttonsTimers[BUTTON_Y_ID] = 10; outButtons.by
      +                          te1
  2895  00072A  0E09               	movlw	9
  2896  00072C  6404               	cpfsgt	_buttonsTimers+3,c
  2897  00072E  D007               	goto	l3577
  2898  000730  B41B               	btfsc	_prevButtons+1,2,c
  2899  000732  D005               	goto	l3577
  2900  000734  0E0A               	movlw	10
  2901  000736  6E04               	movwf	_buttonsTimers+3,c
  2902  000738  0101               	movlb	1	; () banked
  2903  00073A  514E               	movf	(_buttonsMapByte0+3)& (0+255),w,b
  2904  00073C  1216               	iorwf	_outButtons,f,c
  2905  00073E                     l3577:
  2906  00073E  0E09               	movlw	9
  2907  000740  6404               	cpfsgt	_buttonsTimers+3,c
  2908  000742  D007               	goto	l3585
  2909  000744  B41B               	btfsc	_prevButtons+1,2,c
  2910  000746  D005               	goto	l3585
  2911  000748  0E0A               	movlw	10
  2912  00074A  6E04               	movwf	_buttonsTimers+3,c
  2913  00074C  0101               	movlb	1	; () banked
  2914  00074E  513F               	movf	(_buttonsMapByte1+3)& (0+255),w,b
  2915  000750  1217               	iorwf	_outButtons+1,f,c
  2916  000752                     l3585:
  2917                           
  2918                           ;buttons.c: 141: if (buttonsTimers[BUTTON_ST_ID] >= 10 && !prevButtons.ST) { buttonsTime
      +                          rs[BUTTON_ST_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_ST_ID]; } if (buttonsT
      +                          imers[BUTTON_ST_ID] >= 10 && !prevButtons.ST) { buttonsTimers[BUTTON_ST_ID] = 10; outBut
      +                          ton
  2919  000752  0E09               	movlw	9
  2920  000754  6405               	cpfsgt	_buttonsTimers+4,c
  2921  000756  D007               	goto	l3593
  2922  000758  BC1A               	btfsc	_prevButtons,6,c
  2923  00075A  D005               	goto	l3593
  2924  00075C  0E0A               	movlw	10
  2925  00075E  6E05               	movwf	_buttonsTimers+4,c
  2926  000760  0101               	movlb	1	; () banked
  2927  000762  514F               	movf	(_buttonsMapByte0+4)& (0+255),w,b
  2928  000764  1216               	iorwf	_outButtons,f,c
  2929  000766                     l3593:
  2930  000766  0E09               	movlw	9
  2931  000768  6405               	cpfsgt	_buttonsTimers+4,c
  2932  00076A  D007               	goto	l3601
  2933  00076C  BC1A               	btfsc	_prevButtons,6,c
  2934  00076E  D005               	goto	l3601
  2935  000770  0E0A               	movlw	10
  2936  000772  6E05               	movwf	_buttonsTimers+4,c
  2937  000774  0101               	movlb	1	; () banked
  2938  000776  5140               	movf	(_buttonsMapByte1+4)& (0+255),w,b
  2939  000778  1217               	iorwf	_outButtons+1,f,c
  2940  00077A                     l3601:
  2941                           
  2942                           ;buttons.c: 142: if (buttonsTimers[BUTTON_DL_ID] >= 10 && !prevButtons.DL) { buttonsTime
      +                          rs[BUTTON_DL_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_DL_ID]; } if (buttonsT
      +                          imers[BUTTON_DL_ID] >= 10 && !prevButtons.DL) { buttonsTimers[BUTTON_DL_ID] = 10; outBut
      +                          ton
  2943  00077A  0E09               	movlw	9
  2944  00077C  6406               	cpfsgt	_buttonsTimers+5,c
  2945  00077E  D007               	goto	l3609
  2946  000780  B61A               	btfsc	_prevButtons,3,c
  2947  000782  D005               	goto	l3609
  2948  000784  0E0A               	movlw	10
  2949  000786  6E06               	movwf	_buttonsTimers+5,c
  2950  000788  0101               	movlb	1	; () banked
  2951  00078A  5150               	movf	(_buttonsMapByte0+5)& (0+255),w,b
  2952  00078C  1216               	iorwf	_outButtons,f,c
  2953  00078E                     l3609:
  2954  00078E  0E09               	movlw	9
  2955  000790  6406               	cpfsgt	_buttonsTimers+5,c
  2956  000792  D007               	goto	l3617
  2957  000794  B61A               	btfsc	_prevButtons,3,c
  2958  000796  D005               	goto	l3617
  2959  000798  0E0A               	movlw	10
  2960  00079A  6E06               	movwf	_buttonsTimers+5,c
  2961  00079C  0101               	movlb	1	; () banked
  2962  00079E  5141               	movf	(_buttonsMapByte1+5)& (0+255),w,b
  2963  0007A0  1217               	iorwf	_outButtons+1,f,c
  2964  0007A2                     l3617:
  2965                           
  2966                           ;buttons.c: 143: if (buttonsTimers[BUTTON_DR_ID] >= 10 && !prevButtons.DR) { buttonsTime
      +                          rs[BUTTON_DR_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_DR_ID]; } if (buttonsT
      +                          imers[BUTTON_DR_ID] >= 10 && !prevButtons.DR) { buttonsTimers[BUTTON_DR_ID] = 10; outBut
      +                          ton
  2967  0007A2  0E09               	movlw	9
  2968  0007A4  6407               	cpfsgt	_buttonsTimers+6,c
  2969  0007A6  D007               	goto	l3625
  2970  0007A8  BA1A               	btfsc	_prevButtons,5,c
  2971  0007AA  D005               	goto	l3625
  2972  0007AC  0E0A               	movlw	10
  2973  0007AE  6E07               	movwf	_buttonsTimers+6,c
  2974  0007B0  0101               	movlb	1	; () banked
  2975  0007B2  5151               	movf	(_buttonsMapByte0+6)& (0+255),w,b
  2976  0007B4  1216               	iorwf	_outButtons,f,c
  2977  0007B6                     l3625:
  2978  0007B6  0E09               	movlw	9
  2979  0007B8  6407               	cpfsgt	_buttonsTimers+6,c
  2980  0007BA  D007               	goto	l3633
  2981  0007BC  BA1A               	btfsc	_prevButtons,5,c
  2982  0007BE  D005               	goto	l3633
  2983  0007C0  0E0A               	movlw	10
  2984  0007C2  6E07               	movwf	_buttonsTimers+6,c
  2985  0007C4  0101               	movlb	1	; () banked
  2986  0007C6  5142               	movf	(_buttonsMapByte1+6)& (0+255),w,b
  2987  0007C8  1217               	iorwf	_outButtons+1,f,c
  2988  0007CA                     l3633:
  2989                           
  2990                           ;buttons.c: 144: if (buttonsTimers[BUTTON_DD_ID] >= 10 && !prevButtons.DD) { buttonsTime
      +                          rs[BUTTON_DD_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_DD_ID]; } if (buttonsT
      +                          imers[BUTTON_DD_ID] >= 10 && !prevButtons.DD) { buttonsTimers[BUTTON_DD_ID] = 10; outBut
      +                          ton
  2991  0007CA  0E09               	movlw	9
  2992  0007CC  6408               	cpfsgt	_buttonsTimers+7,c
  2993  0007CE  D007               	goto	l3641
  2994  0007D0  BE1A               	btfsc	_prevButtons,7,c
  2995  0007D2  D005               	goto	l3641
  2996  0007D4  0E0A               	movlw	10
  2997  0007D6  6E08               	movwf	_buttonsTimers+7,c
  2998  0007D8  0101               	movlb	1	; () banked
  2999  0007DA  5152               	movf	(_buttonsMapByte0+7)& (0+255),w,b
  3000  0007DC  1216               	iorwf	_outButtons,f,c
  3001  0007DE                     l3641:
  3002  0007DE  0E09               	movlw	9
  3003  0007E0  6408               	cpfsgt	_buttonsTimers+7,c
  3004  0007E2  D007               	goto	l3649
  3005  0007E4  BE1A               	btfsc	_prevButtons,7,c
  3006  0007E6  D005               	goto	l3649
  3007  0007E8  0E0A               	movlw	10
  3008  0007EA  6E08               	movwf	_buttonsTimers+7,c
  3009  0007EC  0101               	movlb	1	; () banked
  3010  0007EE  5143               	movf	(_buttonsMapByte1+7)& (0+255),w,b
  3011  0007F0  1217               	iorwf	_outButtons+1,f,c
  3012  0007F2                     l3649:
  3013                           
  3014                           ;buttons.c: 145: if (buttonsTimers[BUTTON_DU_ID] >= 10 && !prevButtons.DU) { buttonsTime
      +                          rs[BUTTON_DU_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_DU_ID]; } if (buttonsT
      +                          imers[BUTTON_DU_ID] >= 10 && !prevButtons.DU) { buttonsTimers[BUTTON_DU_ID] = 10; outBut
      +                          ton
  3015  0007F2  0E09               	movlw	9
  3016  0007F4  6409               	cpfsgt	_buttonsTimers+8,c
  3017  0007F6  D007               	goto	l3657
  3018  0007F8  B81A               	btfsc	_prevButtons,4,c
  3019  0007FA  D005               	goto	l3657
  3020  0007FC  0E0A               	movlw	10
  3021  0007FE  6E09               	movwf	_buttonsTimers+8,c
  3022  000800  0101               	movlb	1	; () banked
  3023  000802  5153               	movf	(_buttonsMapByte0+8)& (0+255),w,b
  3024  000804  1216               	iorwf	_outButtons,f,c
  3025  000806                     l3657:
  3026  000806  0E09               	movlw	9
  3027  000808  6409               	cpfsgt	_buttonsTimers+8,c
  3028  00080A  D007               	goto	l3665
  3029  00080C  B81A               	btfsc	_prevButtons,4,c
  3030  00080E  D005               	goto	l3665
  3031  000810  0E0A               	movlw	10
  3032  000812  6E09               	movwf	_buttonsTimers+8,c
  3033  000814  0101               	movlb	1	; () banked
  3034  000816  5144               	movf	(_buttonsMapByte1+8)& (0+255),w,b
  3035  000818  1217               	iorwf	_outButtons+1,f,c
  3036  00081A                     l3665:
  3037                           
  3038                           ;buttons.c: 146: if (buttonsTimers[BUTTON_Z_ID] >= 10 && !prevButtons.Z) { buttonsTimers
      +                          [BUTTON_Z_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_Z_ID]; } if (buttonsTimer
      +                          s[BUTTON_Z_ID] >= 10 && !prevButtons.Z) { buttonsTimers[BUTTON_Z_ID] = 10; outButtons.by
      +                          te1
  3039  00081A  0E09               	movlw	9
  3040  00081C  640A               	cpfsgt	_buttonsTimers+9,c
  3041  00081E  D007               	goto	l3673
  3042  000820  B01B               	btfsc	_prevButtons+1,0,c
  3043  000822  D005               	goto	l3673
  3044  000824  0E0A               	movlw	10
  3045  000826  6E0A               	movwf	_buttonsTimers+9,c
  3046  000828  0101               	movlb	1	; () banked
  3047  00082A  5154               	movf	(_buttonsMapByte0+9)& (0+255),w,b
  3048  00082C  1216               	iorwf	_outButtons,f,c
  3049  00082E                     l3673:
  3050  00082E  0E09               	movlw	9
  3051  000830  640A               	cpfsgt	_buttonsTimers+9,c
  3052  000832  D007               	goto	l3681
  3053  000834  B01B               	btfsc	_prevButtons+1,0,c
  3054  000836  D005               	goto	l3681
  3055  000838  0E0A               	movlw	10
  3056  00083A  6E0A               	movwf	_buttonsTimers+9,c
  3057  00083C  0101               	movlb	1	; () banked
  3058  00083E  5145               	movf	(_buttonsMapByte1+9)& (0+255),w,b
  3059  000840  1217               	iorwf	_outButtons+1,f,c
  3060  000842                     l3681:
  3061                           
  3062                           ;buttons.c: 147: if (buttonsTimers[BUTTON_RD_ID] >= 10 && !prevButtons.RD) { buttonsTime
      +                          rs[BUTTON_RD_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_RD_ID]; } if (buttonsT
      +                          imers[BUTTON_RD_ID] >= 10 && !prevButtons.RD) { buttonsTimers[BUTTON_RD_ID] = 10; outBut
      +                          ton
  3063  000842  0E09               	movlw	9
  3064  000844  640B               	cpfsgt	_buttonsTimers+10,c
  3065  000846  D007               	goto	l3689
  3066  000848  B21B               	btfsc	_prevButtons+1,1,c
  3067  00084A  D005               	goto	l3689
  3068  00084C  0E0A               	movlw	10
  3069  00084E  6E0B               	movwf	_buttonsTimers+10,c
  3070  000850  0101               	movlb	1	; () banked
  3071  000852  5155               	movf	(_buttonsMapByte0+10)& (0+255),w,b
  3072  000854  1216               	iorwf	_outButtons,f,c
  3073  000856                     l3689:
  3074  000856  0E09               	movlw	9
  3075  000858  640B               	cpfsgt	_buttonsTimers+10,c
  3076  00085A  D007               	goto	l3697
  3077  00085C  B21B               	btfsc	_prevButtons+1,1,c
  3078  00085E  D005               	goto	l3697
  3079  000860  0E0A               	movlw	10
  3080  000862  6E0B               	movwf	_buttonsTimers+10,c
  3081  000864  0101               	movlb	1	; () banked
  3082  000866  5146               	movf	(_buttonsMapByte1+10)& (0+255),w,b
  3083  000868  1217               	iorwf	_outButtons+1,f,c
  3084  00086A                     l3697:
  3085                           
  3086                           ;buttons.c: 148: if (buttonsTimers[BUTTON_LD_ID] >= 10 && !prevButtons.LD) { buttonsTime
      +                          rs[BUTTON_LD_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_LD_ID]; } if (buttonsT
      +                          imers[BUTTON_LD_ID] >= 10 && !prevButtons.LD) { buttonsTimers[BUTTON_LD_ID] = 10; outBut
      +                          ton
  3087  00086A  0E09               	movlw	9
  3088  00086C  640C               	cpfsgt	_buttonsTimers+11,c
  3089  00086E  D007               	goto	l3705
  3090  000870  B41A               	btfsc	_prevButtons,2,c
  3091  000872  D005               	goto	l3705
  3092  000874  0E0A               	movlw	10
  3093  000876  6E0C               	movwf	_buttonsTimers+11,c
  3094  000878  0101               	movlb	1	; () banked
  3095  00087A  5156               	movf	(_buttonsMapByte0+11)& (0+255),w,b
  3096  00087C  1216               	iorwf	_outButtons,f,c
  3097  00087E                     l3705:
  3098  00087E  0E09               	movlw	9
  3099  000880  640C               	cpfsgt	_buttonsTimers+11,c
  3100  000882  D007               	goto	l3713
  3101  000884  B41A               	btfsc	_prevButtons,2,c
  3102  000886  D005               	goto	l3713
  3103  000888  0E0A               	movlw	10
  3104  00088A  6E0C               	movwf	_buttonsTimers+11,c
  3105  00088C  0101               	movlb	1	; () banked
  3106  00088E  5147               	movf	(_buttonsMapByte1+11)& (0+255),w,b
  3107  000890  1217               	iorwf	_outButtons+1,f,c
  3108  000892                     l3713:
  3109                           
  3110                           ;buttons.c: 149: if (buttonsTimers[BUTTON_Z2_ID] >= 10 && !prevButtons.Z2) { buttonsTime
      +                          rs[BUTTON_Z2_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_Z2_ID]; } if (buttonsT
      +                          imers[BUTTON_Z2_ID] >= 10 && !prevButtons.Z2) { buttonsTimers[BUTTON_Z2_ID] = 10; outBut
      +                          ton
  3111  000892  0E09               	movlw	9
  3112  000894  640F               	cpfsgt	_buttonsTimers+14,c
  3113  000896  D007               	goto	l3721
  3114  000898  BA1B               	btfsc	_prevButtons+1,5,c
  3115  00089A  D005               	goto	l3721
  3116  00089C  0E0A               	movlw	10
  3117  00089E  6E0F               	movwf	_buttonsTimers+14,c
  3118  0008A0  0101               	movlb	1	; () banked
  3119  0008A2  5159               	movf	(_buttonsMapByte0+14)& (0+255),w,b
  3120  0008A4  1216               	iorwf	_outButtons,f,c
  3121  0008A6                     l3721:
  3122  0008A6  0E09               	movlw	9
  3123  0008A8  640F               	cpfsgt	_buttonsTimers+14,c
  3124  0008AA  D007               	goto	l3729
  3125  0008AC  BA1B               	btfsc	_prevButtons+1,5,c
  3126  0008AE  D005               	goto	l3729
  3127  0008B0  0E0A               	movlw	10
  3128  0008B2  6E0F               	movwf	_buttonsTimers+14,c
  3129  0008B4  0101               	movlb	1	; () banked
  3130  0008B6  514A               	movf	(_buttonsMapByte1+14)& (0+255),w,b
  3131  0008B8  1217               	iorwf	_outButtons+1,f,c
  3132  0008BA                     l3729:
  3133                           
  3134                           ;buttons.c: 151: if (buttonsTimers[BUTTON_LA_ID] >= 10) {
  3135  0008BA  0E09               	movlw	9
  3136  0008BC  640D               	cpfsgt	_buttonsTimers+12,c
  3137  0008BE  D008               	goto	l3737
  3138                           
  3139                           ;buttons.c: 152: buttonsTimers[BUTTON_LA_ID] = 10;
  3140  0008C0  0E0A               	movlw	10
  3141  0008C2  6E0D               	movwf	_buttonsTimers+12,c
  3142                           
  3143                           ;buttons.c: 153: if (prevButtons.LA) {
  3144  0008C4  A01C               	btfss	_prevButtons+2,0,c
  3145  0008C6  D003               	goto	l516
  3146                           
  3147                           ;buttons.c: 154: outButtons.LA = 0;
  3148  0008C8  0E00               	movlw	0
  3149  0008CA  6E18               	movwf	_outButtons+2,c
  3150                           
  3151                           ;buttons.c: 155: } else {
  3152  0008CC  D001               	goto	l3737
  3153  0008CE                     l516:
  3154                           
  3155                           ;buttons.c: 156: outButtons.LA = 0xFF;
  3156  0008CE  6818               	setf	_outButtons+2,c
  3157  0008D0                     l3737:
  3158                           
  3159                           ;buttons.c: 157: };buttons.c: 158: };buttons.c: 159: if (buttonsTimers[BUTTON_RA_ID] >= 
      +                          10) {
  3160  0008D0  0E09               	movlw	9
  3161  0008D2  640E               	cpfsgt	_buttonsTimers+13,c
  3162  0008D4  0012               	return	
  3163                           
  3164                           ;buttons.c: 160: buttonsTimers[BUTTON_RA_ID] = 10;
  3165  0008D6  0E0A               	movlw	10
  3166  0008D8  6E0E               	movwf	_buttonsTimers+13,c
  3167                           
  3168                           ;buttons.c: 161: if (prevButtons.RA) {
  3169  0008DA  AA1C               	btfss	_prevButtons+2,5,c
  3170  0008DC  D003               	goto	l519
  3171                           
  3172                           ;buttons.c: 162: outButtons.RA = 0;
  3173  0008DE  0E00               	movlw	0
  3174  0008E0  6E19               	movwf	_outButtons+3,c
  3175                           
  3176                           ;buttons.c: 163: } else {
  3177  0008E2  0012               	return	
  3178  0008E4                     l519:
  3179                           
  3180                           ;buttons.c: 164: outButtons.RA = 0xFF;
  3181  0008E4  6819               	setf	_outButtons+3,c
  3182  0008E6  0012               	return		;funcret
  3183  0008E8                     __end_of_buttonsUpdate:
  3184                           	opt callstack 0
  3185                           
  3186 ;; *************** function _buttonsSetOrigins *****************
  3187 ;; Defined at:
  3188 ;;		line 231 in file "buttons.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;  triggersMode    1    wreg     unsigned char 
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;  triggersMode    1    0[COMRAM] unsigned char 
  3193 ;; Return value:  Size  Location     Type
  3194 ;;                  1    wreg      void 
  3195 ;; Registers used:
  3196 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3202 ;;      Params:         0       0       0       0       0       0       0       0       0
  3203 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3204 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3205 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3206 ;;Total ram usage:        1 bytes
  3207 ;; Hardware stack levels used:    1
  3208 ;; Hardware stack levels required when called:    2
  3209 ;; This function calls:
  3210 ;;		Nothing
  3211 ;; This function is called by:
  3212 ;;		_main
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           
  3216                           	psect	text8
  3217  001412                     __ptext8:
  3218                           	opt callstack 0
  3219  001412                     _buttonsSetOrigins:
  3220                           	opt callstack 28
  3221                           
  3222                           ;incstack = 0
  3223                           ;buttonsSetOrigins@triggersMode stored from wreg
  3224  001412  6E2A               	movwf	buttonsSetOrigins@triggersMode,c
  3225                           
  3226                           ;buttons.c: 232: origins.SX = LUT_SX[ADCValues[0]];
  3227  001414  0E00               	movlw	low _LUT_SX
  3228  001416  244F               	addwf	_ADCValues,w,c
  3229  001418  6ED9               	movwf	fsr2l,c
  3230  00141A  6ADA               	clrf	fsr2h,c
  3231  00141C  0E04               	movlw	high _LUT_SX
  3232  00141E  22DA               	addwfc	fsr2h,f,c
  3233  001420  50DF               	movf	indf2,w,c
  3234  001422  6E10               	movwf	_origins,c
  3235                           
  3236                           ;buttons.c: 233: origins.SY = LUT_SY[ADCValues[1]];
  3237  001424  0E00               	movlw	low _LUT_SY
  3238  001426  2450               	addwf	_ADCValues+1,w,c
  3239  001428  6ED9               	movwf	fsr2l,c
  3240  00142A  6ADA               	clrf	fsr2h,c
  3241  00142C  0E05               	movlw	high _LUT_SY
  3242  00142E  22DA               	addwfc	fsr2h,f,c
  3243  001430  50DF               	movf	indf2,w,c
  3244  001432  6E11               	movwf	_origins+1,c
  3245                           
  3246                           ;buttons.c: 234: origins.CX = LUT_CX[ADCValues[2]];
  3247  001434  0E00               	movlw	low _LUT_CX
  3248  001436  2451               	addwf	_ADCValues+2,w,c
  3249  001438  6ED9               	movwf	fsr2l,c
  3250  00143A  6ADA               	clrf	fsr2h,c
  3251  00143C  0E02               	movlw	high _LUT_CX
  3252  00143E  22DA               	addwfc	fsr2h,f,c
  3253  001440  50DF               	movf	indf2,w,c
  3254  001442  6E12               	movwf	_origins+2,c
  3255                           
  3256                           ;buttons.c: 235: origins.CY = LUT_CY[ADCValues[3]];
  3257  001444  0E00               	movlw	low _LUT_CY
  3258  001446  2452               	addwf	_ADCValues+3,w,c
  3259  001448  6ED9               	movwf	fsr2l,c
  3260  00144A  6ADA               	clrf	fsr2h,c
  3261  00144C  0E03               	movlw	high _LUT_CY
  3262  00144E  22DA               	addwfc	fsr2h,f,c
  3263  001450  50DF               	movf	indf2,w,c
  3264  001452  6E13               	movwf	_origins+3,c
  3265                           
  3266                           ;buttons.c: 236: if (triggersMode == 0) {
  3267  001454  502A               	movf	buttonsSetOrigins@triggersMode,w,c
  3268  001456  A4D8               	btfss	status,2,c
  3269  001458  D007               	goto	l536
  3270                           
  3271                           ;buttons.c: 237: origins.L = outButtons.LA;
  3272  00145A  0060  F060  F014   	movff	_outButtons+2,_origins+4
  3273                           
  3274                           ;buttons.c: 238: origins.R = outButtons.RA;
  3275  001460  0060  F064  F015   	movff	_outButtons+3,_origins+5
  3276                           
  3277                           ;buttons.c: 239: } else {
  3278  001466  0012               	return	
  3279  001468                     l536:
  3280                           
  3281                           ;buttons.c: 240: origins.L = ADCValues[5];
  3282  001468  0060  F150  F014   	movff	_ADCValues+5,_origins+4
  3283                           
  3284                           ;buttons.c: 241: origins.R = ADCValues[4];
  3285  00146E  0060  F14C  F015   	movff	_ADCValues+4,_origins+5
  3286  001474  0012               	return		;funcret
  3287  001476                     __end_of_buttonsSetOrigins:
  3288                           	opt callstack 0
  3289                           
  3290 ;; *************** function _buttonsSetMapByte1 *****************
  3291 ;; Defined at:
  3292 ;;		line 268 in file "buttons.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;  map             2    0[COMRAM] PTR unsigned char 
  3295 ;;		 -> main@cmd(36), 
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;  i               1    2[COMRAM] unsigned char 
  3298 ;; Return value:  Size  Location     Type
  3299 ;;                  1    wreg      void 
  3300 ;; Registers used:
  3301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/0
  3304 ;;		On exit  : 0/0
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3307 ;;      Params:         2       0       0       0       0       0       0       0       0
  3308 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3309 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3310 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3311 ;;Total ram usage:        3 bytes
  3312 ;; Hardware stack levels used:    1
  3313 ;; Hardware stack levels required when called:    2
  3314 ;; This function calls:
  3315 ;;		Nothing
  3316 ;; This function is called by:
  3317 ;;		_main
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321                           	psect	text9
  3322  0016DC                     __ptext9:
  3323                           	opt callstack 0
  3324  0016DC                     _buttonsSetMapByte1:
  3325                           	opt callstack 28
  3326                           
  3327                           ;buttons.c: 269: uint8_t i;;buttons.c: 271: for (i = 0; i < N_BUTTONS; i++) {
  3328                           
  3329                           ;incstack = 0
  3330  0016DC  0E00               	movlw	0
  3331  0016DE  6E2C               	movwf	buttonsSetMapByte1@i,c
  3332  0016E0                     l3883:
  3333                           
  3334                           ;buttons.c: 272: buttonsMapByte1[i] = map[i];
  3335  0016E0  502C               	movf	buttonsSetMapByte1@i,w,c
  3336  0016E2  242A               	addwf	buttonsSetMapByte1@map,w,c
  3337  0016E4  6ED9               	movwf	fsr2l,c
  3338  0016E6  0E00               	movlw	0
  3339  0016E8  202B               	addwfc	buttonsSetMapByte1@map+1,w,c
  3340  0016EA  6EDA               	movwf	fsr2h,c
  3341  0016EC  0E3C               	movlw	low _buttonsMapByte1
  3342  0016EE  242C               	addwf	buttonsSetMapByte1@i,w,c
  3343  0016F0  6EE1               	movwf	fsr1l,c
  3344  0016F2  6AE2               	clrf	fsr1h,c
  3345  0016F4  0E01               	movlw	high _buttonsMapByte1
  3346  0016F6  22E2               	addwfc	fsr1h,f,c
  3347  0016F8  006F FF7F FFE7     	movff	indf2,indf1
  3348  0016FE  2A2C               	incf	buttonsSetMapByte1@i,f,c
  3349  001700  0E0E               	movlw	14
  3350  001702  642C               	cpfsgt	buttonsSetMapByte1@i,c
  3351  001704  D7ED               	goto	l3883
  3352  001706  0012               	return	
  3353  001708                     __end_of_buttonsSetMapByte1:
  3354                           	opt callstack 0
  3355                           
  3356 ;; *************** function _buttonsSetMapByte0 *****************
  3357 ;; Defined at:
  3358 ;;		line 260 in file "buttons.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;  map             2    0[COMRAM] PTR unsigned char 
  3361 ;;		 -> main@cmd(36), 
  3362 ;; Auto vars:     Size  Location     Type
  3363 ;;  i               1    2[COMRAM] unsigned char 
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  1    wreg      void 
  3366 ;; Registers used:
  3367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3373 ;;      Params:         2       0       0       0       0       0       0       0       0
  3374 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3375 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3376 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3377 ;;Total ram usage:        3 bytes
  3378 ;; Hardware stack levels used:    1
  3379 ;; Hardware stack levels required when called:    2
  3380 ;; This function calls:
  3381 ;;		Nothing
  3382 ;; This function is called by:
  3383 ;;		_main
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387                           	psect	text10
  3388  001708                     __ptext10:
  3389                           	opt callstack 0
  3390  001708                     _buttonsSetMapByte0:
  3391                           	opt callstack 28
  3392                           
  3393                           ;buttons.c: 261: uint8_t i;;buttons.c: 263: for (i = 0; i < N_BUTTONS; i++) {
  3394                           
  3395                           ;incstack = 0
  3396  001708  0E00               	movlw	0
  3397  00170A  6E2C               	movwf	buttonsSetMapByte0@i,c
  3398  00170C                     l3871:
  3399                           
  3400                           ;buttons.c: 264: buttonsMapByte0[i] = map[i];
  3401  00170C  502C               	movf	buttonsSetMapByte0@i,w,c
  3402  00170E  242A               	addwf	buttonsSetMapByte0@map,w,c
  3403  001710  6ED9               	movwf	fsr2l,c
  3404  001712  0E00               	movlw	0
  3405  001714  202B               	addwfc	buttonsSetMapByte0@map+1,w,c
  3406  001716  6EDA               	movwf	fsr2h,c
  3407  001718  0E4B               	movlw	low _buttonsMapByte0
  3408  00171A  242C               	addwf	buttonsSetMapByte0@i,w,c
  3409  00171C  6EE1               	movwf	fsr1l,c
  3410  00171E  6AE2               	clrf	fsr1h,c
  3411  001720  0E01               	movlw	high _buttonsMapByte0
  3412  001722  22E2               	addwfc	fsr1h,f,c
  3413  001724  006F FF7F FFE7     	movff	indf2,indf1
  3414  00172A  2A2C               	incf	buttonsSetMapByte0@i,f,c
  3415  00172C  0E0E               	movlw	14
  3416  00172E  642C               	cpfsgt	buttonsSetMapByte0@i,c
  3417  001730  D7ED               	goto	l3871
  3418  001732  0012               	return	
  3419  001734                     __end_of_buttonsSetMapByte0:
  3420                           	opt callstack 0
  3421                           
  3422 ;; *************** function _buttonsInit *****************
  3423 ;; Defined at:
  3424 ;;		line 65 in file "buttons.c"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;		None
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;		None
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  1    wreg      void 
  3431 ;; Registers used:
  3432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3433 ;; Tracked objects:
  3434 ;;		On entry : 0/0
  3435 ;;		On exit  : 0/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3438 ;;      Params:         0       0       0       0       0       0       0       0       0
  3439 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3440 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3441 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3442 ;;Total ram usage:        0 bytes
  3443 ;; Hardware stack levels used:    1
  3444 ;; Hardware stack levels required when called:    3
  3445 ;; This function calls:
  3446 ;;		_memset
  3447 ;; This function is called by:
  3448 ;;		_main
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           	psect	text11
  3453  0011D6                     __ptext11:
  3454                           	opt callstack 0
  3455  0011D6                     _buttonsInit:
  3456                           	opt callstack 27
  3457                           
  3458                           ;buttons.c: 67: T0CON0 = 0x00;
  3459                           
  3460                           ;incstack = 0
  3461  0011D6  0E00               	movlw	0
  3462  0011D8  6EB8               	movwf	16312,c	;volatile
  3463                           
  3464                           ;buttons.c: 68: T0CON1 = 0x47;
  3465  0011DA  0E47               	movlw	71
  3466  0011DC  6EB9               	movwf	16313,c	;volatile
  3467                           
  3468                           ;buttons.c: 69: TMR0H = 124;
  3469  0011DE  0E7C               	movlw	124
  3470  0011E0  6EB7               	movwf	16311,c	;volatile
  3471                           
  3472                           ;buttons.c: 70: TMR0IF = 0;
  3473  0011E2  0139               	movlb	57	; () banked
  3474  0011E4  9FA3               	bcf	163,7,b	;volatile
  3475                           
  3476                           ;buttons.c: 71: T0CON0 = 0x80;
  3477  0011E6  0E80               	movlw	128
  3478  0011E8  6EB8               	movwf	16312,c	;volatile
  3479                           
  3480                           ; BSR set to: 57
  3481                           ;buttons.c: 74: memset(buttonsMapByte0, 0, N_BUTTONS);
  3482  0011EA  0E4B               	movlw	low _buttonsMapByte0
  3483  0011EC  6E2A               	movwf	memset@p1,c
  3484  0011EE  0E01               	movlw	high _buttonsMapByte0
  3485  0011F0  6E2B               	movwf	memset@p1+1,c
  3486  0011F2  0E00               	movlw	0
  3487  0011F4  6E2D               	movwf	memset@c+1,c
  3488  0011F6  0E00               	movlw	0
  3489  0011F8  6E2C               	movwf	memset@c,c
  3490  0011FA  0E00               	movlw	0
  3491  0011FC  6E2F               	movwf	memset@n+1,c
  3492  0011FE  0E0F               	movlw	15
  3493  001200  6E2E               	movwf	memset@n,c
  3494  001202  ECF2  F00A         	call	_memset	;wreg free
  3495                           
  3496                           ;buttons.c: 75: memset(buttonsMapByte1, 0, N_BUTTONS);
  3497  001206  0E3C               	movlw	low _buttonsMapByte1
  3498  001208  6E2A               	movwf	memset@p1,c
  3499  00120A  0E01               	movlw	high _buttonsMapByte1
  3500  00120C  6E2B               	movwf	memset@p1+1,c
  3501  00120E  0E00               	movlw	0
  3502  001210  6E2D               	movwf	memset@c+1,c
  3503  001212  0E00               	movlw	0
  3504  001214  6E2C               	movwf	memset@c,c
  3505  001216  0E00               	movlw	0
  3506  001218  6E2F               	movwf	memset@n+1,c
  3507  00121A  0E0F               	movlw	15
  3508  00121C  6E2E               	movwf	memset@n,c
  3509  00121E  ECF2  F00A         	call	_memset	;wreg free
  3510                           
  3511                           ;buttons.c: 77: buttonsMapByte0[BUTTON_A_ID] = 0x01;
  3512  001222  0E01               	movlw	1
  3513  001224  0101               	movlb	1	; () banked
  3514  001226  6F4B               	movwf	_buttonsMapByte0& (0+255),b
  3515                           
  3516                           ;buttons.c: 78: buttonsMapByte0[BUTTON_B_ID] = 0x02;
  3517  001228  0E02               	movlw	2
  3518  00122A  6F4C               	movwf	(_buttonsMapByte0+1)& (0+255),b
  3519                           
  3520                           ;buttons.c: 79: buttonsMapByte0[BUTTON_X_ID] = 0x04;
  3521  00122C  0E04               	movlw	4
  3522  00122E  6F4D               	movwf	(_buttonsMapByte0+2)& (0+255),b
  3523                           
  3524                           ;buttons.c: 80: buttonsMapByte0[BUTTON_Y_ID] = 0x08;
  3525  001230  0E08               	movlw	8
  3526  001232  6F4E               	movwf	(_buttonsMapByte0+3)& (0+255),b
  3527                           
  3528                           ;buttons.c: 81: buttonsMapByte0[BUTTON_ST_ID] = 0x10;
  3529  001234  0E10               	movlw	16
  3530  001236  6F4F               	movwf	(_buttonsMapByte0+4)& (0+255),b
  3531                           
  3532                           ;buttons.c: 83: buttonsMapByte1[BUTTON_DL_ID] = 0x01;
  3533  001238  0E01               	movlw	1
  3534  00123A  6F41               	movwf	(_buttonsMapByte1+5)& (0+255),b
  3535                           
  3536                           ;buttons.c: 84: buttonsMapByte1[BUTTON_DR_ID] = 0x02;
  3537  00123C  0E02               	movlw	2
  3538  00123E  6F42               	movwf	(_buttonsMapByte1+6)& (0+255),b
  3539                           
  3540                           ;buttons.c: 85: buttonsMapByte1[BUTTON_DD_ID] = 0x04;
  3541  001240  0E04               	movlw	4
  3542  001242  6F43               	movwf	(_buttonsMapByte1+7)& (0+255),b
  3543                           
  3544                           ;buttons.c: 86: buttonsMapByte1[BUTTON_DU_ID] = 0x08;
  3545  001244  0E08               	movlw	8
  3546  001246  6F44               	movwf	(_buttonsMapByte1+8)& (0+255),b
  3547                           
  3548                           ;buttons.c: 87: buttonsMapByte1[BUTTON_Z_ID] = 0x10;
  3549  001248  0E10               	movlw	16
  3550  00124A  6F45               	movwf	(_buttonsMapByte1+9)& (0+255),b
  3551                           
  3552                           ;buttons.c: 88: buttonsMapByte1[BUTTON_RD_ID] = 0x20;
  3553  00124C  0E20               	movlw	32
  3554  00124E  6F46               	movwf	(_buttonsMapByte1+10)& (0+255),b
  3555                           
  3556                           ;buttons.c: 89: buttonsMapByte1[BUTTON_LD_ID] = 0x40;
  3557  001250  0E40               	movlw	64
  3558  001252  6F47               	movwf	(_buttonsMapByte1+11)& (0+255),b
  3559                           
  3560                           ; BSR set to: 1
  3561  001254  0012               	return		;funcret
  3562  001256                     __end_of_buttonsInit:
  3563                           	opt callstack 0
  3564                           
  3565 ;; *************** function _memset *****************
  3566 ;; Defined at:
  3567 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memset.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;  p1              2    0[COMRAM] PTR void 
  3570 ;;		 -> buttonsMapByte1(15), buttonsMapByte0(15), config(24), 
  3571 ;;  c               2    2[COMRAM] int 
  3572 ;;  n               2    4[COMRAM] unsigned int 
  3573 ;; Auto vars:     Size  Location     Type
  3574 ;;  p               2    6[COMRAM] PTR unsigned char 
  3575 ;;		 -> buttonsMapByte1(15), buttonsMapByte0(15), config(24), 
  3576 ;; Return value:  Size  Location     Type
  3577 ;;                  2    0[COMRAM] PTR void 
  3578 ;; Registers used:
  3579 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3580 ;; Tracked objects:
  3581 ;;		On entry : 0/0
  3582 ;;		On exit  : 0/0
  3583 ;;		Unchanged: 0/0
  3584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3585 ;;      Params:         6       0       0       0       0       0       0       0       0
  3586 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3587 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3588 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3589 ;;Total ram usage:        8 bytes
  3590 ;; Hardware stack levels used:    1
  3591 ;; Hardware stack levels required when called:    2
  3592 ;; This function calls:
  3593 ;;		Nothing
  3594 ;; This function is called by:
  3595 ;;		_configSetDefault
  3596 ;;		_buttonsInit
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           	psect	text12
  3601  0015E4                     __ptext12:
  3602                           	opt callstack 0
  3603  0015E4                     _memset:
  3604                           	opt callstack 27
  3605                           
  3606                           ; BSR set to: 1
  3607                           ;incstack = 0
  3608  0015E4  0060  F0A8  F030   	movff	memset@p1,memset@p
  3609  0015EA  0060  F0AC  F031   	movff	memset@p1+1,memset@p+1
  3610  0015F0  D00B               	goto	l3021
  3611  0015F2                     l3017:
  3612  0015F2  0060  F0C3  FFD9   	movff	memset@p,fsr2l
  3613  0015F8  0060  F0C7  FFDA   	movff	memset@p+1,fsr2h
  3614  0015FE  0060  F0B3  FFDF   	movff	memset@c,indf2
  3615  001604  4A30               	infsnz	memset@p,f,c
  3616  001606  2A31               	incf	memset@p+1,f,c
  3617  001608                     l3021:
  3618  001608  062E               	decf	memset@n,f,c
  3619  00160A  A0D8               	btfss	status,0,c
  3620  00160C  062F               	decf	memset@n+1,f,c
  3621  00160E  282E               	incf	memset@n,w,c
  3622  001610  E1F0               	bnz	l3017
  3623  001612  282F               	incf	memset@n+1,w,c
  3624  001614  B4D8               	btfsc	status,2,c
  3625  001616  0012               	return	
  3626  001618  D7EC               	goto	l3017
  3627  00161A                     __end_of_memset:
  3628                           	opt callstack 0
  3629                           
  3630 ;; *************** function _buttonsGetOrigins *****************
  3631 ;; Defined at:
  3632 ;;		line 245 in file "buttons.c"
  3633 ;; Parameters:    Size  Location     Type
  3634 ;;		None
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;		None
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  2    0[COMRAM] PTR unsigned char 
  3639 ;; Registers used:
  3640 ;;		wreg, status,2, status,0
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3646 ;;      Params:         2       0       0       0       0       0       0       0       0
  3647 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3648 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3649 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3650 ;;Total ram usage:        2 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; Hardware stack levels required when called:    2
  3653 ;; This function calls:
  3654 ;;		Nothing
  3655 ;; This function is called by:
  3656 ;;		_main
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           	psect	text13
  3661  00156A                     __ptext13:
  3662                           	opt callstack 0
  3663  00156A                     _buttonsGetOrigins:
  3664                           	opt callstack 28
  3665                           
  3666                           ;buttons.c: 246: buttonsMessage[0] = 0x00;
  3667                           
  3668                           ;incstack = 0
  3669  00156A  0E00               	movlw	0
  3670  00156C  6E22               	movwf	_buttonsMessage,c
  3671                           
  3672                           ;buttons.c: 247: buttonsMessage[1] = 0x00;
  3673  00156E  0E00               	movlw	0
  3674  001570  6E23               	movwf	_buttonsMessage+1,c
  3675                           
  3676                           ;buttons.c: 248: buttonsMessage[2] = origins.SX;
  3677  001572  0060  F040  F024   	movff	_origins,_buttonsMessage+2
  3678                           
  3679                           ;buttons.c: 249: buttonsMessage[3] = origins.SY;
  3680  001578  0060  F044  F025   	movff	_origins+1,_buttonsMessage+3
  3681                           
  3682                           ;buttons.c: 250: buttonsMessage[4] = origins.CX;
  3683  00157E  0060  F048  F026   	movff	_origins+2,_buttonsMessage+4
  3684                           
  3685                           ;buttons.c: 251: buttonsMessage[5] = origins.CY;
  3686  001584  0060  F04C  F027   	movff	_origins+3,_buttonsMessage+5
  3687                           
  3688                           ;buttons.c: 252: buttonsMessage[6] = origins.L;
  3689  00158A  0060  F050  F028   	movff	_origins+4,_buttonsMessage+6
  3690                           
  3691                           ;buttons.c: 253: buttonsMessage[7] = origins.R;
  3692  001590  0060  F054  F029   	movff	_origins+5,_buttonsMessage+7
  3693                           
  3694                           ;buttons.c: 254: buttonsMessage[8] = 0x02;
  3695  001596  0E02               	movlw	2
  3696  001598  6E2A               	movwf	_buttonsMessage+8,c
  3697                           
  3698                           ;buttons.c: 255: buttonsMessage[9] = 0x02;
  3699  00159A  0E02               	movlw	2
  3700  00159C  6E2B               	movwf	_buttonsMessage+9,c
  3701                           
  3702                           ;buttons.c: 257: return buttonsMessage;
  3703  00159E  0E22               	movlw	low _buttonsMessage
  3704  0015A0  6E2A               	movwf	?_buttonsGetOrigins,c
  3705  0015A2  0E00               	movlw	high _buttonsMessage
  3706  0015A4  6E2B               	movwf	?_buttonsGetOrigins+1,c
  3707  0015A6  0012               	return		;funcret
  3708  0015A8                     __end_of_buttonsGetOrigins:
  3709                           	opt callstack 0
  3710                           
  3711 ;; *************** function _buttonsGetMessage *****************
  3712 ;; Defined at:
  3713 ;;		line 169 in file "buttons.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;  analogMode      1    wreg     unsigned char 
  3716 ;;  triggersMode    1    0[COMRAM] unsigned char 
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;  analogMode      1    3[COMRAM] unsigned char 
  3719 ;;  la              1    0        unsigned char 
  3720 ;;  ra              1    0        unsigned char 
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  2    0[COMRAM] PTR unsigned char 
  3723 ;; Registers used:
  3724 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3730 ;;      Params:         2       0       0       0       0       0       0       0       0
  3731 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3732 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3733 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3734 ;;Total ram usage:        6 bytes
  3735 ;; Hardware stack levels used:    1
  3736 ;; Hardware stack levels required when called:    2
  3737 ;; This function calls:
  3738 ;;		Nothing
  3739 ;; This function is called by:
  3740 ;;		_main
  3741 ;; This function uses a non-reentrant model
  3742 ;;
  3743                           
  3744                           	psect	text14
  3745  000EDE                     __ptext14:
  3746                           	opt callstack 0
  3747  000EDE                     _buttonsGetMessage:
  3748                           	opt callstack 28
  3749                           
  3750                           ;incstack = 0
  3751                           ;buttonsGetMessage@analogMode stored from wreg
  3752  000EDE  6E2D               	movwf	buttonsGetMessage@analogMode,c
  3753                           
  3754                           ;buttons.c: 170: buttonsMessage[0] = outButtons.byte0;
  3755  000EE0  0060  F058  F022   	movff	_outButtons,_buttonsMessage
  3756                           
  3757                           ;buttons.c: 171: buttonsMessage[1] = outButtons.byte1;
  3758  000EE6  0060  F05C  F023   	movff	_outButtons+1,_buttonsMessage+1
  3759                           
  3760                           ;buttons.c: 172: buttonsMessage[2] = LUT_SX[ADCValues[0]];
  3761  000EEC  0E00               	movlw	low _LUT_SX
  3762  000EEE  244F               	addwf	_ADCValues,w,c
  3763  000EF0  6ED9               	movwf	fsr2l,c
  3764  000EF2  6ADA               	clrf	fsr2h,c
  3765  000EF4  0E04               	movlw	high _LUT_SX
  3766  000EF6  22DA               	addwfc	fsr2h,f,c
  3767  000EF8  50DF               	movf	indf2,w,c
  3768  000EFA  6E24               	movwf	_buttonsMessage+2,c
  3769                           
  3770                           ;buttons.c: 173: buttonsMessage[3] = LUT_SY[ADCValues[1]];
  3771  000EFC  0E00               	movlw	low _LUT_SY
  3772  000EFE  2450               	addwf	_ADCValues+1,w,c
  3773  000F00  6ED9               	movwf	fsr2l,c
  3774  000F02  6ADA               	clrf	fsr2h,c
  3775  000F04  0E05               	movlw	high _LUT_SY
  3776  000F06  22DA               	addwfc	fsr2h,f,c
  3777  000F08  50DF               	movf	indf2,w,c
  3778  000F0A  6E25               	movwf	_buttonsMessage+3,c
  3779                           
  3780                           ;buttons.c: 187: switch (analogMode) {
  3781  000F0C  D02C               	goto	l3841
  3782  000F0E                     l526:
  3783                           
  3784                           ;buttons.c: 189: case 5:;buttons.c: 190: case 6:;buttons.c: 191: case 7:;buttons.c: 192:
      +                           buttonsMessage[4] = LUT_CX[ADCValues[2]];
  3785  000F0E  0E00               	movlw	low _LUT_CX
  3786  000F10  2451               	addwf	_ADCValues+2,w,c
  3787  000F12  6ED9               	movwf	fsr2l,c
  3788  000F14  6ADA               	clrf	fsr2h,c
  3789  000F16  0E02               	movlw	high _LUT_CX
  3790  000F18  22DA               	addwfc	fsr2h,f,c
  3791  000F1A  50DF               	movf	indf2,w,c
  3792  000F1C  6E26               	movwf	_buttonsMessage+4,c
  3793                           
  3794                           ;buttons.c: 193: buttonsMessage[5] = LUT_CY[ADCValues[3]];
  3795  000F1E  0E00               	movlw	low _LUT_CY
  3796  000F20  2452               	addwf	_ADCValues+3,w,c
  3797  000F22  6ED9               	movwf	fsr2l,c
  3798  000F24  6ADA               	clrf	fsr2h,c
  3799  000F26  0E03               	movlw	high _LUT_CY
  3800  000F28  22DA               	addwfc	fsr2h,f,c
  3801  000F2A  50DF               	movf	indf2,w,c
  3802  000F2C  6E27               	movwf	_buttonsMessage+5,c
  3803                           
  3804                           ;buttons.c: 195: buttonsMessage[6] = (uint8_t)((uint8_t)(la & 0xF0U) | (uint8_t)(ra >> 4
      +                          U));
  3805  000F2E  0E00               	movlw	0
  3806  000F30  6E28               	movwf	_buttonsMessage+6,c
  3807                           
  3808                           ;buttons.c: 196: buttonsMessage[7] = 0x00;
  3809  000F32  0E00               	movlw	0
  3810  000F34  6E29               	movwf	_buttonsMessage+7,c
  3811                           
  3812                           ;buttons.c: 197: break;
  3813  000F36  D030               	goto	l3843
  3814  000F38                     l3811:
  3815                           
  3816                           ;buttons.c: 200: buttonsMessage[4] = (uint8_t)((uint8_t)(LUT_CX[ADCValues[2]] & 0xF0U) |
      +                           (uint8_t)(LUT_CY[ADCValues[3]] >> 4U));
  3817  000F38  0E00               	movlw	low _LUT_CY
  3818  000F3A  2452               	addwf	_ADCValues+3,w,c
  3819  000F3C  6ED9               	movwf	fsr2l,c
  3820  000F3E  6ADA               	clrf	fsr2h,c
  3821  000F40  0E03               	movlw	high _LUT_CY
  3822  000F42  22DA               	addwfc	fsr2h,f,c
  3823  000F44  50DF               	movf	indf2,w,c
  3824  000F46  6E2C               	movwf	??_buttonsGetMessage& (0+255),c
  3825  000F48  3A2C               	swapf	??_buttonsGetMessage,f,c
  3826  000F4A  0E0F               	movlw	15
  3827  000F4C  162C               	andwf	??_buttonsGetMessage,f,c
  3828  000F4E  0E00               	movlw	low _LUT_CX
  3829  000F50  2451               	addwf	_ADCValues+2,w,c
  3830  000F52  6ED9               	movwf	fsr2l,c
  3831  000F54  6ADA               	clrf	fsr2h,c
  3832  000F56  0E02               	movlw	high _LUT_CX
  3833  000F58  22DA               	addwfc	fsr2h,f,c
  3834  000F5A  50DF               	movf	indf2,w,c
  3835  000F5C  0BF0               	andlw	240
  3836  000F5E  102C               	iorwf	??_buttonsGetMessage,w,c
  3837  000F60  6E26               	movwf	_buttonsMessage+4,c
  3838                           
  3839                           ;buttons.c: 201: buttonsMessage[5] = la;
  3840  000F62  0E00               	movlw	0
  3841  000F64  D7E3               	goto	L3
  3842  000F66                     l3841:
  3843  000F66  502D               	movf	buttonsGetMessage@analogMode,w,c
  3844                           
  3845                           ; Switch size 1, requested type "simple"
  3846                           ; Number of cases is 8, Range of values is 0 to 7
  3847                           ; switch strategies available:
  3848                           ; Name         Instructions Cycles
  3849                           ; simple_byte           25    13 (average)
  3850                           ;	Chosen strategy is simple_byte
  3851  000F68  0A00               	xorlw	0	; case 0
  3852  000F6A  B4D8               	btfsc	status,2,c
  3853  000F6C  D7D0               	goto	l526
  3854  000F6E  0A01               	xorlw	1	; case 1
  3855  000F70  B4D8               	btfsc	status,2,c
  3856  000F72  D7E2               	goto	l3811
  3857  000F74  0A03               	xorlw	3	; case 2
  3858  000F76  B4D8               	btfsc	status,2,c
  3859  000F78  D7DF               	goto	l3811
  3860  000F7A  0A01               	xorlw	1	; case 3
  3861  000F7C  B4D8               	btfsc	status,2,c
  3862  000F7E  D7C7               	goto	l526
  3863  000F80  0A07               	xorlw	7	; case 4
  3864  000F82  B4D8               	btfsc	status,2,c
  3865  000F84  D7C4               	goto	l526
  3866  000F86  0A01               	xorlw	1	; case 5
  3867  000F88  B4D8               	btfsc	status,2,c
  3868  000F8A  D7C1               	goto	l526
  3869  000F8C  0A03               	xorlw	3	; case 6
  3870  000F8E  B4D8               	btfsc	status,2,c
  3871  000F90  D7BE               	goto	l526
  3872  000F92  0A01               	xorlw	1	; case 7
  3873  000F94  B4D8               	btfsc	status,2,c
  3874  000F96  D7BB               	goto	l526
  3875  000F98                     l3843:
  3876                           
  3877                           ;buttons.c: 228: return buttonsMessage;
  3878  000F98  0E22               	movlw	low _buttonsMessage
  3879  000F9A  6E2A               	movwf	?_buttonsGetMessage,c
  3880  000F9C  0E00               	movlw	high _buttonsMessage
  3881  000F9E  6E2B               	movwf	?_buttonsGetMessage+1,c
  3882  000FA0  0012               	return		;funcret
  3883  000FA2                     __end_of_buttonsGetMessage:
  3884                           	opt callstack 0
  3885                           
  3886 ;; *************** function _buttonsGetMapByte1 *****************
  3887 ;; Defined at:
  3888 ;;		line 286 in file "buttons.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;		None
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;  i               1    2[COMRAM] unsigned char 
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  2    0[COMRAM] PTR unsigned char 
  3895 ;; Registers used:
  3896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3902 ;;      Params:         2       0       0       0       0       0       0       0       0
  3903 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3904 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3905 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3906 ;;Total ram usage:        3 bytes
  3907 ;; Hardware stack levels used:    1
  3908 ;; Hardware stack levels required when called:    2
  3909 ;; This function calls:
  3910 ;;		Nothing
  3911 ;; This function is called by:
  3912 ;;		_main
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916                           	psect	text15
  3917  00161A                     __ptext15:
  3918                           	opt callstack 0
  3919  00161A                     _buttonsGetMapByte1:
  3920                           	opt callstack 28
  3921                           
  3922                           ;buttons.c: 287: uint8_t i;;buttons.c: 289: for (i = 0; i < N_BUTTONS; i++) {
  3923                           
  3924                           ;incstack = 0
  3925  00161A  0E00               	movlw	0
  3926  00161C  6E2C               	movwf	buttonsGetMapByte1@i,c
  3927  00161E                     l3911:
  3928                           
  3929                           ;buttons.c: 290: buttonsMessage[i] = buttonsMapByte1[i];
  3930  00161E  0E3C               	movlw	low _buttonsMapByte1
  3931  001620  242C               	addwf	buttonsGetMapByte1@i,w,c
  3932  001622  6ED9               	movwf	fsr2l,c
  3933  001624  6ADA               	clrf	fsr2h,c
  3934  001626  0E01               	movlw	high _buttonsMapByte1
  3935  001628  22DA               	addwfc	fsr2h,f,c
  3936  00162A  0E22               	movlw	low _buttonsMessage
  3937  00162C  242C               	addwf	buttonsGetMapByte1@i,w,c
  3938  00162E  6EE1               	movwf	fsr1l,c
  3939  001630  6AE2               	clrf	fsr1h,c
  3940  001632  0E00               	movlw	high _buttonsMessage
  3941  001634  22E2               	addwfc	fsr1h,f,c
  3942  001636  006F FF7F FFE7     	movff	indf2,indf1
  3943  00163C  2A2C               	incf	buttonsGetMapByte1@i,f,c
  3944  00163E  0E0E               	movlw	14
  3945  001640  642C               	cpfsgt	buttonsGetMapByte1@i,c
  3946  001642  D7ED               	goto	l3911
  3947                           
  3948                           ;buttons.c: 291: };buttons.c: 293: return buttonsMessage;
  3949  001644  0E22               	movlw	low _buttonsMessage
  3950  001646  6E2A               	movwf	?_buttonsGetMapByte1,c
  3951  001648  0E00               	movlw	high _buttonsMessage
  3952  00164A  6E2B               	movwf	?_buttonsGetMapByte1+1,c
  3953  00164C  0012               	return		;funcret
  3954  00164E                     __end_of_buttonsGetMapByte1:
  3955                           	opt callstack 0
  3956                           
  3957 ;; *************** function _buttonsGetMapByte0 *****************
  3958 ;; Defined at:
  3959 ;;		line 276 in file "buttons.c"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;		None
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;  i               1    2[COMRAM] unsigned char 
  3964 ;; Return value:  Size  Location     Type
  3965 ;;                  2    0[COMRAM] PTR unsigned char 
  3966 ;; Registers used:
  3967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3968 ;; Tracked objects:
  3969 ;;		On entry : 0/0
  3970 ;;		On exit  : 0/0
  3971 ;;		Unchanged: 0/0
  3972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3973 ;;      Params:         2       0       0       0       0       0       0       0       0
  3974 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3975 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3976 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3977 ;;Total ram usage:        3 bytes
  3978 ;; Hardware stack levels used:    1
  3979 ;; Hardware stack levels required when called:    2
  3980 ;; This function calls:
  3981 ;;		Nothing
  3982 ;; This function is called by:
  3983 ;;		_main
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987                           	psect	text16
  3988  00164E                     __ptext16:
  3989                           	opt callstack 0
  3990  00164E                     _buttonsGetMapByte0:
  3991                           	opt callstack 28
  3992                           
  3993                           ;buttons.c: 277: uint8_t i;;buttons.c: 279: for (i = 0; i < N_BUTTONS; i++) {
  3994                           
  3995                           ;incstack = 0
  3996  00164E  0E00               	movlw	0
  3997  001650  6E2C               	movwf	buttonsGetMapByte0@i,c
  3998  001652                     l3895:
  3999                           
  4000                           ;buttons.c: 280: buttonsMessage[i] = buttonsMapByte0[i];
  4001  001652  0E4B               	movlw	low _buttonsMapByte0
  4002  001654  242C               	addwf	buttonsGetMapByte0@i,w,c
  4003  001656  6ED9               	movwf	fsr2l,c
  4004  001658  6ADA               	clrf	fsr2h,c
  4005  00165A  0E01               	movlw	high _buttonsMapByte0
  4006  00165C  22DA               	addwfc	fsr2h,f,c
  4007  00165E  0E22               	movlw	low _buttonsMessage
  4008  001660  242C               	addwf	buttonsGetMapByte0@i,w,c
  4009  001662  6EE1               	movwf	fsr1l,c
  4010  001664  6AE2               	clrf	fsr1h,c
  4011  001666  0E00               	movlw	high _buttonsMessage
  4012  001668  22E2               	addwfc	fsr1h,f,c
  4013  00166A  006F FF7F FFE7     	movff	indf2,indf1
  4014  001670  2A2C               	incf	buttonsGetMapByte0@i,f,c
  4015  001672  0E0E               	movlw	14
  4016  001674  642C               	cpfsgt	buttonsGetMapByte0@i,c
  4017  001676  D7ED               	goto	l3895
  4018                           
  4019                           ;buttons.c: 281: };buttons.c: 283: return buttonsMessage;
  4020  001678  0E22               	movlw	low _buttonsMessage
  4021  00167A  6E2A               	movwf	?_buttonsGetMapByte0,c
  4022  00167C  0E00               	movlw	high _buttonsMessage
  4023  00167E  6E2B               	movwf	?_buttonsGetMapByte0+1,c
  4024  001680  0012               	return		;funcret
  4025  001682                     __end_of_buttonsGetMapByte0:
  4026                           	opt callstack 0
  4027                           
  4028 ;; *************** function _buttonsBuildLUTs *****************
  4029 ;; Defined at:
  4030 ;;		line 323 in file "buttons.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;		None
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;		None
  4035 ;; Return value:  Size  Location     Type
  4036 ;;                  1    wreg      void 
  4037 ;; Registers used:
  4038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4044 ;;      Params:         0       0       0       0       0       0       0       0       0
  4045 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4046 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4047 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4048 ;;Total ram usage:        0 bytes
  4049 ;; Hardware stack levels used:    1
  4050 ;; Hardware stack levels required when called:    4
  4051 ;; This function calls:
  4052 ;;		_buttonsBuildLUT
  4053 ;; This function is called by:
  4054 ;;		_main
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058                           	psect	text17
  4059  000E0C                     __ptext17:
  4060                           	opt callstack 0
  4061  000E0C                     _buttonsBuildLUTs:
  4062                           	opt callstack 26
  4063                           
  4064                           ;buttons.c: 324: buttonsBuildLUT(LUT_SX, config.SXMin, config.SXMax, ADCValues[0], confi
      +                          g.SDeadzone, config.deadzoneMode, config.SXInvert);
  4065                           
  4066                           ;incstack = 0
  4067  000E0C  0E00               	movlw	low _LUT_SX
  4068  000E0E  6E38               	movwf	buttonsBuildLUT@LUT,c
  4069  000E10  0E04               	movlw	high _LUT_SX
  4070  000E12  6E39               	movwf	buttonsBuildLUT@LUT+1,c
  4071  000E14  0060  F4A8  F03A   	movff	_config+6,buttonsBuildLUT@minVal
  4072  000E1A  0060  F4AC  F03B   	movff	_config+7,buttonsBuildLUT@maxVal
  4073  000E20  0060  F13C  F03C   	movff	_ADCValues,buttonsBuildLUT@origin
  4074  000E26  0060  F4DC  F03D   	movff	_config+19,buttonsBuildLUT@dz
  4075  000E2C  0060  F4E4  F03E   	movff	_config+21,buttonsBuildLUT@dzMode
  4076  000E32  0101               	movlb	1	; () banked
  4077  000E34  0E00               	movlw	0
  4078  000E36  B136               	btfsc	(_config+18)& (0+255),0,b
  4079  000E38  0E01               	movlw	1
  4080  000E3A  6E3F               	movwf	buttonsBuildLUT@invert,c
  4081  000E3C  EC50  F005         	call	_buttonsBuildLUT	;wreg free
  4082                           
  4083                           ;buttons.c: 325: buttonsBuildLUT(LUT_SY, config.SYMin, config.SYMax, ADCValues[1], confi
      +                          g.SDeadzone, config.deadzoneMode, config.SYInvert);
  4084  000E40  0E00               	movlw	low _LUT_SY
  4085  000E42  6E38               	movwf	buttonsBuildLUT@LUT,c
  4086  000E44  0E05               	movlw	high _LUT_SY
  4087  000E46  6E39               	movwf	buttonsBuildLUT@LUT+1,c
  4088  000E48  0060  F4B0  F03A   	movff	_config+8,buttonsBuildLUT@minVal
  4089  000E4E  0060  F4B4  F03B   	movff	_config+9,buttonsBuildLUT@maxVal
  4090  000E54  0060  F140  F03C   	movff	_ADCValues+1,buttonsBuildLUT@origin
  4091  000E5A  0060  F4DC  F03D   	movff	_config+19,buttonsBuildLUT@dz
  4092  000E60  0060  F4E4  F03E   	movff	_config+21,buttonsBuildLUT@dzMode
  4093  000E66  0101               	movlb	1	; () banked
  4094  000E68  0E00               	movlw	0
  4095  000E6A  B336               	btfsc	(_config+18)& (0+255),1,b
  4096  000E6C  0E01               	movlw	1
  4097  000E6E  6E3F               	movwf	buttonsBuildLUT@invert,c
  4098  000E70  EC50  F005         	call	_buttonsBuildLUT	;wreg free
  4099                           
  4100                           ;buttons.c: 326: buttonsBuildLUT(LUT_CX, config.CXMin, config.CXMax, ADCValues[2], confi
      +                          g.CDeadzone, config.deadzoneMode, config.CXInvert);
  4101  000E74  0E00               	movlw	low _LUT_CX
  4102  000E76  6E38               	movwf	buttonsBuildLUT@LUT,c
  4103  000E78  0E02               	movlw	high _LUT_CX
  4104  000E7A  6E39               	movwf	buttonsBuildLUT@LUT+1,c
  4105  000E7C  0060  F4B8  F03A   	movff	_config+10,buttonsBuildLUT@minVal
  4106  000E82  0060  F4BC  F03B   	movff	_config+11,buttonsBuildLUT@maxVal
  4107  000E88  0060  F144  F03C   	movff	_ADCValues+2,buttonsBuildLUT@origin
  4108  000E8E  0060  F4E0  F03D   	movff	_config+20,buttonsBuildLUT@dz
  4109  000E94  0060  F4E4  F03E   	movff	_config+21,buttonsBuildLUT@dzMode
  4110  000E9A  0101               	movlb	1	; () banked
  4111  000E9C  0E00               	movlw	0
  4112  000E9E  B536               	btfsc	(_config+18)& (0+255),2,b
  4113  000EA0  0E01               	movlw	1
  4114  000EA2  6E3F               	movwf	buttonsBuildLUT@invert,c
  4115  000EA4  EC50  F005         	call	_buttonsBuildLUT	;wreg free
  4116                           
  4117                           ;buttons.c: 327: buttonsBuildLUT(LUT_CY, config.CYMin, config.CYMax, ADCValues[3], confi
      +                          g.CDeadzone, config.deadzoneMode, config.CYInvert);
  4118  000EA8  0E00               	movlw	low _LUT_CY
  4119  000EAA  6E38               	movwf	buttonsBuildLUT@LUT,c
  4120  000EAC  0E03               	movlw	high _LUT_CY
  4121  000EAE  6E39               	movwf	buttonsBuildLUT@LUT+1,c
  4122  000EB0  0060  F4C0  F03A   	movff	_config+12,buttonsBuildLUT@minVal
  4123  000EB6  0060  F4C4  F03B   	movff	_config+13,buttonsBuildLUT@maxVal
  4124  000EBC  0060  F148  F03C   	movff	_ADCValues+3,buttonsBuildLUT@origin
  4125  000EC2  0060  F4E0  F03D   	movff	_config+20,buttonsBuildLUT@dz
  4126  000EC8  0060  F4E4  F03E   	movff	_config+21,buttonsBuildLUT@dzMode
  4127  000ECE  0101               	movlb	1	; () banked
  4128  000ED0  0E00               	movlw	0
  4129  000ED2  B736               	btfsc	(_config+18)& (0+255),3,b
  4130  000ED4  0E01               	movlw	1
  4131  000ED6  6E3F               	movwf	buttonsBuildLUT@invert,c
  4132  000ED8  EC50  F005         	call	_buttonsBuildLUT	;wreg free
  4133  000EDC  0012               	return		;funcret
  4134  000EDE                     __end_of_buttonsBuildLUTs:
  4135                           	opt callstack 0
  4136                           
  4137 ;; *************** function _buttonsBuildLUT *****************
  4138 ;; Defined at:
  4139 ;;		line 296 in file "buttons.c"
  4140 ;; Parameters:    Size  Location     Type
  4141 ;;  LUT             2   14[COMRAM] PTR unsigned char 
  4142 ;;		 -> LUT_CY(256), LUT_CX(256), LUT_SY(256), LUT_SX(256), 
  4143 ;;  minVal          1   16[COMRAM] unsigned char 
  4144 ;;  maxVal          1   17[COMRAM] unsigned char 
  4145 ;;  origin          1   18[COMRAM] unsigned char 
  4146 ;;  dz              1   19[COMRAM] unsigned char 
  4147 ;;  dzMode          1   20[COMRAM] unsigned char 
  4148 ;;  invert          1   21[COMRAM] unsigned char 
  4149 ;; Auto vars:     Size  Location     Type
  4150 ;;  tempVal         2   29[COMRAM] int 
  4151 ;;  radius          2   33[COMRAM] int 
  4152 ;;  i               2   31[COMRAM] int 
  4153 ;;  range           2   27[COMRAM] int 
  4154 ;; Return value:  Size  Location     Type
  4155 ;;                  1    wreg      void 
  4156 ;; Registers used:
  4157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4158 ;; Tracked objects:
  4159 ;;		On entry : 0/0
  4160 ;;		On exit  : 0/0
  4161 ;;		Unchanged: 0/0
  4162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4163 ;;      Params:         8       0       0       0       0       0       0       0       0
  4164 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4165 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4166 ;;      Totals:        21       0       0       0       0       0       0       0       0
  4167 ;;Total ram usage:       21 bytes
  4168 ;; Hardware stack levels used:    1
  4169 ;; Hardware stack levels required when called:    3
  4170 ;; This function calls:
  4171 ;;		___awdiv
  4172 ;;		___wmul
  4173 ;; This function is called by:
  4174 ;;		_buttonsBuildLUTs
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           	psect	text18
  4179  000AA0                     __ptext18:
  4180                           	opt callstack 0
  4181  000AA0                     _buttonsBuildLUT:
  4182                           	opt callstack 26
  4183                           
  4184                           ;buttons.c: 297: int16_t i;;buttons.c: 298: int16_t range = ((int16_t)maxVal - (int16_t)
      +                          minVal) / 2;
  4185                           
  4186                           ;incstack = 0
  4187  000AA0  503A               	movf	buttonsBuildLUT@minVal,w,c
  4188  000AA2  5C3B               	subwf	buttonsBuildLUT@maxVal,w,c
  4189  000AA4  6E30               	movwf	___awdiv@dividend,c
  4190  000AA6  6A31               	clrf	___awdiv@dividend+1,c
  4191  000AA8  A0D8               	btfss	status,0,c
  4192  000AAA  0631               	decf	___awdiv@dividend+1,f,c
  4193  000AAC  0E00               	movlw	0
  4194  000AAE  6E33               	movwf	___awdiv@divisor+1,c
  4195  000AB0  0E02               	movlw	2
  4196  000AB2  6E32               	movwf	___awdiv@divisor,c
  4197  000AB4  EC66  F008         	call	___awdiv	;wreg free
  4198  000AB8  0060  F0C0  F045   	movff	?___awdiv,buttonsBuildLUT@range
  4199  000ABE  0060  F0C4  F046   	movff	?___awdiv+1,buttonsBuildLUT@range+1
  4200                           
  4201                           ;buttons.c: 300: for (i = 0; i < 256; i++) {
  4202  000AC4  0E00               	movlw	0
  4203  000AC6  6E4A               	movwf	buttonsBuildLUT@i+1,c
  4204  000AC8  0E00               	movlw	0
  4205  000ACA  6E49               	movwf	buttonsBuildLUT@i,c
  4206  000ACC                     l3171:
  4207                           
  4208                           ;buttons.c: 301: int16_t radius = i - origin;
  4209  000ACC  503C               	movf	buttonsBuildLUT@origin,w,c
  4210  000ACE  5C49               	subwf	buttonsBuildLUT@i,w,c
  4211  000AD0  6E4B               	movwf	buttonsBuildLUT@radius,c
  4212  000AD2  504A               	movf	buttonsBuildLUT@i+1,w,c
  4213  000AD4  A0D8               	btfss	status,0,c
  4214  000AD6  044A               	decf	buttonsBuildLUT@i+1,w,c
  4215  000AD8  6E4C               	movwf	buttonsBuildLUT@radius+1,c
  4216                           
  4217                           ;buttons.c: 302: if (invert) radius = -radius;
  4218  000ADA  503F               	movf	buttonsBuildLUT@invert,w,c
  4219  000ADC  B4D8               	btfsc	status,2,c
  4220  000ADE  D004               	goto	l3177
  4221  000AE0  6C4B               	negf	buttonsBuildLUT@radius,c
  4222  000AE2  1E4C               	comf	buttonsBuildLUT@radius+1,f,c
  4223  000AE4  B0D8               	btfsc	status,0,c
  4224  000AE6  2A4C               	incf	buttonsBuildLUT@radius+1,f,c
  4225  000AE8                     l3177:
  4226                           
  4227                           ;buttons.c: 303: if (((radius >= 0) ? (radius) : (-radius)) < (int16_t)dz) {
  4228  000AE8  AE4C               	btfss	buttonsBuildLUT@radius+1,7,c
  4229  000AEA  D011               	goto	l569
  4230  000AEC  0060  F12C  F040   	movff	buttonsBuildLUT@radius,??_buttonsBuildLUT
  4231  000AF2  0060  F130  F041   	movff	buttonsBuildLUT@radius+1,??_buttonsBuildLUT+1
  4232  000AF8  1E40               	comf	??_buttonsBuildLUT,f,c
  4233  000AFA  1E41               	comf	??_buttonsBuildLUT+1,f,c
  4234  000AFC  4A40               	infsnz	??_buttonsBuildLUT,f,c
  4235  000AFE  2A41               	incf	??_buttonsBuildLUT+1,f,c
  4236  000B00  0060  F100  F043   	movff	??_buttonsBuildLUT,_buttonsBuildLUT$1169
  4237  000B06  0060  F104  F044   	movff	??_buttonsBuildLUT+1,_buttonsBuildLUT$1169+1
  4238  000B0C  D006               	goto	l3181
  4239  000B0E                     l569:
  4240  000B0E  0060  F12C  F043   	movff	buttonsBuildLUT@radius,_buttonsBuildLUT$1169
  4241  000B14  0060  F130  F044   	movff	buttonsBuildLUT@radius+1,_buttonsBuildLUT$1169+1
  4242  000B1A                     l3181:
  4243  000B1A  503D               	movf	buttonsBuildLUT@dz,w,c
  4244  000B1C  6E40               	movwf	??_buttonsBuildLUT& (0+255),c
  4245  000B1E  6A41               	clrf	(??_buttonsBuildLUT+1)& (0+255),c
  4246  000B20  5040               	movf	??_buttonsBuildLUT,w,c
  4247  000B22  5C43               	subwf	_buttonsBuildLUT$1169,w,c
  4248  000B24  5044               	movf	_buttonsBuildLUT$1169+1,w,c
  4249  000B26  0A80               	xorlw	128
  4250  000B28  6E42               	movwf	(??_buttonsBuildLUT+2)& (0+255),c
  4251  000B2A  5041               	movf	??_buttonsBuildLUT+1,w,c
  4252  000B2C  0A80               	xorlw	128
  4253  000B2E  5842               	subwfb	(??_buttonsBuildLUT+2)& (0+255),w,c
  4254  000B30  B0D8               	btfsc	status,0,c
  4255  000B32  D009               	goto	l3185
  4256                           
  4257                           ;buttons.c: 304: LUT[i] = 0x80;
  4258  000B34  5049               	movf	buttonsBuildLUT@i,w,c
  4259  000B36  2438               	addwf	buttonsBuildLUT@LUT,w,c
  4260  000B38  6ED9               	movwf	fsr2l,c
  4261  000B3A  504A               	movf	buttonsBuildLUT@i+1,w,c
  4262  000B3C  2039               	addwfc	buttonsBuildLUT@LUT+1,w,c
  4263  000B3E  6EDA               	movwf	fsr2h,c
  4264  000B40  0E80               	movlw	128
  4265  000B42  6EDF               	movwf	indf2,c
  4266                           
  4267                           ;buttons.c: 305: } else {
  4268  000B44  D07E               	goto	l3207
  4269  000B46                     l3185:
  4270                           
  4271                           ;buttons.c: 306: int16_t tempVal;;buttons.c: 307: if (dzMode == 0) {
  4272  000B46  503E               	movf	buttonsBuildLUT@dzMode,w,c
  4273  000B48  A4D8               	btfss	status,2,c
  4274  000B4A  D01B               	goto	l3189
  4275                           
  4276                           ;buttons.c: 308: tempVal = radius * 127 / range;
  4277  000B4C  0060  F12C  F02A   	movff	buttonsBuildLUT@radius,___wmul@multiplier
  4278  000B52  0060  F130  F02B   	movff	buttonsBuildLUT@radius+1,___wmul@multiplier+1
  4279  000B58  0E00               	movlw	0
  4280  000B5A  6E2D               	movwf	___wmul@multiplicand+1,c
  4281  000B5C  0E7F               	movlw	127
  4282  000B5E  6E2C               	movwf	___wmul@multiplicand,c
  4283  000B60  EC41  F00B         	call	___wmul	;wreg free
  4284  000B64  0060  F0A8  F030   	movff	?___wmul,___awdiv@dividend
  4285  000B6A  0060  F0AC  F031   	movff	?___wmul+1,___awdiv@dividend+1
  4286  000B70  0060  F114  F032   	movff	buttonsBuildLUT@range,___awdiv@divisor
  4287  000B76  0060  F118  F033   	movff	buttonsBuildLUT@range+1,___awdiv@divisor+1
  4288  000B7C  EC66  F008         	call	___awdiv	;wreg free
  4289  000B80  D03F               	goto	L4
  4290  000B82                     l3189:
  4291                           
  4292                           ;buttons.c: 310: if (radius > 0)
  4293  000B82  BE4C               	btfsc	buttonsBuildLUT@radius+1,7,c
  4294  000B84  D022               	goto	l3193
  4295  000B86  504C               	movf	buttonsBuildLUT@radius+1,w,c
  4296  000B88  E103               	bnz	u2030
  4297  000B8A  044B               	decf	buttonsBuildLUT@radius,w,c
  4298  000B8C  A0D8               	btfss	status,0,c
  4299  000B8E  D01D               	goto	l3193
  4300  000B90                     u2030:
  4301                           
  4302                           ;buttons.c: 311: tempVal = (radius - dz) * 127 / (range - dz);
  4303  000B90  503D               	movf	buttonsBuildLUT@dz,w,c
  4304  000B92  5C4B               	subwf	buttonsBuildLUT@radius,w,c
  4305  000B94  6E2A               	movwf	___wmul@multiplier,c
  4306  000B96  504C               	movf	buttonsBuildLUT@radius+1,w,c
  4307  000B98  A0D8               	btfss	status,0,c
  4308  000B9A  044C               	decf	buttonsBuildLUT@radius+1,w,c
  4309  000B9C  6E2B               	movwf	___wmul@multiplier+1,c
  4310  000B9E  0E00               	movlw	0
  4311  000BA0  6E2D               	movwf	___wmul@multiplicand+1,c
  4312  000BA2  0E7F               	movlw	127
  4313  000BA4  6E2C               	movwf	___wmul@multiplicand,c
  4314  000BA6  EC41  F00B         	call	___wmul	;wreg free
  4315  000BAA  0060  F0A8  F030   	movff	?___wmul,___awdiv@dividend
  4316  000BB0  0060  F0AC  F031   	movff	?___wmul+1,___awdiv@dividend+1
  4317  000BB6  503D               	movf	buttonsBuildLUT@dz,w,c
  4318  000BB8  5C45               	subwf	buttonsBuildLUT@range,w,c
  4319  000BBA  6E32               	movwf	___awdiv@divisor,c
  4320  000BBC  5046               	movf	buttonsBuildLUT@range+1,w,c
  4321  000BBE  A0D8               	btfss	status,0,c
  4322  000BC0  0446               	decf	buttonsBuildLUT@range+1,w,c
  4323  000BC2  6E33               	movwf	___awdiv@divisor+1,c
  4324  000BC4  EC66  F008         	call	___awdiv	;wreg free
  4325  000BC8  D01B               	goto	L4
  4326  000BCA                     l3193:
  4327                           
  4328                           ;buttons.c: 312: else;buttons.c: 313: tempVal = (radius + dz) * 127 / (range - dz);
  4329  000BCA  503D               	movf	buttonsBuildLUT@dz,w,c
  4330  000BCC  244B               	addwf	buttonsBuildLUT@radius,w,c
  4331  000BCE  6E2A               	movwf	___wmul@multiplier,c
  4332  000BD0  0E00               	movlw	0
  4333  000BD2  204C               	addwfc	buttonsBuildLUT@radius+1,w,c
  4334  000BD4  6E2B               	movwf	___wmul@multiplier+1,c
  4335  000BD6  0E00               	movlw	0
  4336  000BD8  6E2D               	movwf	___wmul@multiplicand+1,c
  4337  000BDA  0E7F               	movlw	127
  4338  000BDC  6E2C               	movwf	___wmul@multiplicand,c
  4339  000BDE  EC41  F00B         	call	___wmul	;wreg free
  4340  000BE2  0060  F0A8  F030   	movff	?___wmul,___awdiv@dividend
  4341  000BE8  0060  F0AC  F031   	movff	?___wmul+1,___awdiv@dividend+1
  4342  000BEE  503D               	movf	buttonsBuildLUT@dz,w,c
  4343  000BF0  5C45               	subwf	buttonsBuildLUT@range,w,c
  4344  000BF2  6E32               	movwf	___awdiv@divisor,c
  4345  000BF4  5046               	movf	buttonsBuildLUT@range+1,w,c
  4346  000BF6  A0D8               	btfss	status,0,c
  4347  000BF8  0446               	decf	buttonsBuildLUT@range+1,w,c
  4348  000BFA  6E33               	movwf	___awdiv@divisor+1,c
  4349  000BFC  EC66  F008         	call	___awdiv	;wreg free
  4350  000C00                     L4:
  4351  000C00  0060  F0C0  F047   	movff	?___awdiv,buttonsBuildLUT@tempVal
  4352  000C06  0060  F0C4  F048   	movff	?___awdiv+1,buttonsBuildLUT@tempVal+1
  4353                           
  4354                           ;buttons.c: 314: };buttons.c: 315: tempVal += 128;
  4355  000C0C  0E80               	movlw	128
  4356  000C0E  2647               	addwf	buttonsBuildLUT@tempVal,f,c
  4357  000C10  0E00               	movlw	0
  4358  000C12  2248               	addwfc	buttonsBuildLUT@tempVal+1,f,c
  4359                           
  4360                           ;buttons.c: 316: if (tempVal < 0) tempVal = 0;
  4361  000C14  AE48               	btfss	buttonsBuildLUT@tempVal+1,7,c
  4362  000C16  D004               	goto	l3201
  4363  000C18  0E00               	movlw	0
  4364  000C1A  6E48               	movwf	buttonsBuildLUT@tempVal+1,c
  4365  000C1C  0E00               	movlw	0
  4366  000C1E  6E47               	movwf	buttonsBuildLUT@tempVal,c
  4367  000C20                     l3201:
  4368                           
  4369                           ;buttons.c: 317: if (tempVal > 0xFF) tempVal = 0xFF;
  4370  000C20  BE48               	btfsc	buttonsBuildLUT@tempVal+1,7,c
  4371  000C22  D006               	goto	l3205
  4372  000C24  0448               	decf	buttonsBuildLUT@tempVal+1,w,c
  4373  000C26  A0D8               	btfss	status,0,c
  4374  000C28  D003               	goto	l3205
  4375  000C2A  0E00               	movlw	0
  4376  000C2C  6E48               	movwf	buttonsBuildLUT@tempVal+1,c
  4377  000C2E  6847               	setf	buttonsBuildLUT@tempVal,c
  4378  000C30                     l3205:
  4379                           
  4380                           ;buttons.c: 318: LUT[i] = (uint8_t)tempVal & 0xFFU;
  4381  000C30  5049               	movf	buttonsBuildLUT@i,w,c
  4382  000C32  2438               	addwf	buttonsBuildLUT@LUT,w,c
  4383  000C34  6ED9               	movwf	fsr2l,c
  4384  000C36  504A               	movf	buttonsBuildLUT@i+1,w,c
  4385  000C38  2039               	addwfc	buttonsBuildLUT@LUT+1,w,c
  4386  000C3A  6EDA               	movwf	fsr2h,c
  4387  000C3C  0060  F11F  FFDF   	movff	buttonsBuildLUT@tempVal,indf2
  4388  000C42                     l3207:
  4389  000C42  4A49               	infsnz	buttonsBuildLUT@i,f,c
  4390  000C44  2A4A               	incf	buttonsBuildLUT@i+1,f,c
  4391  000C46  BE4A               	btfsc	buttonsBuildLUT@i+1,7,c
  4392  000C48  D741               	goto	l3171
  4393  000C4A  044A               	decf	buttonsBuildLUT@i+1,w,c
  4394  000C4C  B0D8               	btfsc	status,0,c
  4395  000C4E  0012               	return	
  4396  000C50  D73D               	goto	l3171
  4397  000C52                     __end_of_buttonsBuildLUT:
  4398                           	opt callstack 0
  4399                           
  4400 ;; *************** function ___wmul *****************
  4401 ;; Defined at:
  4402 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;  multiplier      2    0[COMRAM] unsigned int 
  4405 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;  product         2    4[COMRAM] unsigned int 
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  2    0[COMRAM] unsigned int 
  4410 ;; Registers used:
  4411 ;;		wreg, status,2, status,0, prodl, prodh
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4417 ;;      Params:         4       0       0       0       0       0       0       0       0
  4418 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4419 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4420 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4421 ;;Total ram usage:        6 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; Hardware stack levels required when called:    2
  4424 ;; This function calls:
  4425 ;;		Nothing
  4426 ;; This function is called by:
  4427 ;;		_buttonsBuildLUT
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           	psect	text19
  4432  001682                     __ptext19:
  4433                           	opt callstack 0
  4434  001682                     ___wmul:
  4435                           	opt callstack 26
  4436                           
  4437                           ;incstack = 0
  4438  001682  502A               	movf	___wmul@multiplier,w,c
  4439  001684  022C               	mulwf	___wmul@multiplicand,c
  4440  001686  006F FFCC  F02E    	movff	prodl,___wmul@product
  4441  00168C  006F FFD0  F02F    	movff	prodh,___wmul@product+1
  4442  001692  502A               	movf	___wmul@multiplier,w,c
  4443  001694  022D               	mulwf	___wmul@multiplicand+1,c
  4444  001696  50F3               	movf	prodl,w,c
  4445  001698  262F               	addwf	___wmul@product+1,f,c
  4446  00169A  502B               	movf	___wmul@multiplier+1,w,c
  4447  00169C  022C               	mulwf	___wmul@multiplicand,c
  4448  00169E  50F3               	movf	prodl,w,c
  4449  0016A0  262F               	addwf	___wmul@product+1,f,c
  4450  0016A2  0060  F0B8  F02A   	movff	___wmul@product,?___wmul
  4451  0016A8  0060  F0BC  F02B   	movff	___wmul@product+1,?___wmul+1
  4452  0016AE  0012               	return		;funcret
  4453  0016B0                     __end_of___wmul:
  4454                           	opt callstack 0
  4455                           
  4456 ;; *************** function ___awdiv *****************
  4457 ;; Defined at:
  4458 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  4459 ;; Parameters:    Size  Location     Type
  4460 ;;  dividend        2    6[COMRAM] int 
  4461 ;;  divisor         2    8[COMRAM] int 
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;  quotient        2   12[COMRAM] int 
  4464 ;;  sign            1   11[COMRAM] unsigned char 
  4465 ;;  counter         1   10[COMRAM] unsigned char 
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  2    6[COMRAM] int 
  4468 ;; Registers used:
  4469 ;;		wreg, status,2, status,0
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4475 ;;      Params:         4       0       0       0       0       0       0       0       0
  4476 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4477 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4478 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4479 ;;Total ram usage:        8 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:    2
  4482 ;; This function calls:
  4483 ;;		Nothing
  4484 ;; This function is called by:
  4485 ;;		_buttonsBuildLUT
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489                           	psect	text20
  4490  0010CC                     __ptext20:
  4491                           	opt callstack 0
  4492  0010CC                     ___awdiv:
  4493                           	opt callstack 26
  4494                           
  4495                           ;incstack = 0
  4496  0010CC  0E00               	movlw	0
  4497  0010CE  6E35               	movwf	___awdiv@sign,c
  4498  0010D0  AE33               	btfss	___awdiv@divisor+1,7,c
  4499  0010D2  D006               	goto	l3037
  4500  0010D4  6C32               	negf	___awdiv@divisor,c
  4501  0010D6  1E33               	comf	___awdiv@divisor+1,f,c
  4502  0010D8  B0D8               	btfsc	status,0,c
  4503  0010DA  2A33               	incf	___awdiv@divisor+1,f,c
  4504  0010DC  0E01               	movlw	1
  4505  0010DE  6E35               	movwf	___awdiv@sign,c
  4506  0010E0                     l3037:
  4507  0010E0  AE31               	btfss	___awdiv@dividend+1,7,c
  4508  0010E2  D006               	goto	l3043
  4509  0010E4  6C30               	negf	___awdiv@dividend,c
  4510  0010E6  1E31               	comf	___awdiv@dividend+1,f,c
  4511  0010E8  B0D8               	btfsc	status,0,c
  4512  0010EA  2A31               	incf	___awdiv@dividend+1,f,c
  4513  0010EC  0E01               	movlw	1
  4514  0010EE  1A35               	xorwf	___awdiv@sign,f,c
  4515  0010F0                     l3043:
  4516  0010F0  0E00               	movlw	0
  4517  0010F2  6E37               	movwf	___awdiv@quotient+1,c
  4518  0010F4  0E00               	movlw	0
  4519  0010F6  6E36               	movwf	___awdiv@quotient,c
  4520  0010F8  5032               	movf	___awdiv@divisor,w,c
  4521  0010FA  1033               	iorwf	___awdiv@divisor+1,w,c
  4522  0010FC  B4D8               	btfsc	status,2,c
  4523  0010FE  D01C               	goto	l3065
  4524  001100  0E01               	movlw	1
  4525  001102  6E34               	movwf	___awdiv@counter,c
  4526  001104  D004               	goto	l3051
  4527  001106                     l3049:
  4528  001106  90D8               	bcf	status,0,c
  4529  001108  3632               	rlcf	___awdiv@divisor,f,c
  4530  00110A  3633               	rlcf	___awdiv@divisor+1,f,c
  4531  00110C  2A34               	incf	___awdiv@counter,f,c
  4532  00110E                     l3051:
  4533  00110E  AE33               	btfss	___awdiv@divisor+1,7,c
  4534  001110  D7FA               	goto	l3049
  4535  001112                     u1920:
  4536  001112  90D8               	bcf	status,0,c
  4537  001114  3636               	rlcf	___awdiv@quotient,f,c
  4538  001116  3637               	rlcf	___awdiv@quotient+1,f,c
  4539  001118  5032               	movf	___awdiv@divisor,w,c
  4540  00111A  5C30               	subwf	___awdiv@dividend,w,c
  4541  00111C  5033               	movf	___awdiv@divisor+1,w,c
  4542  00111E  5831               	subwfb	___awdiv@dividend+1,w,c
  4543  001120  A0D8               	btfss	status,0,c
  4544  001122  D005               	goto	l3061
  4545  001124  5032               	movf	___awdiv@divisor,w,c
  4546  001126  5E30               	subwf	___awdiv@dividend,f,c
  4547  001128  5033               	movf	___awdiv@divisor+1,w,c
  4548  00112A  5A31               	subwfb	___awdiv@dividend+1,f,c
  4549  00112C  8036               	bsf	___awdiv@quotient,0,c
  4550  00112E                     l3061:
  4551  00112E  90D8               	bcf	status,0,c
  4552  001130  3233               	rrcf	___awdiv@divisor+1,f,c
  4553  001132  3232               	rrcf	___awdiv@divisor,f,c
  4554  001134  2E34               	decfsz	___awdiv@counter,f,c
  4555  001136  D7ED               	goto	u1920
  4556  001138                     l3065:
  4557  001138  5035               	movf	___awdiv@sign,w,c
  4558  00113A  B4D8               	btfsc	status,2,c
  4559  00113C  D004               	goto	l3069
  4560  00113E  6C36               	negf	___awdiv@quotient,c
  4561  001140  1E37               	comf	___awdiv@quotient+1,f,c
  4562  001142  B0D8               	btfsc	status,0,c
  4563  001144  2A37               	incf	___awdiv@quotient+1,f,c
  4564  001146                     l3069:
  4565  001146  0060  F0D8  F030   	movff	___awdiv@quotient,?___awdiv
  4566  00114C  0060  F0DC  F031   	movff	___awdiv@quotient+1,?___awdiv+1
  4567  001152  0012               	return		;funcret
  4568  001154                     __end_of___awdiv:
  4569                           	opt callstack 0
  4570                           
  4571 ;; *************** function _bootPayload *****************
  4572 ;; Defined at:
  4573 ;;		line 501 in file "main.c"
  4574 ;; Parameters:    Size  Location     Type
  4575 ;;		None
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;  addr            2    0        unsigned int 
  4578 ;; Return value:  Size  Location     Type
  4579 ;;                  1    wreg      void 
  4580 ;; Registers used:
  4581 ;;		wreg, status,2, status,0
  4582 ;; Tracked objects:
  4583 ;;		On entry : 0/0
  4584 ;;		On exit  : 0/0
  4585 ;;		Unchanged: 0/0
  4586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4587 ;;      Params:         0       0       0       0       0       0       0       0       0
  4588 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4589 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4590 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4591 ;;Total ram usage:        2 bytes
  4592 ;; Hardware stack levels used:    1
  4593 ;; Hardware stack levels required when called:    2
  4594 ;; This function calls:
  4595 ;;		Nothing
  4596 ;; This function is called by:
  4597 ;;		_main
  4598 ;; This function uses a non-reentrant model
  4599 ;;
  4600                           
  4601                           	psect	text21
  4602  001526                     __ptext21:
  4603                           	opt callstack 0
  4604  001526                     _bootPayload:
  4605                           	opt callstack 28
  4606                           
  4607                           ;main.c: 502: INTCON0 = 0x00;
  4608                           
  4609                           ;incstack = 0
  4610  001526  0E00               	movlw	0
  4611  001528  6ED2               	movwf	16338,c	;volatile
  4612                           
  4613                           ;main.c: 503: NCO1ACCL = 0x01;
  4614  00152A  0E01               	movlw	1
  4615  00152C  013F               	movlb	63	; () banked
  4616  00152E  6F38               	movwf	56,b	;volatile
  4617                           
  4618                           ;main.c: 504: STKPTR = 0x00;
  4619  001530  0E00               	movlw	0
  4620  001532  6EFC               	movwf	stkptr,c	;volatile
  4621                           
  4622                           ;main.c: 506: IVTLOCK = 0x55;
  4623  001534  0E55               	movlw	85
  4624  001536  6ED4               	movwf	16340,c	;volatile
  4625                           
  4626                           ;main.c: 507: IVTLOCK = 0xAA;
  4627  001538  0EAA               	movlw	170
  4628  00153A  6ED4               	movwf	16340,c	;volatile
  4629                           
  4630                           ;main.c: 508: IVTLOCK = 0;
  4631  00153C  0E00               	movlw	0
  4632  00153E  6ED4               	movwf	16340,c	;volatile
  4633                           
  4634                           ; BSR set to: 63
  4635                           ;main.c: 509: IVTLOCKED = 0;
  4636  001540  90D4               	bcf	16340,0,c	;volatile
  4637                           
  4638                           ; BSR set to: 63
  4639                           ;main.c: 510: IVTBASE = addr + 8;
  4640  001542  0E0C               	movlw	12
  4641  001544  6ED5               	movwf	16341,c	;volatile
  4642  001546  0E20               	movlw	32
  4643  001548  6ED6               	movwf	16342,c	;volatile
  4644  00154A  0E00               	movlw	0
  4645  00154C  6ED7               	movwf	16343,c	;volatile
  4646                           
  4647                           ; BSR set to: 63
  4648                           ;main.c: 511: IVTLOCK = 0x55;
  4649  00154E  0E55               	movlw	85
  4650  001550  6ED4               	movwf	16340,c	;volatile
  4651                           
  4652                           ; BSR set to: 63
  4653                           ;main.c: 512: IVTLOCK = 0xAA;
  4654  001552  0EAA               	movlw	170
  4655  001554  6ED4               	movwf	16340,c	;volatile
  4656                           
  4657                           ; BSR set to: 63
  4658                           ;main.c: 513: IVTLOCK = 1;
  4659  001556  0E01               	movlw	1
  4660  001558  6ED4               	movwf	16340,c	;volatile
  4661                           
  4662                           ; BSR set to: 63
  4663                           ;main.c: 514: IVTLOCKED = 1;
  4664  00155A  80D4               	bsf	16340,0,c	;volatile
  4665                           
  4666                           ; BSR set to: 63
  4667                           ;main.c: 516: PCLATU = 0x00;
  4668  00155C  0E00               	movlw	0
  4669  00155E  6EFB               	movwf	pclatu,c	;volatile
  4670                           
  4671                           ; BSR set to: 63
  4672                           ;main.c: 517: PCLATH = (addr >> 8) & 0xFF;
  4673  001560  0E20               	movlw	32
  4674  001562  6EFA               	movwf	pclath,c	;volatile
  4675                           
  4676                           ; BSR set to: 63
  4677                           ;main.c: 518: PCL = addr & 0xFFUL;
  4678  001564  0E04               	movlw	4
  4679  001566  6EF9               	movwf	pcl,c	;volatile
  4680                           
  4681                           ; BSR set to: 63
  4682  001568  0012               	return		;funcret
  4683  00156A                     __end_of_bootPayload:
  4684                           	opt callstack 0
  4685                           
  4686 ;; *************** function _SISendMessage *****************
  4687 ;; Defined at:
  4688 ;;		line 194 in file "si.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;  msg             2    6[COMRAM] PTR unsigned char 
  4691 ;;		 -> buttonsMessage(8), main@msgAnswer(36), 
  4692 ;;  len             1    8[COMRAM] unsigned char 
  4693 ;; Auto vars:     Size  Location     Type
  4694 ;;  leftToSend      1   15[COMRAM] char 
  4695 ;;  idx             1   14[COMRAM] unsigned char 
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  1    wreg      void 
  4698 ;; Registers used:
  4699 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4705 ;;      Params:         3       0       0       0       0       0       0       0       0
  4706 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4707 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4708 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4709 ;;Total ram usage:       10 bytes
  4710 ;; Hardware stack levels used:    1
  4711 ;; Hardware stack levels required when called:    2
  4712 ;; This function calls:
  4713 ;;		Nothing
  4714 ;; This function is called by:
  4715 ;;		_main
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           	psect	text22
  4720  000D34                     __ptext22:
  4721                           	opt callstack 0
  4722  000D34                     _SISendMessage:
  4723                           	opt callstack 28
  4724                           
  4725                           ;si.c: 195: int8_t leftToSend;;si.c: 196: uint8_t idx;;si.c: 203: SMT1CON1bits.GO = 0;
  4726                           
  4727                           ; BSR set to: 63
  4728                           ;incstack = 0
  4729  000D34  013F               	movlb	63	; () banked
  4730  000D36  9F1F               	bcf	31,7,b	;volatile
  4731  000D38                     l799:
  4732  000D38  013D               	movlb	61	; () banked
  4733  000D3A  AB17               	btfss	23,5,b	;volatile
  4734  000D3C  D7FD               	goto	l799
  4735                           
  4736                           ; BSR set to: 61
  4737                           ;si.c: 208: TRISBbits.TRISB4 = 0;
  4738  000D3E  98C3               	bcf	16323,4,c	;volatile
  4739                           
  4740                           ; BSR set to: 61
  4741                           ;si.c: 211: SIBitCounter = 0;
  4742  000D40  0E00               	movlw	0
  4743  000D42  6E20               	movwf	_SIBitCounter,c
  4744                           
  4745                           ;si.c: 212: SIByteCounter = 0;
  4746  000D44  0E00               	movlw	0
  4747  000D46  6E1F               	movwf	_SIByteCounter,c
  4748                           
  4749                           ;si.c: 213: SICMDReceived = 0;
  4750  000D48  0E00               	movlw	0
  4751  000D4A  6E1E               	movwf	_SICMDReceived,c
  4752                           
  4753                           ;si.c: 214: SITempByte = 0x00;
  4754  000D4C  0E00               	movlw	0
  4755  000D4E  6E1D               	movwf	_SITempByte,c
  4756                           
  4757                           ;si.c: 216: T2TMR = 0x01;
  4758  000D50  0E01               	movlw	1
  4759  000D52  6EAA               	movwf	16298,c	;volatile
  4760                           
  4761                           ;si.c: 218: SPI1TWIDTH = 0x01;
  4762  000D54  0E01               	movlw	1
  4763  000D56  6F18               	movwf	24,b	;volatile
  4764                           
  4765                           ; BSR set to: 61
  4766                           ;si.c: 219: SPI1INTFbits.SRMTIF = 0;
  4767  000D58  9F1A               	bcf	26,7,b	;volatile
  4768                           
  4769                           ; BSR set to: 61
  4770                           ;si.c: 220: SPI1TCNTL = len;
  4771  000D5A  0060  F0CB  FD12   	movff	SISendMessage@len,15634	;volatile
  4772                           
  4773                           ; BSR set to: 61
  4774                           ;si.c: 222: if (len == 1) {
  4775  000D60  0432               	decf	SISendMessage@len,w,c
  4776  000D62  A4D8               	btfss	status,2,c
  4777  000D64  D00B               	goto	l3777
  4778                           
  4779                           ; BSR set to: 61
  4780                           ;si.c: 223: SPI1TXB = msg[0];
  4781  000D66  0060  F0C3  FFD9   	movff	SISendMessage@msg,fsr2l
  4782  000D6C  0060  F0C7  FFDA   	movff	SISendMessage@msg+1,fsr2h
  4783  000D72  50DF               	movf	indf2,w,c
  4784  000D74  6F11               	movwf	17,b	;volatile
  4785                           
  4786                           ; BSR set to: 61
  4787                           ;si.c: 224: SPI1TXB = 0x80;
  4788  000D76  0E80               	movlw	128
  4789  000D78  6F11               	movwf	17,b	;volatile
  4790                           
  4791                           ;si.c: 225: } else {
  4792  000D7A  D03F               	goto	u3020
  4793  000D7C                     l3777:
  4794                           
  4795                           ; BSR set to: 61
  4796                           ;si.c: 226: SPI1TXB = msg[0];
  4797  000D7C  0060  F0C3  FFD9   	movff	SISendMessage@msg,fsr2l
  4798  000D82  0060  F0C7  FFDA   	movff	SISendMessage@msg+1,fsr2h
  4799  000D88  50DF               	movf	indf2,w,c
  4800  000D8A  6F11               	movwf	17,b	;volatile
  4801                           
  4802                           ; BSR set to: 61
  4803                           ;si.c: 227: SPI1TXB = msg[1];
  4804  000D8C  EE20 F001          	lfsr	2,1
  4805  000D90  5030               	movf	SISendMessage@msg,w,c
  4806  000D92  26D9               	addwf	fsr2l,f,c
  4807  000D94  5031               	movf	SISendMessage@msg+1,w,c
  4808  000D96  22DA               	addwfc	fsr2h,f,c
  4809  000D98  50DF               	movf	indf2,w,c
  4810  000D9A  6F11               	movwf	17,b	;volatile
  4811                           
  4812                           ; BSR set to: 61
  4813                           ;si.c: 228: leftToSend = len - 2;
  4814  000D9C  5032               	movf	SISendMessage@len,w,c
  4815  000D9E  0FFE               	addlw	254
  4816  000DA0  6E39               	movwf	SISendMessage@leftToSend,c
  4817                           
  4818                           ;si.c: 229: idx = 2;
  4819  000DA2  0E02               	movlw	2
  4820  000DA4  6E38               	movwf	SISendMessage@idx,c
  4821                           
  4822                           ;si.c: 231: while(leftToSend >= 0) {
  4823  000DA6  D027               	goto	l3795
  4824  000DA8                     l3783:
  4825                           
  4826                           ; BSR set to: 61
  4827                           ;si.c: 232: if (SPI1TCNTL < (leftToSend + 2)) {
  4828  000DA8  0060  F0E4  F033   	movff	SISendMessage@leftToSend,??_SISendMessage
  4829  000DAE  6A34               	clrf	(??_SISendMessage+1)& (0+255),c
  4830  000DB0  BE33               	btfsc	??_SISendMessage& (0+255),7,c
  4831  000DB2  0634               	decf	(??_SISendMessage+1)& (0+255),f,c
  4832  000DB4  0E02               	movlw	2
  4833  000DB6  2633               	addwf	??_SISendMessage,f,c
  4834  000DB8  0E00               	movlw	0
  4835  000DBA  2234               	addwfc	??_SISendMessage+1,f,c
  4836  000DBC  5112               	movf	18,w,b	;volatile
  4837  000DBE  6E35               	movwf	(??_SISendMessage+2)& (0+255),c
  4838  000DC0  6A36               	clrf	(??_SISendMessage+3)& (0+255),c
  4839  000DC2  5033               	movf	??_SISendMessage,w,c
  4840  000DC4  5C35               	subwf	??_SISendMessage+2,w,c
  4841  000DC6  5036               	movf	??_SISendMessage+3,w,c
  4842  000DC8  0A80               	xorlw	128
  4843  000DCA  6E37               	movwf	(??_SISendMessage+4)& (0+255),c
  4844  000DCC  5034               	movf	??_SISendMessage+1,w,c
  4845  000DCE  0A80               	xorlw	128
  4846  000DD0  5837               	subwfb	(??_SISendMessage+4)& (0+255),w,c
  4847  000DD2  B0D8               	btfsc	status,0,c
  4848  000DD4  D010               	goto	l3795
  4849                           
  4850                           ; BSR set to: 61
  4851                           ;si.c: 233: if (leftToSend == 0) {
  4852  000DD6  5039               	movf	SISendMessage@leftToSend,w,c
  4853  000DD8  A4D8               	btfss	status,2,c
  4854  000DDA  D003               	goto	l3789
  4855                           
  4856                           ; BSR set to: 61
  4857                           ;si.c: 234: SPI1TXB = 0x80;
  4858  000DDC  0E80               	movlw	128
  4859  000DDE  6F11               	movwf	17,b	;volatile
  4860                           
  4861                           ;si.c: 235: } else {
  4862  000DE0  D009               	goto	l3793
  4863  000DE2                     l3789:
  4864                           
  4865                           ; BSR set to: 61
  4866                           ;si.c: 236: SPI1TXB = msg[idx++];
  4867  000DE2  5038               	movf	SISendMessage@idx,w,c
  4868  000DE4  2430               	addwf	SISendMessage@msg,w,c
  4869  000DE6  6ED9               	movwf	fsr2l,c
  4870  000DE8  0E00               	movlw	0
  4871  000DEA  2031               	addwfc	SISendMessage@msg+1,w,c
  4872  000DEC  6EDA               	movwf	fsr2h,c
  4873  000DEE  50DF               	movf	indf2,w,c
  4874  000DF0  6F11               	movwf	17,b	;volatile
  4875                           
  4876                           ; BSR set to: 61
  4877  000DF2  2A38               	incf	SISendMessage@idx,f,c
  4878  000DF4                     l3793:
  4879                           
  4880                           ; BSR set to: 61
  4881                           ;si.c: 237: };si.c: 238: leftToSend--;
  4882  000DF4  0639               	decf	SISendMessage@leftToSend,f,c
  4883  000DF6                     l3795:
  4884                           
  4885                           ; BSR set to: 61
  4886  000DF6  AE39               	btfss	SISendMessage@leftToSend,7,c
  4887  000DF8  D7D7               	goto	l3783
  4888  000DFA                     u3020:
  4889                           
  4890                           ; BSR set to: 61
  4891  000DFA  AF1A               	btfss	26,7,b	;volatile
  4892  000DFC  D7FE               	goto	u3020
  4893  000DFE                     u3030:
  4894                           
  4895                           ; BSR set to: 61
  4896  000DFE  AB17               	btfss	23,5,b	;volatile
  4897  000E00  D7FE               	goto	u3030
  4898                           
  4899                           ; BSR set to: 61
  4900                           ;si.c: 245: SPI1INTFbits.SRMTIF = 0;
  4901  000E02  9F1A               	bcf	26,7,b	;volatile
  4902                           
  4903                           ;si.c: 248: SMT1CON1bits.GO = 1;
  4904  000E04  013F               	movlb	63	; () banked
  4905  000E06  8F1F               	bsf	31,7,b	;volatile
  4906                           
  4907                           ;si.c: 249: TRISBbits.TRISB4 = 1;
  4908  000E08  88C3               	bsf	16323,4,c	;volatile
  4909                           
  4910                           ; BSR set to: 63
  4911  000E0A  0012               	return		;funcret
  4912  000E0C                     __end_of_SISendMessage:
  4913                           	opt callstack 0
  4914                           
  4915 ;; *************** function _SIInit *****************
  4916 ;; Defined at:
  4917 ;;		line 75 in file "si.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;		None
  4920 ;; Auto vars:     Size  Location     Type
  4921 ;;		None
  4922 ;; Return value:  Size  Location     Type
  4923 ;;                  1    wreg      void 
  4924 ;; Registers used:
  4925 ;;		wreg, status,2, cstack
  4926 ;; Tracked objects:
  4927 ;;		On entry : 0/0
  4928 ;;		On exit  : 0/0
  4929 ;;		Unchanged: 0/0
  4930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4931 ;;      Params:         0       0       0       0       0       0       0       0       0
  4932 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4933 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4934 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4935 ;;Total ram usage:        0 bytes
  4936 ;; Hardware stack levels used:    1
  4937 ;; Hardware stack levels required when called:    3
  4938 ;; This function calls:
  4939 ;;		_SIConfigureCLC
  4940 ;; This function is called by:
  4941 ;;		_main
  4942 ;; This function uses a non-reentrant model
  4943 ;;
  4944                           
  4945                           	psect	text23
  4946  001042                     __ptext23:
  4947                           	opt callstack 0
  4948  001042                     _SIInit:
  4949                           	opt callstack 27
  4950                           
  4951                           ;si.c: 77: T6CON = 0x00;
  4952                           
  4953                           ; BSR set to: 63
  4954                           ;incstack = 0
  4955  001042  0E00               	movlw	0
  4956  001044  6E94               	movwf	16276,c	;volatile
  4957                           
  4958                           ;si.c: 78: T6CLK = 0x01;
  4959  001046  0E01               	movlw	1
  4960  001048  6E96               	movwf	16278,c	;volatile
  4961                           
  4962                           ;si.c: 79: T6RST = 0x00;
  4963  00104A  0E00               	movlw	0
  4964  00104C  6E97               	movwf	16279,c	;volatile
  4965                           
  4966                           ;si.c: 80: T6TMR = 0x00;
  4967  00104E  0E00               	movlw	0
  4968  001050  6E92               	movwf	16274,c	;volatile
  4969                           
  4970                           ;si.c: 81: T6PR = 0x50;
  4971  001052  0E50               	movlw	80
  4972  001054  6E93               	movwf	16275,c	;volatile
  4973                           
  4974                           ;si.c: 82: T6HLT = 0x05;
  4975  001056  0E05               	movlw	5
  4976  001058  6E95               	movwf	16277,c	;volatile
  4977                           
  4978                           ;si.c: 83: PIR9bits.TMR6IF = 0;
  4979  00105A  0139               	movlb	57	; () banked
  4980  00105C  91A9               	bcf	169,0,b	;volatile
  4981                           
  4982                           ; BSR set to: 57
  4983                           ;si.c: 84: PIE9bits.TMR6IE = 1;
  4984  00105E  8199               	bsf	153,0,b	;volatile
  4985                           
  4986                           ;si.c: 88: T2CON = 0x00;
  4987  001060  0E00               	movlw	0
  4988  001062  6EAC               	movwf	16300,c	;volatile
  4989                           
  4990                           ;si.c: 89: T2CLK = 0x01;
  4991  001064  0E01               	movlw	1
  4992  001066  6EAE               	movwf	16302,c	;volatile
  4993                           
  4994                           ;si.c: 90: T2RST = 0x00;
  4995  001068  0E00               	movlw	0
  4996  00106A  6EAF               	movwf	16303,c	;volatile
  4997                           
  4998                           ;si.c: 91: T2TMR = 0x00;
  4999  00106C  0E00               	movlw	0
  5000  00106E  6EAA               	movwf	16298,c	;volatile
  5001                           
  5002                           ;si.c: 92: T2PR = 125;
  5003  001070  0E7D               	movlw	125
  5004  001072  6EAB               	movwf	16299,c	;volatile
  5005                           
  5006                           ; BSR set to: 57
  5007                           ;si.c: 93: PIR4bits.TMR2IF = 0;
  5008  001074  95A4               	bcf	164,2,b	;volatile
  5009                           
  5010                           ;si.c: 94: T2CON = 0xF0;
  5011  001076  0EF0               	movlw	240
  5012  001078  6EAC               	movwf	16300,c	;volatile
  5013                           
  5014                           ;si.c: 95: while(!PIR4bits.TMR2IF) {
  5015  00107A  D004               	goto	l3387
  5016  00107C                     l790:
  5017                           
  5018                           ; BSR set to: 57
  5019                           ;si.c: 96: if (PORTBbits.RB4 == 0) {
  5020  00107C  B8CB               	btfsc	16331,4,c	;volatile
  5021  00107E  D002               	goto	l3387
  5022                           
  5023                           ; BSR set to: 57
  5024                           ;si.c: 97: T2TMR = 0x00;
  5025  001080  0E00               	movlw	0
  5026  001082  6EAA               	movwf	16298,c	;volatile
  5027  001084                     l3387:
  5028                           
  5029                           ; BSR set to: 57
  5030  001084  A5A4               	btfss	164,2,b	;volatile
  5031  001086  D7FA               	goto	l790
  5032                           
  5033                           ; BSR set to: 57
  5034                           ;si.c: 98: };si.c: 99: };si.c: 101: CCPTMRS1 = 0x55;
  5035  001088  0E55               	movlw	85
  5036  00108A  013F               	movlb	63	; () banked
  5037  00108C  6F5F               	movwf	95,b	;volatile
  5038                           
  5039                           ; BSR set to: 63
  5040                           ;si.c: 103: SIConfigureCLC();
  5041  00108E  EC29  F006         	call	_SIConfigureCLC	;wreg free
  5042                           
  5043                           ;si.c: 105: T6CON = 0x80;
  5044  001092  0E80               	movlw	128
  5045  001094  6E94               	movwf	16276,c	;volatile
  5046                           
  5047                           ;si.c: 111: SMT1PRL = 0xFF;
  5048  001096  013F               	movlb	63	; () banked
  5049  001098  691B               	setf	27,b	;volatile
  5050                           
  5051                           ; BSR set to: 63
  5052                           ;si.c: 112: SMT1PRH = 0xFF;
  5053  00109A  691C               	setf	28,b	;volatile
  5054                           
  5055                           ; BSR set to: 63
  5056                           ;si.c: 113: SMT1PRU = 0xFF;
  5057  00109C  691D               	setf	29,b	;volatile
  5058                           
  5059                           ; BSR set to: 63
  5060                           ;si.c: 114: SMT1TMRL = 0x00;
  5061  00109E  0E00               	movlw	0
  5062  0010A0  6F12               	movwf	18,b	;volatile
  5063                           
  5064                           ; BSR set to: 63
  5065                           ;si.c: 115: SMT1TMRH = 0x00;
  5066  0010A2  0E00               	movlw	0
  5067  0010A4  6F13               	movwf	19,b	;volatile
  5068                           
  5069                           ; BSR set to: 63
  5070                           ;si.c: 116: SMT1TMRU = 0x00;
  5071  0010A6  0E00               	movlw	0
  5072  0010A8  6F14               	movwf	20,b	;volatile
  5073                           
  5074                           ; BSR set to: 63
  5075                           ;si.c: 117: SMT1CON0 = 0x88;
  5076  0010AA  0E88               	movlw	136
  5077  0010AC  6F1E               	movwf	30,b	;volatile
  5078                           
  5079                           ; BSR set to: 63
  5080                           ;si.c: 118: SMT1CON1 = 0x43;
  5081  0010AE  0E43               	movlw	67
  5082  0010B0  6F1F               	movwf	31,b	;volatile
  5083                           
  5084                           ; BSR set to: 63
  5085                           ;si.c: 119: SMT1CLK = 0x01;
  5086  0010B2  0E01               	movlw	1
  5087  0010B4  6F21               	movwf	33,b	;volatile
  5088                           
  5089                           ; BSR set to: 63
  5090                           ;si.c: 120: SMT1WIN = 0x00;
  5091  0010B6  0E00               	movlw	0
  5092  0010B8  6F23               	movwf	35,b	;volatile
  5093                           
  5094                           ; BSR set to: 63
  5095                           ;si.c: 121: SMT1SIG = 0x00;
  5096  0010BA  0E00               	movlw	0
  5097  0010BC  6F22               	movwf	34,b	;volatile
  5098                           
  5099                           ; BSR set to: 63
  5100                           ;si.c: 123: PIR1bits.SMT1PWAIF = 0;
  5101  0010BE  0139               	movlb	57	; () banked
  5102  0010C0  9FA1               	bcf	161,7,b	;volatile
  5103                           
  5104                           ; BSR set to: 57
  5105                           ;si.c: 124: IPR1bits.SMT1PWAIP = 1;
  5106  0010C2  8F81               	bsf	129,7,b	;volatile
  5107                           
  5108                           ; BSR set to: 57
  5109                           ;si.c: 125: PIE1bits.SMT1PWAIE = 1;
  5110  0010C4  8F91               	bsf	145,7,b	;volatile
  5111                           
  5112                           ; BSR set to: 57
  5113                           ;si.c: 126: SMT1CON1bits.GO = 1;
  5114  0010C6  013F               	movlb	63	; () banked
  5115  0010C8  8F1F               	bsf	31,7,b	;volatile
  5116                           
  5117                           ; BSR set to: 63
  5118  0010CA  0012               	return		;funcret
  5119  0010CC                     __end_of_SIInit:
  5120                           	opt callstack 0
  5121                           
  5122 ;; *************** function _SIConfigureCLC *****************
  5123 ;; Defined at:
  5124 ;;		line 129 in file "si.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;		None
  5127 ;; Auto vars:     Size  Location     Type
  5128 ;;		None
  5129 ;; Return value:  Size  Location     Type
  5130 ;;                  1    wreg      void 
  5131 ;; Registers used:
  5132 ;;		wreg, status,2
  5133 ;; Tracked objects:
  5134 ;;		On entry : 0/0
  5135 ;;		On exit  : 0/0
  5136 ;;		Unchanged: 0/0
  5137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5138 ;;      Params:         0       0       0       0       0       0       0       0       0
  5139 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5140 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5141 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5142 ;;Total ram usage:        0 bytes
  5143 ;; Hardware stack levels used:    1
  5144 ;; Hardware stack levels required when called:    2
  5145 ;; This function calls:
  5146 ;;		Nothing
  5147 ;; This function is called by:
  5148 ;;		_SIInit
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152                           	psect	text24
  5153  000C52                     __ptext24:
  5154                           	opt callstack 0
  5155  000C52                     _SIConfigureCLC:
  5156                           	opt callstack 27
  5157                           
  5158                           ;si.c: 130: T2CON = 0x00;
  5159                           
  5160                           ; BSR set to: 63
  5161                           ;incstack = 0
  5162  000C52  0E00               	movlw	0
  5163  000C54  6EAC               	movwf	16300,c	;volatile
  5164                           
  5165                           ;si.c: 131: T2CLKCON = 0x01;
  5166  000C56  0E01               	movlw	1
  5167  000C58  6EAE               	movwf	16302,c	;volatile
  5168                           
  5169                           ;si.c: 132: T2HLT = 0x04;
  5170  000C5A  0E04               	movlw	4
  5171  000C5C  6EAD               	movwf	16301,c	;volatile
  5172                           
  5173                           ;si.c: 133: T2RST = 0x12;
  5174  000C5E  0E12               	movlw	18
  5175  000C60  6EAF               	movwf	16303,c	;volatile
  5176                           
  5177                           ;si.c: 134: T2PR = 0x1F;
  5178  000C62  0E1F               	movlw	31
  5179  000C64  6EAB               	movwf	16299,c	;volatile
  5180                           
  5181                           ;si.c: 135: T2TMR = 0x00;
  5182  000C66  0E00               	movlw	0
  5183  000C68  6EAA               	movwf	16298,c	;volatile
  5184                           
  5185                           ;si.c: 136: T2CON = 0x80;
  5186  000C6A  0E80               	movlw	128
  5187  000C6C  6EAC               	movwf	16300,c	;volatile
  5188                           
  5189                           ;si.c: 139: PWM5DCH = 0x0F;
  5190  000C6E  0E0F               	movlw	15
  5191  000C70  6E6D               	movwf	16237,c	;volatile
  5192                           
  5193                           ;si.c: 140: PWM5DCL = 0x00;
  5194  000C72  0E00               	movlw	0
  5195  000C74  6E6C               	movwf	16236,c	;volatile
  5196                           
  5197                           ;si.c: 141: PWM5CON = 0x80;
  5198  000C76  0E80               	movlw	128
  5199  000C78  6E6E               	movwf	16238,c	;volatile
  5200                           
  5201                           ;si.c: 143: CLC1POL = 0x00;
  5202  000C7A  0E00               	movlw	0
  5203  000C7C  013C               	movlb	60	; () banked
  5204  000C7E  6F75               	movwf	117,b	;volatile
  5205                           
  5206                           ;si.c: 144: CLC1SEL0 = 0x18;
  5207  000C80  0E18               	movlw	24
  5208  000C82  6F76               	movwf	118,b	;volatile
  5209                           
  5210                           ;si.c: 145: CLC1SEL1 = 0x05;
  5211  000C84  0E05               	movlw	5
  5212  000C86  6F77               	movwf	119,b	;volatile
  5213                           
  5214                           ;si.c: 146: CLC1SEL2 = 0x00;
  5215  000C88  0E00               	movlw	0
  5216  000C8A  6F78               	movwf	120,b	;volatile
  5217                           
  5218                           ;si.c: 147: CLC1SEL3 = 0x00;
  5219  000C8C  0E00               	movlw	0
  5220  000C8E  6F79               	movwf	121,b	;volatile
  5221                           
  5222                           ;si.c: 148: CLC1GLS0 = 0x08;
  5223  000C90  0E08               	movlw	8
  5224  000C92  6F7A               	movwf	122,b	;volatile
  5225                           
  5226                           ;si.c: 149: CLC1GLS1 = 0x02;
  5227  000C94  0E02               	movlw	2
  5228  000C96  6F7B               	movwf	123,b	;volatile
  5229                           
  5230                           ;si.c: 150: CLC1GLS2 = 0x00;
  5231  000C98  0E00               	movlw	0
  5232  000C9A  6F7C               	movwf	124,b	;volatile
  5233                           
  5234                           ;si.c: 151: CLC1GLS3 = 0x00;
  5235  000C9C  0E00               	movlw	0
  5236  000C9E  6F7D               	movwf	125,b	;volatile
  5237                           
  5238                           ;si.c: 152: CLC1CON = 0x84;
  5239  000CA0  0E84               	movlw	132
  5240  000CA2  6F74               	movwf	116,b	;volatile
  5241                           
  5242                           ;si.c: 154: CLC2POL = 0x00;
  5243  000CA4  0E00               	movlw	0
  5244  000CA6  6F6B               	movwf	107,b	;volatile
  5245                           
  5246                           ;si.c: 155: CLC2SEL0 = 0x2C;
  5247  000CA8  0E2C               	movlw	44
  5248  000CAA  6F6C               	movwf	108,b	;volatile
  5249                           
  5250                           ;si.c: 156: CLC2SEL1 = 0x05;
  5251  000CAC  0E05               	movlw	5
  5252  000CAE  6F6D               	movwf	109,b	;volatile
  5253                           
  5254                           ;si.c: 157: CLC2SEL2 = 0x00;
  5255  000CB0  0E00               	movlw	0
  5256  000CB2  6F6E               	movwf	110,b	;volatile
  5257                           
  5258                           ;si.c: 158: CLC2SEL3 = 0x00;
  5259  000CB4  0E00               	movlw	0
  5260  000CB6  6F6F               	movwf	111,b	;volatile
  5261                           
  5262                           ;si.c: 159: CLC2GLS0 = 0x08;
  5263  000CB8  0E08               	movlw	8
  5264  000CBA  6F70               	movwf	112,b	;volatile
  5265                           
  5266                           ;si.c: 160: CLC2GLS1 = 0x01;
  5267  000CBC  0E01               	movlw	1
  5268  000CBE  6F71               	movwf	113,b	;volatile
  5269                           
  5270                           ;si.c: 161: CLC2GLS2 = 0x00;
  5271  000CC0  0E00               	movlw	0
  5272  000CC2  6F72               	movwf	114,b	;volatile
  5273                           
  5274                           ;si.c: 162: CLC2GLS3 = 0x00;
  5275  000CC4  0E00               	movlw	0
  5276  000CC6  6F73               	movwf	115,b	;volatile
  5277                           
  5278                           ;si.c: 163: CLC2CON = 0x84;
  5279  000CC8  0E84               	movlw	132
  5280  000CCA  6F6A               	movwf	106,b	;volatile
  5281                           
  5282                           ;si.c: 165: CLC3POL = 0x00;
  5283  000CCC  0E00               	movlw	0
  5284  000CCE  6F61               	movwf	97,b	;volatile
  5285                           
  5286                           ;si.c: 166: CLC3SEL0 = 0x24;
  5287  000CD0  0E24               	movlw	36
  5288  000CD2  6F62               	movwf	98,b	;volatile
  5289                           
  5290                           ;si.c: 167: CLC3SEL1 = 0x18;
  5291  000CD4  0E18               	movlw	24
  5292  000CD6  6F63               	movwf	99,b	;volatile
  5293                           
  5294                           ;si.c: 168: CLC3SEL2 = 0x2B;
  5295  000CD8  0E2B               	movlw	43
  5296  000CDA  6F64               	movwf	100,b	;volatile
  5297                           
  5298                           ;si.c: 169: CLC3SEL3 = 0x2C;
  5299  000CDC  0E2C               	movlw	44
  5300  000CDE  6F65               	movwf	101,b	;volatile
  5301                           
  5302                           ;si.c: 170: CLC3GLS0 = 0x02;
  5303  000CE0  0E02               	movlw	2
  5304  000CE2  6F66               	movwf	102,b	;volatile
  5305                           
  5306                           ;si.c: 171: CLC3GLS1 = 0x04;
  5307  000CE4  0E04               	movlw	4
  5308  000CE6  6F67               	movwf	103,b	;volatile
  5309                           
  5310                           ;si.c: 172: CLC3GLS2 = 0x90;
  5311  000CE8  0E90               	movlw	144
  5312  000CEA  6F68               	movwf	104,b	;volatile
  5313                           
  5314                           ;si.c: 173: CLC3GLS3 = 0x60;
  5315  000CEC  0E60               	movlw	96
  5316  000CEE  6F69               	movwf	105,b	;volatile
  5317                           
  5318                           ;si.c: 174: CLC3CON = 0x82;
  5319  000CF0  0E82               	movlw	130
  5320  000CF2  6F60               	movwf	96,b	;volatile
  5321                           
  5322                           ;si.c: 176: CLC4POL = 0x04;
  5323  000CF4  0E04               	movlw	4
  5324  000CF6  6F57               	movwf	87,b	;volatile
  5325                           
  5326                           ;si.c: 177: CLC4SEL0 = 0x26;
  5327  000CF8  0E26               	movlw	38
  5328  000CFA  6F58               	movwf	88,b	;volatile
  5329                           
  5330                           ;si.c: 178: CLC4SEL1 = 0x2C;
  5331  000CFC  0E2C               	movlw	44
  5332  000CFE  6F59               	movwf	89,b	;volatile
  5333                           
  5334                           ;si.c: 179: CLC4SEL2 = 0x25;
  5335  000D00  0E25               	movlw	37
  5336  000D02  6F5A               	movwf	90,b	;volatile
  5337                           
  5338                           ;si.c: 180: CLC4SEL3 = 0x00;
  5339  000D04  0E00               	movlw	0
  5340  000D06  6F5B               	movwf	91,b	;volatile
  5341                           
  5342                           ;si.c: 181: CLC4GLS0 = 0x02;
  5343  000D08  0E02               	movlw	2
  5344  000D0A  6F5C               	movwf	92,b	;volatile
  5345                           
  5346                           ;si.c: 182: CLC4GLS1 = 0x00;
  5347  000D0C  0E00               	movlw	0
  5348  000D0E  6F5D               	movwf	93,b	;volatile
  5349                           
  5350                           ;si.c: 183: CLC4GLS2 = 0x14;
  5351  000D10  0E14               	movlw	20
  5352  000D12  6F5E               	movwf	94,b	;volatile
  5353                           
  5354                           ;si.c: 184: CLC4GLS3 = 0x00;
  5355  000D14  0E00               	movlw	0
  5356  000D16  6F5F               	movwf	95,b	;volatile
  5357                           
  5358                           ;si.c: 185: CLC4CON = 0x83;
  5359  000D18  0E83               	movlw	131
  5360  000D1A  6F56               	movwf	86,b	;volatile
  5361                           
  5362                           ;si.c: 187: SPI1CLK = 0x05;
  5363  000D1C  0E05               	movlw	5
  5364  000D1E  013D               	movlb	61	; () banked
  5365  000D20  6F1C               	movwf	28,b	;volatile
  5366                           
  5367                           ;si.c: 188: SPI1BAUD = 0x00;
  5368  000D22  0E00               	movlw	0
  5369  000D24  6F19               	movwf	25,b	;volatile
  5370                           
  5371                           ;si.c: 189: SPI1CON1 = 0x00;
  5372  000D26  0E00               	movlw	0
  5373  000D28  6F15               	movwf	21,b	;volatile
  5374                           
  5375                           ;si.c: 190: SPI1CON2 = 0x02;
  5376  000D2A  0E02               	movlw	2
  5377  000D2C  6F16               	movwf	22,b	;volatile
  5378                           
  5379                           ;si.c: 191: SPI1CON0 = 0x82;
  5380  000D2E  0E82               	movlw	130
  5381  000D30  6F14               	movwf	20,b	;volatile
  5382                           
  5383                           ; BSR set to: 61
  5384  000D32  0012               	return		;funcret
  5385  000D34                     __end_of_SIConfigureCLC:
  5386                           	opt callstack 0
  5387                           
  5388 ;; *************** function _SIGetCommand *****************
  5389 ;; Defined at:
  5390 ;;		line 257 in file "si.c"
  5391 ;; Parameters:    Size  Location     Type
  5392 ;;  msg             2    0[COMRAM] PTR unsigned char 
  5393 ;;		 -> main@cmd(36), 
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;  i               1    2[COMRAM] unsigned char 
  5396 ;; Return value:  Size  Location     Type
  5397 ;;                  1    wreg      unsigned char 
  5398 ;; Registers used:
  5399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5400 ;; Tracked objects:
  5401 ;;		On entry : 0/0
  5402 ;;		On exit  : 0/0
  5403 ;;		Unchanged: 0/0
  5404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5405 ;;      Params:         2       0       0       0       0       0       0       0       0
  5406 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5407 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5408 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5409 ;;Total ram usage:        3 bytes
  5410 ;; Hardware stack levels used:    1
  5411 ;; Hardware stack levels required when called:    2
  5412 ;; This function calls:
  5413 ;;		Nothing
  5414 ;; This function is called by:
  5415 ;;		_main
  5416 ;; This function uses a non-reentrant model
  5417 ;;
  5418                           
  5419                           	psect	text25
  5420  0015A8                     __ptext25:
  5421                           	opt callstack 0
  5422  0015A8                     _SIGetCommand:
  5423                           	opt callstack 28
  5424                           
  5425                           ;si.c: 258: uint8_t i;;si.c: 259: if (!SICMDReceived) {
  5426                           
  5427                           ; BSR set to: 61
  5428                           ;incstack = 0
  5429  0015A8  501E               	movf	_SICMDReceived,w,c
  5430  0015AA  A4D8               	btfss	status,2,c
  5431  0015AC  D002               	goto	l3751
  5432                           
  5433                           ;si.c: 260: return 0;
  5434  0015AE  0E00               	movlw	0
  5435  0015B0  0012               	return	
  5436  0015B2                     l3751:
  5437                           
  5438                           ;si.c: 261: };si.c: 262: for (i = 0; i < SIByteCounter; i++) {
  5439  0015B2  0E00               	movlw	0
  5440  0015B4  6E2C               	movwf	SIGetCommand@i,c
  5441  0015B6  D010               	goto	l3757
  5442  0015B8                     l3753:
  5443                           
  5444                           ;si.c: 263: msg[i] = SIInputMessage[i];
  5445  0015B8  0E00               	movlw	low _SIInputMessage
  5446  0015BA  242C               	addwf	SIGetCommand@i,w,c
  5447  0015BC  6ED9               	movwf	fsr2l,c
  5448  0015BE  6ADA               	clrf	fsr2h,c
  5449  0015C0  0E01               	movlw	high _SIInputMessage
  5450  0015C2  22DA               	addwfc	fsr2h,f,c
  5451  0015C4  502C               	movf	SIGetCommand@i,w,c
  5452  0015C6  242A               	addwf	SIGetCommand@msg,w,c
  5453  0015C8  6EE1               	movwf	fsr1l,c
  5454  0015CA  0E00               	movlw	0
  5455  0015CC  202B               	addwfc	SIGetCommand@msg+1,w,c
  5456  0015CE  6EE2               	movwf	fsr1h,c
  5457  0015D0  006F FF7F FFE7     	movff	indf2,indf1
  5458  0015D6  2A2C               	incf	SIGetCommand@i,f,c
  5459  0015D8                     l3757:
  5460  0015D8  501F               	movf	_SIByteCounter,w,c
  5461  0015DA  5C2C               	subwf	SIGetCommand@i,w,c
  5462  0015DC  A0D8               	btfss	status,0,c
  5463  0015DE  D7EC               	goto	l3753
  5464                           
  5465                           ;si.c: 264: };si.c: 266: return SIByteCounter;
  5466  0015E0  501F               	movf	_SIByteCounter,w,c
  5467  0015E2  0012               	return		;funcret
  5468  0015E4                     __end_of_SIGetCommand:
  5469                           	opt callstack 0
  5470                           
  5471 ;; *************** function _SIClear *****************
  5472 ;; Defined at:
  5473 ;;		line 283 in file "si.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;		None
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;		None
  5478 ;; Return value:  Size  Location     Type
  5479 ;;                  1    wreg      void 
  5480 ;; Registers used:
  5481 ;;		wreg, status,2
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/0
  5484 ;;		On exit  : 0/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5487 ;;      Params:         0       0       0       0       0       0       0       0       0
  5488 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5489 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5490 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5491 ;;Total ram usage:        0 bytes
  5492 ;; Hardware stack levels used:    1
  5493 ;; Hardware stack levels required when called:    2
  5494 ;; This function calls:
  5495 ;;		Nothing
  5496 ;; This function is called by:
  5497 ;;		_main
  5498 ;; This function uses a non-reentrant model
  5499 ;;
  5500                           
  5501                           	psect	text26
  5502  00176C                     __ptext26:
  5503                           	opt callstack 0
  5504  00176C                     _SIClear:
  5505                           	opt callstack 28
  5506                           
  5507                           ;si.c: 285: SIBitCounter = 0;
  5508                           
  5509                           ;incstack = 0
  5510  00176C  0E00               	movlw	0
  5511  00176E  6E20               	movwf	_SIBitCounter,c
  5512                           
  5513                           ;si.c: 286: SIByteCounter = 0;
  5514  001770  0E00               	movlw	0
  5515  001772  6E1F               	movwf	_SIByteCounter,c
  5516                           
  5517                           ;si.c: 287: SICMDReceived = 0;
  5518  001774  0E00               	movlw	0
  5519  001776  6E1E               	movwf	_SICMDReceived,c
  5520                           
  5521                           ;si.c: 288: SITempByte = 0x00;
  5522  001778  0E00               	movlw	0
  5523  00177A  6E1D               	movwf	_SITempByte,c
  5524  00177C  0012               	return		;funcret
  5525  00177E                     __end_of_SIClear:
  5526                           	opt callstack 0
  5527                           
  5528 ;; *************** function _PGMWriteBlock *****************
  5529 ;; Defined at:
  5530 ;;		line 55 in file "nvm.c"
  5531 ;; Parameters:    Size  Location     Type
  5532 ;;  addr            2    4[COMRAM] unsigned int 
  5533 ;;  data            2    6[COMRAM] PTR unsigned char 
  5534 ;;		 -> main@flashBuffer(64), 
  5535 ;; Auto vars:     Size  Location     Type
  5536 ;;  i               2   10[COMRAM] unsigned int 
  5537 ;; Return value:  Size  Location     Type
  5538 ;;                  1    wreg      void 
  5539 ;; Registers used:
  5540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5541 ;; Tracked objects:
  5542 ;;		On entry : 0/0
  5543 ;;		On exit  : 0/0
  5544 ;;		Unchanged: 0/0
  5545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5546 ;;      Params:         4       0       0       0       0       0       0       0       0
  5547 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5548 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5549 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5550 ;;Total ram usage:        8 bytes
  5551 ;; Hardware stack levels used:    1
  5552 ;; Hardware stack levels required when called:    4
  5553 ;; This function calls:
  5554 ;;		_NVMUnlock
  5555 ;;		_PGMEraseRow
  5556 ;; This function is called by:
  5557 ;;		_main
  5558 ;; This function uses a non-reentrant model
  5559 ;;
  5560                           
  5561                           	psect	text27
  5562  001154                     __ptext27:
  5563                           	opt callstack 0
  5564  001154                     _PGMWriteBlock:
  5565                           	opt callstack 26
  5566                           
  5567                           ;nvm.c: 56: if (addr & 63)
  5568                           
  5569                           ;incstack = 0
  5570  001154  0E3F               	movlw	63
  5571  001156  142E               	andwf	PGMWriteBlock@addr,w,c
  5572  001158  6E32               	movwf	??_PGMWriteBlock& (0+255),c
  5573  00115A  0E00               	movlw	0
  5574  00115C  142F               	andwf	PGMWriteBlock@addr+1,w,c
  5575  00115E  6E33               	movwf	(??_PGMWriteBlock+1)& (0+255),c
  5576  001160  5032               	movf	??_PGMWriteBlock,w,c
  5577  001162  1033               	iorwf	??_PGMWriteBlock+1,w,c
  5578  001164  A4D8               	btfss	status,2,c
  5579  001166  0012               	return	
  5580                           
  5581                           ;nvm.c: 58: if (addr < 0x2000 || (addr + 64) > 0x8000)
  5582  001168  0E20               	movlw	32
  5583  00116A  5C2F               	subwf	PGMWriteBlock@addr+1,w,c
  5584  00116C  A0D8               	btfss	status,0,c
  5585  00116E  0012               	return	
  5586  001170  0E40               	movlw	64
  5587  001172  242E               	addwf	PGMWriteBlock@addr,w,c
  5588  001174  6E32               	movwf	??_PGMWriteBlock& (0+255),c
  5589  001176  0E00               	movlw	0
  5590  001178  202F               	addwfc	PGMWriteBlock@addr+1,w,c
  5591  00117A  6E33               	movwf	(??_PGMWriteBlock+1)& (0+255),c
  5592  00117C  0432               	decf	??_PGMWriteBlock,w,c
  5593  00117E  0E80               	movlw	128
  5594  001180  5833               	subwfb	??_PGMWriteBlock+1,w,c
  5595  001182  B0D8               	btfsc	status,0,c
  5596  001184  0012               	return	
  5597                           
  5598                           ;nvm.c: 61: uint16_t i;;nvm.c: 70: PGMEraseRow(addr);
  5599  001186  0060  F0B8  F02A   	movff	PGMWriteBlock@addr,PGMEraseRow@addr
  5600  00118C  0060  F0BC  F02B   	movff	PGMWriteBlock@addr+1,PGMEraseRow@addr+1
  5601  001192  EC67  F00A         	call	_PGMEraseRow	;wreg free
  5602  001196  000A               	tblrd		*-	;# 
  5603                           
  5604                           ;nvm.c: 74: for (i = 0; i < 64; i++) {
  5605  001198  0E00               	movlw	0
  5606  00119A  6E35               	movwf	PGMWriteBlock@i+1,c
  5607  00119C  0E00               	movlw	0
  5608  00119E  6E34               	movwf	PGMWriteBlock@i,c
  5609  0011A0                     l3937:
  5610                           
  5611                           ;nvm.c: 75: TABLAT = data[i];
  5612  0011A0  5034               	movf	PGMWriteBlock@i,w,c
  5613  0011A2  2430               	addwf	PGMWriteBlock@data,w,c
  5614  0011A4  6ED9               	movwf	fsr2l,c
  5615  0011A6  5035               	movf	PGMWriteBlock@i+1,w,c
  5616  0011A8  2031               	addwfc	PGMWriteBlock@data+1,w,c
  5617  0011AA  6EDA               	movwf	fsr2h,c
  5618  0011AC  50DF               	movf	indf2,w,c
  5619  0011AE  6EF5               	movwf	tablat,c	;volatile
  5620  0011B0  000F               	tblwt		+*	;# 
  5621  0011B2  4A34               	infsnz	PGMWriteBlock@i,f,c
  5622  0011B4  2A35               	incf	PGMWriteBlock@i+1,f,c
  5623  0011B6  5035               	movf	PGMWriteBlock@i+1,w,c
  5624  0011B8  E104               	bnz	u3120
  5625  0011BA  0E40               	movlw	64
  5626  0011BC  5C34               	subwf	PGMWriteBlock@i,w,c
  5627  0011BE  A0D8               	btfss	status,0,c
  5628  0011C0  D7EF               	goto	l3937
  5629  0011C2                     u3120:
  5630                           
  5631                           ;nvm.c: 77: };nvm.c: 79: NVMCON1bits.REG0 = 0;
  5632  0011C2  0139               	movlb	57	; () banked
  5633  0011C4  9DE5               	bcf	229,6,b	;volsfr
  5634                           
  5635                           ;nvm.c: 80: NVMCON1bits.REG1 = 1;
  5636  0011C6  8FE5               	bsf	229,7,b	;volsfr
  5637                           
  5638                           ;nvm.c: 81: NVMCON1bits.WREN = 1;
  5639  0011C8  85E5               	bsf	229,2,b	;volsfr
  5640                           
  5641                           ;nvm.c: 82: NVMCON1bits.FREE = 0;
  5642  0011CA  99E5               	bcf	229,4,b	;volsfr
  5643                           
  5644                           ; BSR set to: 57
  5645                           ;nvm.c: 84: NVMUnlock();
  5646  0011CC  ECBF  F00B         	call	_NVMUnlock	;wreg free
  5647                           
  5648                           ;nvm.c: 86: NVMCON1bits.WREN = 0;
  5649  0011D0  0139               	movlb	57	; () banked
  5650  0011D2  95E5               	bcf	229,2,b	;volsfr
  5651  0011D4  0012               	return		;funcret
  5652  0011D6                     __end_of_PGMWriteBlock:
  5653                           	opt callstack 0
  5654                           
  5655 ;; *************** function _PGMEraseRow *****************
  5656 ;; Defined at:
  5657 ;;		line 37 in file "nvm.c"
  5658 ;; Parameters:    Size  Location     Type
  5659 ;;  addr            2    0[COMRAM] unsigned int 
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;		None
  5662 ;; Return value:  Size  Location     Type
  5663 ;;                  1    wreg      void 
  5664 ;; Registers used:
  5665 ;;		wreg, status,2, status,0, cstack
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5671 ;;      Params:         2       0       0       0       0       0       0       0       0
  5672 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5673 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5674 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5675 ;;Total ram usage:        4 bytes
  5676 ;; Hardware stack levels used:    1
  5677 ;; Hardware stack levels required when called:    3
  5678 ;; This function calls:
  5679 ;;		_NVMUnlock
  5680 ;; This function is called by:
  5681 ;;		_PGMWriteBlock
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685                           	psect	text28
  5686  0014CE                     __ptext28:
  5687                           	opt callstack 0
  5688  0014CE                     _PGMEraseRow:
  5689                           	opt callstack 26
  5690                           
  5691                           ;nvm.c: 38: if (addr & 63)
  5692                           
  5693                           ;incstack = 0
  5694  0014CE  0E3F               	movlw	63
  5695  0014D0  142A               	andwf	PGMEraseRow@addr,w,c
  5696  0014D2  6E2C               	movwf	??_PGMEraseRow& (0+255),c
  5697  0014D4  0E00               	movlw	0
  5698  0014D6  142B               	andwf	PGMEraseRow@addr+1,w,c
  5699  0014D8  6E2D               	movwf	(??_PGMEraseRow+1)& (0+255),c
  5700  0014DA  502C               	movf	??_PGMEraseRow,w,c
  5701  0014DC  102D               	iorwf	??_PGMEraseRow+1,w,c
  5702  0014DE  A4D8               	btfss	status,2,c
  5703  0014E0  0012               	return	
  5704                           
  5705                           ;nvm.c: 40: if (addr < 0x2000 || (addr + 64) > 0x8000)
  5706  0014E2  0E20               	movlw	32
  5707  0014E4  5C2B               	subwf	PGMEraseRow@addr+1,w,c
  5708  0014E6  A0D8               	btfss	status,0,c
  5709  0014E8  0012               	return	
  5710  0014EA  0E40               	movlw	64
  5711  0014EC  242A               	addwf	PGMEraseRow@addr,w,c
  5712  0014EE  6E2C               	movwf	??_PGMEraseRow& (0+255),c
  5713  0014F0  0E00               	movlw	0
  5714  0014F2  202B               	addwfc	PGMEraseRow@addr+1,w,c
  5715  0014F4  6E2D               	movwf	(??_PGMEraseRow+1)& (0+255),c
  5716  0014F6  042C               	decf	??_PGMEraseRow,w,c
  5717  0014F8  0E80               	movlw	128
  5718  0014FA  582D               	subwfb	??_PGMEraseRow+1,w,c
  5719  0014FC  B0D8               	btfsc	status,0,c
  5720  0014FE  0012               	return	
  5721                           
  5722                           ;nvm.c: 43: NVMCON1 = 0;
  5723  001500  0E00               	movlw	0
  5724  001502  0139               	movlb	57	; () banked
  5725  001504  6FE5               	movwf	229,b	;volsfr
  5726                           
  5727                           ;nvm.c: 44: TBLPTRU = 0;
  5728  001506  0E00               	movlw	0
  5729  001508  6EF8               	movwf	tblptru,c	;volatile
  5730                           
  5731                           ;nvm.c: 45: TBLPTRH = (addr >> 8) & 0xFF;
  5732  00150A  502B               	movf	PGMEraseRow@addr+1,w,c
  5733  00150C  6EF7               	movwf	tblptrh,c	;volatile
  5734                           
  5735                           ; BSR set to: 57
  5736                           ;nvm.c: 46: TBLPTRL = addr & 0xFF;
  5737  00150E  0060  F0AB  FFF6   	movff	PGMEraseRow@addr,tblptrl	;volatile
  5738                           
  5739                           ; BSR set to: 57
  5740                           ;nvm.c: 47: NVMCON1bits.REG0 = 0;
  5741  001514  9DE5               	bcf	229,6,b	;volsfr
  5742                           
  5743                           ; BSR set to: 57
  5744                           ;nvm.c: 48: NVMCON1bits.REG1 = 1;
  5745  001516  8FE5               	bsf	229,7,b	;volsfr
  5746                           
  5747                           ; BSR set to: 57
  5748                           ;nvm.c: 49: NVMCON1bits.FREE = 1;
  5749  001518  89E5               	bsf	229,4,b	;volsfr
  5750                           
  5751                           ; BSR set to: 57
  5752                           ;nvm.c: 50: NVMCON1bits.WREN = 1;
  5753  00151A  85E5               	bsf	229,2,b	;volsfr
  5754                           
  5755                           ; BSR set to: 57
  5756                           ;nvm.c: 51: NVMUnlock();
  5757  00151C  ECBF  F00B         	call	_NVMUnlock	;wreg free
  5758                           
  5759                           ;nvm.c: 52: NVMCON1bits.WREN = 0;
  5760  001520  0139               	movlb	57	; () banked
  5761  001522  95E5               	bcf	229,2,b	;volsfr
  5762  001524  0012               	return		;funcret
  5763  001526                     __end_of_PGMEraseRow:
  5764                           	opt callstack 0
  5765                           
  5766 ;; *************** function _NVMUnlock *****************
  5767 ;; Defined at:
  5768 ;;		line 29 in file "nvm.c"
  5769 ;; Parameters:    Size  Location     Type
  5770 ;;		None
  5771 ;; Auto vars:     Size  Location     Type
  5772 ;;		None
  5773 ;; Return value:  Size  Location     Type
  5774 ;;                  1    wreg      void 
  5775 ;; Registers used:
  5776 ;;		wreg, status,2
  5777 ;; Tracked objects:
  5778 ;;		On entry : 0/0
  5779 ;;		On exit  : 0/0
  5780 ;;		Unchanged: 0/0
  5781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5782 ;;      Params:         0       0       0       0       0       0       0       0       0
  5783 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5784 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5785 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5786 ;;Total ram usage:        0 bytes
  5787 ;; Hardware stack levels used:    1
  5788 ;; Hardware stack levels required when called:    2
  5789 ;; This function calls:
  5790 ;;		Nothing
  5791 ;; This function is called by:
  5792 ;;		_PGMEraseRow
  5793 ;;		_PGMWriteBlock
  5794 ;;		_EEPROMWriteByte
  5795 ;; This function uses a non-reentrant model
  5796 ;;
  5797                           
  5798                           	psect	text29
  5799  00177E                     __ptext29:
  5800                           	opt callstack 0
  5801  00177E                     _NVMUnlock:
  5802                           	opt callstack 25
  5803                           
  5804                           ;nvm.c: 30: INTCON0bits.GIE = 0;
  5805                           
  5806                           ;incstack = 0
  5807  00177E  9ED2               	bcf	16338,7,c	;volatile
  5808                           
  5809                           ;nvm.c: 31: NVMCON2 = 0x55;
  5810  001780  0E55               	movlw	85
  5811  001782  0139               	movlb	57	; () banked
  5812  001784  6FE6               	movwf	230,b	;volsfr
  5813                           
  5814                           ;nvm.c: 32: NVMCON2 = 0xAA;
  5815  001786  0EAA               	movlw	170
  5816  001788  6FE6               	movwf	230,b	;volsfr
  5817                           
  5818                           ; BSR set to: 57
  5819                           ;nvm.c: 33: NVMCON1bits.WR = 1;
  5820  00178A  83E5               	bsf	229,1,b	;volsfr
  5821                           
  5822                           ; BSR set to: 57
  5823                           ;nvm.c: 34: INTCON0bits.GIE = 1;
  5824  00178C  8ED2               	bsf	16338,7,c	;volatile
  5825                           
  5826                           ; BSR set to: 57
  5827  00178E  0012               	return		;funcret
  5828  001790                     __end_of_NVMUnlock:
  5829                           	opt callstack 0
  5830                           
  5831 ;; *************** function _PGMReadBlock *****************
  5832 ;; Defined at:
  5833 ;;		line 89 in file "nvm.c"
  5834 ;; Parameters:    Size  Location     Type
  5835 ;;  addr            2    0[COMRAM] unsigned int 
  5836 ;;  data            2    2[COMRAM] PTR unsigned char 
  5837 ;;		 -> main@flashBuffer(64), 
  5838 ;; Auto vars:     Size  Location     Type
  5839 ;;  i               2    6[COMRAM] unsigned int 
  5840 ;; Return value:  Size  Location     Type
  5841 ;;                  1    wreg      void 
  5842 ;; Registers used:
  5843 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5844 ;; Tracked objects:
  5845 ;;		On entry : 0/0
  5846 ;;		On exit  : 0/0
  5847 ;;		Unchanged: 0/0
  5848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5849 ;;      Params:         4       0       0       0       0       0       0       0       0
  5850 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5851 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5852 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5853 ;;Total ram usage:        8 bytes
  5854 ;; Hardware stack levels used:    1
  5855 ;; Hardware stack levels required when called:    2
  5856 ;; This function calls:
  5857 ;;		Nothing
  5858 ;; This function is called by:
  5859 ;;		_main
  5860 ;; This function uses a non-reentrant model
  5861 ;;
  5862                           
  5863                           	psect	text30
  5864  0012CC                     __ptext30:
  5865                           	opt callstack 0
  5866  0012CC                     _PGMReadBlock:
  5867                           	opt callstack 28
  5868                           
  5869                           ;nvm.c: 90: if (addr & 63)
  5870                           
  5871                           ; BSR set to: 57
  5872                           ;incstack = 0
  5873  0012CC  0E3F               	movlw	63
  5874  0012CE  142A               	andwf	PGMReadBlock@addr,w,c
  5875  0012D0  6E2E               	movwf	??_PGMReadBlock& (0+255),c
  5876  0012D2  0E00               	movlw	0
  5877  0012D4  142B               	andwf	PGMReadBlock@addr+1,w,c
  5878  0012D6  6E2F               	movwf	(??_PGMReadBlock+1)& (0+255),c
  5879  0012D8  502E               	movf	??_PGMReadBlock,w,c
  5880  0012DA  102F               	iorwf	??_PGMReadBlock+1,w,c
  5881  0012DC  A4D8               	btfss	status,2,c
  5882  0012DE  0012               	return	
  5883                           
  5884                           ;nvm.c: 92: if (addr < 0x2000 || (addr + 64) > 0x8000)
  5885  0012E0  0E20               	movlw	32
  5886  0012E2  5C2B               	subwf	PGMReadBlock@addr+1,w,c
  5887  0012E4  A0D8               	btfss	status,0,c
  5888  0012E6  0012               	return	
  5889  0012E8  0E40               	movlw	64
  5890  0012EA  242A               	addwf	PGMReadBlock@addr,w,c
  5891  0012EC  6E2E               	movwf	??_PGMReadBlock& (0+255),c
  5892  0012EE  0E00               	movlw	0
  5893  0012F0  202B               	addwfc	PGMReadBlock@addr+1,w,c
  5894  0012F2  6E2F               	movwf	(??_PGMReadBlock+1)& (0+255),c
  5895  0012F4  042E               	decf	??_PGMReadBlock,w,c
  5896  0012F6  0E80               	movlw	128
  5897  0012F8  582F               	subwfb	??_PGMReadBlock+1,w,c
  5898  0012FA  B0D8               	btfsc	status,0,c
  5899  0012FC  0012               	return	
  5900                           
  5901                           ;nvm.c: 95: uint16_t i;;nvm.c: 98: TBLPTRU = 0;
  5902  0012FE  0E00               	movlw	0
  5903  001300  6EF8               	movwf	tblptru,c	;volatile
  5904                           
  5905                           ;nvm.c: 99: TBLPTRH = (addr >> 8) & 0xFF;
  5906  001302  502B               	movf	PGMReadBlock@addr+1,w,c
  5907  001304  6EF7               	movwf	tblptrh,c	;volatile
  5908                           
  5909                           ;nvm.c: 100: TBLPTRL = addr & 0xFF;
  5910  001306  0060  F0AB  FFF6   	movff	PGMReadBlock@addr,tblptrl	;volatile
  5911                           
  5912                           ;nvm.c: 103: NVMCON1bits.REG0 = 0;
  5913  00130C  0139               	movlb	57	; () banked
  5914  00130E  9DE5               	bcf	229,6,b	;volsfr
  5915                           
  5916                           ; BSR set to: 57
  5917                           ;nvm.c: 104: NVMCON1bits.REG1 = 1;
  5918  001310  8FE5               	bsf	229,7,b	;volsfr
  5919                           
  5920                           ;nvm.c: 107: for (i = 0; i < 64; i++) {
  5921  001312  0E00               	movlw	0
  5922  001314  6E31               	movwf	PGMReadBlock@i+1,c
  5923  001316  0E00               	movlw	0
  5924  001318  6E30               	movwf	PGMReadBlock@i,c
  5925  00131A                     l317:
  5926  00131A  0009               	tblrd		*+	;# 
  5927                           
  5928                           ;nvm.c: 109: data[i] = TABLAT;
  5929  00131C  5030               	movf	PGMReadBlock@i,w,c
  5930  00131E  242C               	addwf	PGMReadBlock@data,w,c
  5931  001320  6ED9               	movwf	fsr2l,c
  5932  001322  5031               	movf	PGMReadBlock@i+1,w,c
  5933  001324  202D               	addwfc	PGMReadBlock@data+1,w,c
  5934  001326  6EDA               	movwf	fsr2h,c
  5935  001328  006F FFD7 FFDF     	movff	tablat,indf2	;volatile
  5936  00132E  4A30               	infsnz	PGMReadBlock@i,f,c
  5937  001330  2A31               	incf	PGMReadBlock@i+1,f,c
  5938  001332  5031               	movf	PGMReadBlock@i+1,w,c
  5939  001334  E105               	bnz	u2120
  5940  001336  0E40               	movlw	64
  5941  001338  5C30               	subwf	PGMReadBlock@i,w,c
  5942  00133A  B0D8               	btfsc	status,0,c
  5943  00133C  0012               	return	
  5944  00133E  D7ED               	goto	l317
  5945  001340                     u2120:
  5946  001340  0012               	return		;funcret
  5947  001342                     __end_of_PGMReadBlock:
  5948                           	opt callstack 0
  5949                           
  5950 ;; *************** function _ADCInit *****************
  5951 ;; Defined at:
  5952 ;;		line 41 in file "adc.c"
  5953 ;; Parameters:    Size  Location     Type
  5954 ;;  sxCh            1    wreg     unsigned char 
  5955 ;;  syCh            1    0[COMRAM] unsigned char 
  5956 ;;  cxCh            1    1[COMRAM] unsigned char 
  5957 ;;  cyCh            1    2[COMRAM] unsigned char 
  5958 ;; Auto vars:     Size  Location     Type
  5959 ;;  sxCh            1    7[COMRAM] unsigned char 
  5960 ;;  i               1    8[COMRAM] unsigned char 
  5961 ;; Return value:  Size  Location     Type
  5962 ;;                  1    wreg      void 
  5963 ;; Registers used:
  5964 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5965 ;; Tracked objects:
  5966 ;;		On entry : 0/0
  5967 ;;		On exit  : 0/0
  5968 ;;		Unchanged: 0/0
  5969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5970 ;;      Params:         3       0       0       0       0       0       0       0       0
  5971 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5972 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5973 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5974 ;;Total ram usage:        9 bytes
  5975 ;; Hardware stack levels used:    1
  5976 ;; Hardware stack levels required when called:    2
  5977 ;; This function calls:
  5978 ;;		Nothing
  5979 ;; This function is called by:
  5980 ;;		_main
  5981 ;; This function uses a non-reentrant model
  5982 ;;
  5983                           
  5984                           	psect	text31
  5985  0008E8                     __ptext31:
  5986                           	opt callstack 0
  5987  0008E8                     _ADCInit:
  5988                           	opt callstack 28
  5989                           
  5990                           ;incstack = 0
  5991                           ;ADCInit@sxCh stored from wreg
  5992  0008E8  6E31               	movwf	ADCInit@sxCh,c
  5993                           
  5994                           ;adc.c: 42: uint8_t i;;adc.c: 45: ADCON0 = 0x80;
  5995  0008EA  0E80               	movlw	128
  5996  0008EC  013E               	movlb	62	; () banked
  5997  0008EE  6FF8               	movwf	248,b	;volatile
  5998                           
  5999                           ;adc.c: 47: ADCON1 = 0x00;
  6000  0008F0  0E00               	movlw	0
  6001  0008F2  6FF9               	movwf	249,b	;volatile
  6002                           
  6003                           ;adc.c: 48: ADCON2 = 0x03;
  6004  0008F4  0E03               	movlw	3
  6005  0008F6  6FFA               	movwf	250,b	;volatile
  6006                           
  6007                           ; BSR set to: 62
  6008                           ;adc.c: 49: ADCON2bits.CRS = 6;
  6009  0008F8  51FA               	movf	250,w,b	;volatile
  6010  0008FA  0B8F               	andlw	-113
  6011  0008FC  0960               	iorlw	96
  6012  0008FE  6FFA               	movwf	250,b	;volatile
  6013                           
  6014                           ; BSR set to: 62
  6015                           ;adc.c: 50: ADCON3 = 0x07;
  6016  000900  0E07               	movlw	7
  6017  000902  6FFB               	movwf	251,b	;volatile
  6018                           
  6019                           ; BSR set to: 62
  6020                           ;adc.c: 51: ADCLK = 0x3F;
  6021  000904  0E3F               	movlw	63
  6022  000906  6FFF               	movwf	255,b	;volatile
  6023                           
  6024                           ; BSR set to: 62
  6025                           ;adc.c: 52: ADREF = 0x00;
  6026  000908  0E00               	movlw	0
  6027  00090A  6FFD               	movwf	253,b	;volatile
  6028                           
  6029                           ; BSR set to: 62
  6030                           ;adc.c: 53: ADACQL = 0xFF;
  6031  00090C  69F3               	setf	243,b	;volatile
  6032                           
  6033                           ; BSR set to: 62
  6034                           ;adc.c: 55: ADRPT = 4;
  6035  00090E  0E04               	movlw	4
  6036  000910  6FEC               	movwf	236,b	;volatile
  6037                           
  6038                           ; BSR set to: 62
  6039                           ;adc.c: 56: ADACT = 0x1D;
  6040  000912  0E1D               	movlw	29
  6041  000914  6FFE               	movwf	254,b	;volatile
  6042                           
  6043                           ; BSR set to: 62
  6044                           ;adc.c: 59: ADCPbits.CPON = 1;
  6045  000916  8FD7               	bsf	215,7,b	;volatile
  6046  000918                     l412:
  6047                           
  6048                           ; BSR set to: 62
  6049  000918  A1D7               	btfss	215,0,b	;volatile
  6050  00091A  D7FE               	goto	l412
  6051                           
  6052                           ; BSR set to: 62
  6053                           ;adc.c: 62: ADCChannels[0] = sxCh;
  6054  00091C  0060  F0C4  F055   	movff	ADCInit@sxCh,_ADCChannels
  6055                           
  6056                           ;adc.c: 63: ADCChannels[1] = syCh;
  6057  000922  0060  F0A8  F056   	movff	ADCInit@syCh,_ADCChannels+1
  6058                           
  6059                           ;adc.c: 64: ADCChannels[2] = cxCh;
  6060  000928  0060  F0AC  F057   	movff	ADCInit@cxCh,_ADCChannels+2
  6061                           
  6062                           ;adc.c: 65: ADCChannels[3] = cyCh;
  6063  00092E  0060  F0B0  F058   	movff	ADCInit@cyCh,_ADCChannels+3
  6064                           
  6065                           ;adc.c: 68: ADTIF = 0;
  6066  000934  0139               	movlb	57	; () banked
  6067  000936  97A1               	bcf	161,3,b	;volatile
  6068                           
  6069                           ; BSR set to: 57
  6070                           ;adc.c: 69: for (i = 0; i < 6; i++) {
  6071  000938  0E00               	movlw	0
  6072  00093A  6E32               	movwf	ADCInit@i,c
  6073  00093C                     l3321:
  6074                           
  6075                           ; BSR set to: 57
  6076                           ;adc.c: 70: ADPCH = ADCChannels[i];
  6077  00093C  0E55               	movlw	low _ADCChannels
  6078  00093E  2432               	addwf	ADCInit@i,w,c
  6079  000940  6ED9               	movwf	fsr2l,c
  6080  000942  6ADA               	clrf	fsr2h,c
  6081  000944  0E00               	movlw	high _ADCChannels
  6082  000946  22DA               	addwfc	fsr2h,f,c
  6083  000948  50DF               	movf	indf2,w,c
  6084  00094A  013E               	movlb	62	; () banked
  6085  00094C  6FF1               	movwf	241,b	;volatile
  6086  00094E                     l417:
  6087  00094E  0139               	movlb	57	; () banked
  6088  000950  A7A1               	btfss	161,3,b	;volatile
  6089  000952  D7FD               	goto	l417
  6090                           
  6091                           ; BSR set to: 57
  6092                           ;adc.c: 72: ADTIF = 0;
  6093  000954  97A1               	bcf	161,3,b	;volatile
  6094                           
  6095                           ; BSR set to: 57
  6096                           ;adc.c: 73: ADCValues[i] = ADFLTRL;
  6097  000956  0E4F               	movlw	low _ADCValues
  6098  000958  2432               	addwf	ADCInit@i,w,c
  6099  00095A  6ED9               	movwf	fsr2l,c
  6100  00095C  6ADA               	clrf	fsr2h,c
  6101  00095E  0E00               	movlw	high _ADCValues
  6102  000960  22DA               	addwfc	fsr2h,f,c
  6103  000962  006F FB9B FFDF     	movff	16102,indf2	;volatile
  6104                           
  6105                           ; BSR set to: 57
  6106  000968  2A32               	incf	ADCInit@i,f,c
  6107                           
  6108                           ; BSR set to: 57
  6109  00096A  0E05               	movlw	5
  6110  00096C  6432               	cpfsgt	ADCInit@i,c
  6111  00096E  D7E6               	goto	l3321
  6112                           
  6113                           ; BSR set to: 57
  6114  000970  0139               	banksel	14831	;# 
  6115  000972  0E55               	movlw	85	;# 
  6116  000974  6FEF               	movwf	14831,b	;# 
  6117  000976  0EAA               	movlw	170	;# 
  6118  000978  6FEF               	movwf	14831,b	;# 
  6119  00097A  81EF               	bsf	14831,0,b	;# 
  6120                           
  6121                           ;adc.c: 85: DMA1SSAU = ((uint32_t)ADCChannels >> 16) & 0xFF;
  6122  00097C  0E55               	movlw	low _ADCChannels
  6123  00097E  6E2D               	movwf	??_ADCInit& (0+255),c
  6124  000980  0E00               	movlw	high _ADCChannels
  6125  000982  6E2E               	movwf	(??_ADCInit+1)& (0+255),c
  6126  000984  6A2F               	clrf	(??_ADCInit+2)& (0+255),c
  6127  000986  6A30               	clrf	(??_ADCInit+3)& (0+255),c
  6128  000988  0E11               	movlw	17
  6129  00098A  D005               	goto	u2190
  6130  00098C                     u2195:
  6131  00098C  90D8               	bcf	status,0,c
  6132  00098E  3230               	rrcf	??_ADCInit+3,f,c
  6133  000990  322F               	rrcf	??_ADCInit+2,f,c
  6134  000992  322E               	rrcf	??_ADCInit+1,f,c
  6135  000994  322D               	rrcf	??_ADCInit,f,c
  6136  000996                     u2190:
  6137  000996  2EE8               	decfsz	wreg,f,c
  6138  000998  D7F9               	goto	u2195
  6139  00099A  502D               	movf	??_ADCInit,w,c
  6140  00099C  013B               	movlb	59	; () banked
  6141  00099E  6FFB               	movwf	251,b	;volatile
  6142                           
  6143                           ;adc.c: 86: DMA1SSAH = ((uint32_t)ADCChannels >> 8) & 0xFF;
  6144  0009A0  0E55               	movlw	low _ADCChannels
  6145  0009A2  6E2D               	movwf	??_ADCInit& (0+255),c
  6146  0009A4  0E00               	movlw	high _ADCChannels
  6147  0009A6  6E2E               	movwf	(??_ADCInit+1)& (0+255),c
  6148  0009A8  6A2F               	clrf	(??_ADCInit+2)& (0+255),c
  6149  0009AA  6A30               	clrf	(??_ADCInit+3)& (0+255),c
  6150  0009AC  0060  F0B8  F02D   	movff	??_ADCInit+1,??_ADCInit
  6151  0009B2  0060  F0BC  F02E   	movff	??_ADCInit+2,??_ADCInit+1
  6152  0009B8  0060  F0C0  F02F   	movff	??_ADCInit+3,??_ADCInit+2
  6153  0009BE  6A30               	clrf	??_ADCInit+3,c
  6154  0009C0  502D               	movf	??_ADCInit,w,c
  6155  0009C2  6FFA               	movwf	250,b	;volatile
  6156                           
  6157                           ; BSR set to: 59
  6158                           ;adc.c: 87: DMA1SSAL = ((uint32_t)ADCChannels) & 0xFF;
  6159  0009C4  0E55               	movlw	low (low _ADCChannels)
  6160  0009C6  6FF9               	movwf	249,b	;volatile
  6161                           
  6162                           ; BSR set to: 59
  6163                           ;adc.c: 88: DMA1DSAH = ((uint32_t)&ADPCH >> 8) & 0xFF;
  6164  0009C8  0EF1               	movlw	241
  6165  0009CA  6E2D               	movwf	??_ADCInit& (0+255),c
  6166  0009CC  0E3E               	movlw	62
  6167  0009CE  6E2E               	movwf	(??_ADCInit+1)& (0+255),c
  6168  0009D0  6A2F               	clrf	(??_ADCInit+2)& (0+255),c
  6169  0009D2  6A30               	clrf	(??_ADCInit+3)& (0+255),c
  6170  0009D4  0060  F0B8  F02D   	movff	??_ADCInit+1,??_ADCInit
  6171  0009DA  0060  F0BC  F02E   	movff	??_ADCInit+2,??_ADCInit+1
  6172  0009E0  0060  F0C0  F02F   	movff	??_ADCInit+3,??_ADCInit+2
  6173  0009E6  6A30               	clrf	??_ADCInit+3,c
  6174  0009E8  502D               	movf	??_ADCInit,w,c
  6175  0009EA  6FF1               	movwf	241,b	;volatile
  6176                           
  6177                           ;adc.c: 89: DMA1DSAL = ((uint32_t)&ADPCH) & 0xFF;
  6178  0009EC  0EF1               	movlw	241
  6179  0009EE  6FF0               	movwf	240,b	;volatile
  6180                           
  6181                           ;adc.c: 90: DMA1SSZH = 0x00;
  6182  0009F0  0E00               	movlw	0
  6183  0009F2  6FF8               	movwf	248,b	;volatile
  6184                           
  6185                           ;adc.c: 91: DMA1SSZL = 6;
  6186  0009F4  0E06               	movlw	6
  6187  0009F6  6FF7               	movwf	247,b	;volatile
  6188                           
  6189                           ;adc.c: 92: DMA1DSZH = 0x00;
  6190  0009F8  0E00               	movlw	0
  6191  0009FA  6FEF               	movwf	239,b	;volatile
  6192                           
  6193                           ;adc.c: 93: DMA1DSZL = 0x01;
  6194  0009FC  0E01               	movlw	1
  6195  0009FE  6FEE               	movwf	238,b	;volatile
  6196                           
  6197                           ;adc.c: 94: DMA1SIRQ = 42;
  6198  000A00  0E2A               	movlw	42
  6199  000A02  6FFF               	movwf	255,b	;volatile
  6200                           
  6201                           ;adc.c: 95: DMA1CON1bits.DMODE = 0b00;
  6202  000A04  0E3F               	movlw	-193
  6203  000A06  17FD               	andwf	253,f,b	;volatile
  6204                           
  6205                           ; BSR set to: 59
  6206                           ;adc.c: 96: DMA1CON1bits.DSTP = 0;
  6207  000A08  9BFD               	bcf	253,5,b	;volatile
  6208                           
  6209                           ;adc.c: 97: DMA1CON1bits.SMR = 0b00;
  6210  000A0A  0EE7               	movlw	-25
  6211  000A0C  17FD               	andwf	253,f,b	;volatile
  6212                           
  6213                           ;adc.c: 98: DMA1CON1bits.SMODE = 0b01;
  6214  000A0E  51FD               	movf	253,w,b	;volatile
  6215  000A10  0BF9               	andlw	-7
  6216  000A12  0902               	iorlw	2
  6217  000A14  6FFD               	movwf	253,b	;volatile
  6218                           
  6219                           ; BSR set to: 59
  6220                           ;adc.c: 99: DMA1CON1bits.SSTP = 0;
  6221  000A16  91FD               	bcf	253,0,b	;volatile
  6222                           
  6223                           ;adc.c: 100: DMA1CON0 = 0xC0;
  6224  000A18  0EC0               	movlw	192
  6225  000A1A  6FFC               	movwf	252,b	;volatile
  6226                           
  6227                           ;adc.c: 103: DMA2SSAU = 0;
  6228  000A1C  0E00               	movlw	0
  6229  000A1E  6FDB               	movwf	219,b	;volatile
  6230                           
  6231                           ; BSR set to: 59
  6232                           ;adc.c: 104: DMA2SSAH = ((uint32_t)&ADFLTRL >> 8) & 0xFF;
  6233  000A20  0EE6               	movlw	230
  6234  000A22  6E2D               	movwf	??_ADCInit& (0+255),c
  6235  000A24  0E3E               	movlw	62
  6236  000A26  6E2E               	movwf	(??_ADCInit+1)& (0+255),c
  6237  000A28  6A2F               	clrf	(??_ADCInit+2)& (0+255),c
  6238  000A2A  6A30               	clrf	(??_ADCInit+3)& (0+255),c
  6239  000A2C  0060  F0B8  F02D   	movff	??_ADCInit+1,??_ADCInit
  6240  000A32  0060  F0BC  F02E   	movff	??_ADCInit+2,??_ADCInit+1
  6241  000A38  0060  F0C0  F02F   	movff	??_ADCInit+3,??_ADCInit+2
  6242  000A3E  6A30               	clrf	??_ADCInit+3,c
  6243  000A40  502D               	movf	??_ADCInit,w,c
  6244  000A42  6FDA               	movwf	218,b	;volatile
  6245                           
  6246                           ; BSR set to: 59
  6247                           ;adc.c: 105: DMA2SSAL = ((uint32_t)&ADFLTRL) & 0xFF;
  6248  000A44  0EE6               	movlw	230
  6249  000A46  6FD9               	movwf	217,b	;volatile
  6250                           
  6251                           ;adc.c: 106: DMA2DSAH = ((uint32_t)ADCValues >> 8) & 0xFF;
  6252  000A48  0E4F               	movlw	low _ADCValues
  6253  000A4A  6E2D               	movwf	??_ADCInit& (0+255),c
  6254  000A4C  0E00               	movlw	high _ADCValues
  6255  000A4E  6E2E               	movwf	(??_ADCInit+1)& (0+255),c
  6256  000A50  6A2F               	clrf	(??_ADCInit+2)& (0+255),c
  6257  000A52  6A30               	clrf	(??_ADCInit+3)& (0+255),c
  6258  000A54  0060  F0B8  F02D   	movff	??_ADCInit+1,??_ADCInit
  6259  000A5A  0060  F0BC  F02E   	movff	??_ADCInit+2,??_ADCInit+1
  6260  000A60  0060  F0C0  F02F   	movff	??_ADCInit+3,??_ADCInit+2
  6261  000A66  6A30               	clrf	??_ADCInit+3,c
  6262  000A68  502D               	movf	??_ADCInit,w,c
  6263  000A6A  6FD1               	movwf	209,b	;volatile
  6264                           
  6265                           ; BSR set to: 59
  6266                           ;adc.c: 107: DMA2DSAL = ((uint32_t)ADCValues) & 0xFF;
  6267  000A6C  0E4F               	movlw	low (low _ADCValues)
  6268  000A6E  6FD0               	movwf	208,b	;volatile
  6269                           
  6270                           ; BSR set to: 59
  6271                           ;adc.c: 108: DMA2SSZH = 0x00;
  6272  000A70  0E00               	movlw	0
  6273  000A72  6FD8               	movwf	216,b	;volatile
  6274                           
  6275                           ; BSR set to: 59
  6276                           ;adc.c: 109: DMA2SSZL = 0x01;
  6277  000A74  0E01               	movlw	1
  6278  000A76  6FD7               	movwf	215,b	;volatile
  6279                           
  6280                           ; BSR set to: 59
  6281                           ;adc.c: 110: DMA2DSZH = 0x00;
  6282  000A78  0E00               	movlw	0
  6283  000A7A  6FCF               	movwf	207,b	;volatile
  6284                           
  6285                           ; BSR set to: 59
  6286                           ;adc.c: 111: DMA2DSZL = 6;
  6287  000A7C  0E06               	movlw	6
  6288  000A7E  6FCE               	movwf	206,b	;volatile
  6289                           
  6290                           ; BSR set to: 59
  6291                           ;adc.c: 112: DMA2SIRQ = 11;
  6292  000A80  0E0B               	movlw	11
  6293  000A82  6FDF               	movwf	223,b	;volatile
  6294                           
  6295                           ; BSR set to: 59
  6296                           ;adc.c: 113: DMA2CON1bits.DMODE = 0b01;
  6297  000A84  51DD               	movf	221,w,b	;volatile
  6298  000A86  0B3F               	andlw	-193
  6299  000A88  0940               	iorlw	64
  6300  000A8A  6FDD               	movwf	221,b	;volatile
  6301                           
  6302                           ; BSR set to: 59
  6303                           ;adc.c: 114: DMA2CON1bits.DSTP = 0;
  6304  000A8C  9BDD               	bcf	221,5,b	;volatile
  6305                           
  6306                           ; BSR set to: 59
  6307                           ;adc.c: 115: DMA2CON1bits.SMR = 0b00;
  6308  000A8E  0EE7               	movlw	-25
  6309  000A90  17DD               	andwf	221,f,b	;volatile
  6310                           
  6311                           ; BSR set to: 59
  6312                           ;adc.c: 116: DMA2CON1bits.SMODE = 0b00;
  6313  000A92  0EF9               	movlw	-7
  6314  000A94  17DD               	andwf	221,f,b	;volatile
  6315                           
  6316                           ; BSR set to: 59
  6317                           ;adc.c: 117: DMA2CON1bits.SSTP = 0;
  6318  000A96  91DD               	bcf	221,0,b	;volatile
  6319                           
  6320                           ; BSR set to: 59
  6321                           ;adc.c: 118: DMA2CON0 = 0xC0;
  6322  000A98  0EC0               	movlw	192
  6323  000A9A  6FDC               	movwf	220,b	;volatile
  6324                           
  6325                           ; BSR set to: 59
  6326                           ;adc.c: 120: DMA1CON0bits.DGO = 1;
  6327  000A9C  8BFC               	bsf	252,5,b	;volatile
  6328                           
  6329                           ; BSR set to: 59
  6330  000A9E  0012               	return		;funcret
  6331  000AA0                     __end_of_ADCInit:
  6332                           	opt callstack 0
  6333                           
  6334 ;; *************** function _hi_int *****************
  6335 ;; Defined at:
  6336 ;;		line 38 in file "si.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;		None
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;		None
  6341 ;; Return value:  Size  Location     Type
  6342 ;;                  1    wreg      void 
  6343 ;; Registers used:
  6344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6345 ;; Tracked objects:
  6346 ;;		On entry : 0/0
  6347 ;;		On exit  : 0/0
  6348 ;;		Unchanged: 0/0
  6349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6350 ;;      Params:         0       0       0       0       0       0       0       0       0
  6351 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6352 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6353 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6354 ;;Total ram usage:        0 bytes
  6355 ;; Hardware stack levels used:    1
  6356 ;; Hardware stack levels required when called:    1
  6357 ;; This function calls:
  6358 ;;		i2_SIClear
  6359 ;; This function is called by:
  6360 ;;		Interrupt level 2
  6361 ;; This function uses a non-reentrant model
  6362 ;;
  6363                           
  6364                           	psect	text32
  6365  001342                     __ptext32:
  6366                           	opt callstack 0
  6367  001342                     _hi_int:
  6368                           	opt callstack 25
  6369                           
  6370                           ;si.c: 40: if (SMT1PWAIE && SMT1PWAIF)
  6371                           
  6372                           ; BSR set to: 59
  6373                           ;incstack = 0
  6374  001342  0139               	movlb	57	; () banked
  6375  001344  BF91               	btfsc	145,7,b	;volatile
  6376                           
  6377                           ; BSR set to: 57
  6378  001346  AFA1               	btfss	161,7,b	;volatile
  6379  001348  D023               	goto	i2l4379
  6380                           
  6381                           ; BSR set to: 57
  6382                           ;si.c: 41: {;si.c: 42: SMT1PWAIF = 0;
  6383  00134A  9FA1               	bcf	161,7,b	;volatile
  6384                           
  6385                           ; BSR set to: 57
  6386                           ;si.c: 44: SITempByte <<= 1;
  6387  00134C  90D8               	bcf	status,0,c
  6388  00134E  361D               	rlcf	_SITempByte,f,c
  6389                           
  6390                           ;si.c: 45: SITempByte |= (SMT1CPWL < 128) ? 1U : 0U;
  6391  001350  0E7F               	movlw	127
  6392  001352  013F               	movlb	63	; () banked
  6393  001354  6518               	cpfsgt	24,b	;volatile
  6394  001356  D001               	goto	i2u368_41
  6395  001358  D002               	goto	i2u368_40
  6396  00135A                     i2u368_41:
  6397  00135A  0E01               	movlw	1
  6398  00135C  D001               	goto	i2u369_40
  6399  00135E                     i2u368_40:
  6400  00135E  0E00               	movlw	0
  6401  001360                     i2u369_40:
  6402  001360  121D               	iorwf	_SITempByte,f,c
  6403                           
  6404                           ; BSR set to: 63
  6405                           ;si.c: 48: SICMDReceived = 0;
  6406  001362  0E00               	movlw	0
  6407  001364  6E1E               	movwf	_SICMDReceived,c
  6408                           
  6409                           ; BSR set to: 63
  6410                           ;si.c: 49: T6TMR = 0;
  6411  001366  0E00               	movlw	0
  6412  001368  6E92               	movwf	16274,c	;volatile
  6413                           
  6414                           ; BSR set to: 63
  6415                           ;si.c: 52: ++SIBitCounter;
  6416  00136A  2A20               	incf	_SIBitCounter,f,c
  6417                           
  6418                           ; BSR set to: 63
  6419                           ;si.c: 53: if (SIBitCounter == 8) {
  6420  00136C  0E08               	movlw	8
  6421  00136E  1820               	xorwf	_SIBitCounter,w,c
  6422  001370  A4D8               	btfss	status,2,c
  6423  001372  D00E               	goto	i2l4379
  6424                           
  6425                           ; BSR set to: 63
  6426                           ;si.c: 54: SIInputMessage[SIByteCounter] = SITempByte;
  6427  001374  0E00               	movlw	low _SIInputMessage
  6428  001376  241F               	addwf	_SIByteCounter,w,c
  6429  001378  6ED9               	movwf	fsr2l,c
  6430  00137A  6ADA               	clrf	fsr2h,c
  6431  00137C  0E01               	movlw	high _SIInputMessage
  6432  00137E  22DA               	addwfc	fsr2h,f,c
  6433  001380  0060  F077  FFDF   	movff	_SITempByte,indf2
  6434                           
  6435                           ; BSR set to: 63
  6436                           ;si.c: 55: SITempByte = 0x00;
  6437  001386  0E00               	movlw	0
  6438  001388  6E1D               	movwf	_SITempByte,c
  6439                           
  6440                           ; BSR set to: 63
  6441                           ;si.c: 56: SIBitCounter = 0;
  6442  00138A  0E00               	movlw	0
  6443  00138C  6E20               	movwf	_SIBitCounter,c
  6444                           
  6445                           ; BSR set to: 63
  6446                           ;si.c: 57: ++SIByteCounter;
  6447  00138E  2A1F               	incf	_SIByteCounter,f,c
  6448  001390                     i2l4379:
  6449                           
  6450                           ;si.c: 58: };si.c: 63: };si.c: 65: if (PIR9bits.TMR6IF) {
  6451  001390  0139               	movlb	57	; () banked
  6452  001392  A1A9               	btfss	169,0,b	;volatile
  6453  001394  0011               	retfie		f
  6454                           
  6455                           ; BSR set to: 57
  6456                           ;si.c: 66: if (SIByteCounter) {
  6457  001396  501F               	movf	_SIByteCounter,w,c
  6458  001398  B4D8               	btfsc	status,2,c
  6459  00139A  D003               	goto	i2l4385
  6460                           
  6461                           ; BSR set to: 57
  6462                           ;si.c: 67: SICMDReceived = 1;
  6463  00139C  0E01               	movlw	1
  6464  00139E  6E1E               	movwf	_SICMDReceived,c
  6465                           
  6466                           ;si.c: 68: } else {
  6467  0013A0  D002               	goto	i2l4387
  6468  0013A2                     i2l4385:
  6469                           
  6470                           ; BSR set to: 57
  6471                           ;si.c: 69: SIClear();
  6472  0013A2  ECC8  F00B         	call	i2_SIClear	;wreg free
  6473  0013A6                     i2l4387:
  6474                           
  6475                           ;si.c: 70: };si.c: 71: PIR9bits.TMR6IF = 0;
  6476  0013A6  0139               	movlb	57	; () banked
  6477  0013A8  91A9               	bcf	169,0,b	;volatile
  6478                           
  6479                           ; BSR set to: 57
  6480  0013AA  0011               	retfie		f
  6481  0013AC                     __end_of_hi_int:
  6482                           	opt callstack 0
  6483                           
  6484 ;; *************** function i2_SIClear *****************
  6485 ;; Defined at:
  6486 ;;		line 283 in file "si.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;		None
  6489 ;; Auto vars:     Size  Location     Type
  6490 ;;		None
  6491 ;; Return value:  Size  Location     Type
  6492 ;;                  1    wreg      void 
  6493 ;; Registers used:
  6494 ;;		wreg, status,2
  6495 ;; Tracked objects:
  6496 ;;		On entry : 0/0
  6497 ;;		On exit  : 0/0
  6498 ;;		Unchanged: 0/0
  6499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6500 ;;      Params:         0       0       0       0       0       0       0       0       0
  6501 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6502 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6503 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6504 ;;Total ram usage:        0 bytes
  6505 ;; Hardware stack levels used:    1
  6506 ;; This function calls:
  6507 ;;		Nothing
  6508 ;; This function is called by:
  6509 ;;		_hi_int
  6510 ;; This function uses a non-reentrant model
  6511 ;;
  6512                           
  6513                           	psect	text33
  6514  001790                     __ptext33:
  6515                           	opt callstack 0
  6516  001790                     i2_SIClear:
  6517                           	opt callstack 25
  6518                           
  6519                           ;si.c: 285: SIBitCounter = 0;
  6520                           
  6521                           ; BSR set to: 57
  6522                           ;incstack = 0
  6523  001790  0E00               	movlw	0
  6524  001792  6E20               	movwf	_SIBitCounter,c
  6525                           
  6526                           ;si.c: 286: SIByteCounter = 0;
  6527  001794  0E00               	movlw	0
  6528  001796  6E1F               	movwf	_SIByteCounter,c
  6529                           
  6530                           ;si.c: 287: SICMDReceived = 0;
  6531  001798  0E00               	movlw	0
  6532  00179A  6E1E               	movwf	_SICMDReceived,c
  6533                           
  6534                           ;si.c: 288: SITempByte = 0x00;
  6535  00179C  0E00               	movlw	0
  6536  00179E  6E1D               	movwf	_SITempByte,c
  6537  0017A0  0012               	return		;funcret
  6538  0017A2                     __end_ofi2_SIClear:
  6539                           	opt callstack 0
  6540                           
  6541                           ;
  6542                           ; Interrupt Vector Table @ 0x8
  6543                           ;
  6544                           
  6545                           	psect	ivt0x8
  6546  000008                     __pivt0x8:
  6547                           	opt callstack 0
  6548  000008                     ivt0x8_base:
  6549                           	opt callstack 0
  6550                           
  6551                           ; high-priority vector
  6552  000008  EFA1  F009         	goto	_hi_int
  6553  000018                     	org	16
  6554                           
  6555                           ; low-priority vector
  6556  000018  00FF               	reset	
  6557  0000                     
  6558                           	psect	rparam
  6559  0000                     tosu	equ	0x3FFF
  6560                           tosh	equ	0x3FFE
  6561                           tosl	equ	0x3FFD
  6562                           stkptr	equ	0x3FFC
  6563                           pclatu	equ	0x3FFB
  6564                           pclath	equ	0x3FFA
  6565                           pcl	equ	0x3FF9
  6566                           tblptru	equ	0x3FF8
  6567                           tblptrh	equ	0x3FF7
  6568                           tblptrl	equ	0x3FF6
  6569                           tablat	equ	0x3FF5
  6570                           prodh	equ	0x3FF4
  6571                           prodl	equ	0x3FF3
  6572                           indf0	equ	0x3FEF
  6573                           postinc0	equ	0x3FEE
  6574                           postdec0	equ	0x3FED
  6575                           preinc0	equ	0x3FEC
  6576                           plusw0	equ	0x3FEB
  6577                           fsr0h	equ	0x3FEA
  6578                           fsr0l	equ	0x3FE9
  6579                           wreg	equ	0x3FE8
  6580                           indf1	equ	0x3FE7
  6581                           postinc1	equ	0x3FE6
  6582                           postdec1	equ	0x3FE5
  6583                           preinc1	equ	0x3FE4
  6584                           plusw1	equ	0x3FE3
  6585                           fsr1h	equ	0x3FE2
  6586                           fsr1l	equ	0x3FE1
  6587                           bsr	equ	0x3FE0
  6588                           indf2	equ	0x3FDF
  6589                           postinc2	equ	0x3FDE
  6590                           postdec2	equ	0x3FDD
  6591                           preinc2	equ	0x3FDC
  6592                           plusw2	equ	0x3FDB
  6593                           fsr2h	equ	0x3FDA
  6594                           fsr2l	equ	0x3FD9
  6595                           status	equ	0x3FD8


Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         1155
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     37      90
    BANK0           160    151     151
    BANK1           256      0      90
    BANK2           256      0     256
    BANK3           256      0     256
    BANK4           256      0     256
    BANK5           256      0     256
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(2) Largest target is 24
		 -> buttonsMapByte1(BANK1[15]), buttonsMapByte0(BANK1[15]), config(BANK1[24]), 

    memset@p	PTR unsigned char  size(2) Largest target is 24
		 -> buttonsMapByte1(BANK1[15]), buttonsMapByte0(BANK1[15]), config(BANK1[24]), 

    SIGetCommand@msg	PTR unsigned char  size(2) Largest target is 36
		 -> main@cmd(BANK0[36]), 

    SISendMessage@msg	PTR unsigned char  size(2) Largest target is 36
		 -> buttonsMessage(COMRAM[8]), main@msgAnswer(BANK0[36]), 

    buttonsBuildLUT@LUT	PTR unsigned char  size(2) Largest target is 256
		 -> LUT_CY(BANK3[256]), LUT_CX(BANK2[256]), LUT_SY(BANK5[256]), LUT_SX(BANK4[256]), 

    buttonsSetMapByte1@map	PTR unsigned char  size(2) Largest target is 36
		 -> main@cmd(BANK0[36]), 

    buttonsSetMapByte0@map	PTR unsigned char  size(2) Largest target is 36
		 -> main@cmd(BANK0[36]), 

    PGMReadBlock@data	PTR unsigned char  size(2) Largest target is 64
		 -> main@flashBuffer(BANK0[64]), 

    PGMWriteBlock@data	PTR unsigned char  size(2) Largest target is 64
		 -> main@flashBuffer(BANK0[64]), 

    configFlashAll@data	PTR unsigned char  size(2) Largest target is 24
		 -> config(BANK1[24]), 

    sp__memset	PTR void  size(2) Largest target is 24
		 -> buttonsMapByte1(BANK1[15]), buttonsMapByte0(BANK1[15]), config(BANK1[24]), 

    configInit@data	PTR unsigned char  size(2) Largest target is 24
		 -> config(BANK1[24]), 

    sp__buttonsGetMapByte1	PTR unsigned char  size(2) Largest target is 8
		 -> buttonsMessage(COMRAM[8]), 

    main@btnMsg_374	PTR unsigned char  size(2) Largest target is 8
		 -> buttonsMessage(COMRAM[8]), 

    sp__buttonsGetMapByte0	PTR unsigned char  size(2) Largest target is 8
		 -> buttonsMessage(COMRAM[8]), 

    main@btnMsg	PTR unsigned char  size(2) Largest target is 8
		 -> buttonsMessage(COMRAM[8]), 

    sp__buttonsGetOrigins	PTR unsigned char  size(2) Largest target is 8
		 -> buttonsMessage(COMRAM[8]), 

    sp__buttonsGetMessage	PTR unsigned char  size(2) Largest target is 8
		 -> buttonsMessage(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _configSetDefault->_memset
    _configFlashAll->_EEPROMWriteByte
    _buttonsInit->_memset
    _buttonsBuildLUTs->_buttonsBuildLUT
    _buttonsBuildLUT->___awdiv
    ___awdiv->___wmul
    _SISendMessage->_buttonsGetMessage
    _PGMWriteBlock->_PGMEraseRow

Critical Paths under _hi_int in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _hi_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _hi_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _hi_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _hi_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _hi_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _hi_int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _hi_int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _hi_int in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               153   153      0   23495
                                             35 COMRAM     2     2      0
                                              0 BANK0    151   151      0
                            _ADCInit
                     _EEPROMReadByte
                    _EEPROMWriteByte
                       _PGMReadBlock
                      _PGMWriteBlock
                            _SIClear
                       _SIGetCommand
                             _SIInit
                      _SISendMessage
                        _bootPayload
                   _buttonsBuildLUTs
                 _buttonsGetMapByte0
                 _buttonsGetMapByte1
                  _buttonsGetMessage
                  _buttonsGetOrigins
                        _buttonsInit
                 _buttonsSetMapByte0
                 _buttonsSetMapByte1
                  _buttonsSetOrigins
                      _buttonsUpdate
                     _configFlashAll
                         _configInit
                   _configSetDefault
                          _portsInit
 ---------------------------------------------------------------------------------
 (1) _portsInit                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configInit                                           3     3      0    1389
                                              8 COMRAM     3     3      0
                     _EEPROMReadByte
                     _configFlashAll
                   _configSetDefault
 ---------------------------------------------------------------------------------
 (1) _configSetDefault                                     0     0      0     897
                             _memset
 ---------------------------------------------------------------------------------
 (2) _configFlashAll                                       3     3      0     335
                                              2 COMRAM     3     3      0
                    _EEPROMWriteByte
 ---------------------------------------------------------------------------------
 (3) _EEPROMWriteByte                                      2     1      1     222
                                              0 COMRAM     2     1      1
                          _NVMUnlock
 ---------------------------------------------------------------------------------
 (2) _EEPROMReadByte                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _buttonsUpdate                                        7     7      0     591
                                              0 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 (1) _buttonsSetOrigins                                    1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _buttonsSetMapByte1                                   3     1      2     201
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _buttonsSetMapByte0                                   3     1      2     201
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _buttonsInit                                          0     0      0     897
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     897
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _buttonsGetOrigins                                    2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _buttonsGetMessage                                    6     4      2     289
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _buttonsGetMapByte1                                   3     1      2      90
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _buttonsGetMapByte0                                   3     1      2      90
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _buttonsBuildLUTs                                     0     0      0    4914
                    _buttonsBuildLUT
 ---------------------------------------------------------------------------------
 (2) _buttonsBuildLUT                                     21    13      8    4914
                                             14 COMRAM    21    13      8
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     693
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1012
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _bootPayload                                          2     2      0      67
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SISendMessage                                       10     7      3    7900
                                              6 COMRAM    10     7      3
                  _buttonsGetMessage (ARG)
                  _buttonsGetOrigins (ARG)
 ---------------------------------------------------------------------------------
 (1) _SIInit                                               0     0      0       0
                     _SIConfigureCLC
 ---------------------------------------------------------------------------------
 (2) _SIConfigureCLC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SIGetCommand                                         3     1      2     179
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _SIClear                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PGMWriteBlock                                        8     4      4     555
                                              4 COMRAM     8     4      4
                          _NVMUnlock
                        _PGMEraseRow
 ---------------------------------------------------------------------------------
 (2) _PGMEraseRow                                          4     2      2     199
                                              0 COMRAM     4     2      2
                          _NVMUnlock
 ---------------------------------------------------------------------------------
 (4) _NVMUnlock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PGMReadBlock                                         8     4      4     556
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _ADCInit                                              9     6      3     445
                                              0 COMRAM     9     6      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _hi_int                                               0     0      0       0
                          i2_SIClear
 ---------------------------------------------------------------------------------
 (6) i2_SIClear                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCInit
   _EEPROMReadByte
   _EEPROMWriteByte
     _NVMUnlock
   _PGMReadBlock
   _PGMWriteBlock
     _NVMUnlock
     _PGMEraseRow
       _NVMUnlock
   _SIClear
   _SIGetCommand
   _SIInit
     _SIConfigureCLC
   _SISendMessage
     _buttonsGetMessage (ARG)
     _buttonsGetOrigins (ARG)
   _bootPayload
   _buttonsBuildLUTs
     _buttonsBuildLUT
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _buttonsGetMapByte0
   _buttonsGetMapByte1
   _buttonsGetMessage
   _buttonsGetOrigins
   _buttonsInit
     _memset
   _buttonsSetMapByte0
   _buttonsSetMapByte1
   _buttonsSetOrigins
   _buttonsUpdate
   _configFlashAll
     _EEPROMWriteByte
       _NVMUnlock
   _configInit
     _EEPROMReadByte
     _configFlashAll
       _EEPROMWriteByte
         _NVMUnlock
     _configSetDefault
       _memset
   _configSetDefault
     _memset
   _portsInit

 _hi_int (ROOT)
   i2_SIClear

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      20        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      17        0.0%
BANK7              100      0       0      18        0.0%
BITBANK6           100      0       0      15        0.0%
BANK6              100      0       0      16        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0     100      14      100.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0     100      12      100.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0     100      10      100.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0     100       8      100.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      5A       6       35.2%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     97      97       4       94.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     25      5A       1       94.7%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     54B      19        0.0%
DATA                 0      0     54B      21        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Mar 29 04:02:34 2020

                  __CFG_CP$OFF 000000                   ___awdiv@sign 0035            ___wmul@multiplicand 002C  
                   _SITempByte 001D                   __CFG_BBEN$ON 000000                    configInit@i 0034  
                  __CFG_LVP$ON 000000        __size_of_EEPROMReadByte 0014                  SIGetCommand@i 002C  
                          l170 02CC                            l146 01B4                            l412 0918  
                          l324 174E                            l148 01F8                            l317 131A  
                          l417 094E                            l257 1482                            l516 08CE  
                          l526 0F0E                            l519 08E4                            l536 1468  
                          l569 0B0E                            l790 107C                            l799 0D38  
                          _GIE 01FE97                            _PCL 003FF9     __end_of_buttonsGetMapByte0 1682  
   __end_of_buttonsGetMapByte1 164E                __end_of_ADCInit 0AA0                            wreg 003FE8  
                  main@len_375 00ED                   __CFG_ZCD$OFF 000000                           l3021 1608  
                         l3201 0C20                           l3017 15F2                           l3051 110E  
                         l3043 10F0                           l3123 16BC                           l4003 00D6  
                         l3061 112E                           l3037 10E0                           l3205 0C30  
                         l3207 0C42                           l3321 093C                           l3049 1106  
                         l3065 1138                           l4121 02AC                           l4041 0184  
                         l4009 00E6                           l3171 0ACC                           l4203 039E  
                         l4115 0282                           l4035 0140                           l3069 1146  
                         l3181 0B1A                           l4213 03CE                           l4133 02D0  
                         l4053 01B0                           l4029 0122                           l3503 0688  
                         l4231 03E8                           l4223 03DA                           l4055 01BA  
                         l4039 016A                           l3193 0BCA                           l3185 0B46  
                         l3177 0AE8                           l3601 077A                           l3513 0694  
                         l4313 04EA                           l4153 02F0                           l4137 02D4  
                         l4065 01FC                           l4057 01CC          buttonsBuildLUT@dzMode 003E  
                         l3451 0620                           l4251 0424                           l4235 03F4  
                         l4243 041A                           l4083 023E                           l3189 0B82  
                         l3293 14C4                           l4181 0334                           l4077 0220  
                         l3471 0648                           l3463 0638                           l3455 0628  
                         l3447 0618                           l4335 0524                           l4191 0376  
                         l4095 024C                           l4351 05D2                           l3721 08A6  
                         l3713 0892                           l3705 087E                           l3641 07DE  
                         l3633 07CA                           l3625 07B6                           l3617 07A2  
                         l3609 078E                           l3561 0716                           l3553 0702  
                         l3545 06EE                           l3537 06DA                           l3529 06C6  
                         l4345 0544                           l4265 0448                           l4273 047C  
                         l4177 032C                           l4169 030C                           l4089 0248  
                         l3387 1084                           l3811 0F38                           l3491 0670  
                         l3483 0660                           l3475 0650                           l3467 0640  
                         l3459 0630                           l4187 0364                           l4285 049C  
                         l4349 054A                           l3751 15B2                           l3911 161E  
                         l3495 0678                           l3487 0668                           l3479 0658  
                         l4199 0396                           l3753 15B8                           l3841 0F66  
                         l3737 08D0                           l3729 08BA                           l3681 0842  
                         l3673 082E                           l3665 081A                           l3657 0806  
                         l3649 07F2                           l3593 0766                           l3585 0752  
                         l3577 073E                           l3569 072A                           l3843 0F98  
                         l3499 0680                           l3757 15D8                           l3783 0DA8  
                         l3871 170C                           l3937 11A0                           l3793 0DF4  
                         l3777 0D7C                           l3697 086A                           l3689 0856  
                         l3795 0DF6                           l3883 16E0                           l3789 0DE2  
                         l3981 0088                           l3895 1652                           l3989 00A0  
                 __CFG_WDTE$ON 000000                           u2030 0B90                           u2120 1340  
                         u3020 0DFA                           u2140 14BC                           u3030 0DFE  
                         u2070 13E0                           _LATB 003FBB                           u3120 11C2  
                         u2085 13E2                           u2190 0996          buttonsBuildLUT@maxVal 003B  
                         _T2PR 003FAB                           u2195 098C                           u3420 02BA  
                         u3270 0102                           u3190 007E                           u1920 1112  
                         _T6PR 003F93                           u3590 048A          buttonsBuildLUT@minVal 003A  
        buttonsBuildLUT@radius 004B                           _WPUA 003A41                           _WPUB 003A51  
                         _WPUC 003A61          buttonsBuildLUT@invert 003F                  __CFG_FCMEN$ON 000000  
        buttonsBuildLUT@origin 003C                   __CFG_WRTB$ON 000000              ??_buttonsBuildLUT 0040  
                         _main 001E                __end_of_SIClear 177E                           fsr1h 003FE2  
                         fsr2h 003FDA                           indf1 003FE7                           indf2 003FDF  
                         fsr1l 003FE1                           fsr2l 003FD9                           prodh 003FF4  
                         prodl 003FF3                           start 001A                  __CFG_CSWEN$ON 000000  
               _SPI1STATUSbits 003D17      __size_of_configSetDefault 0076                   ___param_bank 000000  
buttonsSetOrigins@triggersMode 002A                  __CFG_SAFEN$ON 000000        SISendMessage@leftToSend 0039  
                        PRLOCK 0039EF                          _ADACT 003EFE                          ?_main 002A  
                        _ADCLK 003EFF                          _ADPCH 003EF1                  _SISendMessage 0D34  
                        _ADREF 003EFD                __end_of___awdiv 1154                          _ADTIF 01CD0B  
              SIGetCommand@msg 002A                          _ADRPT 003EEC                ___awdiv@divisor 0032  
                        _T2CLK 003FAE                          _T2CON 003FAC                          _T2HLT 003FAD  
                        _T6CLK 003F96                          _T6CON 003F94                 __CFG_DEBUG$OFF 000000  
                        _T6HLT 003F95                          _T2TMR 003FAA                          _T2RST 003FAF  
                        _T6TMR 003F92                          _T6RST 003F97                ___awdiv@counter 0034  
           __size_ofi2_SIClear 0012                          _TMR0H 003FB7                          _PORTA 003FCA  
                        _PORTB 003FCB                          _PORTC 003FCC                          _TRISA 003FC2  
                        _TRISB 003FC3                          _TRISC 003FC4              ?_buttonsBuildLUTs 002A  
                 ?_buttonsInit 002A         buttonsBuildLUT@tempVal 0047                  __CFG_WRTC$OFF 000000  
                __CFG_WRTD$OFF 000000                   _DMA1CON0bits 003BFC                   _DMA1CON1bits 003BFD  
           ??_buttonsBuildLUTs 004D                   _DMA2CON1bits 003BDD             __CFG_MCLRE$EXTMCLR 000000  
                        main@i 00F6          EEPROMReadByte@address 002A       __size_of_EEPROMWriteByte 0024  
                        tablat 003FF5             __size_of_NVMUnlock 0012                          status 003FD8  
               _SIInputMessage 0100             configFlashAll@data 002C                __initialization 0FA2  
                 ?_PGMEraseRow 002A                   __end_of_main 05DA                 PGMWriteBlock@i 0034  
                    ??_ADCInit 002D                  main@gcpLocked 00F2                 ?_SISendMessage 0030  
                       ??_main 004D                 configInit@data 0032                  __activetblptr 000002  
            _buttonsGetMessage 0EDE              PGMWriteBlock@addr 002E              PGMWriteBlock@data 0030  
           main@flashBufferIdx 00EE                         _ADACQL 003EF3                         _ADCON0 003EF8  
                       _ADCON1 003EF9                         _ADCON2 003EFA                         _ADCON3 003EFB  
            _buttonsGetOrigins 156A                      ??_SIClear 002A             ?_buttonsGetMessage 002A  
             ??_configFlashAll 002C               ___awdiv@dividend 0030                         _ANSELA 003A40  
                       _ANSELB 003A50                         _ANSELC 003A60                         _T0CON0 003FB8  
                       _T0CON1 003FB9                         _RB4PPS 003A0C                         _ODCONA 003A42  
                       _ODCONB 003A52                         _ODCONC 003A62             ?_buttonsGetOrigins 002A  
                       _PCLATH 003FFA                         i2l4385 13A2                         _PCLATU 003FFB  
                       i2l4387 13A6                         i2l4379 1390          __end_of_PGMWriteBlock 11D6  
                       _TABLAT 003FF5                         _NVMDAT 0039E3                         _TMR0IF 01CD1F  
                       _LUT_CX 0200                         _LUT_CY 0300                         _LUT_SX 0400  
                       _LUT_SY 0500                         _STKPTR 003FFC                         _SIInit 1042  
          ??_buttonsGetMessage 002C              __end_ofi2_SIClear 17A2                  main@msgAnswer 00C8  
          ??_buttonsGetOrigins 002C                 __CFG_XINST$OFF 000000           __size_of_bootPayload 0044  
                       ___wmul 1682                      ??___awdiv 0034                 __CFG_STVREN$ON 000000  
                       _hi_int 1342                         _config 0124                         _memset 15E4  
                       clear_0 0FCC                         clear_1 0FE0                         clear_2 0FF4  
                       clear_3 1008                         clear_4 101A                         clear_5 1026  
             ___awdiv@quotient 0036                 _EEPROMReadByte 1758              __end_of_NVMUnlock 1790  
    __end_of_buttonsGetMessage 0FA2                   __pdataCOMRAM 004F     __end_of_buttonsSetMapByte0 1734  
   __end_of_buttonsSetMapByte1 1708      __end_of_buttonsGetOrigins 15A8                         tblptrh 003FF7  
                       tblptrl 003FF6                         tblptru 003FF8         __size_of_buttonsUpdate 030E  
             ??_SIConfigureCLC 002A                     __accesstop 0060        __end_of__initialization 1038  
                ___rparam_used 000001              ??_EEPROMWriteByte 002B               _configSetDefault 1256  
              configFlashAll@i 002E                 __pcstackCOMRAM 002A              _buttonsSetOrigins 1412  
              ??_SISendMessage 0033         __end_of_EEPROMReadByte 176C             ?_buttonsSetOrigins 002A  
                ?_PGMReadBlock 002A                  PGMReadBlock@i 0030                _buttonsBuildLUT 0AA0  
              _buttonsMapByte0 014B                _buttonsMapByte1 013C            ??_buttonsSetOrigins 002A  
         __size_of_buttonsInit 0080                __CFG_PR1WAY$OFF 000000                     __pbssBANK1 0100  
                   __pbssBANK2 0200                     __pbssBANK3 0300                     __pbssBANK4 0400  
                   __pbssBANK5 0500             _buttonsGetMapByte0 164E             _buttonsGetMapByte1 161A  
               main@btnMsg_374 00C6                __CFG_MVECEN$OFF 000000                        ?_SIInit 002A  
                      IVTBASEH 003FD6                        IVTBASEL 003FD5                        IVTBASEU 003FD7  
                _buttonsTimers 0001      __end_of_buttonsSetOrigins 1476                  _buttonsUpdate 05DA  
          ?_buttonsGetMapByte0 002A            ?_buttonsGetMapByte1 002A                        ?___wmul 002A  
                      ?_hi_int 002A                ?_EEPROMReadByte 002A               buttonsBuildLUT@i 0049  
                      _ADFLTRL 003EE6                        _CLC1CON 003C74                        _CLC2CON 003C6A  
                      _CLC3CON 003C60                        _CLC4CON 003C56           __size_of_PGMEraseRow 0058  
                      ?_memset 002A                        _CLC1POL 003C75                        _CLC2POL 003C6B  
                      _CLC3POL 003C61                        _ADCInit 08E8                        _CLC4POL 003C57  
               ??_PGMReadBlock 002E     __size_of_buttonsGetMessage 00C4               PGMReadBlock@addr 002A  
             PGMReadBlock@data 002C                        _T6INPPS 003ACC            __CFG_PWRTS$PWRT_OFF 000000  
                      _INTCON0 003FD2                     _configInit 1476     __size_of_buttonsGetOrigins 003E  
                      _IVTBASE 003FD5           ??_buttonsGetMapByte0 002C           ??_buttonsGetMapByte1 002C  
          buttonsSetMapByte0@i 002C            buttonsSetMapByte1@i 002C                        _IVTLOCK 003FD4  
                      _TBLPTRH 003FF7                        _TBLPTRL 003FF6                        _SPI1CLK 003D1C  
                      _TBLPTRU 003FF8             __size_of_portsInit 0066                        _SMT1CLK 003F21  
                      _NVMADRL 0039E0                        _SPI1TXB 003D11                        _NVMCON1 0039E5  
                      _NVMCON2 0039E6                        _PWM5DCH 003F6D                        _PWM5DCL 003F6C  
                      _SMT1SIG 003F22                        _PWM5CON 003F6E                        _SMT1PRH 003F1C  
                      _SMT1PRL 003F1B                        _SMT1PRU 003F1D                        _SMT1WIN 003F23  
                      _PPSLOCK 003ABF                        _SIClear 176C             buttonsBuildLUT@LUT 0038  
      __CFG_BBSIZE$BBSIZE_4096 000000                __size_of_SIInit 008A      __size_of_buttonsBuildLUTs 00D2  
                    _ADCValues 004F                 ?_buttonsUpdate 002A                        __Hparam 0000  
                      __Lparam 0000     __CFG_RSTOSC$HFINTOSC_64MHZ 000000                        ___awdiv 10CC  
              __size_of___wmul 002E                __size_of_hi_int 006A        __end_of_buttonsBuildLUT 0C52  
                      __pcinit 0FA2                __size_of_memset 0036                        __ramtop 0800  
                _SICMDReceived 001E                        __ptext0 001E                        __ptext1 13AC  
                      __ptext2 1476                        __ptext3 1256                        __ptext4 16B0  
                      __ptext5 1734                        __ptext6 1758                        __ptext7 05DA  
                      __ptext8 1412                        __ptext9 16DC                __CFG_WRTAPP$OFF 000000  
              __CFG_WRTSAF$OFF 000000                        _origins 0010                        main@cmd 00A0  
                      main@len 00EC           end_of_initialization 1038                        memset@c 002C  
                      memset@n 002E                        memset@p 0030                  __Lmediumconst 0000  
         _buttonsBuildLUT$1169 0043          buttonsSetMapByte0@map 002A          buttonsSetMapByte1@map 002A  
                    _IVTLOCKED 01FEA0     __size_of_buttonsSetOrigins 0064                      _SPI1TCNTL 003D12  
                ?_SIGetCommand 002A              __end_of_portsInit 1412                        postdec1 003FE5  
                      postinc0 003FEE                      i2_SIClear 1790                      _SMT1PWAIE 01CC8F  
                    _SMT1PWAIF 01CD0F            EEPROMWriteByte@data 002A                 portsInit@state 002A  
        __CFG_WDTCPS$WDTCPS_12 000000                     _outButtons 0016    buttonsUpdate@toggledButtons 002E  
                    _PORTBbits 003FCB                    ?_configInit 002A           __CFG_WDTCCS$LFINTOSC 000000  
                    _TRISBbits 003FC3                      _NVMUnlock 177E       __end_of_configSetDefault 12CC  
              _EEPROMWriteByte 1734               __CFG_FEXTOSC$OFF 000000                     main@cmdLen 00EF  
                   main@btnMsg 00C4             _buttonsSetMapByte0 1708             _buttonsSetMapByte1 16DC  
         __end_of_PGMReadBlock 1342                ??_buttonsUpdate 002A                  ??_bootPayload 002A  
         buttonsBuildLUT@range 0045                 __end_of_SIInit 10CC                 ??_SIGetCommand 002C  
                  _ADCChannels 0055            ?_buttonsSetMapByte0 002A            ?_buttonsSetMapByte1 002A  
                   ?i2_SIClear 002A                 __end_of___wmul 16B0               SISendMessage@idx 0038  
             SISendMessage@len 0032               SISendMessage@msg 0030               ?_buttonsBuildLUT 0038  
                __pidataCOMRAM 17A2                 __end_of_hi_int 13AC            buttonsGetMapByte0@i 002C  
          buttonsGetMapByte1@i 002C         __size_of_PGMWriteBlock 0082                 __end_of_memset 161A  
          start_initialization 0FA2                     ?_NVMUnlock 002A           ??_buttonsSetMapByte0 002C  
         ??_buttonsSetMapByte1 002C                      _ButtonsID 0021                     ivt0x8_base 0008  
                     ADCInit@i 0032                       ??_SIInit 002A               _buttonsBuildLUTs 0E0C  
             ??_EEPROMReadByte 002A               __CFG_LPBOREN$OFF 000000        __size_of_configFlashAll 002C  
          __size_of_configInit 0058                       ??___wmul 002E            __end_of_bootPayload 156A  
                     ??_hi_int 002A                       ??_memset 0030                       ?_ADCInit 002A  
        __end_of_SISendMessage 0E0C               __CFG_IVT1WAY$OFF 000000        __end_of_EEPROMWriteByte 1758  
                ??_buttonsInit 0032                    __pbssCOMRAM 0001                  __pcstackBANK0 0060  
                     ?_SIClear 002A                main@flashBuffer 0060                  _PGMWriteBlock 1154  
               _buttonsMessage 0022                  ??_PGMEraseRow 002C        __size_of_SIConfigureCLC 00E2  
                  ??i2_SIClear 002A                       ?___awdiv 0030                    ADCInit@cxCh 002B  
                  ADCInit@cyCh 002C                    ADCInit@sxCh 0031                    ADCInit@syCh 002A  
             __CFG_PPS1WAY$OFF 000000              buttonsBuildLUT@dz 003D                       _CLC1GLS0 003C7A  
                     _CLC1GLS1 003C7B                       _CLC1GLS2 003C7C                       _CLC1GLS3 003C7D  
                     _CLC2GLS0 003C70                       _CLC2GLS1 003C71                       _CLC2GLS2 003C72  
                     _CLC2GLS3 003C73                       _CLC3GLS0 003C66                       _CLC3GLS1 003C67  
                     _CLC3GLS2 003C68                       _CLC3GLS3 003C69                       _CLC4GLS0 003C5C  
                     _CLC4GLS1 003C5D                       _CLC4GLS2 003C5E                       _CLC4GLS3 003C5F  
                     _CLC1SEL0 003C76                       _CLC1SEL1 003C77                       _CLC1SEL2 003C78  
                     _CLC1SEL3 003C79                       _CLC2SEL0 003C6C                       _CLC2SEL1 003C6D  
                     _CLC2SEL2 003C6E                       _CLC2SEL3 003C6F                       _CLC3SEL0 003C62  
                     _CLC3SEL1 003C63                       _CLC3SEL2 003C64                       _CLC3SEL3 003C65  
                     _DMA1CON0 003BFC                       _CLC4SEL0 003C58                       _CLC4SEL1 003C59  
                     _CLC4SEL2 003C5A                       _CLC4SEL3 003C5B                       _DMA2CON0 003BDC  
                     _DMA1DSAH 003BF1                       _DMA1DSAL 003BF0                       _DMA2DSAH 003BD1  
                     _DMA2DSAL 003BD0                       _DMA1DSZH 003BEF                       _DMA1DSZL 003BEE  
                     _DMA2DSZH 003BCF                       _DMA2DSZL 003BCE                       _ADCPbits 003ED7  
                     _DMA1SSAH 003BFA                       _DMA1SIRQ 003BFF                       _DMA1SSAL 003BF9  
                     _DMA1SSAU 003BFB                       _DMA2SSAH 003BDA                       _DMA2SIRQ 003BDF  
                     _DMA2SSAL 003BD9                       _DMA2SSAU 003BDB                       _DMA1SSZH 003BF8  
                     _DMA1SSZL 003BF7                       _DMA2SSZH 003BD8                       _DMA2SSZL 003BD7  
                  ??_NVMUnlock 002A                       _CCPTMRS1 003F5F    __size_of_buttonsGetMapByte0 0034  
  __size_of_buttonsGetMapByte1 0034           __end_of_SIGetCommand 15E4          __size_of_PGMReadBlock 0076  
                     _T2CLKCON 003FAE                       _NCO1ACCL 003F38            __end_of_buttonsInit 1256  
               ?_PGMWriteBlock 002E                 ___wmul@product 002E                       _IPR1bits 003981  
                     _PIE1bits 003991                    _bootPayload 1526            __CFG_BORV$VBOR_2P85 000000  
                     _PIE9bits 003999                       _PIR1bits 0039A1                       _SPI1BAUD 003D19  
                     _PIR4bits 0039A4                       _SPI1CON0 003D14                       _SPI1CON1 003D15  
                     _SPI1CON2 003D16                       i2u368_40 135E                       i2u368_41 135A  
                     i2u369_40 1360                       _PIR9bits 0039A9                       _SMT1CON0 003F1E  
                     _SMT1CON1 003F1F                       _SMT1CPWL 003F18                buttonsUpdate@PA 002A  
              buttonsUpdate@PB 002B                buttonsUpdate@PC 002C                       _SMT1TMRH 003F13  
                     _SMT1TMRL 003F12                       _SMT1TMRU 003F14    buttonsGetMessage@analogMode 002D  
                 _SPI1INTFbits 003D1A                      _portsInit 13AC               __size_of_ADCInit 01B8  
                   _ADCON2bits 003EFA              ___wmul@multiplier 002A            __end_of_PGMEraseRow 1526  
                 _PGMReadBlock 12CC               ?_EEPROMWriteByte 002A                      main@inBut 00F3  
                 ??_configInit 0032              ?_configSetDefault 002A                   _SMT1CON1bits 003F1F  
                  _INTCON0bits 003FD2                      copy_data0 0FB6               __size_of_SIClear 0012  
           ??_configSetDefault 0032                       __Hrparam 0000                 _configFlashAll 16B0  
                     __Lrparam 0000             __CFG_BOREN$SBORDIS 000000             __end_of_configInit 14CE  
             __size_of___awdiv 0088         EEPROMWriteByte@address 002B                     ?_portsInit 002A  
     __end_of_buttonsBuildLUTs 0EDE                    _buttonsInit 11D6                       __pivt0x8 0008  
                     __ptext10 1708                       __ptext11 11D6                       __ptext20 10CC  
                     __ptext12 15E4                       __ptext21 1526                       __ptext13 156A  
                     __ptext30 12CC                       __ptext22 0D34                       __ptext14 0EDE  
                     __ptext31 08E8                       __ptext23 1042                       __ptext15 161A  
                     __ptext32 1342                       __ptext24 0C52                       __ptext16 164E  
                     __ptext33 1790                       __ptext25 15A8                       __ptext17 0E0C  
                     __ptext26 176C                       __ptext18 0AA0                       __ptext27 1154  
                     __ptext19 1682                       __ptext28 14CE                       __ptext29 177E  
              ??_PGMWriteBlock 0032                  __size_of_main 05BC         __end_of_configFlashAll 16DC  
         __CFG_WDTCWS$WDTCWS_7 000000          __end_of_buttonsUpdate 08E8                 _SIConfigureCLC 0C52  
               buttonsUpdate@i 002D                    _PGMEraseRow 14CE                       main@addr 00F0  
        __size_of_SIGetCommand 003C                    _NVMCON1bits 0039E5       __size_of_buttonsBuildLUT 01B2  
  __size_of_buttonsSetMapByte0 002C    __size_of_buttonsSetMapByte1 002C                       memset@p1 002A  
                     intlevel2 0000                   _SIBitCounter 0020  buttonsGetMessage@triggersMode 002A  
              ?_configFlashAll 002A              __CFG_CLKOUTEN$OFF 000000                    _PPSLOCKbits 003ABF  
       __end_of_SIConfigureCLC 0D34                   _SIGetCommand 15A8                     _SPI1TWIDTH 003D18  
                  _prevButtons 001A                    ??_portsInit 002A                     _SMT1SIGPPS 003AD2  
              PGMEraseRow@addr 002A         __size_of_SISendMessage 00D8                   ?_bootPayload 002A  
                _SIByteCounter 001F                ?_SIConfigureCLC 002A  
