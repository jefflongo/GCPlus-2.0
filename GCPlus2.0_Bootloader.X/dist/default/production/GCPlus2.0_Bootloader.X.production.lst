

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Mar 26 23:35:38 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F25K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51  0000                     
    52                           ; Version 2.05
    53                           ; Generated 20/12/2018 GMT
    54                           ; 
    55                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F25K42 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     
    87                           	psect	idataCOMRAM
    88  001718                     __pidataCOMRAM:
    89                           	opt callstack 0
    90                           
    91                           ;initializer for _ADCValues
    92  001718  80                 	db	128
    93  001719  80                 	db	128
    94  00171A  80                 	db	128
    95  00171B  80                 	db	128
    96  00171C  00                 	db	0
    97  00171D  00                 	db	0
    98                           
    99                           ;initializer for _ADCChannels
   100  00171E  02                 	db	2
   101  00171F  03                 	db	3
   102  001720  00                 	db	0
   103  001721  01                 	db	1
   104  001722  13                 	db	19
   105  001723  14                 	db	20
   106  0000                     _PIE1bits	set	14737
   107  0000                     _IPR1bits	set	14721
   108  0000                     _PIR1bits	set	14753
   109  0000                     _PIR4bits	set	14756
   110  0000                     _PIE9bits	set	14745
   111  0000                     _PIR9bits	set	14761
   112  0000                     _NVMDAT	set	14819
   113  0000                     _NVMADRL	set	14816
   114  0000                     _NVMCON1	set	14821
   115  0000                     _NVMCON1bits	set	14821
   116  0000                     _NVMCON2	set	14822
   117  0000                     _SMT1PWAIF	set	118031
   118  0000                     _SMT1PWAIE	set	117903
   119  0000                     _TMR0IF	set	118047
   120  0000                     _ADTIF	set	118027
   121  0000                     _ODCONC	set	14946
   122  0000                     _ODCONB	set	14930
   123  0000                     _ODCONA	set	14914
   124  0000                     _WPUC	set	14945
   125  0000                     _WPUB	set	14929
   126  0000                     _WPUA	set	14913
   127  0000                     _ANSELB	set	14928
   128  0000                     _ANSELA	set	14912
   129  0000                     _RB4PPS	set	14860
   130  0000                     _SMT1SIGPPS	set	15058
   131  0000                     _T6INPPS	set	15052
   132  0000                     _PPSLOCKbits	set	15039
   133  0000                     _PPSLOCK	set	15039
   134  0000                     _ANSELC	set	14944
   135  0000                     _DMA1CON0bits	set	15356
   136  0000                     _DMA2CON0	set	15324
   137  0000                     _DMA2CON1bits	set	15325
   138  0000                     _DMA2SIRQ	set	15327
   139  0000                     _DMA2DSZL	set	15310
   140  0000                     _DMA2DSZH	set	15311
   141  0000                     _DMA2SSZL	set	15319
   142  0000                     _DMA2SSZH	set	15320
   143  0000                     _DMA2DSAL	set	15312
   144  0000                     _DMA2DSAH	set	15313
   145  0000                     _DMA2SSAL	set	15321
   146  0000                     _DMA2SSAH	set	15322
   147  0000                     _DMA2SSAU	set	15323
   148  0000                     _DMA1CON0	set	15356
   149  0000                     _DMA1CON1bits	set	15357
   150  0000                     _DMA1SIRQ	set	15359
   151  0000                     _DMA1DSZL	set	15342
   152  0000                     _DMA1DSZH	set	15343
   153  0000                     _DMA1SSZL	set	15351
   154  0000                     _DMA1SSZH	set	15352
   155  0000                     _DMA1DSAL	set	15344
   156  0000                     _DMA1DSAH	set	15345
   157  0000                     _DMA1SSAL	set	15353
   158  0000                     _DMA1SSAH	set	15354
   159  0000                     _DMA1SSAU	set	15355
   160  0000                     _CLC4CON	set	15446
   161  0000                     _CLC4GLS3	set	15455
   162  0000                     _CLC4GLS2	set	15454
   163  0000                     _CLC4GLS1	set	15453
   164  0000                     _CLC4GLS0	set	15452
   165  0000                     _CLC4SEL3	set	15451
   166  0000                     _CLC4SEL2	set	15450
   167  0000                     _CLC4SEL1	set	15449
   168  0000                     _CLC4SEL0	set	15448
   169  0000                     _CLC4POL	set	15447
   170  0000                     _CLC3CON	set	15456
   171  0000                     _CLC3GLS3	set	15465
   172  0000                     _CLC3GLS2	set	15464
   173  0000                     _CLC3GLS1	set	15463
   174  0000                     _CLC3GLS0	set	15462
   175  0000                     _CLC3SEL3	set	15461
   176  0000                     _CLC3SEL2	set	15460
   177  0000                     _CLC3SEL1	set	15459
   178  0000                     _CLC3SEL0	set	15458
   179  0000                     _CLC3POL	set	15457
   180  0000                     _CLC2CON	set	15466
   181  0000                     _CLC2GLS3	set	15475
   182  0000                     _CLC2GLS2	set	15474
   183  0000                     _CLC2GLS1	set	15473
   184  0000                     _CLC2GLS0	set	15472
   185  0000                     _CLC2SEL3	set	15471
   186  0000                     _CLC2SEL2	set	15470
   187  0000                     _CLC2SEL1	set	15469
   188  0000                     _CLC2SEL0	set	15468
   189  0000                     _CLC2POL	set	15467
   190  0000                     _CLC1CON	set	15476
   191  0000                     _CLC1GLS3	set	15485
   192  0000                     _CLC1GLS2	set	15484
   193  0000                     _CLC1GLS1	set	15483
   194  0000                     _CLC1GLS0	set	15482
   195  0000                     _CLC1SEL3	set	15481
   196  0000                     _CLC1SEL2	set	15480
   197  0000                     _CLC1SEL1	set	15479
   198  0000                     _CLC1SEL0	set	15478
   199  0000                     _CLC1POL	set	15477
   200  0000                     _SPI1TXB	set	15633
   201  0000                     _SPI1TCNTL	set	15634
   202  0000                     _SPI1INTFbits	set	15642
   203  0000                     _SPI1TWIDTH	set	15640
   204  0000                     _SPI1STATUSbits	set	15639
   205  0000                     _SPI1CON0	set	15636
   206  0000                     _SPI1CON2	set	15638
   207  0000                     _SPI1CON1	set	15637
   208  0000                     _SPI1BAUD	set	15641
   209  0000                     _SPI1CLK	set	15644
   210  0000                     _ADCPbits	set	16087
   211  0000                     _ADACT	set	16126
   212  0000                     _ADRPT	set	16108
   213  0000                     _ADACQL	set	16115
   214  0000                     _ADREF	set	16125
   215  0000                     _ADCLK	set	16127
   216  0000                     _ADCON3	set	16123
   217  0000                     _ADCON2bits	set	16122
   218  0000                     _ADCON2	set	16122
   219  0000                     _ADCON1	set	16121
   220  0000                     _ADCON0	set	16120
   221  0000                     _ADFLTRL	set	16102
   222  0000                     _ADPCH	set	16113
   223  0000                     _SMT1CON1bits	set	16159
   224  0000                     _SMT1SIG	set	16162
   225  0000                     _SMT1WIN	set	16163
   226  0000                     _SMT1CLK	set	16161
   227  0000                     _SMT1CON1	set	16159
   228  0000                     _SMT1CON0	set	16158
   229  0000                     _SMT1TMRU	set	16148
   230  0000                     _SMT1TMRH	set	16147
   231  0000                     _SMT1TMRL	set	16146
   232  0000                     _SMT1PRU	set	16157
   233  0000                     _SMT1PRH	set	16156
   234  0000                     _SMT1PRL	set	16155
   235  0000                     _CCPTMRS1	set	16223
   236  0000                     _SMT1CPWL	set	16152
   237  0000                     _NCO1ACCL	set	16184
   238  0000                     _IVTBASE	set	16341
   239  0000                     _TRISBbits	set	16323
   240  0000                     _PWM5CON	set	16238
   241  0000                     _PWM5DCL	set	16236
   242  0000                     _PWM5DCH	set	16237
   243  0000                     _T2HLT	set	16301
   244  0000                     _T2CLKCON	set	16302
   245  0000                     _PORTBbits	set	16331
   246  0000                     _T2PR	set	16299
   247  0000                     _T2TMR	set	16298
   248  0000                     _T2RST	set	16303
   249  0000                     _T2CLK	set	16302
   250  0000                     _T2CON	set	16300
   251  0000                     _T6HLT	set	16277
   252  0000                     _T6PR	set	16275
   253  0000                     _T6RST	set	16279
   254  0000                     _T6CLK	set	16278
   255  0000                     _T6CON	set	16276
   256  0000                     _T6TMR	set	16274
   257  0000                     _TMR0H	set	16311
   258  0000                     _T0CON1	set	16313
   259  0000                     _T0CON0	set	16312
   260  0000                     _TABLAT	set	16373
   261  0000                     _TBLPTRL	set	16374
   262  0000                     _TBLPTRH	set	16375
   263  0000                     _TBLPTRU	set	16376
   264  0000                     _PCL	set	16377
   265  0000                     _PCLATH	set	16378
   266  0000                     _PCLATU	set	16379
   267  0000                     _IVTLOCK	set	16340
   268  0000                     _STKPTR	set	16380
   269  0000                     _TRISC	set	16324
   270  0000                     _TRISB	set	16323
   271  0000                     _TRISA	set	16322
   272  0000                     _LATB	set	16315
   273  0000                     _INTCON0bits	set	16338
   274  0000                     _INTCON0	set	16338
   275  0000                     _PORTC	set	16332
   276  0000                     _PORTB	set	16331
   277  0000                     _PORTA	set	16330
   278  0000                     _IVTLOCKED	set	130720
   279  0000                     _GIE	set	130711
   280                           
   281                           ; #config settings
   282  0000                     
   283                           	psect	cinit
   284  000FBA                     __pcinit:
   285                           	opt callstack 0
   286  000FBA                     start_initialization:
   287                           	opt callstack 0
   288  000FBA                     __initialization:
   289                           	opt callstack 0
   290                           
   291                           ; Initialize objects allocated to COMRAM (12 bytes)
   292                           ; load TBLPTR registers with __pidataCOMRAM
   293  000FBA  0E18               	movlw	low __pidataCOMRAM
   294  000FBC  6EF6               	movwf	tblptrl,c
   295  000FBE  0E17               	movlw	high __pidataCOMRAM
   296  000FC0  6EF7               	movwf	tblptrh,c
   297  000FC2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   298  000FC4  6EF8               	movwf	tblptru,c
   299  000FC6  EE00  F049         	lfsr	0,__pdataCOMRAM
   300  000FCA  EE10 F00C          	lfsr	1,12
   301  000FCE                     copy_data0:
   302  000FCE  0009               	tblrd		*+
   303  000FD0  006F FFD7 FFEE     	movff	tablat,postinc0
   304  000FD6  50E5               	movf	postdec1,w,c
   305  000FD8  50E1               	movf	fsr1l,w,c
   306  000FDA  E1F9               	bnz	copy_data0
   307                           
   308                           ; Clear objects allocated to BANK5 (256 bytes)
   309  000FDC  EE01  F100         	lfsr	0,__pbssBANK5
   310  000FE0  EE10 F100          	lfsr	1,256
   311  000FE4                     clear_0:
   312  000FE4  6AEE               	clrf	postinc0,c
   313  000FE6  50E5               	movf	postdec1,w,c
   314  000FE8  50E1               	movf	fsr1l,w,c
   315  000FEA  E1FC               	bnz	clear_0
   316  000FEC  50E2               	movf	fsr1h,w,c
   317  000FEE  E1FA               	bnz	clear_0
   318                           
   319                           ; Clear objects allocated to BANK4 (256 bytes)
   320  000FF0  EE01  F000         	lfsr	0,__pbssBANK4
   321  000FF4  EE10 F100          	lfsr	1,256
   322  000FF8                     clear_1:
   323  000FF8  6AEE               	clrf	postinc0,c
   324  000FFA  50E5               	movf	postdec1,w,c
   325  000FFC  50E1               	movf	fsr1l,w,c
   326  000FFE  E1FC               	bnz	clear_1
   327  001000  50E2               	movf	fsr1h,w,c
   328  001002  E1FA               	bnz	clear_1
   329                           
   330                           ; Clear objects allocated to BANK3 (256 bytes)
   331  001004  EE00  F300         	lfsr	0,__pbssBANK3
   332  001008  EE10 F100          	lfsr	1,256
   333  00100C                     clear_2:
   334  00100C  6AEE               	clrf	postinc0,c
   335  00100E  50E5               	movf	postdec1,w,c
   336  001010  50E1               	movf	fsr1l,w,c
   337  001012  E1FC               	bnz	clear_2
   338  001014  50E2               	movf	fsr1h,w,c
   339  001016  E1FA               	bnz	clear_2
   340                           
   341                           ; Clear objects allocated to BANK2 (256 bytes)
   342  001018  EE00  F200         	lfsr	0,__pbssBANK2
   343  00101C  EE10 F100          	lfsr	1,256
   344  001020                     clear_3:
   345  001020  6AEE               	clrf	postinc0,c
   346  001022  50E5               	movf	postdec1,w,c
   347  001024  50E1               	movf	fsr1l,w,c
   348  001026  E1FC               	bnz	clear_3
   349  001028  50E2               	movf	fsr1h,w,c
   350  00102A  E1FA               	bnz	clear_3
   351                           
   352                           ; Clear objects allocated to BANK1 (90 bytes)
   353  00102C  EE00  F100         	lfsr	0,__pbssBANK1
   354  001030  0E5A               	movlw	90
   355  001032                     clear_4:
   356  001032  6AEE               	clrf	postinc0,c
   357  001034  06E8               	decf	wreg,f,c
   358  001036  E1FD               	bnz	clear_4
   359                           
   360                           ; Clear objects allocated to COMRAM (35 bytes)
   361  001038  EE00  F026         	lfsr	0,__pbssCOMRAM
   362  00103C  0E23               	movlw	35
   363  00103E                     clear_5:
   364  00103E  6AEE               	clrf	postinc0,c
   365  001040  06E8               	decf	wreg,f,c
   366  001042  E1FD               	bnz	clear_5
   367                           
   368                           ;
   369                           ; Setup IVTBASE
   370                           ;
   371  001044  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   372  001046  6ED5               	movwf	213,c
   373  001048  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   374  00104A  6ED6               	movwf	214,c
   375  00104C  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   376  00104E  6ED7               	movwf	215,c
   377  001050                     end_of_initialization:
   378                           	opt callstack 0
   379  001050                     __end_of__initialization:
   380                           	opt callstack 0
   381  001050  0E00               	movlw	low (__Lmediumconst shr (0+16))
   382  001052  6EF8               	movwf	tblptru,c
   383  001054  0100               	movlb	0
   384  001056  EF0F  F000         	goto	_main	;jump to C main() function
   385                           
   386                           	psect	bssCOMRAM
   387  000026                     __pbssCOMRAM:
   388                           	opt callstack 0
   389  000026                     _buttonsTimers:
   390                           	opt callstack 0
   391  000026                     	ds	15
   392  000035                     _outButtons:
   393                           	opt callstack 0
   394  000035                     	ds	4
   395  000039                     _prevButtons:
   396                           	opt callstack 0
   397  000039                     	ds	3
   398  00003C                     _SITempByte:
   399                           	opt callstack 0
   400  00003C                     	ds	1
   401  00003D                     _SICMDReceived:
   402                           	opt callstack 0
   403  00003D                     	ds	1
   404  00003E                     _SIByteCounter:
   405                           	opt callstack 0
   406  00003E                     	ds	1
   407  00003F                     _SIBitCounter:
   408                           	opt callstack 0
   409  00003F                     	ds	1
   410  000040                     _ButtonsID:
   411                           	opt callstack 0
   412  000040                     	ds	1
   413  000041                     _buttonsMessage:
   414                           	opt callstack 0
   415  000041                     	ds	8
   416                           
   417                           	psect	dataCOMRAM
   418  000049                     __pdataCOMRAM:
   419                           	opt callstack 0
   420  000049                     _ADCValues:
   421                           	opt callstack 0
   422  000049                     	ds	6
   423  00004F                     _ADCChannels:
   424                           	opt callstack 0
   425  00004F                     	ds	6
   426                           
   427                           	psect	bssBANK1
   428  000100                     __pbssBANK1:
   429                           	opt callstack 0
   430  000100                     _SIInputMessage:
   431                           	opt callstack 0
   432  000100                     	ds	36
   433  000124                     _config:
   434                           	opt callstack 0
   435  000124                     	ds	24
   436  00013C                     _buttonsMapByte1:
   437                           	opt callstack 0
   438  00013C                     	ds	15
   439  00014B                     _buttonsMapByte0:
   440                           	opt callstack 0
   441  00014B                     	ds	15
   442                           
   443                           	psect	bssBANK2
   444  000200                     __pbssBANK2:
   445                           	opt callstack 0
   446  000200                     _LUT_CX:
   447                           	opt callstack 0
   448  000200                     	ds	256
   449                           
   450                           	psect	bssBANK3
   451  000300                     __pbssBANK3:
   452                           	opt callstack 0
   453  000300                     _LUT_CY:
   454                           	opt callstack 0
   455  000300                     	ds	256
   456                           
   457                           	psect	bssBANK4
   458  000400                     __pbssBANK4:
   459                           	opt callstack 0
   460  000400                     _LUT_SX:
   461                           	opt callstack 0
   462  000400                     	ds	256
   463                           
   464                           	psect	bssBANK5
   465  000500                     __pbssBANK5:
   466                           	opt callstack 0
   467  000500                     _LUT_SY:
   468                           	opt callstack 0
   469  000500                     	ds	256
   470                           
   471                           	psect	cstackBANK0
   472  000060                     __pcstackBANK0:
   473                           	opt callstack 0
   474  000060                     main@flashBuffer:
   475                           	opt callstack 0
   476                           
   477                           ; 64 bytes @ 0x0
   478  000060                     	ds	64
   479  0000A0                     main@cmd:
   480                           	opt callstack 0
   481                           
   482                           ; 36 bytes @ 0x40
   483  0000A0                     	ds	36
   484  0000C4                     main@btnMsg:
   485                           	opt callstack 0
   486                           
   487                           ; 2 bytes @ 0x64
   488  0000C4                     	ds	2
   489  0000C6                     main@btnMsg_365:
   490                           	opt callstack 0
   491                           
   492                           ; 2 bytes @ 0x66
   493  0000C6                     	ds	2
   494  0000C8                     main@msgAnswer:
   495                           	opt callstack 0
   496                           
   497                           ; 36 bytes @ 0x68
   498  0000C8                     	ds	36
   499  0000EC                     main@len:
   500                           	opt callstack 0
   501                           
   502                           ; 1 bytes @ 0x8C
   503  0000EC                     	ds	1
   504  0000ED                     main@len_366:
   505                           	opt callstack 0
   506                           
   507                           ; 1 bytes @ 0x8D
   508  0000ED                     	ds	1
   509  0000EE                     main@flashBufferIdx:
   510                           	opt callstack 0
   511                           
   512                           ; 1 bytes @ 0x8E
   513  0000EE                     	ds	1
   514  0000EF                     main@cmdLen:
   515                           	opt callstack 0
   516                           
   517                           ; 1 bytes @ 0x8F
   518  0000EF                     	ds	1
   519  0000F0                     main@addr:
   520                           	opt callstack 0
   521                           
   522                           ; 2 bytes @ 0x90
   523  0000F0                     	ds	2
   524  0000F2                     main@gcpLocked:
   525                           	opt callstack 0
   526                           
   527                           ; 1 bytes @ 0x92
   528  0000F2                     	ds	1
   529  0000F3                     main@inBut:
   530                           	opt callstack 0
   531                           
   532                           ; 3 bytes @ 0x93
   533  0000F3                     	ds	3
   534  0000F6                     main@i:
   535                           	opt callstack 0
   536                           
   537                           ; 1 bytes @ 0x96
   538  0000F6                     	ds	1
   539                           
   540                           	psect	cstackCOMRAM
   541  000001                     __pcstackCOMRAM:
   542                           	opt callstack 0
   543  000001                     ?_buttonsGetMessage:
   544                           	opt callstack 0
   545  000001                     ?_buttonsGetMapByte0:
   546                           	opt callstack 0
   547  000001                     ?_buttonsGetMapByte1:
   548                           	opt callstack 0
   549  000001                     ?___wmul:
   550                           	opt callstack 0
   551  000001                     portsInit@state:
   552                           	opt callstack 0
   553  000001                     EEPROMReadByte@address:
   554                           	opt callstack 0
   555  000001                     EEPROMWriteByte@data:
   556                           	opt callstack 0
   557  000001                     ADCInit@syCh:
   558                           	opt callstack 0
   559  000001                     buttonsUpdate@PA:
   560                           	opt callstack 0
   561  000001                     buttonsGetMessage@triggersMode:
   562                           	opt callstack 0
   563  000001                     PGMEraseRow@addr:
   564                           	opt callstack 0
   565  000001                     PGMReadBlock@addr:
   566                           	opt callstack 0
   567  000001                     buttonsSetMapByte0@map:
   568                           	opt callstack 0
   569  000001                     buttonsSetMapByte1@map:
   570                           	opt callstack 0
   571  000001                     SIGetCommand@msg:
   572                           	opt callstack 0
   573  000001                     ___wmul@multiplier:
   574                           	opt callstack 0
   575  000001                     memset@p1:
   576                           	opt callstack 0
   577                           
   578                           ; 2 bytes @ 0x0
   579  000001                     	ds	1
   580  000002                     EEPROMWriteByte@address:
   581                           	opt callstack 0
   582  000002                     ADCInit@cxCh:
   583                           	opt callstack 0
   584  000002                     buttonsUpdate@PB:
   585                           	opt callstack 0
   586                           
   587                           ; 1 bytes @ 0x1
   588  000002                     	ds	1
   589  000003                     ??_buttonsGetMessage:
   590  000003                     ??_PGMEraseRow:
   591  000003                     ADCInit@cyCh:
   592                           	opt callstack 0
   593  000003                     buttonsUpdate@PC:
   594                           	opt callstack 0
   595  000003                     buttonsSetMapByte0@i:
   596                           	opt callstack 0
   597  000003                     buttonsSetMapByte1@i:
   598                           	opt callstack 0
   599  000003                     buttonsGetMapByte0@i:
   600                           	opt callstack 0
   601  000003                     buttonsGetMapByte1@i:
   602                           	opt callstack 0
   603  000003                     SIGetCommand@i:
   604                           	opt callstack 0
   605  000003                     configFlashAll@data:
   606                           	opt callstack 0
   607  000003                     PGMReadBlock@data:
   608                           	opt callstack 0
   609  000003                     ___wmul@multiplicand:
   610                           	opt callstack 0
   611  000003                     memset@c:
   612                           	opt callstack 0
   613                           
   614                           ; 2 bytes @ 0x2
   615  000003                     	ds	1
   616  000004                     ??_ADCInit:
   617  000004                     buttonsUpdate@i:
   618                           	opt callstack 0
   619  000004                     buttonsGetMessage@analogMode:
   620                           	opt callstack 0
   621                           
   622                           ; 1 bytes @ 0x3
   623  000004                     	ds	1
   624  000005                     ??_PGMReadBlock:
   625  000005                     configFlashAll@i:
   626                           	opt callstack 0
   627  000005                     PGMWriteBlock@addr:
   628                           	opt callstack 0
   629  000005                     ___wmul@product:
   630                           	opt callstack 0
   631  000005                     memset@n:
   632                           	opt callstack 0
   633  000005                     buttonsUpdate@toggledButtons:
   634                           	opt callstack 0
   635                           
   636                           ; 3 bytes @ 0x4
   637  000005                     	ds	2
   638  000007                     ?___awdiv:
   639                           	opt callstack 0
   640  000007                     PGMWriteBlock@data:
   641                           	opt callstack 0
   642  000007                     PGMReadBlock@i:
   643                           	opt callstack 0
   644  000007                     SISendMessage@msg:
   645                           	opt callstack 0
   646  000007                     ___awdiv@dividend:
   647                           	opt callstack 0
   648  000007                     memset@p:
   649                           	opt callstack 0
   650                           
   651                           ; 2 bytes @ 0x6
   652  000007                     	ds	1
   653  000008                     ADCInit@sxCh:
   654                           	opt callstack 0
   655                           
   656                           ; 1 bytes @ 0x7
   657  000008                     	ds	1
   658  000009                     ??_PGMWriteBlock:
   659  000009                     ADCInit@i:
   660                           	opt callstack 0
   661  000009                     SISendMessage@len:
   662                           	opt callstack 0
   663  000009                     configInit@data:
   664                           	opt callstack 0
   665  000009                     ___awdiv@divisor:
   666                           	opt callstack 0
   667                           
   668                           ; 2 bytes @ 0x8
   669  000009                     	ds	1
   670  00000A                     ??_SISendMessage:
   671                           
   672                           ; 1 bytes @ 0x9
   673  00000A                     	ds	1
   674  00000B                     configInit@i:
   675                           	opt callstack 0
   676  00000B                     ___awdiv@counter:
   677                           	opt callstack 0
   678  00000B                     PGMWriteBlock@i:
   679                           	opt callstack 0
   680                           
   681                           ; 2 bytes @ 0xA
   682  00000B                     	ds	1
   683  00000C                     ___awdiv@sign:
   684                           	opt callstack 0
   685                           
   686                           ; 1 bytes @ 0xB
   687  00000C                     	ds	1
   688  00000D                     ___awdiv@quotient:
   689                           	opt callstack 0
   690                           
   691                           ; 2 bytes @ 0xC
   692  00000D                     	ds	2
   693  00000F                     SISendMessage@idx:
   694                           	opt callstack 0
   695  00000F                     buttonsBuildLUT@LUT:
   696                           	opt callstack 0
   697                           
   698                           ; 2 bytes @ 0xE
   699  00000F                     	ds	1
   700  000010                     SISendMessage@leftToSend:
   701                           	opt callstack 0
   702                           
   703                           ; 1 bytes @ 0xF
   704  000010                     	ds	1
   705  000011                     buttonsBuildLUT@minVal:
   706                           	opt callstack 0
   707                           
   708                           ; 1 bytes @ 0x10
   709  000011                     	ds	1
   710  000012                     buttonsBuildLUT@maxVal:
   711                           	opt callstack 0
   712                           
   713                           ; 1 bytes @ 0x11
   714  000012                     	ds	1
   715  000013                     buttonsBuildLUT@origin:
   716                           	opt callstack 0
   717                           
   718                           ; 1 bytes @ 0x12
   719  000013                     	ds	1
   720  000014                     buttonsBuildLUT@dz:
   721                           	opt callstack 0
   722                           
   723                           ; 1 bytes @ 0x13
   724  000014                     	ds	1
   725  000015                     buttonsBuildLUT@dzMode:
   726                           	opt callstack 0
   727                           
   728                           ; 1 bytes @ 0x14
   729  000015                     	ds	1
   730  000016                     buttonsBuildLUT@invert:
   731                           	opt callstack 0
   732                           
   733                           ; 1 bytes @ 0x15
   734  000016                     	ds	1
   735  000017                     ??_buttonsBuildLUT:
   736                           
   737                           ; 1 bytes @ 0x16
   738  000017                     	ds	3
   739  00001A                     _buttonsBuildLUT$1143:
   740                           	opt callstack 0
   741                           
   742                           ; 2 bytes @ 0x19
   743  00001A                     	ds	2
   744  00001C                     buttonsBuildLUT@range:
   745                           	opt callstack 0
   746                           
   747                           ; 2 bytes @ 0x1B
   748  00001C                     	ds	2
   749  00001E                     buttonsBuildLUT@tempVal:
   750                           	opt callstack 0
   751                           
   752                           ; 2 bytes @ 0x1D
   753  00001E                     	ds	2
   754  000020                     buttonsBuildLUT@i:
   755                           	opt callstack 0
   756                           
   757                           ; 2 bytes @ 0x1F
   758  000020                     	ds	2
   759  000022                     buttonsBuildLUT@radius:
   760                           	opt callstack 0
   761                           
   762                           ; 2 bytes @ 0x21
   763  000022                     	ds	2
   764  000024                     ??_main:
   765                           
   766                           ; 1 bytes @ 0x23
   767  000024                     	ds	2
   768                           
   769 ;;
   770 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   771 ;;
   772 ;; *************** function _main *****************
   773 ;; Defined at:
   774 ;;		line 79 in file "main.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;		None
   777 ;; Auto vars:     Size  Location     Type
   778 ;;  len             1  141[BANK0 ] unsigned char 
   779 ;;  len             1  140[BANK0 ] unsigned char 
   780 ;;  btnMsg          2  102[BANK0 ] PTR unsigned char 
   781 ;;		 -> buttonsMessage(8), 
   782 ;;  btnMsg          2  100[BANK0 ] PTR unsigned char 
   783 ;;		 -> buttonsMessage(8), 
   784 ;;  flashBuffer    64    0[BANK0 ] unsigned char [64]
   785 ;;  msgAnswer      36  104[BANK0 ] unsigned char [36]
   786 ;;  cmd            36   64[BANK0 ] unsigned char [36]
   787 ;;  inBut           3  147[BANK0 ] struct .
   788 ;;  addr            2  144[BANK0 ] unsigned int 
   789 ;;  i               1  150[BANK0 ] unsigned char 
   790 ;;  gcpLocked       1  146[BANK0 ] unsigned char 
   791 ;;  cmdLen          1  143[BANK0 ] unsigned char 
   792 ;;  flashBufferI    1  142[BANK0 ] unsigned char 
   793 ;; Return value:  Size  Location     Type
   794 ;;                  1    wreg      void 
   795 ;; Registers used:
   796 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   797 ;; Tracked objects:
   798 ;;		On entry : 0/0
   799 ;;		On exit  : 0/0
   800 ;;		Unchanged: 0/0
   801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   802 ;;      Params:         0       0       0       0       0       0       0       0       0
   803 ;;      Locals:         0     151       0       0       0       0       0       0       0
   804 ;;      Temps:          2       0       0       0       0       0       0       0       0
   805 ;;      Totals:         2     151       0       0       0       0       0       0       0
   806 ;;Total ram usage:      153 bytes
   807 ;; Hardware stack levels required when called:    6
   808 ;; This function calls:
   809 ;;		_ADCInit
   810 ;;		_EEPROMReadByte
   811 ;;		_EEPROMWriteByte
   812 ;;		_PGMReadBlock
   813 ;;		_PGMWriteBlock
   814 ;;		_SIClear
   815 ;;		_SIGetCommand
   816 ;;		_SIInit
   817 ;;		_SISendMessage
   818 ;;		_bootPayload
   819 ;;		_buttonsBuildLUTs
   820 ;;		_buttonsGetMapByte0
   821 ;;		_buttonsGetMapByte1
   822 ;;		_buttonsGetMessage
   823 ;;		_buttonsInit
   824 ;;		_buttonsSetMapByte0
   825 ;;		_buttonsSetMapByte1
   826 ;;		_buttonsUpdate
   827 ;;		_configFlashAll
   828 ;;		_configInit
   829 ;;		_configSetDefault
   830 ;;		_portsInit
   831 ;; This function is called by:
   832 ;;		Startup code after reset
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           	psect	text0
   837  00001E                     __ptext0:
   838                           	opt callstack 0
   839  00001E                     _main:
   840                           	opt callstack 25
   841                           
   842                           ;main.c: 82: char cmd[0x24];;main.c: 83: char msgAnswer[0x24];;main.c: 84: uint8_t gcpLo
      +                          cked = 1;
   843                           
   844                           ;incstack = 0
   845  00001E  0E01               	movlw	1
   846  000020  0100               	movlb	0	; () banked
   847  000022  6FF2               	movwf	main@gcpLocked& (0+255),b
   848                           
   849                           ;main.c: 85: uint16_t addr;;main.c: 88: uint8_t flashBuffer[64];;main.c: 89: uint8_t fla
      +                          shBufferIdx = 0;
   850  000024  0E00               	movlw	0
   851  000026  6FEE               	movwf	main@flashBufferIdx& (0+255),b
   852                           
   853                           ; BSR set to: 0
   854                           ;main.c: 103: portsInit();
   855  000028  ECE2  F009         	call	_portsInit	;wreg free
   856                           
   857                           ;main.c: 106: inButtons_t inBut;;main.c: 107: inBut.PORTA = PORTA;
   858  00002C  006F FF28  F0F3    	movff	16330,main@inBut	;volatile
   859                           
   860                           ;main.c: 108: inBut.PORTB = PORTB;
   861  000032  006F FF2C  F0F4    	movff	16331,main@inBut+1	;volatile
   862                           
   863                           ;main.c: 109: inBut.PORTC = PORTC;
   864  000038  006F FF30  F0F5    	movff	16332,main@inBut+2	;volatile
   865                           
   866                           ;main.c: 112: PGMReadBlock(0x2000, flashBuffer);
   867  00003E  0E20               	movlw	32
   868  000040  6E02               	movwf	PGMReadBlock@addr+1,c
   869  000042  0E00               	movlw	0
   870  000044  6E01               	movwf	PGMReadBlock@addr,c
   871  000046  0E60               	movlw	low main@flashBuffer
   872  000048  6E03               	movwf	PGMReadBlock@data,c
   873  00004A  0E00               	movlw	high main@flashBuffer
   874  00004C  6E04               	movwf	PGMReadBlock@data+1,c
   875  00004E  EC72  F009         	call	_PGMReadBlock	;wreg free
   876                           
   877                           ;main.c: 113: if ((flashBuffer[0] == 0x47) && (flashBuffer[1] == 0x43) && (flashBuffer[2
      +                          ] == 0x2B) && (flashBuffer[3] == 0x32)) {
   878  000052  0E47               	movlw	71
   879  000054  0100               	movlb	0	; () banked
   880  000056  1960               	xorwf	main@flashBuffer& (0+255),w,b
   881  000058  A4D8               	btfss	status,2,c
   882  00005A  D016               	goto	l3919
   883                           
   884                           ; BSR set to: 0
   885  00005C  0E43               	movlw	67
   886  00005E  1961               	xorwf	(main@flashBuffer+1)& (0+255),w,b
   887  000060  A4D8               	btfss	status,2,c
   888  000062  D012               	goto	l3919
   889                           
   890                           ; BSR set to: 0
   891  000064  0E2B               	movlw	43
   892  000066  1962               	xorwf	(main@flashBuffer+2)& (0+255),w,b
   893  000068  A4D8               	btfss	status,2,c
   894  00006A  D00E               	goto	l3919
   895                           
   896                           ; BSR set to: 0
   897  00006C  0E32               	movlw	50
   898  00006E  1963               	xorwf	(main@flashBuffer+3)& (0+255),w,b
   899  000070  A4D8               	btfss	status,2,c
   900  000072  D00A               	goto	l3919
   901                           
   902                           ; BSR set to: 0
   903                           ;main.c: 116: if ((inBut.X || inBut.Y || inBut.Z) && (NCO1ACCL == 0)) {
   904  000074  A7F4               	btfss	(main@inBut+1)& (0+255),3,b
   905                           
   906                           ; BSR set to: 0
   907  000076  B5F4               	btfsc	(main@inBut+1)& (0+255),2,b
   908  000078  D002               	goto	u3170
   909                           
   910                           ; BSR set to: 0
   911  00007A  A1F4               	btfss	(main@inBut+1)& (0+255),0,b
   912  00007C  D005               	goto	l3919
   913  00007E                     u3170:
   914                           
   915                           ; BSR set to: 0
   916  00007E  013F               	movlb	63	; () banked
   917  000080  5138               	movf	56,w,b	;volatile
   918  000082  B4D8               	btfsc	status,2,c
   919                           
   920                           ; BSR set to: 63
   921                           ;main.c: 117: bootPayload();
   922  000084  EC6D  F00A         	call	_bootPayload	;wreg free
   923  000088                     l3919:
   924                           
   925                           ;main.c: 118: };main.c: 119: };main.c: 121: NCO1ACCL = 0;
   926  000088  0E00               	movlw	0
   927  00008A  013F               	movlb	63	; () banked
   928  00008C  6F38               	movwf	56,b	;volatile
   929                           
   930                           ; BSR set to: 63
   931                           ;main.c: 123: configInit();
   932  00008E  EC15  F00A         	call	_configInit	;wreg free
   933                           
   934                           ;main.c: 124: if (config.triggersMode == 1) {
   935  000092  0101               	movlb	1	; () banked
   936  000094  053B               	decf	(_config+23)& (0+255),w,b
   937  000096  A4D8               	btfss	status,2,c
   938  000098  D003               	goto	l3927
   939                           
   940                           ; BSR set to: 1
   941                           ;main.c: 125: ANSELC |= 0x18;
   942  00009A  0E18               	movlw	24
   943  00009C  013A               	movlb	58	; () banked
   944  00009E  1360               	iorwf	96,f,b	;volatile
   945  0000A0                     l3927:
   946                           
   947                           ;main.c: 126: };main.c: 128: ADCInit(config.SXChan, config.SYChan, config.CXChan, config
      +                          .CYChan);
   948  0000A0  0060  F4CC  F001   	movff	_config+15,ADCInit@syCh
   949  0000A6  0060  F4D0  F002   	movff	_config+16,ADCInit@cxCh
   950  0000AC  0060  F4D4  F003   	movff	_config+17,ADCInit@cyCh
   951  0000B2  0101               	movlb	1	; () banked
   952  0000B4  5132               	movf	(_config+14)& (0+255),w,b
   953  0000B6  EC80  F004         	call	_ADCInit
   954                           
   955                           ;main.c: 129: buttonsInit();
   956  0000BA  ECF7  F008         	call	_buttonsInit	;wreg free
   957                           
   958                           ;main.c: 130: SIInit();
   959  0000BE  EC2D  F008         	call	_SIInit	;wreg free
   960                           
   961                           ;main.c: 134: if (!inBut.X && !inBut.Y && !inBut.A) {
   962  0000C2  0100               	movlb	0	; () banked
   963  0000C4  A7F4               	btfss	(main@inBut+1)& (0+255),3,b
   964                           
   965                           ; BSR set to: 0
   966  0000C6  B5F4               	btfsc	(main@inBut+1)& (0+255),2,b
   967  0000C8  D006               	goto	l3941
   968                           
   969                           ; BSR set to: 0
   970  0000CA  BFF5               	btfsc	(main@inBut+2)& (0+255),7,b
   971  0000CC  D004               	goto	l3941
   972                           
   973                           ; BSR set to: 0
   974                           ;main.c: 135: configSetDefault();
   975  0000CE  EC37  F009         	call	_configSetDefault	;wreg free
   976                           
   977                           ;main.c: 136: configFlashAll();
   978  0000D2  EC13  F00B         	call	_configFlashAll	;wreg free
   979  0000D6                     l3941:
   980                           
   981                           ;main.c: 137: };main.c: 139: buttonsBuildLUTs();
   982  0000D6  EC12  F007         	call	_buttonsBuildLUTs	;wreg free
   983                           
   984                           ;main.c: 141: INTCON0 = 0x80;
   985  0000DA  0E80               	movlw	128
   986  0000DC  6ED2               	movwf	16338,c	;volatile
   987  0000DE                     l3945:
   988                           
   989                           ;main.c: 144: inBut.PORTA = PORTA;
   990  0000DE  006F FF28  F0F3    	movff	16330,main@inBut	;volatile
   991                           
   992                           ;main.c: 145: inBut.PORTB = PORTB;
   993  0000E4  006F FF2C  F0F4    	movff	16331,main@inBut+1	;volatile
   994                           
   995                           ;main.c: 146: inBut.PORTC = PORTC;
   996  0000EA  006F FF30  F0F5    	movff	16332,main@inBut+2	;volatile
   997                           
   998                           ;main.c: 148: if (inBut.X || inBut.Y || inBut.ST) {
   999  0000F0  0100               	movlb	0	; () banked
  1000  0000F2  A7F4               	btfss	(main@inBut+1)& (0+255),3,b
  1001                           
  1002                           ; BSR set to: 0
  1003  0000F4  B5F4               	btfsc	(main@inBut+1)& (0+255),2,b
  1004  0000F6  D001               	goto	u3250
  1005                           
  1006                           ; BSR set to: 0
  1007  0000F8  BDF3               	btfsc	main@inBut& (0+255),6,b
  1008  0000FA                     u3250:
  1009                           
  1010                           ; BSR set to: 0
  1011  0000FA  0004               	clrwdt		;# 
  1012                           
  1013                           ;main.c: 150: };main.c: 151: buttonsUpdate();
  1014  0000FC  ECF9  F002         	call	_buttonsUpdate	;wreg free
  1015                           
  1016                           ;main.c: 152: cmdLen = SIGetCommand(cmd);
  1017  000100  0EA0               	movlw	low main@cmd
  1018  000102  6E01               	movwf	SIGetCommand@msg,c
  1019  000104  0E00               	movlw	high main@cmd
  1020  000106  6E02               	movwf	SIGetCommand@msg+1,c
  1021  000108  EC8F  F00A         	call	_SIGetCommand	;wreg free
  1022  00010C  0100               	movlb	0	; () banked
  1023  00010E  6FEF               	movwf	main@cmdLen& (0+255),b
  1024                           
  1025                           ; BSR set to: 0
  1026                           ;main.c: 154: if (cmdLen > 0) {
  1027  000110  51EF               	movf	main@cmdLen& (0+255),w,b
  1028  000112  B4D8               	btfsc	status,2,c
  1029  000114  D7E4               	goto	l3945
  1030                           
  1031                           ; BSR set to: 0
  1032                           ;main.c: 155: INTCON0bits.GIE = 0;
  1033  000116  9ED2               	bcf	16338,7,c	;volatile
  1034                           
  1035                           ;main.c: 156: switch(cmd[0]) {
  1036  000118  D224               	goto	l4287
  1037  00011A                     l3965:
  1038                           
  1039                           ; BSR set to: 0
  1040                           ;main.c: 158: case 0xFF:;main.c: 159: msgAnswer[0] = 0x09;
  1041  00011A  0E09               	movlw	9
  1042  00011C  6FC8               	movwf	main@msgAnswer& (0+255),b
  1043                           
  1044                           ;main.c: 160: msgAnswer[1] = 0x00;
  1045  00011E  0E00               	movlw	0
  1046  000120  6FC9               	movwf	(main@msgAnswer+1)& (0+255),b
  1047                           
  1048                           ;main.c: 161: msgAnswer[2] = 0x03;
  1049  000122  0E03               	movlw	3
  1050  000124  6FCA               	movwf	(main@msgAnswer+2)& (0+255),b
  1051                           
  1052                           ; BSR set to: 0
  1053                           ;main.c: 162: SISendMessage(msgAnswer, 3);
  1054  000126  0EC8               	movlw	low main@msgAnswer
  1055  000128  6E07               	movwf	SISendMessage@msg,c
  1056  00012A  0E00               	movlw	high main@msgAnswer
  1057  00012C  6E08               	movwf	SISendMessage@msg+1,c
  1058  00012E  0E03               	movlw	3
  1059  000130  6E09               	movwf	SISendMessage@len,c
  1060  000132  ECA6  F006         	call	_SISendMessage	;wreg free
  1061                           
  1062                           ;main.c: 163: break;
  1063  000136  D259               	goto	l4289
  1064  000138                     l3971:
  1065                           
  1066                           ; BSR set to: 0
  1067  000138  51A2               	movf	(main@cmd+2)& (0+255),w,b
  1068                           
  1069                           ; Switch size 1, requested type "simple"
  1070                           ; Number of cases is 2, Range of values is 1 to 2
  1071                           ; switch strategies available:
  1072                           ; Name         Instructions Cycles
  1073                           ; simple_byte            7     4 (average)
  1074                           ;	Chosen strategy is simple_byte
  1075  00013A  0A01               	xorlw	1	; case 1
  1076  00013C  A4D8               	btfss	status,2,c
  1077  00013E  0A03               	xorlw	3	; case 2
  1078                           
  1079                           ; BSR set to: 0
  1080                           ;main.c: 181: SISendMessage(buttonsGetMessage(cmd[1], config.triggersMode), 8);
  1081  000140  0060  F4EC  F001   	movff	_config+23,buttonsGetMessage@triggersMode
  1082  000146  51A1               	movf	(main@cmd+1)& (0+255),w,b
  1083  000148  EC7B  F007         	call	_buttonsGetMessage
  1084  00014C  0060  F004  F007   	movff	?_buttonsGetMessage,SISendMessage@msg
  1085  000152  0060  F008  F008   	movff	?_buttonsGetMessage+1,SISendMessage@msg+1
  1086  000158  0E08               	movlw	8
  1087  00015A  6E09               	movwf	SISendMessage@len,c
  1088  00015C  ECA6  F006         	call	_SISendMessage	;wreg free
  1089                           
  1090                           ;main.c: 182: break;
  1091  000160  D244               	goto	l4289
  1092  000162                     l3975:
  1093                           
  1094                           ; BSR set to: 0
  1095                           ;main.c: 185: case 0x42:;main.c: 186: msgAnswer[0] = 0x00;
  1096  000162  0E00               	movlw	0
  1097  000164  6FC8               	movwf	main@msgAnswer& (0+255),b
  1098                           
  1099                           ;main.c: 187: msgAnswer[1] = 0x80;
  1100  000166  0E80               	movlw	128
  1101  000168  6FC9               	movwf	(main@msgAnswer+1)& (0+255),b
  1102                           
  1103                           ;main.c: 188: msgAnswer[2] = 0x80;
  1104  00016A  0E80               	movlw	128
  1105  00016C  6FCA               	movwf	(main@msgAnswer+2)& (0+255),b
  1106                           
  1107                           ;main.c: 189: msgAnswer[3] = 0x80;
  1108  00016E  0E80               	movlw	128
  1109  000170  6FCB               	movwf	(main@msgAnswer+3)& (0+255),b
  1110                           
  1111                           ;main.c: 190: msgAnswer[4] = 0x80;
  1112  000172  0E80               	movlw	128
  1113  000174  6FCC               	movwf	(main@msgAnswer+4)& (0+255),b
  1114                           
  1115                           ;main.c: 191: msgAnswer[5] = 0x80;
  1116  000176  0E80               	movlw	128
  1117  000178  6FCD               	movwf	(main@msgAnswer+5)& (0+255),b
  1118                           
  1119                           ;main.c: 192: msgAnswer[6] = 0x00;
  1120  00017A  0E00               	movlw	0
  1121  00017C  6FCE               	movwf	(main@msgAnswer+6)& (0+255),b
  1122                           
  1123                           ;main.c: 193: msgAnswer[7] = 0x00;
  1124  00017E  0E00               	movlw	0
  1125  000180  6FCF               	movwf	(main@msgAnswer+7)& (0+255),b
  1126                           
  1127                           ;main.c: 194: msgAnswer[8] = 0x00;
  1128  000182  0E00               	movlw	0
  1129  000184  6FD0               	movwf	(main@msgAnswer+8)& (0+255),b
  1130                           
  1131                           ;main.c: 195: msgAnswer[9] = 0x00;
  1132  000186  0E00               	movlw	0
  1133  000188  6FD1               	movwf	(main@msgAnswer+9)& (0+255),b
  1134                           
  1135                           ; BSR set to: 0
  1136                           ;main.c: 196: SISendMessage(msgAnswer, 10);
  1137  00018A  0EC8               	movlw	low main@msgAnswer
  1138  00018C  6E07               	movwf	SISendMessage@msg,c
  1139  00018E  0E00               	movlw	high main@msgAnswer
  1140  000190  6E08               	movwf	SISendMessage@msg+1,c
  1141  000192  0E0A               	movlw	10
  1142  000194  6E09               	movwf	SISendMessage@len,c
  1143  000196  ECA6  F006         	call	_SISendMessage	;wreg free
  1144                           
  1145                           ;main.c: 197: break;
  1146  00019A  D227               	goto	l4289
  1147  00019C                     l3979:
  1148                           
  1149                           ; BSR set to: 0
  1150                           ;main.c: 200: if ((cmd[1] == 0x47) && (cmd[2] == 0x43) && (cmd[3] == 0x2B) && (cmd[4] ==
      +                           0x32) && cmdLen == 5) {
  1151  00019C  0E47               	movlw	71
  1152  00019E  19A1               	xorwf	(main@cmd+1)& (0+255),w,b
  1153  0001A0  A4D8               	btfss	status,2,c
  1154  0001A2  D012               	goto	l3991
  1155                           
  1156                           ; BSR set to: 0
  1157  0001A4  0E43               	movlw	67
  1158  0001A6  19A2               	xorwf	(main@cmd+2)& (0+255),w,b
  1159  0001A8  A4D8               	btfss	status,2,c
  1160  0001AA  D00E               	goto	l3991
  1161                           
  1162                           ; BSR set to: 0
  1163  0001AC  0E2B               	movlw	43
  1164  0001AE  19A3               	xorwf	(main@cmd+3)& (0+255),w,b
  1165  0001B0  A4D8               	btfss	status,2,c
  1166  0001B2  D00A               	goto	l3991
  1167                           
  1168                           ; BSR set to: 0
  1169  0001B4  0E32               	movlw	50
  1170  0001B6  19A4               	xorwf	(main@cmd+4)& (0+255),w,b
  1171  0001B8  A4D8               	btfss	status,2,c
  1172  0001BA  D006               	goto	l3991
  1173                           
  1174                           ; BSR set to: 0
  1175  0001BC  0E05               	movlw	5
  1176  0001BE  19EF               	xorwf	main@cmdLen& (0+255),w,b
  1177  0001C0  A4D8               	btfss	status,2,c
  1178  0001C2  D002               	goto	l3991
  1179                           
  1180                           ; BSR set to: 0
  1181                           ;main.c: 201: gcpLocked = 0;
  1182  0001C4  0E00               	movlw	0
  1183  0001C6  D001               	goto	L1
  1184  0001C8                     l3991:
  1185                           
  1186                           ; BSR set to: 0
  1187                           ;main.c: 203: gcpLocked = 1;
  1188  0001C8  0E01               	movlw	1
  1189  0001CA                     L1:
  1190  0001CA  6FF2               	movwf	main@gcpLocked& (0+255),b
  1191  0001CC                     l142:
  1192                           
  1193                           ;main.c: 204: };main.c: 205: msgAnswer[0] = 0x00;
  1194  0001CC  0E00               	movlw	0
  1195  0001CE  0100               	movlb	0	; () banked
  1196  0001D0                     L2:
  1197  0001D0  6FC8               	movwf	main@msgAnswer& (0+255),b
  1198  0001D2                     l3993:
  1199                           
  1200                           ; BSR set to: 0
  1201                           ;main.c: 206: SISendMessage(msgAnswer, 1);
  1202  0001D2  0EC8               	movlw	low main@msgAnswer
  1203  0001D4  6E07               	movwf	SISendMessage@msg,c
  1204  0001D6  0E00               	movlw	high main@msgAnswer
  1205  0001D8  6E08               	movwf	SISendMessage@msg+1,c
  1206  0001DA  0E01               	movlw	1
  1207  0001DC  6E09               	movwf	SISendMessage@len,c
  1208  0001DE  ECA6  F006         	call	_SISendMessage	;wreg free
  1209                           
  1210                           ;main.c: 207: break;
  1211  0001E2  D203               	goto	l4289
  1212  0001E4                     l3995:
  1213                           
  1214                           ; BSR set to: 0
  1215                           ;main.c: 210: if (!gcpLocked) {
  1216  0001E4  51F2               	movf	main@gcpLocked& (0+255),w,b
  1217  0001E6  A4D8               	btfss	status,2,c
  1218  0001E8  D013               	goto	l144
  1219                           
  1220                           ; BSR set to: 0
  1221                           ;main.c: 211: msgAnswer[0] = 0x01;
  1222  0001EA  0E01               	movlw	1
  1223  0001EC  6FC8               	movwf	main@msgAnswer& (0+255),b
  1224                           
  1225                           ;main.c: 212: msgAnswer[1] = (((2U & 0x1FFF) << 3) | (0U & 0x0007)) & 0xFFUL;
  1226  0001EE  0E10               	movlw	16
  1227  0001F0  6FC9               	movwf	(main@msgAnswer+1)& (0+255),b
  1228                           
  1229                           ;main.c: 213: msgAnswer[2] = ((((2U & 0x1FFF) << 3) | (0U & 0x0007)) >> 8) & 0xFF;
  1230  0001F2  0E00               	movlw	0
  1231  0001F4  6FCA               	movwf	(main@msgAnswer+2)& (0+255),b
  1232                           
  1233                           ;main.c: 214: msgAnswer[3] = (((2U & 0x1FFF) << 3) | (0U & 0x0007)) & 0xFFUL;
  1234  0001F6  0E10               	movlw	16
  1235  0001F8  6FCB               	movwf	(main@msgAnswer+3)& (0+255),b
  1236                           
  1237                           ;main.c: 215: msgAnswer[4] = ((((2U & 0x1FFF) << 3) | (0U & 0x0007)) >> 8) & 0xFF;
  1238  0001FA  0E00               	movlw	0
  1239  0001FC  6FCC               	movwf	(main@msgAnswer+4)& (0+255),b
  1240                           
  1241                           ; BSR set to: 0
  1242                           ;main.c: 216: SISendMessage(msgAnswer, 5);
  1243  0001FE  0EC8               	movlw	low main@msgAnswer
  1244  000200  6E07               	movwf	SISendMessage@msg,c
  1245  000202  0E00               	movlw	high main@msgAnswer
  1246  000204  6E08               	movwf	SISendMessage@msg+1,c
  1247  000206  0E05               	movlw	5
  1248  000208  6E09               	movwf	SISendMessage@len,c
  1249  00020A  ECA6  F006         	call	_SISendMessage	;wreg free
  1250                           
  1251                           ;main.c: 217: } else {
  1252  00020E  D1ED               	goto	l4289
  1253  000210                     l144:
  1254                           
  1255                           ; BSR set to: 0
  1256                           ;main.c: 218: msgAnswer[0] = 0xFF;
  1257  000210  69C8               	setf	main@msgAnswer& (0+255),b
  1258  000212  D7DF               	goto	l3993
  1259  000214                     l4003:
  1260                           
  1261                           ; BSR set to: 0
  1262                           ;main.c: 224: if (!gcpLocked) {
  1263  000214  51F2               	movf	main@gcpLocked& (0+255),w,b
  1264  000216  A4D8               	btfss	status,2,c
  1265  000218  D7FB               	goto	l144
  1266                           
  1267                           ; BSR set to: 0
  1268                           ;main.c: 225: if (cmdLen > 3) {
  1269  00021A  0E03               	movlw	3
  1270  00021C  65EF               	cpfsgt	main@cmdLen& (0+255),b
  1271  00021E  D020               	goto	l4027
  1272                           
  1273                           ; BSR set to: 0
  1274                           ;main.c: 226: addr = cmd[2];
  1275  000220  0060  F288  F0F0   	movff	main@cmd+2,main@addr
  1276  000226  6BF1               	clrf	(main@addr+1)& (0+255),b
  1277                           
  1278                           ; BSR set to: 0
  1279                           ;main.c: 227: addr = addr << 8;
  1280  000228  51F0               	movf	main@addr& (0+255),w,b
  1281  00022A  6FF1               	movwf	(main@addr+1)& (0+255),b
  1282  00022C  6BF0               	clrf	main@addr& (0+255),b
  1283                           
  1284                           ; BSR set to: 0
  1285                           ;main.c: 228: addr |= cmd[1];
  1286  00022E  51A1               	movf	(main@cmd+1)& (0+255),w,b
  1287  000230  13F0               	iorwf	main@addr& (0+255),f,b
  1288                           
  1289                           ; BSR set to: 0
  1290                           ;main.c: 229: for (i = 3; i < cmdLen; i++) {
  1291  000232  0E03               	movlw	3
  1292  000234  6FF6               	movwf	main@i& (0+255),b
  1293  000236  D00F               	goto	l4021
  1294  000238                     l4015:
  1295                           
  1296                           ; BSR set to: 0
  1297                           ;main.c: 230: EEPROMWriteByte(addr++, cmd[i]);
  1298  000238  0EA0               	movlw	low main@cmd
  1299  00023A  25F6               	addwf	main@i& (0+255),w,b
  1300  00023C  6ED9               	movwf	fsr2l,c
  1301  00023E  6ADA               	clrf	fsr2h,c
  1302  000240  0E00               	movlw	high main@cmd
  1303  000242  22DA               	addwfc	fsr2h,f,c
  1304  000244  50DF               	movf	indf2,w,c
  1305  000246  6E01               	movwf	EEPROMWriteByte@data,c
  1306  000248  51F0               	movf	main@addr& (0+255),w,b
  1307  00024A  EC55  F00B         	call	_EEPROMWriteByte
  1308  00024E  0100               	movlb	0	; () banked
  1309  000250  4BF0               	infsnz	main@addr& (0+255),f,b
  1310  000252  2BF1               	incf	(main@addr+1)& (0+255),f,b
  1311                           
  1312                           ; BSR set to: 0
  1313  000254  2BF6               	incf	main@i& (0+255),f,b
  1314  000256                     l4021:
  1315                           
  1316                           ; BSR set to: 0
  1317  000256  51EF               	movf	main@cmdLen& (0+255),w,b
  1318  000258  5DF6               	subwf	main@i& (0+255),w,b
  1319  00025A  B0D8               	btfsc	status,0,c
  1320  00025C  D7B7               	goto	l142
  1321  00025E  D7EC               	goto	l4015
  1322  000260                     l4027:
  1323                           
  1324                           ; BSR set to: 0
  1325                           ;main.c: 235: msgAnswer[0] = 0xFE;
  1326  000260  0EFE               	movlw	254
  1327  000262  D7B6               	goto	L2
  1328  000264                     l4033:
  1329                           
  1330                           ; BSR set to: 0
  1331                           ;main.c: 245: if (!gcpLocked) {
  1332  000264  51F2               	movf	main@gcpLocked& (0+255),w,b
  1333  000266  A4D8               	btfss	status,2,c
  1334  000268  D7D3               	goto	l144
  1335                           
  1336                           ; BSR set to: 0
  1337                           ;main.c: 246: if (cmdLen == 4) {
  1338  00026A  0E04               	movlw	4
  1339  00026C  19EF               	xorwf	main@cmdLen& (0+255),w,b
  1340  00026E  A4D8               	btfss	status,2,c
  1341  000270  D7F7               	goto	l4027
  1342                           
  1343                           ; BSR set to: 0
  1344                           ;main.c: 247: addr = cmd[2];
  1345  000272  0060  F288  F0F0   	movff	main@cmd+2,main@addr
  1346  000278  6BF1               	clrf	(main@addr+1)& (0+255),b
  1347                           
  1348                           ; BSR set to: 0
  1349                           ;main.c: 248: addr = addr << 8;
  1350  00027A  51F0               	movf	main@addr& (0+255),w,b
  1351  00027C  6FF1               	movwf	(main@addr+1)& (0+255),b
  1352  00027E  6BF0               	clrf	main@addr& (0+255),b
  1353                           
  1354                           ; BSR set to: 0
  1355                           ;main.c: 249: addr |= cmd[1];
  1356  000280  51A1               	movf	(main@cmd+1)& (0+255),w,b
  1357  000282  13F0               	iorwf	main@addr& (0+255),f,b
  1358                           
  1359                           ; BSR set to: 0
  1360                           ;main.c: 250: uint8_t len = cmd[3];
  1361  000284  0060  F28C  F0EC   	movff	main@cmd+3,main@len
  1362                           
  1363                           ; BSR set to: 0
  1364                           ;main.c: 251: if (len == 0) {
  1365  00028A  51EC               	movf	main@len& (0+255),w,b
  1366  00028C  B4D8               	btfsc	status,2,c
  1367  00028E  D7E8               	goto	l4027
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;main.c: 255: msgAnswer[0] = 0x00;
  1371  000290  0E00               	movlw	0
  1372  000292  6FC8               	movwf	main@msgAnswer& (0+255),b
  1373                           
  1374                           ;main.c: 256: for (i = 0; i < len && i < 0x20; i++) {
  1375  000294  0E00               	movlw	0
  1376  000296  6FF6               	movwf	main@i& (0+255),b
  1377  000298  D015               	goto	l4059
  1378  00029A                     l4053:
  1379                           
  1380                           ; BSR set to: 0
  1381                           ;main.c: 257: msgAnswer[i + 1] = EEPROMReadByte(addr++);
  1382  00029A  51F6               	movf	main@i& (0+255),w,b
  1383  00029C  6E24               	movwf	??_main& (0+255),c
  1384  00029E  6A25               	clrf	(??_main+1)& (0+255),c
  1385  0002A0  0E01               	movlw	1
  1386  0002A2  2624               	addwf	??_main,f,c
  1387  0002A4  0E00               	movlw	0
  1388  0002A6  2225               	addwfc	??_main+1,f,c
  1389  0002A8  0EC8               	movlw	low main@msgAnswer
  1390  0002AA  2424               	addwf	??_main,w,c
  1391  0002AC  6ED9               	movwf	fsr2l,c
  1392  0002AE  0E00               	movlw	high main@msgAnswer
  1393  0002B0  2025               	addwfc	??_main+1,w,c
  1394  0002B2  6EDA               	movwf	fsr2h,c
  1395  0002B4  51F0               	movf	main@addr& (0+255),w,b
  1396  0002B6  EC67  F00B         	call	_EEPROMReadByte
  1397  0002BA  6EDF               	movwf	indf2,c
  1398  0002BC  0100               	movlb	0	; () banked
  1399  0002BE  4BF0               	infsnz	main@addr& (0+255),f,b
  1400  0002C0  2BF1               	incf	(main@addr+1)& (0+255),f,b
  1401                           
  1402                           ; BSR set to: 0
  1403  0002C2  2BF6               	incf	main@i& (0+255),f,b
  1404  0002C4                     l4059:
  1405                           
  1406                           ; BSR set to: 0
  1407  0002C4  51EC               	movf	main@len& (0+255),w,b
  1408  0002C6  5DF6               	subwf	main@i& (0+255),w,b
  1409  0002C8  B0D8               	btfsc	status,0,c
  1410  0002CA  D003               	goto	u3400
  1411                           
  1412                           ; BSR set to: 0
  1413  0002CC  0E1F               	movlw	31
  1414  0002CE  65F6               	cpfsgt	main@i& (0+255),b
  1415  0002D0  D7E4               	goto	l4053
  1416  0002D2                     u3400:
  1417                           
  1418                           ; BSR set to: 0
  1419                           ;main.c: 258: };main.c: 259: SISendMessage(msgAnswer, len + 1);
  1420  0002D2  0EC8               	movlw	low main@msgAnswer
  1421  0002D4  6E07               	movwf	SISendMessage@msg,c
  1422  0002D6  0E00               	movlw	high main@msgAnswer
  1423  0002D8  6E08               	movwf	SISendMessage@msg+1,c
  1424  0002DA  29EC               	incf	main@len& (0+255),w,b
  1425  0002DC  6E09               	movwf	SISendMessage@len,c
  1426  0002DE  ECA6  F006         	call	_SISendMessage	;wreg free
  1427  0002E2  D183               	goto	l4289
  1428  0002E4                     l166:
  1429                           
  1430                           ; BSR set to: 0
  1431  0002E4  00FF               	reset		;# 
  1432                           
  1433                           ;main.c: 273: break;
  1434  0002E6  D181               	goto	l4289
  1435  0002E8                     l4071:
  1436                           
  1437                           ; BSR set to: 0
  1438                           ;main.c: 277: msgAnswer[0] = 0xFD;
  1439  0002E8  0EFD               	movlw	253
  1440  0002EA  D772               	goto	L2
  1441  0002EC                     l4075:
  1442                           
  1443                           ; BSR set to: 0
  1444                           ;main.c: 282: if (!gcpLocked) {
  1445  0002EC  51F2               	movf	main@gcpLocked& (0+255),w,b
  1446  0002EE  A4D8               	btfss	status,2,c
  1447  0002F0  D78F               	goto	l144
  1448                           
  1449                           ; BSR set to: 0
  1450                           ;main.c: 283: if (cmdLen == (N_BUTTONS + 1)) {
  1451  0002F2  0E10               	movlw	16
  1452  0002F4  19EF               	xorwf	main@cmdLen& (0+255),w,b
  1453  0002F6  A4D8               	btfss	status,2,c
  1454  0002F8  D7B3               	goto	l4027
  1455                           
  1456                           ; BSR set to: 0
  1457                           ;main.c: 284: buttonsSetMapByte0(&cmd[1]);
  1458  0002FA  0EA1               	movlw	low (main@cmd+1)
  1459  0002FC  6E01               	movwf	buttonsSetMapByte0@map,c
  1460  0002FE  0E00               	movlw	high (main@cmd+1)
  1461  000300  6E02               	movwf	buttonsSetMapByte0@map+1,c
  1462  000302  EC3F  F00B         	call	_buttonsSetMapByte0	;wreg free
  1463  000306  D762               	goto	l142
  1464  000308                     l4091:
  1465                           
  1466                           ; BSR set to: 0
  1467                           ;main.c: 298: if (!gcpLocked) {
  1468  000308  51F2               	movf	main@gcpLocked& (0+255),w,b
  1469  00030A  A4D8               	btfss	status,2,c
  1470  00030C  D781               	goto	l144
  1471                           
  1472                           ; BSR set to: 0
  1473                           ;main.c: 299: if (cmdLen == (N_BUTTONS + 1)) {
  1474  00030E  0E10               	movlw	16
  1475  000310  19EF               	xorwf	main@cmdLen& (0+255),w,b
  1476  000312  A4D8               	btfss	status,2,c
  1477  000314  D7A5               	goto	l4027
  1478                           
  1479                           ; BSR set to: 0
  1480                           ;main.c: 300: buttonsSetMapByte1(&cmd[1]);
  1481  000316  0EA1               	movlw	low (main@cmd+1)
  1482  000318  6E01               	movwf	buttonsSetMapByte1@map,c
  1483  00031A  0E00               	movlw	high (main@cmd+1)
  1484  00031C  6E02               	movwf	buttonsSetMapByte1@map+1,c
  1485  00031E  EC29  F00B         	call	_buttonsSetMapByte1	;wreg free
  1486  000322  D754               	goto	l142
  1487  000324                     l4107:
  1488                           
  1489                           ; BSR set to: 0
  1490                           ;main.c: 314: if (!gcpLocked) {
  1491  000324  51F2               	movf	main@gcpLocked& (0+255),w,b
  1492  000326  A4D8               	btfss	status,2,c
  1493  000328  D773               	goto	l144
  1494                           
  1495                           ; BSR set to: 0
  1496                           ;main.c: 315: uint8_t* btnMsg = buttonsGetMapByte0();
  1497  00032A  ECE2  F00A         	call	_buttonsGetMapByte0	;wreg free
  1498  00032E  0060  F004  F0C4   	movff	?_buttonsGetMapByte0,main@btnMsg
  1499  000334  0060  F008  F0C5   	movff	?_buttonsGetMapByte0+1,main@btnMsg+1
  1500                           
  1501                           ;main.c: 316: msgAnswer[0] = 0x00;
  1502  00033A  0E00               	movlw	0
  1503  00033C  0100               	movlb	0	; () banked
  1504  00033E  6FC8               	movwf	main@msgAnswer& (0+255),b
  1505                           
  1506                           ; BSR set to: 0
  1507                           ;main.c: 317: for (i = 0; i < N_BUTTONS; i++) {
  1508  000340  0E00               	movlw	0
  1509  000342  6FF6               	movwf	main@i& (0+255),b
  1510  000344                     l4115:
  1511                           
  1512                           ; BSR set to: 0
  1513  000344  0E0E               	movlw	14
  1514  000346  65F6               	cpfsgt	main@i& (0+255),b
  1515  000348  D001               	goto	l4119
  1516  00034A  D018               	goto	l4125
  1517  00034C                     l4119:
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;main.c: 318: msgAnswer[i + 1] = btnMsg[i];
  1521  00034C  51F6               	movf	main@i& (0+255),w,b
  1522  00034E  25C4               	addwf	main@btnMsg& (0+255),w,b
  1523  000350  6ED9               	movwf	fsr2l,c
  1524  000352  0E00               	movlw	0
  1525  000354  21C5               	addwfc	(main@btnMsg+1)& (0+255),w,b
  1526  000356  6EDA               	movwf	fsr2h,c
  1527  000358  51F6               	movf	main@i& (0+255),w,b
  1528  00035A  6E24               	movwf	??_main& (0+255),c
  1529  00035C  6A25               	clrf	(??_main+1)& (0+255),c
  1530  00035E  0E01               	movlw	1
  1531  000360  2624               	addwf	??_main,f,c
  1532  000362  0E00               	movlw	0
  1533  000364  2225               	addwfc	??_main+1,f,c
  1534  000366  0EC8               	movlw	low main@msgAnswer
  1535  000368  2424               	addwf	??_main,w,c
  1536  00036A  6EE1               	movwf	fsr1l,c
  1537  00036C  0E00               	movlw	high main@msgAnswer
  1538  00036E  2025               	addwfc	??_main+1,w,c
  1539  000370  6EE2               	movwf	fsr1h,c
  1540  000372  006F FF7F FFE7     	movff	indf2,indf1
  1541                           
  1542                           ; BSR set to: 0
  1543  000378  2BF6               	incf	main@i& (0+255),f,b
  1544  00037A  D7E4               	goto	l4115
  1545  00037C                     l4125:
  1546                           
  1547                           ; BSR set to: 0
  1548                           ;main.c: 319: };main.c: 320: SISendMessage(msgAnswer, N_BUTTONS + 1);
  1549  00037C  0EC8               	movlw	low main@msgAnswer
  1550  00037E  6E07               	movwf	SISendMessage@msg,c
  1551  000380  0E00               	movlw	high main@msgAnswer
  1552  000382  6E08               	movwf	SISendMessage@msg+1,c
  1553  000384  0E10               	movlw	16
  1554  000386  6E09               	movwf	SISendMessage@len,c
  1555  000388  ECA6  F006         	call	_SISendMessage	;wreg free
  1556                           
  1557                           ;main.c: 321: } else {
  1558  00038C  D12E               	goto	l4289
  1559  00038E                     l4129:
  1560                           
  1561                           ; BSR set to: 0
  1562                           ;main.c: 328: if (!gcpLocked) {
  1563  00038E  51F2               	movf	main@gcpLocked& (0+255),w,b
  1564  000390  A4D8               	btfss	status,2,c
  1565  000392  D73E               	goto	l144
  1566                           
  1567                           ; BSR set to: 0
  1568                           ;main.c: 329: uint8_t* btnMsg = buttonsGetMapByte1();
  1569  000394  ECC8  F00A         	call	_buttonsGetMapByte1	;wreg free
  1570  000398  0060  F004  F0C6   	movff	?_buttonsGetMapByte1,main@btnMsg_365
  1571  00039E  0060  F008  F0C7   	movff	?_buttonsGetMapByte1+1,main@btnMsg_365+1
  1572                           
  1573                           ;main.c: 330: msgAnswer[0] = 0x00;
  1574  0003A4  0E00               	movlw	0
  1575  0003A6  0100               	movlb	0	; () banked
  1576  0003A8  6FC8               	movwf	main@msgAnswer& (0+255),b
  1577                           
  1578                           ; BSR set to: 0
  1579                           ;main.c: 331: for (i = 0; i < N_BUTTONS; i++) {
  1580  0003AA  0E00               	movlw	0
  1581  0003AC  6FF6               	movwf	main@i& (0+255),b
  1582  0003AE                     l4137:
  1583                           
  1584                           ; BSR set to: 0
  1585  0003AE  0E0E               	movlw	14
  1586  0003B0  65F6               	cpfsgt	main@i& (0+255),b
  1587  0003B2  D001               	goto	l4141
  1588  0003B4  D7E3               	goto	l4125
  1589  0003B6                     l4141:
  1590                           
  1591                           ; BSR set to: 0
  1592                           ;main.c: 332: msgAnswer[i + 1] = btnMsg[i];
  1593  0003B6  51F6               	movf	main@i& (0+255),w,b
  1594  0003B8  25C6               	addwf	main@btnMsg_365& (0+255),w,b
  1595  0003BA  6ED9               	movwf	fsr2l,c
  1596  0003BC  0E00               	movlw	0
  1597  0003BE  21C7               	addwfc	(main@btnMsg_365+1)& (0+255),w,b
  1598  0003C0  6EDA               	movwf	fsr2h,c
  1599  0003C2  51F6               	movf	main@i& (0+255),w,b
  1600  0003C4  6E24               	movwf	??_main& (0+255),c
  1601  0003C6  6A25               	clrf	(??_main+1)& (0+255),c
  1602  0003C8  0E01               	movlw	1
  1603  0003CA  2624               	addwf	??_main,f,c
  1604  0003CC  0E00               	movlw	0
  1605  0003CE  2225               	addwfc	??_main+1,f,c
  1606  0003D0  0EC8               	movlw	low main@msgAnswer
  1607  0003D2  2424               	addwf	??_main,w,c
  1608  0003D4  6EE1               	movwf	fsr1l,c
  1609  0003D6  0E00               	movlw	high main@msgAnswer
  1610  0003D8  2025               	addwfc	??_main+1,w,c
  1611  0003DA  6EE2               	movwf	fsr1h,c
  1612  0003DC  006F FF7F FFE7     	movff	indf2,indf1
  1613                           
  1614                           ; BSR set to: 0
  1615  0003E2  2BF6               	incf	main@i& (0+255),f,b
  1616  0003E4  D7E4               	goto	l4137
  1617  0003E6                     l4151:
  1618                           
  1619                           ; BSR set to: 0
  1620                           ;main.c: 342: if (!gcpLocked) {
  1621  0003E6  51F2               	movf	main@gcpLocked& (0+255),w,b
  1622  0003E8  A4D8               	btfss	status,2,c
  1623  0003EA  D712               	goto	l144
  1624                           
  1625                           ; BSR set to: 0
  1626                           ;main.c: 343: buttonsBuildLUTs();
  1627  0003EC  EC12  F007         	call	_buttonsBuildLUTs	;wreg free
  1628  0003F0  D6ED               	goto	l142
  1629  0003F2                     l4161:
  1630                           
  1631                           ; BSR set to: 0
  1632                           ;main.c: 353: if (!gcpLocked) {
  1633  0003F2  51F2               	movf	main@gcpLocked& (0+255),w,b
  1634  0003F4  A4D8               	btfss	status,2,c
  1635  0003F6  D70C               	goto	l144
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;main.c: 354: flashBufferIdx = 0;
  1639  0003F8  0E00               	movlw	0
  1640  0003FA  6FEE               	movwf	main@flashBufferIdx& (0+255),b
  1641                           
  1642                           ;main.c: 355: msgAnswer[0] = 0x00;
  1643  0003FC  0E00               	movlw	0
  1644  0003FE  D6E8               	goto	L2
  1645  000400                     l4169:
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;main.c: 364: if (!gcpLocked) {
  1649  000400  51F2               	movf	main@gcpLocked& (0+255),w,b
  1650  000402  A4D8               	btfss	status,2,c
  1651  000404  D705               	goto	l144
  1652                           
  1653                           ; BSR set to: 0
  1654                           ;main.c: 365: for (i = 1; i < cmdLen; i++) {
  1655  000406  0E01               	movlw	1
  1656  000408  6FF6               	movwf	main@i& (0+255),b
  1657  00040A  D013               	goto	l4181
  1658  00040C                     l4173:
  1659                           
  1660                           ; BSR set to: 0
  1661                           ;main.c: 366: flashBuffer[flashBufferIdx++] = cmd[i];
  1662  00040C  0EA0               	movlw	low main@cmd
  1663  00040E  25F6               	addwf	main@i& (0+255),w,b
  1664  000410  6ED9               	movwf	fsr2l,c
  1665  000412  6ADA               	clrf	fsr2h,c
  1666  000414  0E00               	movlw	high main@cmd
  1667  000416  22DA               	addwfc	fsr2h,f,c
  1668  000418  0E60               	movlw	low main@flashBuffer
  1669  00041A  25EE               	addwf	main@flashBufferIdx& (0+255),w,b
  1670  00041C  6EE1               	movwf	fsr1l,c
  1671  00041E  6AE2               	clrf	fsr1h,c
  1672  000420  0E00               	movlw	high main@flashBuffer
  1673  000422  22E2               	addwfc	fsr1h,f,c
  1674  000424  006F FF7F FFE7     	movff	indf2,indf1
  1675                           
  1676                           ; BSR set to: 0
  1677  00042A  2BEE               	incf	main@flashBufferIdx& (0+255),f,b
  1678                           
  1679                           ; BSR set to: 0
  1680                           ;main.c: 367: flashBufferIdx &= 63;
  1681  00042C  0E3F               	movlw	63
  1682  00042E  17EE               	andwf	main@flashBufferIdx& (0+255),f,b
  1683                           
  1684                           ; BSR set to: 0
  1685  000430  2BF6               	incf	main@i& (0+255),f,b
  1686  000432                     l4181:
  1687                           
  1688                           ; BSR set to: 0
  1689  000432  51EF               	movf	main@cmdLen& (0+255),w,b
  1690  000434  5DF6               	subwf	main@i& (0+255),w,b
  1691  000436  B0D8               	btfsc	status,0,c
  1692  000438  D6C9               	goto	l142
  1693  00043A  D7E8               	goto	l4173
  1694  00043C                     l4189:
  1695                           
  1696                           ; BSR set to: 0
  1697                           ;main.c: 378: if (!gcpLocked) {
  1698  00043C  51F2               	movf	main@gcpLocked& (0+255),w,b
  1699  00043E  A4D8               	btfss	status,2,c
  1700  000440  D6E7               	goto	l144
  1701                           
  1702                           ; BSR set to: 0
  1703                           ;main.c: 379: if (cmdLen == 2) {
  1704  000442  0E02               	movlw	2
  1705  000444  19EF               	xorwf	main@cmdLen& (0+255),w,b
  1706  000446  A4D8               	btfss	status,2,c
  1707  000448  D70B               	goto	l4027
  1708                           
  1709                           ; BSR set to: 0
  1710                           ;main.c: 380: uint8_t len = cmd[1];
  1711  00044A  0060  F284  F0ED   	movff	main@cmd+1,main@len_366
  1712                           
  1713                           ; BSR set to: 0
  1714                           ;main.c: 381: if (len == 0) {
  1715  000450  51ED               	movf	main@len_366& (0+255),w,b
  1716  000452  B4D8               	btfsc	status,2,c
  1717  000454  D705               	goto	l4027
  1718                           
  1719                           ; BSR set to: 0
  1720                           ;main.c: 385: msgAnswer[0] = 0x00;
  1721  000456  0E00               	movlw	0
  1722  000458  6FC8               	movwf	main@msgAnswer& (0+255),b
  1723                           
  1724                           ;main.c: 386: for (i = 0; i < len && i < 0x20; i++) {
  1725  00045A  0E00               	movlw	0
  1726  00045C  6FF6               	movwf	main@i& (0+255),b
  1727  00045E  D01A               	goto	l4211
  1728  000460                     l4203:
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;main.c: 387: msgAnswer[i + 1] = flashBuffer[flashBufferIdx++];
  1732  000460  0E60               	movlw	low main@flashBuffer
  1733  000462  25EE               	addwf	main@flashBufferIdx& (0+255),w,b
  1734  000464  6ED9               	movwf	fsr2l,c
  1735  000466  6ADA               	clrf	fsr2h,c
  1736  000468  0E00               	movlw	high main@flashBuffer
  1737  00046A  22DA               	addwfc	fsr2h,f,c
  1738  00046C  51F6               	movf	main@i& (0+255),w,b
  1739  00046E  6E24               	movwf	??_main& (0+255),c
  1740  000470  6A25               	clrf	(??_main+1)& (0+255),c
  1741  000472  0E01               	movlw	1
  1742  000474  2624               	addwf	??_main,f,c
  1743  000476  0E00               	movlw	0
  1744  000478  2225               	addwfc	??_main+1,f,c
  1745  00047A  0EC8               	movlw	low main@msgAnswer
  1746  00047C  2424               	addwf	??_main,w,c
  1747  00047E  6EE1               	movwf	fsr1l,c
  1748  000480  0E00               	movlw	high main@msgAnswer
  1749  000482  2025               	addwfc	??_main+1,w,c
  1750  000484  6EE2               	movwf	fsr1h,c
  1751  000486  006F FF7F FFE7     	movff	indf2,indf1
  1752                           
  1753                           ; BSR set to: 0
  1754  00048C  2BEE               	incf	main@flashBufferIdx& (0+255),f,b
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;main.c: 388: flashBufferIdx &= 63;
  1758  00048E  0E3F               	movlw	63
  1759  000490  17EE               	andwf	main@flashBufferIdx& (0+255),f,b
  1760                           
  1761                           ; BSR set to: 0
  1762  000492  2BF6               	incf	main@i& (0+255),f,b
  1763  000494                     l4211:
  1764                           
  1765                           ; BSR set to: 0
  1766  000494  51ED               	movf	main@len_366& (0+255),w,b
  1767  000496  5DF6               	subwf	main@i& (0+255),w,b
  1768  000498  B0D8               	btfsc	status,0,c
  1769  00049A  D003               	goto	u3570
  1770                           
  1771                           ; BSR set to: 0
  1772  00049C  0E1F               	movlw	31
  1773  00049E  65F6               	cpfsgt	main@i& (0+255),b
  1774  0004A0  D7DF               	goto	l4203
  1775  0004A2                     u3570:
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;main.c: 389: };main.c: 390: SISendMessage(msgAnswer, len + 1);
  1779  0004A2  0EC8               	movlw	low main@msgAnswer
  1780  0004A4  6E07               	movwf	SISendMessage@msg,c
  1781  0004A6  0E00               	movlw	high main@msgAnswer
  1782  0004A8  6E08               	movwf	SISendMessage@msg+1,c
  1783  0004AA  29ED               	incf	main@len_366& (0+255),w,b
  1784  0004AC  6E09               	movwf	SISendMessage@len,c
  1785  0004AE  ECA6  F006         	call	_SISendMessage	;wreg free
  1786  0004B2  D09B               	goto	l4289
  1787  0004B4                     l4223:
  1788                           
  1789                           ; BSR set to: 0
  1790                           ;main.c: 403: if (!gcpLocked) {
  1791  0004B4  51F2               	movf	main@gcpLocked& (0+255),w,b
  1792  0004B6  A4D8               	btfss	status,2,c
  1793  0004B8  D6AB               	goto	l144
  1794                           
  1795                           ; BSR set to: 0
  1796                           ;main.c: 404: if (cmdLen == 3) {
  1797  0004BA  0E03               	movlw	3
  1798  0004BC  19EF               	xorwf	main@cmdLen& (0+255),w,b
  1799  0004BE  A4D8               	btfss	status,2,c
  1800  0004C0  D6CF               	goto	l4027
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;main.c: 405: addr = cmd[2];
  1804  0004C2  0060  F288  F0F0   	movff	main@cmd+2,main@addr
  1805  0004C8  6BF1               	clrf	(main@addr+1)& (0+255),b
  1806                           
  1807                           ; BSR set to: 0
  1808                           ;main.c: 406: addr = addr << 8;
  1809  0004CA  51F0               	movf	main@addr& (0+255),w,b
  1810  0004CC  6FF1               	movwf	(main@addr+1)& (0+255),b
  1811  0004CE  6BF0               	clrf	main@addr& (0+255),b
  1812                           
  1813                           ; BSR set to: 0
  1814                           ;main.c: 407: addr |= cmd[1];
  1815  0004D0  51A1               	movf	(main@cmd+1)& (0+255),w,b
  1816  0004D2  13F0               	iorwf	main@addr& (0+255),f,b
  1817                           
  1818                           ; BSR set to: 0
  1819                           ;main.c: 408: if (addr & 63) {
  1820  0004D4  0E3F               	movlw	63
  1821  0004D6  15F0               	andwf	main@addr& (0+255),w,b
  1822  0004D8  6E24               	movwf	??_main& (0+255),c
  1823  0004DA  0E00               	movlw	0
  1824  0004DC  15F1               	andwf	(main@addr+1)& (0+255),w,b
  1825  0004DE  6E25               	movwf	(??_main+1)& (0+255),c
  1826  0004E0  5024               	movf	??_main,w,c
  1827  0004E2  1025               	iorwf	??_main+1,w,c
  1828  0004E4  A4D8               	btfss	status,2,c
  1829  0004E6  D6BC               	goto	l4027
  1830                           
  1831                           ; BSR set to: 0
  1832                           ;main.c: 413: PGMWriteBlock(addr, flashBuffer);
  1833  0004E8  0060  F3C0  F005   	movff	main@addr,PGMWriteBlock@addr
  1834  0004EE  0060  F3C4  F006   	movff	main@addr+1,PGMWriteBlock@addr+1
  1835  0004F4  0E60               	movlw	low main@flashBuffer
  1836  0004F6  6E07               	movwf	PGMWriteBlock@data,c
  1837  0004F8  0E00               	movlw	high main@flashBuffer
  1838  0004FA  6E08               	movwf	PGMWriteBlock@data+1,c
  1839  0004FC  ECB6  F008         	call	_PGMWriteBlock	;wreg free
  1840  000500  D665               	goto	l142
  1841  000502                     l4251:
  1842                           
  1843                           ; BSR set to: 0
  1844                           ;main.c: 428: if (!gcpLocked) {
  1845  000502  51F2               	movf	main@gcpLocked& (0+255),w,b
  1846  000504  A4D8               	btfss	status,2,c
  1847  000506  D684               	goto	l144
  1848                           
  1849                           ; BSR set to: 0
  1850                           ;main.c: 429: if (cmdLen == 3) {
  1851  000508  0E03               	movlw	3
  1852  00050A  19EF               	xorwf	main@cmdLen& (0+255),w,b
  1853  00050C  A4D8               	btfss	status,2,c
  1854  00050E  D6A8               	goto	l4027
  1855                           
  1856                           ; BSR set to: 0
  1857                           ;main.c: 430: addr = cmd[2];
  1858  000510  0060  F288  F0F0   	movff	main@cmd+2,main@addr
  1859  000516  6BF1               	clrf	(main@addr+1)& (0+255),b
  1860                           
  1861                           ; BSR set to: 0
  1862                           ;main.c: 431: addr = addr << 8;
  1863  000518  51F0               	movf	main@addr& (0+255),w,b
  1864  00051A  6FF1               	movwf	(main@addr+1)& (0+255),b
  1865  00051C  6BF0               	clrf	main@addr& (0+255),b
  1866                           
  1867                           ; BSR set to: 0
  1868                           ;main.c: 432: addr |= cmd[1];
  1869  00051E  51A1               	movf	(main@cmd+1)& (0+255),w,b
  1870  000520  13F0               	iorwf	main@addr& (0+255),f,b
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;main.c: 433: PGMReadBlock(addr, flashBuffer);
  1874  000522  0060  F3C0  F001   	movff	main@addr,PGMReadBlock@addr
  1875  000528  0060  F3C4  F002   	movff	main@addr+1,PGMReadBlock@addr+1
  1876  00052E  0E60               	movlw	low main@flashBuffer
  1877  000530  6E03               	movwf	PGMReadBlock@data,c
  1878  000532  0E00               	movlw	high main@flashBuffer
  1879  000534  6E04               	movwf	PGMReadBlock@data+1,c
  1880  000536  EC72  F009         	call	_PGMReadBlock	;wreg free
  1881  00053A  D648               	goto	l142
  1882  00053C                     l4273:
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;main.c: 447: if (!gcpLocked) {
  1886  00053C  51F2               	movf	main@gcpLocked& (0+255),w,b
  1887  00053E  A4D8               	btfss	status,2,c
  1888  000540  D667               	goto	l144
  1889                           
  1890                           ; BSR set to: 0
  1891                           ;main.c: 448: msgAnswer[0] = 0x00;
  1892  000542  0E00               	movlw	0
  1893  000544  6FC8               	movwf	main@msgAnswer& (0+255),b
  1894                           
  1895                           ; BSR set to: 0
  1896                           ;main.c: 449: SISendMessage(msgAnswer, 1);
  1897  000546  0EC8               	movlw	low main@msgAnswer
  1898  000548  6E07               	movwf	SISendMessage@msg,c
  1899  00054A  0E00               	movlw	high main@msgAnswer
  1900  00054C  6E08               	movwf	SISendMessage@msg+1,c
  1901  00054E  0E01               	movlw	1
  1902  000550  6E09               	movwf	SISendMessage@len,c
  1903  000552  ECA6  F006         	call	_SISendMessage	;wreg free
  1904                           
  1905                           ;main.c: 450: bootPayload();
  1906  000556  EC6D  F00A         	call	_bootPayload	;wreg free
  1907                           
  1908                           ;main.c: 451: } else {
  1909  00055A  D047               	goto	l4289
  1910  00055C                     l4283:
  1911                           
  1912                           ; BSR set to: 0
  1913                           ;main.c: 458: SIClear();
  1914  00055C  EC71  F00B         	call	_SIClear	;wreg free
  1915                           
  1916                           ;main.c: 459: break;
  1917  000560  D044               	goto	l4289
  1918  000562                     l4287:
  1919                           
  1920                           ; BSR set to: 0
  1921  000562  51A0               	movf	main@cmd& (0+255),w,b
  1922                           
  1923                           ; Switch size 1, requested type "simple"
  1924                           ; Number of cases is 22, Range of values is 0 to 255
  1925                           ; switch strategies available:
  1926                           ; Name         Instructions Cycles
  1927                           ; simple_byte           67    34 (average)
  1928                           ;	Chosen strategy is simple_byte
  1929  000564  0A00               	xorlw	0	; case 0
  1930  000566  B4D8               	btfsc	status,2,c
  1931  000568  D5D8               	goto	l3965
  1932  00056A  0A10               	xorlw	16	; case 16
  1933  00056C  B4D8               	btfsc	status,2,c
  1934  00056E  D616               	goto	l3979
  1935  000570  0A01               	xorlw	1	; case 17
  1936  000572  B4D8               	btfsc	status,2,c
  1937  000574  D637               	goto	l3995
  1938  000576  0A03               	xorlw	3	; case 18
  1939  000578  B4D8               	btfsc	status,2,c
  1940  00057A  D64C               	goto	l4003
  1941  00057C  0A01               	xorlw	1	; case 19
  1942  00057E  B4D8               	btfsc	status,2,c
  1943  000580  D671               	goto	l4033
  1944  000582  0A07               	xorlw	7	; case 20
  1945  000584  B4D8               	btfsc	status,2,c
  1946  000586  D6AE               	goto	l166
  1947  000588  0A01               	xorlw	1	; case 21
  1948  00058A  B4D8               	btfsc	status,2,c
  1949  00058C  D6AD               	goto	l4071
  1950  00058E  0A03               	xorlw	3	; case 22
  1951  000590  B4D8               	btfsc	status,2,c
  1952  000592  D6AC               	goto	l4075
  1953  000594  0A01               	xorlw	1	; case 23
  1954  000596  B4D8               	btfsc	status,2,c
  1955  000598  D6B7               	goto	l4091
  1956  00059A  0A0F               	xorlw	15	; case 24
  1957  00059C  B4D8               	btfsc	status,2,c
  1958  00059E  D6C2               	goto	l4107
  1959  0005A0  0A01               	xorlw	1	; case 25
  1960  0005A2  B4D8               	btfsc	status,2,c
  1961  0005A4  D6F4               	goto	l4129
  1962  0005A6  0A39               	xorlw	57	; case 32
  1963  0005A8  B4D8               	btfsc	status,2,c
  1964  0005AA  D71D               	goto	l4151
  1965  0005AC  0A60               	xorlw	96	; case 64
  1966  0005AE  B4D8               	btfsc	status,2,c
  1967  0005B0  D5C3               	goto	l3971
  1968  0005B2  0A01               	xorlw	1	; case 65
  1969  0005B4  B4D8               	btfsc	status,2,c
  1970  0005B6  D5D5               	goto	l3975
  1971  0005B8  0A03               	xorlw	3	; case 66
  1972  0005BA  B4D8               	btfsc	status,2,c
  1973  0005BC  D5D2               	goto	l3975
  1974  0005BE  0A32               	xorlw	50	; case 112
  1975  0005C0  B4D8               	btfsc	status,2,c
  1976  0005C2  D717               	goto	l4161
  1977  0005C4  0A01               	xorlw	1	; case 113
  1978  0005C6  B4D8               	btfsc	status,2,c
  1979  0005C8  D71B               	goto	l4169
  1980  0005CA  0A03               	xorlw	3	; case 114
  1981  0005CC  B4D8               	btfsc	status,2,c
  1982  0005CE  D736               	goto	l4189
  1983  0005D0  0A01               	xorlw	1	; case 115
  1984  0005D2  B4D8               	btfsc	status,2,c
  1985  0005D4  D76F               	goto	l4223
  1986  0005D6  0A07               	xorlw	7	; case 116
  1987  0005D8  B4D8               	btfsc	status,2,c
  1988  0005DA  D793               	goto	l4251
  1989  0005DC  0A01               	xorlw	1	; case 117
  1990  0005DE  B4D8               	btfsc	status,2,c
  1991  0005E0  D7AD               	goto	l4273
  1992  0005E2  0A8A               	xorlw	138	; case 255
  1993  0005E4  B4D8               	btfsc	status,2,c
  1994  0005E6  D599               	goto	l3965
  1995  0005E8  D7B9               	goto	l4283
  1996  0005EA                     l4289:
  1997                           
  1998                           ;main.c: 461: SIClear();
  1999  0005EA  EC71  F00B         	call	_SIClear	;wreg free
  2000                           
  2001                           ;main.c: 462: INTCON0bits.GIE = 1;
  2002  0005EE  8ED2               	bsf	16338,7,c	;volatile
  2003  0005F0  D576               	goto	l3945
  2004  0005F2                     __end_of_main:
  2005                           	opt callstack 0
  2006                           
  2007 ;; *************** function _portsInit *****************
  2008 ;; Defined at:
  2009 ;;		line 469 in file "main.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;		None
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;  state           1    0[COMRAM] unsigned char 
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  1    wreg      void 
  2016 ;; Registers used:
  2017 ;;		wreg, status,2
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2023 ;;      Params:         0       0       0       0       0       0       0       0       0
  2024 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2025 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2026 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2027 ;;Total ram usage:        1 bytes
  2028 ;; Hardware stack levels used:    1
  2029 ;; Hardware stack levels required when called:    2
  2030 ;; This function calls:
  2031 ;;		Nothing
  2032 ;; This function is called by:
  2033 ;;		_main
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037                           	psect	text1
  2038  0013C4                     __ptext1:
  2039                           	opt callstack 0
  2040  0013C4                     _portsInit:
  2041                           	opt callstack 28
  2042                           
  2043                           ;main.c: 471: bool state = (unsigned char)GIE;
  2044                           
  2045                           ;incstack = 0
  2046  0013C4  0E00               	movlw	0
  2047  0013C6  BED2               	btfsc	16338,7,c	;volatile
  2048  0013C8  0E01               	movlw	1
  2049  0013CA  6E01               	movwf	portsInit@state,c
  2050                           
  2051                           ;main.c: 472: GIE = 0;
  2052  0013CC  9ED2               	bcf	16338,7,c	;volatile
  2053                           
  2054                           ;main.c: 473: PPSLOCK = 0x55;
  2055  0013CE  0E55               	movlw	85
  2056  0013D0  013A               	movlb	58	; () banked
  2057  0013D2  6FBF               	movwf	191,b	;volsfr
  2058                           
  2059                           ;main.c: 474: PPSLOCK = 0xAA;
  2060  0013D4  0EAA               	movlw	170
  2061  0013D6  6FBF               	movwf	191,b	;volsfr
  2062                           
  2063                           ; BSR set to: 58
  2064                           ;main.c: 475: PPSLOCKbits.PPSLOCKED = 0x00;
  2065  0013D8  91BF               	bcf	191,0,b	;volsfr
  2066                           
  2067                           ;main.c: 479: T6INPPS = 0x0C;
  2068  0013DA  0E0C               	movlw	12
  2069  0013DC  6FCC               	movwf	204,b	;volatile
  2070                           
  2071                           ;main.c: 480: SMT1SIGPPS = 0x0C;
  2072  0013DE  0E0C               	movlw	12
  2073  0013E0  6FD2               	movwf	210,b	;volatile
  2074                           
  2075                           ;main.c: 483: RB4PPS = 0x04;
  2076  0013E2  0E04               	movlw	4
  2077  0013E4  6F0C               	movwf	12,b	;volatile
  2078                           
  2079                           ;main.c: 488: PPSLOCK = 0x55;
  2080  0013E6  0E55               	movlw	85
  2081  0013E8  6FBF               	movwf	191,b	;volsfr
  2082                           
  2083                           ;main.c: 489: PPSLOCK = 0xAA;
  2084  0013EA  0EAA               	movlw	170
  2085  0013EC  6FBF               	movwf	191,b	;volsfr
  2086                           
  2087                           ; BSR set to: 58
  2088                           ;main.c: 490: PPSLOCKbits.PPSLOCKED = 0x01;
  2089  0013EE  81BF               	bsf	191,0,b	;volsfr
  2090                           
  2091                           ; BSR set to: 58
  2092                           ;main.c: 491: GIE = state;
  2093  0013F0  A001               	btfss	portsInit@state,0,c
  2094  0013F2  D002               	goto	u2060
  2095  0013F4  8ED2               	bsf	16338,7,c	;volatile
  2096  0013F6  D001               	goto	u2075
  2097  0013F8                     u2060:
  2098  0013F8  9ED2               	bcf	16338,7,c	;volatile
  2099  0013FA                     u2075:
  2100                           
  2101                           ;main.c: 493: LATB = 0xFF;
  2102  0013FA  68BB               	setf	16315,c	;volatile
  2103                           
  2104                           ;main.c: 496: TRISA = 0xFF;
  2105  0013FC  68C2               	setf	16322,c	;volatile
  2106                           
  2107                           ;main.c: 497: TRISB = 0xFF;
  2108  0013FE  68C3               	setf	16323,c	;volatile
  2109                           
  2110                           ;main.c: 498: TRISC = 0xFF;
  2111  001400  68C4               	setf	16324,c	;volatile
  2112                           
  2113                           ;main.c: 499: ANSELA = 0x03;
  2114  001402  0E03               	movlw	3
  2115  001404  013A               	movlb	58	; () banked
  2116  001406  6F40               	movwf	64,b	;volatile
  2117                           
  2118                           ;main.c: 500: ANSELB = 0x00;
  2119  001408  0E00               	movlw	0
  2120  00140A  6F50               	movwf	80,b	;volatile
  2121                           
  2122                           ;main.c: 501: ANSELC = 0x1E;
  2123  00140C  0E1E               	movlw	30
  2124  00140E  6F60               	movwf	96,b	;volatile
  2125                           
  2126                           ;main.c: 502: WPUA = 0xFC;
  2127  001410  0EFC               	movlw	252
  2128  001412  6F41               	movwf	65,b	;volatile
  2129                           
  2130                           ;main.c: 503: WPUB = 0x3F;
  2131  001414  0E3F               	movlw	63
  2132  001416  6F51               	movwf	81,b	;volatile
  2133                           
  2134                           ;main.c: 504: WPUC = 0xE1;
  2135  001418  0EE1               	movlw	225
  2136  00141A  6F61               	movwf	97,b	;volatile
  2137                           
  2138                           ;main.c: 505: ODCONA = 0x00;
  2139  00141C  0E00               	movlw	0
  2140  00141E  6F42               	movwf	66,b	;volatile
  2141                           
  2142                           ;main.c: 506: ODCONB = 0x10;
  2143  001420  0E10               	movlw	16
  2144  001422  6F52               	movwf	82,b	;volatile
  2145                           
  2146                           ;main.c: 507: ODCONC = 0x00;
  2147  001424  0E00               	movlw	0
  2148  001426  6F62               	movwf	98,b	;volatile
  2149                           
  2150                           ; BSR set to: 58
  2151  001428  0012               	return		;funcret
  2152  00142A                     __end_of_portsInit:
  2153                           	opt callstack 0
  2154                           
  2155 ;; *************** function _configInit *****************
  2156 ;; Defined at:
  2157 ;;		line 31 in file "config.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;		None
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;  data            2    8[COMRAM] PTR unsigned char 
  2162 ;;		 -> config(24), 
  2163 ;;  i               1   10[COMRAM] unsigned char 
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  1    wreg      void 
  2166 ;; Registers used:
  2167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2173 ;;      Params:         0       0       0       0       0       0       0       0       0
  2174 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2175 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2176 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2177 ;;Total ram usage:        3 bytes
  2178 ;; Hardware stack levels used:    1
  2179 ;; Hardware stack levels required when called:    5
  2180 ;; This function calls:
  2181 ;;		_EEPROMReadByte
  2182 ;;		_configFlashAll
  2183 ;;		_configSetDefault
  2184 ;; This function is called by:
  2185 ;;		_main
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189                           	psect	text2
  2190  00142A                     __ptext2:
  2191                           	opt callstack 0
  2192  00142A                     _configInit:
  2193                           	opt callstack 25
  2194                           
  2195                           ;config.c: 32: uint8_t* data = (uint8_t*)&config;
  2196                           
  2197                           ; BSR set to: 58
  2198                           ;incstack = 0
  2199  00142A  0E24               	movlw	low _config
  2200  00142C  6E09               	movwf	configInit@data,c
  2201  00142E  0E01               	movlw	high _config
  2202  001430  6E0A               	movwf	configInit@data+1,c
  2203                           
  2204                           ;config.c: 33: uint8_t i;;config.c: 34: for (i = 0; i < sizeof(config_t); i++) {
  2205  001432  0E00               	movlw	0
  2206  001434  6E0B               	movwf	configInit@i,c
  2207  001436                     l253:
  2208  001436  0004               	clrwdt		;# 
  2209                           
  2210                           ;config.c: 36: data[i] = EEPROMReadByte(i);
  2211  001438  500B               	movf	configInit@i,w,c
  2212  00143A  2409               	addwf	configInit@data,w,c
  2213  00143C  6ED9               	movwf	fsr2l,c
  2214  00143E  0E00               	movlw	0
  2215  001440  200A               	addwfc	configInit@data+1,w,c
  2216  001442  6EDA               	movwf	fsr2h,c
  2217  001444  500B               	movf	configInit@i,w,c
  2218  001446  EC67  F00B         	call	_EEPROMReadByte
  2219  00144A  6EDF               	movwf	indf2,c
  2220                           
  2221                           ;config.c: 39: if (i == 3U && config.magicCode != 0x322B4347UL) {
  2222  00144C  0E03               	movlw	3
  2223  00144E  180B               	xorwf	configInit@i,w,c
  2224  001450  A4D8               	btfss	status,2,c
  2225  001452  D012               	goto	l3255
  2226  001454  0E47               	movlw	71
  2227  001456  0101               	movlb	1	; () banked
  2228  001458  1924               	xorwf	_config& (0+255),w,b
  2229  00145A  E10A               	bnz	u2130
  2230  00145C  0E43               	movlw	67
  2231  00145E  1925               	xorwf	(_config+1)& (0+255),w,b
  2232  001460  E107               	bnz	u2130
  2233  001462  0E2B               	movlw	43
  2234  001464  1926               	xorwf	(_config+2)& (0+255),w,b
  2235  001466  E104               	bnz	u2130
  2236  001468  0E32               	movlw	50
  2237  00146A  1927               	xorwf	(_config+3)& (0+255),w,b
  2238  00146C  B4D8               	btfsc	status,2,c
  2239  00146E  D004               	goto	l3255
  2240  001470                     u2130:
  2241                           
  2242                           ; BSR set to: 1
  2243                           ;config.c: 41: configSetDefault();
  2244  001470  EC37  F009         	call	_configSetDefault	;wreg free
  2245                           
  2246                           ;config.c: 42: configFlashAll();
  2247  001474  EC13  F00B         	call	_configFlashAll	;wreg free
  2248  001478                     l3255:
  2249  001478  2A0B               	incf	configInit@i,f,c
  2250  00147A  0E17               	movlw	23
  2251  00147C  640B               	cpfsgt	configInit@i,c
  2252  00147E  D7DB               	goto	l253
  2253  001480  0012               	return	
  2254  001482                     __end_of_configInit:
  2255                           	opt callstack 0
  2256                           
  2257 ;; *************** function _configSetDefault *****************
  2258 ;; Defined at:
  2259 ;;		line 47 in file "config.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;		None
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;		None
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      void 
  2266 ;; Registers used:
  2267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2273 ;;      Params:         0       0       0       0       0       0       0       0       0
  2274 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2275 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2276 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2277 ;;Total ram usage:        0 bytes
  2278 ;; Hardware stack levels used:    1
  2279 ;; Hardware stack levels required when called:    3
  2280 ;; This function calls:
  2281 ;;		_memset
  2282 ;; This function is called by:
  2283 ;;		_main
  2284 ;;		_configInit
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           	psect	text3
  2289  00126E                     __ptext3:
  2290                           	opt callstack 0
  2291  00126E                     _configSetDefault:
  2292                           	opt callstack 27
  2293                           
  2294                           ;config.c: 49: memset((void*)&config, 0, sizeof(config_t));
  2295                           
  2296                           ;incstack = 0
  2297  00126E  0E24               	movlw	low _config
  2298  001270  6E01               	movwf	memset@p1,c
  2299  001272  0E01               	movlw	high _config
  2300  001274  6E02               	movwf	memset@p1+1,c
  2301  001276  0E00               	movlw	0
  2302  001278  6E04               	movwf	memset@c+1,c
  2303  00127A  0E00               	movlw	0
  2304  00127C  6E03               	movwf	memset@c,c
  2305  00127E  0E00               	movlw	0
  2306  001280  6E06               	movwf	memset@n+1,c
  2307  001282  0E18               	movlw	24
  2308  001284  6E05               	movwf	memset@n,c
  2309  001286  ECAD  F00A         	call	_memset	;wreg free
  2310                           
  2311                           ;config.c: 52: config.magicCode = 0x322B4347UL;
  2312  00128A  0E47               	movlw	71
  2313  00128C  0101               	movlb	1	; () banked
  2314  00128E  6F24               	movwf	_config& (0+255),b
  2315  001290  0E43               	movlw	67
  2316  001292  6F25               	movwf	(_config+1)& (0+255),b
  2317  001294  0E2B               	movlw	43
  2318  001296  6F26               	movwf	(_config+2)& (0+255),b
  2319  001298  0E32               	movlw	50
  2320  00129A  6F27               	movwf	(_config+3)& (0+255),b
  2321                           
  2322                           ; BSR set to: 1
  2323                           ;config.c: 53: config.version = (((2U & 0x1FFF) << 3) | (0U & 0x0007));
  2324  00129C  0E00               	movlw	0
  2325  00129E  6F29               	movwf	(_config+5)& (0+255),b
  2326  0012A0  0E10               	movlw	16
  2327  0012A2  6F28               	movwf	(_config+4)& (0+255),b
  2328                           
  2329                           ; BSR set to: 1
  2330                           ;config.c: 56: config.SXMin = 0x00;
  2331  0012A4  0E00               	movlw	0
  2332  0012A6  6F2A               	movwf	(_config+6)& (0+255),b
  2333                           
  2334                           ; BSR set to: 1
  2335                           ;config.c: 57: config.SXMax = 0xFF;
  2336  0012A8  692B               	setf	(_config+7)& (0+255),b
  2337                           
  2338                           ; BSR set to: 1
  2339                           ;config.c: 58: config.SYMin = 0x00;
  2340  0012AA  0E00               	movlw	0
  2341  0012AC  6F2C               	movwf	(_config+8)& (0+255),b
  2342                           
  2343                           ; BSR set to: 1
  2344                           ;config.c: 59: config.SYMax = 0xFF;
  2345  0012AE  692D               	setf	(_config+9)& (0+255),b
  2346                           
  2347                           ; BSR set to: 1
  2348                           ;config.c: 60: config.CXMin = 0x00;
  2349  0012B0  0E00               	movlw	0
  2350  0012B2  6F2E               	movwf	(_config+10)& (0+255),b
  2351                           
  2352                           ; BSR set to: 1
  2353                           ;config.c: 61: config.CXMax = 0xFF;
  2354  0012B4  692F               	setf	(_config+11)& (0+255),b
  2355                           
  2356                           ; BSR set to: 1
  2357                           ;config.c: 62: config.CYMin = 0x00;
  2358  0012B6  0E00               	movlw	0
  2359  0012B8  6F30               	movwf	(_config+12)& (0+255),b
  2360                           
  2361                           ; BSR set to: 1
  2362                           ;config.c: 63: config.CYMax = 0xFF;
  2363  0012BA  6931               	setf	(_config+13)& (0+255),b
  2364                           
  2365                           ; BSR set to: 1
  2366                           ;config.c: 64: config.SXChan = 0x02;
  2367  0012BC  0E02               	movlw	2
  2368  0012BE  6F32               	movwf	(_config+14)& (0+255),b
  2369                           
  2370                           ; BSR set to: 1
  2371                           ;config.c: 65: config.SYChan = 0x03;
  2372  0012C0  0E03               	movlw	3
  2373  0012C2  6F33               	movwf	(_config+15)& (0+255),b
  2374                           
  2375                           ; BSR set to: 1
  2376                           ;config.c: 66: config.CXChan = 0x00;
  2377  0012C4  0E00               	movlw	0
  2378  0012C6  6F34               	movwf	(_config+16)& (0+255),b
  2379                           
  2380                           ; BSR set to: 1
  2381                           ;config.c: 67: config.CYChan = 0x01;
  2382  0012C8  0E01               	movlw	1
  2383  0012CA  6F35               	movwf	(_config+17)& (0+255),b
  2384                           
  2385                           ; BSR set to: 1
  2386                           ;config.c: 68: config.axInvert = 0x00;
  2387  0012CC  0E00               	movlw	0
  2388  0012CE  6F36               	movwf	(_config+18)& (0+255),b
  2389                           
  2390                           ; BSR set to: 1
  2391                           ;config.c: 69: config.SDeadzone = 0x18;
  2392  0012D0  0E18               	movlw	24
  2393  0012D2  6F37               	movwf	(_config+19)& (0+255),b
  2394                           
  2395                           ; BSR set to: 1
  2396                           ;config.c: 70: config.CDeadzone = 0x18;
  2397  0012D4  0E18               	movlw	24
  2398  0012D6  6F38               	movwf	(_config+20)& (0+255),b
  2399                           
  2400                           ; BSR set to: 1
  2401                           ;config.c: 71: config.deadzoneMode = 1;
  2402  0012D8  0E01               	movlw	1
  2403  0012DA  6F39               	movwf	(_config+21)& (0+255),b
  2404                           
  2405                           ; BSR set to: 1
  2406                           ;config.c: 74: config.rumbleIntensity = 0xFF;
  2407  0012DC  693A               	setf	(_config+22)& (0+255),b
  2408                           
  2409                           ; BSR set to: 1
  2410                           ;config.c: 77: config.triggersMode = 0;
  2411  0012DE  0E00               	movlw	0
  2412  0012E0  6F3B               	movwf	(_config+23)& (0+255),b
  2413                           
  2414                           ; BSR set to: 1
  2415  0012E2  0012               	return		;funcret
  2416  0012E4                     __end_of_configSetDefault:
  2417                           	opt callstack 0
  2418                           
  2419 ;; *************** function _configFlashAll *****************
  2420 ;; Defined at:
  2421 ;;		line 80 in file "config.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;		None
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;  data            2    2[COMRAM] PTR unsigned char 
  2426 ;;		 -> config(24), 
  2427 ;;  i               1    4[COMRAM] unsigned char 
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  1    wreg      void 
  2430 ;; Registers used:
  2431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2437 ;;      Params:         0       0       0       0       0       0       0       0       0
  2438 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2439 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2440 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2441 ;;Total ram usage:        3 bytes
  2442 ;; Hardware stack levels used:    1
  2443 ;; Hardware stack levels required when called:    4
  2444 ;; This function calls:
  2445 ;;		_EEPROMWriteByte
  2446 ;; This function is called by:
  2447 ;;		_main
  2448 ;;		_configInit
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452                           	psect	text4
  2453  001626                     __ptext4:
  2454                           	opt callstack 0
  2455  001626                     _configFlashAll:
  2456                           	opt callstack 25
  2457                           
  2458                           ;config.c: 81: uint8_t i;;config.c: 82: uint8_t* data = (uint8_t*)&config;
  2459                           
  2460                           ; BSR set to: 1
  2461                           ;incstack = 0
  2462  001626  0E24               	movlw	low _config
  2463  001628  6E03               	movwf	configFlashAll@data,c
  2464  00162A  0E01               	movlw	high _config
  2465  00162C  6E04               	movwf	configFlashAll@data+1,c
  2466                           
  2467                           ;config.c: 83: for (i = 0; i < sizeof(config_t); i++) {
  2468  00162E  0E00               	movlw	0
  2469  001630  6E05               	movwf	configFlashAll@i,c
  2470  001632                     l3085:
  2471                           
  2472                           ;config.c: 84: EEPROMWriteByte(i, data[i]);
  2473  001632  5005               	movf	configFlashAll@i,w,c
  2474  001634  2403               	addwf	configFlashAll@data,w,c
  2475  001636  6ED9               	movwf	fsr2l,c
  2476  001638  0E00               	movlw	0
  2477  00163A  2004               	addwfc	configFlashAll@data+1,w,c
  2478  00163C  6EDA               	movwf	fsr2h,c
  2479  00163E  50DF               	movf	indf2,w,c
  2480  001640  6E01               	movwf	EEPROMWriteByte@data,c
  2481  001642  5005               	movf	configFlashAll@i,w,c
  2482  001644  EC55  F00B         	call	_EEPROMWriteByte
  2483  001648  2A05               	incf	configFlashAll@i,f,c
  2484  00164A  0E17               	movlw	23
  2485  00164C  6405               	cpfsgt	configFlashAll@i,c
  2486  00164E  D7F1               	goto	l3085
  2487  001650  0012               	return	
  2488  001652                     __end_of_configFlashAll:
  2489                           	opt callstack 0
  2490                           
  2491 ;; *************** function _EEPROMWriteByte *****************
  2492 ;; Defined at:
  2493 ;;		line 120 in file "nvm.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;  address         1    wreg     unsigned char 
  2496 ;;  data            1    0[COMRAM] unsigned char 
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;  address         1    1[COMRAM] unsigned char 
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  1    wreg      void 
  2501 ;; Registers used:
  2502 ;;		wreg, status,2, cstack
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2508 ;;      Params:         1       0       0       0       0       0       0       0       0
  2509 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2510 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2511 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2512 ;;Total ram usage:        2 bytes
  2513 ;; Hardware stack levels used:    1
  2514 ;; Hardware stack levels required when called:    3
  2515 ;; This function calls:
  2516 ;;		_NVMUnlock
  2517 ;; This function is called by:
  2518 ;;		_main
  2519 ;;		_configFlashAll
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text5
  2524  0016AA                     __ptext5:
  2525                           	opt callstack 0
  2526  0016AA                     _EEPROMWriteByte:
  2527                           	opt callstack 25
  2528                           
  2529                           ;incstack = 0
  2530                           ;EEPROMWriteByte@address stored from wreg
  2531  0016AA  6E02               	movwf	EEPROMWriteByte@address,c
  2532                           
  2533                           ;nvm.c: 121: NVMCON1 = 0;
  2534  0016AC  0E00               	movlw	0
  2535  0016AE  0139               	movlb	57	; () banked
  2536  0016B0  6FE5               	movwf	229,b	;volsfr
  2537                           
  2538                           ; BSR set to: 57
  2539                           ;nvm.c: 122: NVMADRL = address;
  2540  0016B2  0060  F00B  F9E0   	movff	EEPROMWriteByte@address,14816	;volatile
  2541                           
  2542                           ; BSR set to: 57
  2543                           ;nvm.c: 123: NVMDAT = data;
  2544  0016B8  0060  F007  F9E3   	movff	EEPROMWriteByte@data,14819	;volatile
  2545                           
  2546                           ; BSR set to: 57
  2547                           ;nvm.c: 124: NVMCON1bits.WREN = 1;
  2548  0016BE  85E5               	bsf	229,2,b	;volsfr
  2549                           
  2550                           ; BSR set to: 57
  2551                           ;nvm.c: 125: NVMUnlock();
  2552  0016C0  EC7A  F00B         	call	_NVMUnlock	;wreg free
  2553  0016C4                     l320:
  2554  0016C4  0139               	movlb	57	; () banked
  2555  0016C6  B3E5               	btfsc	229,1,b	;volsfr
  2556  0016C8  D7FD               	goto	l320
  2557                           
  2558                           ; BSR set to: 57
  2559                           ;nvm.c: 127: NVMCON1bits.WREN = 0;
  2560  0016CA  95E5               	bcf	229,2,b	;volsfr
  2561                           
  2562                           ; BSR set to: 57
  2563  0016CC  0012               	return		;funcret
  2564  0016CE                     __end_of_EEPROMWriteByte:
  2565                           	opt callstack 0
  2566                           
  2567 ;; *************** function _EEPROMReadByte *****************
  2568 ;; Defined at:
  2569 ;;		line 113 in file "nvm.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;  address         1    wreg     unsigned char 
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;  address         1    0[COMRAM] unsigned char 
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  1    wreg      unsigned char 
  2576 ;; Registers used:
  2577 ;;		wreg, status,2
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2583 ;;      Params:         0       0       0       0       0       0       0       0       0
  2584 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2585 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2586 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2587 ;;Total ram usage:        1 bytes
  2588 ;; Hardware stack levels used:    1
  2589 ;; Hardware stack levels required when called:    2
  2590 ;; This function calls:
  2591 ;;		Nothing
  2592 ;; This function is called by:
  2593 ;;		_main
  2594 ;;		_configInit
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           	psect	text6
  2599  0016CE                     __ptext6:
  2600                           	opt callstack 0
  2601  0016CE                     _EEPROMReadByte:
  2602                           	opt callstack 27
  2603                           
  2604                           ; BSR set to: 57
  2605                           ;incstack = 0
  2606                           ;EEPROMReadByte@address stored from wreg
  2607  0016CE  6E01               	movwf	EEPROMReadByte@address,c
  2608                           
  2609                           ;nvm.c: 114: NVMCON1 = 0;
  2610  0016D0  0E00               	movlw	0
  2611  0016D2  0139               	movlb	57	; () banked
  2612  0016D4  6FE5               	movwf	229,b	;volsfr
  2613                           
  2614                           ; BSR set to: 57
  2615                           ;nvm.c: 115: NVMADRL = address;
  2616  0016D6  0060  F007  F9E0   	movff	EEPROMReadByte@address,14816	;volatile
  2617                           
  2618                           ; BSR set to: 57
  2619                           ;nvm.c: 116: NVMCON1bits.RD = 1;
  2620  0016DC  81E5               	bsf	229,0,b	;volsfr
  2621                           
  2622                           ; BSR set to: 57
  2623                           ;nvm.c: 117: return NVMDAT;
  2624  0016DE  51E3               	movf	227,w,b	;volatile
  2625                           
  2626                           ; BSR set to: 57
  2627  0016E0  0012               	return		;funcret
  2628  0016E2                     __end_of_EEPROMReadByte:
  2629                           	opt callstack 0
  2630                           
  2631 ;; *************** function _buttonsUpdate *****************
  2632 ;; Defined at:
  2633 ;;		line 91 in file "buttons.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;		None
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;  toggledButto    3    4[COMRAM] struct .
  2638 ;;  i               1    3[COMRAM] unsigned char 
  2639 ;;  PC              1    2[COMRAM] unsigned char 
  2640 ;;  PB              1    1[COMRAM] unsigned char 
  2641 ;;  PA              1    0[COMRAM] unsigned char 
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  1    wreg      void 
  2644 ;; Registers used:
  2645 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2651 ;;      Params:         0       0       0       0       0       0       0       0       0
  2652 ;;      Locals:         7       0       0       0       0       0       0       0       0
  2653 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2654 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2655 ;;Total ram usage:        7 bytes
  2656 ;; Hardware stack levels used:    1
  2657 ;; Hardware stack levels required when called:    2
  2658 ;; This function calls:
  2659 ;;		Nothing
  2660 ;; This function is called by:
  2661 ;;		_main
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665                           	psect	text7
  2666  0005F2                     __ptext7:
  2667                           	opt callstack 0
  2668  0005F2                     _buttonsUpdate:
  2669                           	opt callstack 28
  2670                           
  2671                           ;buttons.c: 92: uint8_t i;;buttons.c: 93: uint8_t PA, PB, PC;;buttons.c: 94: inButtons_t
      +                           toggledButtons;;buttons.c: 97: PA = PORTA;
  2672                           
  2673                           ; BSR set to: 57
  2674                           ;incstack = 0
  2675  0005F2  006F FF28  F001    	movff	16330,buttonsUpdate@PA	;volatile
  2676                           
  2677                           ;buttons.c: 98: PB = PORTB;
  2678  0005F8  006F FF2C  F002    	movff	16331,buttonsUpdate@PB	;volatile
  2679                           
  2680                           ;buttons.c: 99: PC = PORTC;
  2681  0005FE  006F FF30  F003    	movff	16332,buttonsUpdate@PC	;volatile
  2682                           
  2683                           ;buttons.c: 100: toggledButtons.PORTA = (uint8_t)(PA ^ prevButtons.PORTA);
  2684  000604  5039               	movf	_prevButtons,w,c
  2685  000606  1801               	xorwf	buttonsUpdate@PA,w,c
  2686  000608  6E05               	movwf	buttonsUpdate@toggledButtons,c
  2687                           
  2688                           ;buttons.c: 101: toggledButtons.PORTB = (uint8_t)(PB ^ prevButtons.PORTB);
  2689  00060A  503A               	movf	_prevButtons+1,w,c
  2690  00060C  1802               	xorwf	buttonsUpdate@PB,w,c
  2691  00060E  6E06               	movwf	buttonsUpdate@toggledButtons+1,c
  2692                           
  2693                           ;buttons.c: 102: toggledButtons.PORTC = (uint8_t)(PC ^ prevButtons.PORTC);
  2694  000610  503B               	movf	_prevButtons+2,w,c
  2695  000612  1803               	xorwf	buttonsUpdate@PC,w,c
  2696  000614  6E07               	movwf	buttonsUpdate@toggledButtons+2,c
  2697                           
  2698                           ;buttons.c: 104: prevButtons.PORTA = PA;
  2699  000616  0060  F004  F039   	movff	buttonsUpdate@PA,_prevButtons
  2700                           
  2701                           ;buttons.c: 105: prevButtons.PORTB = PB;
  2702  00061C  0060  F008  F03A   	movff	buttonsUpdate@PB,_prevButtons+1
  2703                           
  2704                           ;buttons.c: 106: prevButtons.PORTC = PC;
  2705  000622  0060  F00C  F03B   	movff	buttonsUpdate@PC,_prevButtons+2
  2706                           
  2707                           ;buttons.c: 109: if (toggledButtons.A) buttonsTimers[BUTTON_A_ID] = 0;
  2708  000628  AE07               	btfss	buttonsUpdate@toggledButtons+2,7,c
  2709  00062A  D002               	goto	l3403
  2710  00062C  0E00               	movlw	0
  2711  00062E  6E26               	movwf	_buttonsTimers,c
  2712  000630                     l3403:
  2713                           
  2714                           ;buttons.c: 110: if (toggledButtons.B) buttonsTimers[BUTTON_B_ID] = 0;
  2715  000630  AC07               	btfss	buttonsUpdate@toggledButtons+2,6,c
  2716  000632  D002               	goto	l3407
  2717  000634  0E00               	movlw	0
  2718  000636  6E27               	movwf	_buttonsTimers+1,c
  2719  000638                     l3407:
  2720                           
  2721                           ;buttons.c: 111: if (toggledButtons.X) buttonsTimers[BUTTON_X_ID] = 0;
  2722  000638  A606               	btfss	buttonsUpdate@toggledButtons+1,3,c
  2723  00063A  D002               	goto	l3411
  2724  00063C  0E00               	movlw	0
  2725  00063E  6E28               	movwf	_buttonsTimers+2,c
  2726  000640                     l3411:
  2727                           
  2728                           ;buttons.c: 112: if (toggledButtons.Y) buttonsTimers[BUTTON_Y_ID] = 0;
  2729  000640  A406               	btfss	buttonsUpdate@toggledButtons+1,2,c
  2730  000642  D002               	goto	l3415
  2731  000644  0E00               	movlw	0
  2732  000646  6E29               	movwf	_buttonsTimers+3,c
  2733  000648                     l3415:
  2734                           
  2735                           ;buttons.c: 113: if (toggledButtons.ST) buttonsTimers[BUTTON_ST_ID] = 0;
  2736  000648  AC05               	btfss	buttonsUpdate@toggledButtons,6,c
  2737  00064A  D002               	goto	l3419
  2738  00064C  0E00               	movlw	0
  2739  00064E  6E2A               	movwf	_buttonsTimers+4,c
  2740  000650                     l3419:
  2741                           
  2742                           ;buttons.c: 114: if (toggledButtons.DL) buttonsTimers[BUTTON_DL_ID] = 0;
  2743  000650  A605               	btfss	buttonsUpdate@toggledButtons,3,c
  2744  000652  D002               	goto	l3423
  2745  000654  0E00               	movlw	0
  2746  000656  6E2B               	movwf	_buttonsTimers+5,c
  2747  000658                     l3423:
  2748                           
  2749                           ;buttons.c: 115: if (toggledButtons.DR) buttonsTimers[BUTTON_DR_ID] = 0;
  2750  000658  AA05               	btfss	buttonsUpdate@toggledButtons,5,c
  2751  00065A  D002               	goto	l3427
  2752  00065C  0E00               	movlw	0
  2753  00065E  6E2C               	movwf	_buttonsTimers+6,c
  2754  000660                     l3427:
  2755                           
  2756                           ;buttons.c: 116: if (toggledButtons.DD) buttonsTimers[BUTTON_DD_ID] = 0;
  2757  000660  AE05               	btfss	buttonsUpdate@toggledButtons,7,c
  2758  000662  D002               	goto	l3431
  2759  000664  0E00               	movlw	0
  2760  000666  6E2D               	movwf	_buttonsTimers+7,c
  2761  000668                     l3431:
  2762                           
  2763                           ;buttons.c: 117: if (toggledButtons.DU) buttonsTimers[BUTTON_DU_ID] = 0;
  2764  000668  A805               	btfss	buttonsUpdate@toggledButtons,4,c
  2765  00066A  D002               	goto	l3435
  2766  00066C  0E00               	movlw	0
  2767  00066E  6E2E               	movwf	_buttonsTimers+8,c
  2768  000670                     l3435:
  2769                           
  2770                           ;buttons.c: 118: if (toggledButtons.Z) buttonsTimers[BUTTON_Z_ID] = 0;
  2771  000670  A006               	btfss	buttonsUpdate@toggledButtons+1,0,c
  2772  000672  D002               	goto	l3439
  2773  000674  0E00               	movlw	0
  2774  000676  6E2F               	movwf	_buttonsTimers+9,c
  2775  000678                     l3439:
  2776                           
  2777                           ;buttons.c: 119: if (toggledButtons.RD) buttonsTimers[BUTTON_RD_ID] = 0;
  2778  000678  A206               	btfss	buttonsUpdate@toggledButtons+1,1,c
  2779  00067A  D002               	goto	l3443
  2780  00067C  0E00               	movlw	0
  2781  00067E  6E30               	movwf	_buttonsTimers+10,c
  2782  000680                     l3443:
  2783                           
  2784                           ;buttons.c: 120: if (toggledButtons.LD) buttonsTimers[BUTTON_LD_ID] = 0;
  2785  000680  A405               	btfss	buttonsUpdate@toggledButtons,2,c
  2786  000682  D002               	goto	l3447
  2787  000684  0E00               	movlw	0
  2788  000686  6E31               	movwf	_buttonsTimers+11,c
  2789  000688                     l3447:
  2790                           
  2791                           ;buttons.c: 121: if (toggledButtons.LA) buttonsTimers[BUTTON_LA_ID] = 0;
  2792  000688  A007               	btfss	buttonsUpdate@toggledButtons+2,0,c
  2793  00068A  D002               	goto	l3451
  2794  00068C  0E00               	movlw	0
  2795  00068E  6E32               	movwf	_buttonsTimers+12,c
  2796  000690                     l3451:
  2797                           
  2798                           ;buttons.c: 122: if (toggledButtons.RA) buttonsTimers[BUTTON_RA_ID] = 0;
  2799  000690  AA07               	btfss	buttonsUpdate@toggledButtons+2,5,c
  2800  000692  D002               	goto	l3455
  2801  000694  0E00               	movlw	0
  2802  000696  6E33               	movwf	_buttonsTimers+13,c
  2803  000698                     l3455:
  2804                           
  2805                           ;buttons.c: 123: if (toggledButtons.Z2) buttonsTimers[BUTTON_Z2_ID] = 0;
  2806  000698  AA06               	btfss	buttonsUpdate@toggledButtons+1,5,c
  2807  00069A  D002               	goto	l3459
  2808  00069C  0E00               	movlw	0
  2809  00069E  6E34               	movwf	_buttonsTimers+14,c
  2810  0006A0                     l3459:
  2811                           
  2812                           ;buttons.c: 125: if (!TMR0IF) return;
  2813  0006A0  0139               	movlb	57	; () banked
  2814  0006A2  AFA3               	btfss	163,7,b	;volatile
  2815  0006A4  0012               	return	
  2816                           
  2817                           ; BSR set to: 57
  2818                           ;buttons.c: 126: TMR0IF = 0;
  2819  0006A6  9FA3               	bcf	163,7,b	;volatile
  2820                           
  2821                           ; BSR set to: 57
  2822                           ;buttons.c: 129: for (i = 0; i < N_BUTTONS; i++) {
  2823  0006A8  0E00               	movlw	0
  2824  0006AA  6E04               	movwf	buttonsUpdate@i,c
  2825  0006AC                     l3469:
  2826                           
  2827                           ;buttons.c: 130: buttonsTimers[i]++;
  2828  0006AC  0E26               	movlw	low _buttonsTimers
  2829  0006AE  2404               	addwf	buttonsUpdate@i,w,c
  2830  0006B0  6ED9               	movwf	fsr2l,c
  2831  0006B2  6ADA               	clrf	fsr2h,c
  2832  0006B4  0E00               	movlw	high _buttonsTimers
  2833  0006B6  22DA               	addwfc	fsr2h,f,c
  2834  0006B8  2ADF               	incf	indf2,f,c
  2835  0006BA  2A04               	incf	buttonsUpdate@i,f,c
  2836  0006BC  0E0E               	movlw	14
  2837  0006BE  6404               	cpfsgt	buttonsUpdate@i,c
  2838  0006C0  D7F5               	goto	l3469
  2839                           
  2840                           ;buttons.c: 131: };buttons.c: 133: outButtons.byte0 = 0x00;
  2841  0006C2  0E00               	movlw	0
  2842  0006C4  6E35               	movwf	_outButtons,c
  2843                           
  2844                           ;buttons.c: 134: outButtons.byte1 = 0x80;
  2845  0006C6  0E80               	movlw	128
  2846  0006C8  6E36               	movwf	_outButtons+1,c
  2847                           
  2848                           ;buttons.c: 136: if (buttonsTimers[BUTTON_A_ID] >= 10 && !prevButtons.A) { buttonsTimers
      +                          [BUTTON_A_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_A_ID]; } if (buttonsTimer
      +                          s[BUTTON_A_ID] >= 10 && !prevButtons.A) { buttonsTimers[BUTTON_A_ID] = 10; outButtons.by
      +                          te1
  2849  0006CA  0E09               	movlw	9
  2850  0006CC  6426               	cpfsgt	_buttonsTimers,c
  2851  0006CE  D007               	goto	l3485
  2852  0006D0  BE3B               	btfsc	_prevButtons+2,7,c
  2853  0006D2  D005               	goto	l3485
  2854  0006D4  0E0A               	movlw	10
  2855  0006D6  6E26               	movwf	_buttonsTimers,c
  2856  0006D8  0101               	movlb	1	; () banked
  2857  0006DA  514B               	movf	_buttonsMapByte0& (0+255),w,b
  2858  0006DC  1235               	iorwf	_outButtons,f,c
  2859  0006DE                     l3485:
  2860  0006DE  0E09               	movlw	9
  2861  0006E0  6426               	cpfsgt	_buttonsTimers,c
  2862  0006E2  D007               	goto	l3493
  2863  0006E4  BE3B               	btfsc	_prevButtons+2,7,c
  2864  0006E6  D005               	goto	l3493
  2865  0006E8  0E0A               	movlw	10
  2866  0006EA  6E26               	movwf	_buttonsTimers,c
  2867  0006EC  0101               	movlb	1	; () banked
  2868  0006EE  513C               	movf	_buttonsMapByte1& (0+255),w,b
  2869  0006F0  1236               	iorwf	_outButtons+1,f,c
  2870  0006F2                     l3493:
  2871                           
  2872                           ;buttons.c: 137: if (buttonsTimers[BUTTON_B_ID] >= 10 && !prevButtons.B) { buttonsTimers
      +                          [BUTTON_B_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_B_ID]; } if (buttonsTimer
      +                          s[BUTTON_B_ID] >= 10 && !prevButtons.B) { buttonsTimers[BUTTON_B_ID] = 10; outButtons.by
      +                          te1
  2873  0006F2  0E09               	movlw	9
  2874  0006F4  6427               	cpfsgt	_buttonsTimers+1,c
  2875  0006F6  D007               	goto	l3501
  2876  0006F8  BC3B               	btfsc	_prevButtons+2,6,c
  2877  0006FA  D005               	goto	l3501
  2878  0006FC  0E0A               	movlw	10
  2879  0006FE  6E27               	movwf	_buttonsTimers+1,c
  2880  000700  0101               	movlb	1	; () banked
  2881  000702  514C               	movf	(_buttonsMapByte0+1)& (0+255),w,b
  2882  000704  1235               	iorwf	_outButtons,f,c
  2883  000706                     l3501:
  2884  000706  0E09               	movlw	9
  2885  000708  6427               	cpfsgt	_buttonsTimers+1,c
  2886  00070A  D007               	goto	l3509
  2887  00070C  BC3B               	btfsc	_prevButtons+2,6,c
  2888  00070E  D005               	goto	l3509
  2889  000710  0E0A               	movlw	10
  2890  000712  6E27               	movwf	_buttonsTimers+1,c
  2891  000714  0101               	movlb	1	; () banked
  2892  000716  513D               	movf	(_buttonsMapByte1+1)& (0+255),w,b
  2893  000718  1236               	iorwf	_outButtons+1,f,c
  2894  00071A                     l3509:
  2895                           
  2896                           ;buttons.c: 138: if (buttonsTimers[BUTTON_X_ID] >= 10 && !prevButtons.X) { buttonsTimers
      +                          [BUTTON_X_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_X_ID]; } if (buttonsTimer
      +                          s[BUTTON_X_ID] >= 10 && !prevButtons.X) { buttonsTimers[BUTTON_X_ID] = 10; outButtons.by
      +                          te1
  2897  00071A  0E09               	movlw	9
  2898  00071C  6428               	cpfsgt	_buttonsTimers+2,c
  2899  00071E  D007               	goto	l3517
  2900  000720  B63A               	btfsc	_prevButtons+1,3,c
  2901  000722  D005               	goto	l3517
  2902  000724  0E0A               	movlw	10
  2903  000726  6E28               	movwf	_buttonsTimers+2,c
  2904  000728  0101               	movlb	1	; () banked
  2905  00072A  514D               	movf	(_buttonsMapByte0+2)& (0+255),w,b
  2906  00072C  1235               	iorwf	_outButtons,f,c
  2907  00072E                     l3517:
  2908  00072E  0E09               	movlw	9
  2909  000730  6428               	cpfsgt	_buttonsTimers+2,c
  2910  000732  D007               	goto	l3525
  2911  000734  B63A               	btfsc	_prevButtons+1,3,c
  2912  000736  D005               	goto	l3525
  2913  000738  0E0A               	movlw	10
  2914  00073A  6E28               	movwf	_buttonsTimers+2,c
  2915  00073C  0101               	movlb	1	; () banked
  2916  00073E  513E               	movf	(_buttonsMapByte1+2)& (0+255),w,b
  2917  000740  1236               	iorwf	_outButtons+1,f,c
  2918  000742                     l3525:
  2919                           
  2920                           ;buttons.c: 139: if (buttonsTimers[BUTTON_Y_ID] >= 10 && !prevButtons.Y) { buttonsTimers
      +                          [BUTTON_Y_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_Y_ID]; } if (buttonsTimer
      +                          s[BUTTON_Y_ID] >= 10 && !prevButtons.Y) { buttonsTimers[BUTTON_Y_ID] = 10; outButtons.by
      +                          te1
  2921  000742  0E09               	movlw	9
  2922  000744  6429               	cpfsgt	_buttonsTimers+3,c
  2923  000746  D007               	goto	l3533
  2924  000748  B43A               	btfsc	_prevButtons+1,2,c
  2925  00074A  D005               	goto	l3533
  2926  00074C  0E0A               	movlw	10
  2927  00074E  6E29               	movwf	_buttonsTimers+3,c
  2928  000750  0101               	movlb	1	; () banked
  2929  000752  514E               	movf	(_buttonsMapByte0+3)& (0+255),w,b
  2930  000754  1235               	iorwf	_outButtons,f,c
  2931  000756                     l3533:
  2932  000756  0E09               	movlw	9
  2933  000758  6429               	cpfsgt	_buttonsTimers+3,c
  2934  00075A  D007               	goto	l3541
  2935  00075C  B43A               	btfsc	_prevButtons+1,2,c
  2936  00075E  D005               	goto	l3541
  2937  000760  0E0A               	movlw	10
  2938  000762  6E29               	movwf	_buttonsTimers+3,c
  2939  000764  0101               	movlb	1	; () banked
  2940  000766  513F               	movf	(_buttonsMapByte1+3)& (0+255),w,b
  2941  000768  1236               	iorwf	_outButtons+1,f,c
  2942  00076A                     l3541:
  2943                           
  2944                           ;buttons.c: 140: if (buttonsTimers[BUTTON_ST_ID] >= 10 && !prevButtons.ST) { buttonsTime
      +                          rs[BUTTON_ST_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_ST_ID]; } if (buttonsT
      +                          imers[BUTTON_ST_ID] >= 10 && !prevButtons.ST) { buttonsTimers[BUTTON_ST_ID] = 10; outBut
      +                          ton
  2945  00076A  0E09               	movlw	9
  2946  00076C  642A               	cpfsgt	_buttonsTimers+4,c
  2947  00076E  D007               	goto	l3549
  2948  000770  BC39               	btfsc	_prevButtons,6,c
  2949  000772  D005               	goto	l3549
  2950  000774  0E0A               	movlw	10
  2951  000776  6E2A               	movwf	_buttonsTimers+4,c
  2952  000778  0101               	movlb	1	; () banked
  2953  00077A  514F               	movf	(_buttonsMapByte0+4)& (0+255),w,b
  2954  00077C  1235               	iorwf	_outButtons,f,c
  2955  00077E                     l3549:
  2956  00077E  0E09               	movlw	9
  2957  000780  642A               	cpfsgt	_buttonsTimers+4,c
  2958  000782  D007               	goto	l3557
  2959  000784  BC39               	btfsc	_prevButtons,6,c
  2960  000786  D005               	goto	l3557
  2961  000788  0E0A               	movlw	10
  2962  00078A  6E2A               	movwf	_buttonsTimers+4,c
  2963  00078C  0101               	movlb	1	; () banked
  2964  00078E  5140               	movf	(_buttonsMapByte1+4)& (0+255),w,b
  2965  000790  1236               	iorwf	_outButtons+1,f,c
  2966  000792                     l3557:
  2967                           
  2968                           ;buttons.c: 141: if (buttonsTimers[BUTTON_DL_ID] >= 10 && !prevButtons.DL) { buttonsTime
      +                          rs[BUTTON_DL_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_DL_ID]; } if (buttonsT
      +                          imers[BUTTON_DL_ID] >= 10 && !prevButtons.DL) { buttonsTimers[BUTTON_DL_ID] = 10; outBut
      +                          ton
  2969  000792  0E09               	movlw	9
  2970  000794  642B               	cpfsgt	_buttonsTimers+5,c
  2971  000796  D007               	goto	l3565
  2972  000798  B639               	btfsc	_prevButtons,3,c
  2973  00079A  D005               	goto	l3565
  2974  00079C  0E0A               	movlw	10
  2975  00079E  6E2B               	movwf	_buttonsTimers+5,c
  2976  0007A0  0101               	movlb	1	; () banked
  2977  0007A2  5150               	movf	(_buttonsMapByte0+5)& (0+255),w,b
  2978  0007A4  1235               	iorwf	_outButtons,f,c
  2979  0007A6                     l3565:
  2980  0007A6  0E09               	movlw	9
  2981  0007A8  642B               	cpfsgt	_buttonsTimers+5,c
  2982  0007AA  D007               	goto	l3573
  2983  0007AC  B639               	btfsc	_prevButtons,3,c
  2984  0007AE  D005               	goto	l3573
  2985  0007B0  0E0A               	movlw	10
  2986  0007B2  6E2B               	movwf	_buttonsTimers+5,c
  2987  0007B4  0101               	movlb	1	; () banked
  2988  0007B6  5141               	movf	(_buttonsMapByte1+5)& (0+255),w,b
  2989  0007B8  1236               	iorwf	_outButtons+1,f,c
  2990  0007BA                     l3573:
  2991                           
  2992                           ;buttons.c: 142: if (buttonsTimers[BUTTON_DR_ID] >= 10 && !prevButtons.DR) { buttonsTime
      +                          rs[BUTTON_DR_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_DR_ID]; } if (buttonsT
      +                          imers[BUTTON_DR_ID] >= 10 && !prevButtons.DR) { buttonsTimers[BUTTON_DR_ID] = 10; outBut
      +                          ton
  2993  0007BA  0E09               	movlw	9
  2994  0007BC  642C               	cpfsgt	_buttonsTimers+6,c
  2995  0007BE  D007               	goto	l3581
  2996  0007C0  BA39               	btfsc	_prevButtons,5,c
  2997  0007C2  D005               	goto	l3581
  2998  0007C4  0E0A               	movlw	10
  2999  0007C6  6E2C               	movwf	_buttonsTimers+6,c
  3000  0007C8  0101               	movlb	1	; () banked
  3001  0007CA  5151               	movf	(_buttonsMapByte0+6)& (0+255),w,b
  3002  0007CC  1235               	iorwf	_outButtons,f,c
  3003  0007CE                     l3581:
  3004  0007CE  0E09               	movlw	9
  3005  0007D0  642C               	cpfsgt	_buttonsTimers+6,c
  3006  0007D2  D007               	goto	l3589
  3007  0007D4  BA39               	btfsc	_prevButtons,5,c
  3008  0007D6  D005               	goto	l3589
  3009  0007D8  0E0A               	movlw	10
  3010  0007DA  6E2C               	movwf	_buttonsTimers+6,c
  3011  0007DC  0101               	movlb	1	; () banked
  3012  0007DE  5142               	movf	(_buttonsMapByte1+6)& (0+255),w,b
  3013  0007E0  1236               	iorwf	_outButtons+1,f,c
  3014  0007E2                     l3589:
  3015                           
  3016                           ;buttons.c: 143: if (buttonsTimers[BUTTON_DD_ID] >= 10 && !prevButtons.DD) { buttonsTime
      +                          rs[BUTTON_DD_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_DD_ID]; } if (buttonsT
      +                          imers[BUTTON_DD_ID] >= 10 && !prevButtons.DD) { buttonsTimers[BUTTON_DD_ID] = 10; outBut
      +                          ton
  3017  0007E2  0E09               	movlw	9
  3018  0007E4  642D               	cpfsgt	_buttonsTimers+7,c
  3019  0007E6  D007               	goto	l3597
  3020  0007E8  BE39               	btfsc	_prevButtons,7,c
  3021  0007EA  D005               	goto	l3597
  3022  0007EC  0E0A               	movlw	10
  3023  0007EE  6E2D               	movwf	_buttonsTimers+7,c
  3024  0007F0  0101               	movlb	1	; () banked
  3025  0007F2  5152               	movf	(_buttonsMapByte0+7)& (0+255),w,b
  3026  0007F4  1235               	iorwf	_outButtons,f,c
  3027  0007F6                     l3597:
  3028  0007F6  0E09               	movlw	9
  3029  0007F8  642D               	cpfsgt	_buttonsTimers+7,c
  3030  0007FA  D007               	goto	l3605
  3031  0007FC  BE39               	btfsc	_prevButtons,7,c
  3032  0007FE  D005               	goto	l3605
  3033  000800  0E0A               	movlw	10
  3034  000802  6E2D               	movwf	_buttonsTimers+7,c
  3035  000804  0101               	movlb	1	; () banked
  3036  000806  5143               	movf	(_buttonsMapByte1+7)& (0+255),w,b
  3037  000808  1236               	iorwf	_outButtons+1,f,c
  3038  00080A                     l3605:
  3039                           
  3040                           ;buttons.c: 144: if (buttonsTimers[BUTTON_DU_ID] >= 10 && !prevButtons.DU) { buttonsTime
      +                          rs[BUTTON_DU_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_DU_ID]; } if (buttonsT
      +                          imers[BUTTON_DU_ID] >= 10 && !prevButtons.DU) { buttonsTimers[BUTTON_DU_ID] = 10; outBut
      +                          ton
  3041  00080A  0E09               	movlw	9
  3042  00080C  642E               	cpfsgt	_buttonsTimers+8,c
  3043  00080E  D007               	goto	l3613
  3044  000810  B839               	btfsc	_prevButtons,4,c
  3045  000812  D005               	goto	l3613
  3046  000814  0E0A               	movlw	10
  3047  000816  6E2E               	movwf	_buttonsTimers+8,c
  3048  000818  0101               	movlb	1	; () banked
  3049  00081A  5153               	movf	(_buttonsMapByte0+8)& (0+255),w,b
  3050  00081C  1235               	iorwf	_outButtons,f,c
  3051  00081E                     l3613:
  3052  00081E  0E09               	movlw	9
  3053  000820  642E               	cpfsgt	_buttonsTimers+8,c
  3054  000822  D007               	goto	l3621
  3055  000824  B839               	btfsc	_prevButtons,4,c
  3056  000826  D005               	goto	l3621
  3057  000828  0E0A               	movlw	10
  3058  00082A  6E2E               	movwf	_buttonsTimers+8,c
  3059  00082C  0101               	movlb	1	; () banked
  3060  00082E  5144               	movf	(_buttonsMapByte1+8)& (0+255),w,b
  3061  000830  1236               	iorwf	_outButtons+1,f,c
  3062  000832                     l3621:
  3063                           
  3064                           ;buttons.c: 145: if (buttonsTimers[BUTTON_Z_ID] >= 10 && !prevButtons.Z) { buttonsTimers
      +                          [BUTTON_Z_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_Z_ID]; } if (buttonsTimer
      +                          s[BUTTON_Z_ID] >= 10 && !prevButtons.Z) { buttonsTimers[BUTTON_Z_ID] = 10; outButtons.by
      +                          te1
  3065  000832  0E09               	movlw	9
  3066  000834  642F               	cpfsgt	_buttonsTimers+9,c
  3067  000836  D007               	goto	l3629
  3068  000838  B03A               	btfsc	_prevButtons+1,0,c
  3069  00083A  D005               	goto	l3629
  3070  00083C  0E0A               	movlw	10
  3071  00083E  6E2F               	movwf	_buttonsTimers+9,c
  3072  000840  0101               	movlb	1	; () banked
  3073  000842  5154               	movf	(_buttonsMapByte0+9)& (0+255),w,b
  3074  000844  1235               	iorwf	_outButtons,f,c
  3075  000846                     l3629:
  3076  000846  0E09               	movlw	9
  3077  000848  642F               	cpfsgt	_buttonsTimers+9,c
  3078  00084A  D007               	goto	l3637
  3079  00084C  B03A               	btfsc	_prevButtons+1,0,c
  3080  00084E  D005               	goto	l3637
  3081  000850  0E0A               	movlw	10
  3082  000852  6E2F               	movwf	_buttonsTimers+9,c
  3083  000854  0101               	movlb	1	; () banked
  3084  000856  5145               	movf	(_buttonsMapByte1+9)& (0+255),w,b
  3085  000858  1236               	iorwf	_outButtons+1,f,c
  3086  00085A                     l3637:
  3087                           
  3088                           ;buttons.c: 146: if (buttonsTimers[BUTTON_RD_ID] >= 10 && !prevButtons.RD) { buttonsTime
      +                          rs[BUTTON_RD_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_RD_ID]; } if (buttonsT
      +                          imers[BUTTON_RD_ID] >= 10 && !prevButtons.RD) { buttonsTimers[BUTTON_RD_ID] = 10; outBut
      +                          ton
  3089  00085A  0E09               	movlw	9
  3090  00085C  6430               	cpfsgt	_buttonsTimers+10,c
  3091  00085E  D007               	goto	l3645
  3092  000860  B23A               	btfsc	_prevButtons+1,1,c
  3093  000862  D005               	goto	l3645
  3094  000864  0E0A               	movlw	10
  3095  000866  6E30               	movwf	_buttonsTimers+10,c
  3096  000868  0101               	movlb	1	; () banked
  3097  00086A  5155               	movf	(_buttonsMapByte0+10)& (0+255),w,b
  3098  00086C  1235               	iorwf	_outButtons,f,c
  3099  00086E                     l3645:
  3100  00086E  0E09               	movlw	9
  3101  000870  6430               	cpfsgt	_buttonsTimers+10,c
  3102  000872  D007               	goto	l3653
  3103  000874  B23A               	btfsc	_prevButtons+1,1,c
  3104  000876  D005               	goto	l3653
  3105  000878  0E0A               	movlw	10
  3106  00087A  6E30               	movwf	_buttonsTimers+10,c
  3107  00087C  0101               	movlb	1	; () banked
  3108  00087E  5146               	movf	(_buttonsMapByte1+10)& (0+255),w,b
  3109  000880  1236               	iorwf	_outButtons+1,f,c
  3110  000882                     l3653:
  3111                           
  3112                           ;buttons.c: 147: if (buttonsTimers[BUTTON_LD_ID] >= 10 && !prevButtons.LD) { buttonsTime
      +                          rs[BUTTON_LD_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_LD_ID]; } if (buttonsT
      +                          imers[BUTTON_LD_ID] >= 10 && !prevButtons.LD) { buttonsTimers[BUTTON_LD_ID] = 10; outBut
      +                          ton
  3113  000882  0E09               	movlw	9
  3114  000884  6431               	cpfsgt	_buttonsTimers+11,c
  3115  000886  D007               	goto	l3661
  3116  000888  B439               	btfsc	_prevButtons,2,c
  3117  00088A  D005               	goto	l3661
  3118  00088C  0E0A               	movlw	10
  3119  00088E  6E31               	movwf	_buttonsTimers+11,c
  3120  000890  0101               	movlb	1	; () banked
  3121  000892  5156               	movf	(_buttonsMapByte0+11)& (0+255),w,b
  3122  000894  1235               	iorwf	_outButtons,f,c
  3123  000896                     l3661:
  3124  000896  0E09               	movlw	9
  3125  000898  6431               	cpfsgt	_buttonsTimers+11,c
  3126  00089A  D007               	goto	l3669
  3127  00089C  B439               	btfsc	_prevButtons,2,c
  3128  00089E  D005               	goto	l3669
  3129  0008A0  0E0A               	movlw	10
  3130  0008A2  6E31               	movwf	_buttonsTimers+11,c
  3131  0008A4  0101               	movlb	1	; () banked
  3132  0008A6  5147               	movf	(_buttonsMapByte1+11)& (0+255),w,b
  3133  0008A8  1236               	iorwf	_outButtons+1,f,c
  3134  0008AA                     l3669:
  3135                           
  3136                           ;buttons.c: 148: if (buttonsTimers[BUTTON_Z2_ID] >= 10 && !prevButtons.Z2) { buttonsTime
      +                          rs[BUTTON_Z2_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_Z2_ID]; } if (buttonsT
      +                          imers[BUTTON_Z2_ID] >= 10 && !prevButtons.Z2) { buttonsTimers[BUTTON_Z2_ID] = 10; outBut
      +                          ton
  3137  0008AA  0E09               	movlw	9
  3138  0008AC  6434               	cpfsgt	_buttonsTimers+14,c
  3139  0008AE  D007               	goto	l3677
  3140  0008B0  BA3A               	btfsc	_prevButtons+1,5,c
  3141  0008B2  D005               	goto	l3677
  3142  0008B4  0E0A               	movlw	10
  3143  0008B6  6E34               	movwf	_buttonsTimers+14,c
  3144  0008B8  0101               	movlb	1	; () banked
  3145  0008BA  5159               	movf	(_buttonsMapByte0+14)& (0+255),w,b
  3146  0008BC  1235               	iorwf	_outButtons,f,c
  3147  0008BE                     l3677:
  3148  0008BE  0E09               	movlw	9
  3149  0008C0  6434               	cpfsgt	_buttonsTimers+14,c
  3150  0008C2  D007               	goto	l3685
  3151  0008C4  BA3A               	btfsc	_prevButtons+1,5,c
  3152  0008C6  D005               	goto	l3685
  3153  0008C8  0E0A               	movlw	10
  3154  0008CA  6E34               	movwf	_buttonsTimers+14,c
  3155  0008CC  0101               	movlb	1	; () banked
  3156  0008CE  514A               	movf	(_buttonsMapByte1+14)& (0+255),w,b
  3157  0008D0  1236               	iorwf	_outButtons+1,f,c
  3158  0008D2                     l3685:
  3159                           
  3160                           ;buttons.c: 150: if (buttonsTimers[BUTTON_LA_ID] >= 10) {
  3161  0008D2  0E09               	movlw	9
  3162  0008D4  6432               	cpfsgt	_buttonsTimers+12,c
  3163  0008D6  D008               	goto	l3693
  3164                           
  3165                           ;buttons.c: 151: buttonsTimers[BUTTON_LA_ID] = 10;
  3166  0008D8  0E0A               	movlw	10
  3167  0008DA  6E32               	movwf	_buttonsTimers+12,c
  3168                           
  3169                           ;buttons.c: 152: if (prevButtons.LA) {
  3170  0008DC  A03B               	btfss	_prevButtons+2,0,c
  3171  0008DE  D003               	goto	l510
  3172                           
  3173                           ;buttons.c: 153: outButtons.LA = 0;
  3174  0008E0  0E00               	movlw	0
  3175  0008E2  6E37               	movwf	_outButtons+2,c
  3176                           
  3177                           ;buttons.c: 154: } else {
  3178  0008E4  D001               	goto	l3693
  3179  0008E6                     l510:
  3180                           
  3181                           ;buttons.c: 155: outButtons.LA = 0xFF;
  3182  0008E6  6837               	setf	_outButtons+2,c
  3183  0008E8                     l3693:
  3184                           
  3185                           ;buttons.c: 156: };buttons.c: 157: };buttons.c: 158: if (buttonsTimers[BUTTON_RA_ID] >= 
      +                          10) {
  3186  0008E8  0E09               	movlw	9
  3187  0008EA  6433               	cpfsgt	_buttonsTimers+13,c
  3188  0008EC  0012               	return	
  3189                           
  3190                           ;buttons.c: 159: buttonsTimers[BUTTON_RA_ID] = 10;
  3191  0008EE  0E0A               	movlw	10
  3192  0008F0  6E33               	movwf	_buttonsTimers+13,c
  3193                           
  3194                           ;buttons.c: 160: if (prevButtons.RA) {
  3195  0008F2  AA3B               	btfss	_prevButtons+2,5,c
  3196  0008F4  D003               	goto	l513
  3197                           
  3198                           ;buttons.c: 161: outButtons.RA = 0;
  3199  0008F6  0E00               	movlw	0
  3200  0008F8  6E38               	movwf	_outButtons+3,c
  3201                           
  3202                           ;buttons.c: 162: } else {
  3203  0008FA  0012               	return	
  3204  0008FC                     l513:
  3205                           
  3206                           ;buttons.c: 163: outButtons.RA = 0xFF;
  3207  0008FC  6838               	setf	_outButtons+3,c
  3208  0008FE  0012               	return		;funcret
  3209  000900                     __end_of_buttonsUpdate:
  3210                           	opt callstack 0
  3211                           
  3212 ;; *************** function _buttonsSetMapByte1 *****************
  3213 ;; Defined at:
  3214 ;;		line 238 in file "buttons.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;  map             2    0[COMRAM] PTR unsigned char 
  3217 ;;		 -> main@cmd(36), 
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;  i               1    2[COMRAM] unsigned char 
  3220 ;; Return value:  Size  Location     Type
  3221 ;;                  1    wreg      void 
  3222 ;; Registers used:
  3223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3229 ;;      Params:         2       0       0       0       0       0       0       0       0
  3230 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3231 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3232 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3233 ;;Total ram usage:        3 bytes
  3234 ;; Hardware stack levels used:    1
  3235 ;; Hardware stack levels required when called:    2
  3236 ;; This function calls:
  3237 ;;		Nothing
  3238 ;; This function is called by:
  3239 ;;		_main
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           	psect	text8
  3244  001652                     __ptext8:
  3245                           	opt callstack 0
  3246  001652                     _buttonsSetMapByte1:
  3247                           	opt callstack 28
  3248                           
  3249                           ;buttons.c: 239: uint8_t i;;buttons.c: 241: for (i = 0; i < N_BUTTONS; i++) {
  3250                           
  3251                           ;incstack = 0
  3252  001652  0E00               	movlw	0
  3253  001654  6E03               	movwf	buttonsSetMapByte1@i,c
  3254  001656                     l3821:
  3255                           
  3256                           ;buttons.c: 242: buttonsMapByte1[i] = map[i];
  3257  001656  5003               	movf	buttonsSetMapByte1@i,w,c
  3258  001658  2401               	addwf	buttonsSetMapByte1@map,w,c
  3259  00165A  6ED9               	movwf	fsr2l,c
  3260  00165C  0E00               	movlw	0
  3261  00165E  2002               	addwfc	buttonsSetMapByte1@map+1,w,c
  3262  001660  6EDA               	movwf	fsr2h,c
  3263  001662  0E3C               	movlw	low _buttonsMapByte1
  3264  001664  2403               	addwf	buttonsSetMapByte1@i,w,c
  3265  001666  6EE1               	movwf	fsr1l,c
  3266  001668  6AE2               	clrf	fsr1h,c
  3267  00166A  0E01               	movlw	high _buttonsMapByte1
  3268  00166C  22E2               	addwfc	fsr1h,f,c
  3269  00166E  006F FF7F FFE7     	movff	indf2,indf1
  3270  001674  2A03               	incf	buttonsSetMapByte1@i,f,c
  3271  001676  0E0E               	movlw	14
  3272  001678  6403               	cpfsgt	buttonsSetMapByte1@i,c
  3273  00167A  D7ED               	goto	l3821
  3274  00167C  0012               	return	
  3275  00167E                     __end_of_buttonsSetMapByte1:
  3276                           	opt callstack 0
  3277                           
  3278 ;; *************** function _buttonsSetMapByte0 *****************
  3279 ;; Defined at:
  3280 ;;		line 230 in file "buttons.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  map             2    0[COMRAM] PTR unsigned char 
  3283 ;;		 -> main@cmd(36), 
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;  i               1    2[COMRAM] unsigned char 
  3286 ;; Return value:  Size  Location     Type
  3287 ;;                  1    wreg      void 
  3288 ;; Registers used:
  3289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3295 ;;      Params:         2       0       0       0       0       0       0       0       0
  3296 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3297 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3298 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3299 ;;Total ram usage:        3 bytes
  3300 ;; Hardware stack levels used:    1
  3301 ;; Hardware stack levels required when called:    2
  3302 ;; This function calls:
  3303 ;;		Nothing
  3304 ;; This function is called by:
  3305 ;;		_main
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308                           
  3309                           	psect	text9
  3310  00167E                     __ptext9:
  3311                           	opt callstack 0
  3312  00167E                     _buttonsSetMapByte0:
  3313                           	opt callstack 28
  3314                           
  3315                           ;buttons.c: 231: uint8_t i;;buttons.c: 233: for (i = 0; i < N_BUTTONS; i++) {
  3316                           
  3317                           ;incstack = 0
  3318  00167E  0E00               	movlw	0
  3319  001680  6E03               	movwf	buttonsSetMapByte0@i,c
  3320  001682                     l3809:
  3321                           
  3322                           ;buttons.c: 234: buttonsMapByte0[i] = map[i];
  3323  001682  5003               	movf	buttonsSetMapByte0@i,w,c
  3324  001684  2401               	addwf	buttonsSetMapByte0@map,w,c
  3325  001686  6ED9               	movwf	fsr2l,c
  3326  001688  0E00               	movlw	0
  3327  00168A  2002               	addwfc	buttonsSetMapByte0@map+1,w,c
  3328  00168C  6EDA               	movwf	fsr2h,c
  3329  00168E  0E4B               	movlw	low _buttonsMapByte0
  3330  001690  2403               	addwf	buttonsSetMapByte0@i,w,c
  3331  001692  6EE1               	movwf	fsr1l,c
  3332  001694  6AE2               	clrf	fsr1h,c
  3333  001696  0E01               	movlw	high _buttonsMapByte0
  3334  001698  22E2               	addwfc	fsr1h,f,c
  3335  00169A  006F FF7F FFE7     	movff	indf2,indf1
  3336  0016A0  2A03               	incf	buttonsSetMapByte0@i,f,c
  3337  0016A2  0E0E               	movlw	14
  3338  0016A4  6403               	cpfsgt	buttonsSetMapByte0@i,c
  3339  0016A6  D7ED               	goto	l3809
  3340  0016A8  0012               	return	
  3341  0016AA                     __end_of_buttonsSetMapByte0:
  3342                           	opt callstack 0
  3343                           
  3344 ;; *************** function _buttonsInit *****************
  3345 ;; Defined at:
  3346 ;;		line 64 in file "buttons.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;		None
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;		None
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  1    wreg      void 
  3353 ;; Registers used:
  3354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3360 ;;      Params:         0       0       0       0       0       0       0       0       0
  3361 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3362 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3363 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3364 ;;Total ram usage:        0 bytes
  3365 ;; Hardware stack levels used:    1
  3366 ;; Hardware stack levels required when called:    3
  3367 ;; This function calls:
  3368 ;;		_memset
  3369 ;; This function is called by:
  3370 ;;		_main
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374                           	psect	text10
  3375  0011EE                     __ptext10:
  3376                           	opt callstack 0
  3377  0011EE                     _buttonsInit:
  3378                           	opt callstack 27
  3379                           
  3380                           ;buttons.c: 66: T0CON0 = 0x00;
  3381                           
  3382                           ;incstack = 0
  3383  0011EE  0E00               	movlw	0
  3384  0011F0  6EB8               	movwf	16312,c	;volatile
  3385                           
  3386                           ;buttons.c: 67: T0CON1 = 0x47;
  3387  0011F2  0E47               	movlw	71
  3388  0011F4  6EB9               	movwf	16313,c	;volatile
  3389                           
  3390                           ;buttons.c: 68: TMR0H = 124;
  3391  0011F6  0E7C               	movlw	124
  3392  0011F8  6EB7               	movwf	16311,c	;volatile
  3393                           
  3394                           ;buttons.c: 69: TMR0IF = 0;
  3395  0011FA  0139               	movlb	57	; () banked
  3396  0011FC  9FA3               	bcf	163,7,b	;volatile
  3397                           
  3398                           ;buttons.c: 70: T0CON0 = 0x80;
  3399  0011FE  0E80               	movlw	128
  3400  001200  6EB8               	movwf	16312,c	;volatile
  3401                           
  3402                           ; BSR set to: 57
  3403                           ;buttons.c: 73: memset(buttonsMapByte0, 0, N_BUTTONS);
  3404  001202  0E4B               	movlw	low _buttonsMapByte0
  3405  001204  6E01               	movwf	memset@p1,c
  3406  001206  0E01               	movlw	high _buttonsMapByte0
  3407  001208  6E02               	movwf	memset@p1+1,c
  3408  00120A  0E00               	movlw	0
  3409  00120C  6E04               	movwf	memset@c+1,c
  3410  00120E  0E00               	movlw	0
  3411  001210  6E03               	movwf	memset@c,c
  3412  001212  0E00               	movlw	0
  3413  001214  6E06               	movwf	memset@n+1,c
  3414  001216  0E0F               	movlw	15
  3415  001218  6E05               	movwf	memset@n,c
  3416  00121A  ECAD  F00A         	call	_memset	;wreg free
  3417                           
  3418                           ;buttons.c: 74: memset(buttonsMapByte1, 0, N_BUTTONS);
  3419  00121E  0E3C               	movlw	low _buttonsMapByte1
  3420  001220  6E01               	movwf	memset@p1,c
  3421  001222  0E01               	movlw	high _buttonsMapByte1
  3422  001224  6E02               	movwf	memset@p1+1,c
  3423  001226  0E00               	movlw	0
  3424  001228  6E04               	movwf	memset@c+1,c
  3425  00122A  0E00               	movlw	0
  3426  00122C  6E03               	movwf	memset@c,c
  3427  00122E  0E00               	movlw	0
  3428  001230  6E06               	movwf	memset@n+1,c
  3429  001232  0E0F               	movlw	15
  3430  001234  6E05               	movwf	memset@n,c
  3431  001236  ECAD  F00A         	call	_memset	;wreg free
  3432                           
  3433                           ;buttons.c: 76: buttonsMapByte0[BUTTON_A_ID] = 0x01;
  3434  00123A  0E01               	movlw	1
  3435  00123C  0101               	movlb	1	; () banked
  3436  00123E  6F4B               	movwf	_buttonsMapByte0& (0+255),b
  3437                           
  3438                           ;buttons.c: 77: buttonsMapByte0[BUTTON_B_ID] = 0x02;
  3439  001240  0E02               	movlw	2
  3440  001242  6F4C               	movwf	(_buttonsMapByte0+1)& (0+255),b
  3441                           
  3442                           ;buttons.c: 78: buttonsMapByte0[BUTTON_X_ID] = 0x04;
  3443  001244  0E04               	movlw	4
  3444  001246  6F4D               	movwf	(_buttonsMapByte0+2)& (0+255),b
  3445                           
  3446                           ;buttons.c: 79: buttonsMapByte0[BUTTON_Y_ID] = 0x08;
  3447  001248  0E08               	movlw	8
  3448  00124A  6F4E               	movwf	(_buttonsMapByte0+3)& (0+255),b
  3449                           
  3450                           ;buttons.c: 80: buttonsMapByte0[BUTTON_ST_ID] = 0x10;
  3451  00124C  0E10               	movlw	16
  3452  00124E  6F4F               	movwf	(_buttonsMapByte0+4)& (0+255),b
  3453                           
  3454                           ;buttons.c: 82: buttonsMapByte1[BUTTON_DL_ID] = 0x01;
  3455  001250  0E01               	movlw	1
  3456  001252  6F41               	movwf	(_buttonsMapByte1+5)& (0+255),b
  3457                           
  3458                           ;buttons.c: 83: buttonsMapByte1[BUTTON_DR_ID] = 0x02;
  3459  001254  0E02               	movlw	2
  3460  001256  6F42               	movwf	(_buttonsMapByte1+6)& (0+255),b
  3461                           
  3462                           ;buttons.c: 84: buttonsMapByte1[BUTTON_DD_ID] = 0x04;
  3463  001258  0E04               	movlw	4
  3464  00125A  6F43               	movwf	(_buttonsMapByte1+7)& (0+255),b
  3465                           
  3466                           ;buttons.c: 85: buttonsMapByte1[BUTTON_DU_ID] = 0x08;
  3467  00125C  0E08               	movlw	8
  3468  00125E  6F44               	movwf	(_buttonsMapByte1+8)& (0+255),b
  3469                           
  3470                           ;buttons.c: 86: buttonsMapByte1[BUTTON_Z_ID] = 0x10;
  3471  001260  0E10               	movlw	16
  3472  001262  6F45               	movwf	(_buttonsMapByte1+9)& (0+255),b
  3473                           
  3474                           ;buttons.c: 87: buttonsMapByte1[BUTTON_RD_ID] = 0x20;
  3475  001264  0E20               	movlw	32
  3476  001266  6F46               	movwf	(_buttonsMapByte1+10)& (0+255),b
  3477                           
  3478                           ;buttons.c: 88: buttonsMapByte1[BUTTON_LD_ID] = 0x40;
  3479  001268  0E40               	movlw	64
  3480  00126A  6F47               	movwf	(_buttonsMapByte1+11)& (0+255),b
  3481                           
  3482                           ; BSR set to: 1
  3483  00126C  0012               	return		;funcret
  3484  00126E                     __end_of_buttonsInit:
  3485                           	opt callstack 0
  3486                           
  3487 ;; *************** function _memset *****************
  3488 ;; Defined at:
  3489 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memset.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;  p1              2    0[COMRAM] PTR void 
  3492 ;;		 -> buttonsMapByte1(15), buttonsMapByte0(15), config(24), 
  3493 ;;  c               2    2[COMRAM] int 
  3494 ;;  n               2    4[COMRAM] unsigned int 
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;  p               2    6[COMRAM] PTR unsigned char 
  3497 ;;		 -> buttonsMapByte1(15), buttonsMapByte0(15), config(24), 
  3498 ;; Return value:  Size  Location     Type
  3499 ;;                  2    0[COMRAM] PTR void 
  3500 ;; Registers used:
  3501 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3502 ;; Tracked objects:
  3503 ;;		On entry : 0/0
  3504 ;;		On exit  : 0/0
  3505 ;;		Unchanged: 0/0
  3506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3507 ;;      Params:         6       0       0       0       0       0       0       0       0
  3508 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3509 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3510 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3511 ;;Total ram usage:        8 bytes
  3512 ;; Hardware stack levels used:    1
  3513 ;; Hardware stack levels required when called:    2
  3514 ;; This function calls:
  3515 ;;		Nothing
  3516 ;; This function is called by:
  3517 ;;		_configSetDefault
  3518 ;;		_buttonsInit
  3519 ;; This function uses a non-reentrant model
  3520 ;;
  3521                           
  3522                           	psect	text11
  3523  00155A                     __ptext11:
  3524                           	opt callstack 0
  3525  00155A                     _memset:
  3526                           	opt callstack 27
  3527                           
  3528                           ; BSR set to: 1
  3529                           ;incstack = 0
  3530  00155A  0060  F004  F007   	movff	memset@p1,memset@p
  3531  001560  0060  F008  F008   	movff	memset@p1+1,memset@p+1
  3532  001566  D00B               	goto	l2983
  3533  001568                     l2979:
  3534  001568  0060  F01F  FFD9   	movff	memset@p,fsr2l
  3535  00156E  0060  F023  FFDA   	movff	memset@p+1,fsr2h
  3536  001574  0060  F00F  FFDF   	movff	memset@c,indf2
  3537  00157A  4A07               	infsnz	memset@p,f,c
  3538  00157C  2A08               	incf	memset@p+1,f,c
  3539  00157E                     l2983:
  3540  00157E  0605               	decf	memset@n,f,c
  3541  001580  A0D8               	btfss	status,0,c
  3542  001582  0606               	decf	memset@n+1,f,c
  3543  001584  2805               	incf	memset@n,w,c
  3544  001586  E1F0               	bnz	l2979
  3545  001588  2806               	incf	memset@n+1,w,c
  3546  00158A  B4D8               	btfsc	status,2,c
  3547  00158C  0012               	return	
  3548  00158E  D7EC               	goto	l2979
  3549  001590                     __end_of_memset:
  3550                           	opt callstack 0
  3551                           
  3552 ;; *************** function _buttonsGetMessage *****************
  3553 ;; Defined at:
  3554 ;;		line 168 in file "buttons.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;  analogMode      1    wreg     unsigned char 
  3557 ;;  triggersMode    1    0[COMRAM] unsigned char 
  3558 ;; Auto vars:     Size  Location     Type
  3559 ;;  analogMode      1    3[COMRAM] unsigned char 
  3560 ;;  la              1    0        unsigned char 
  3561 ;;  ra              1    0        unsigned char 
  3562 ;; Return value:  Size  Location     Type
  3563 ;;                  2    0[COMRAM] PTR unsigned char 
  3564 ;; Registers used:
  3565 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3566 ;; Tracked objects:
  3567 ;;		On entry : 0/0
  3568 ;;		On exit  : 0/0
  3569 ;;		Unchanged: 0/0
  3570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3571 ;;      Params:         2       0       0       0       0       0       0       0       0
  3572 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3573 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3574 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3575 ;;Total ram usage:        6 bytes
  3576 ;; Hardware stack levels used:    1
  3577 ;; Hardware stack levels required when called:    2
  3578 ;; This function calls:
  3579 ;;		Nothing
  3580 ;; This function is called by:
  3581 ;;		_main
  3582 ;; This function uses a non-reentrant model
  3583 ;;
  3584                           
  3585                           	psect	text12
  3586  000EF6                     __ptext12:
  3587                           	opt callstack 0
  3588  000EF6                     _buttonsGetMessage:
  3589                           	opt callstack 28
  3590                           
  3591                           ;incstack = 0
  3592                           ;buttonsGetMessage@analogMode stored from wreg
  3593  000EF6  6E04               	movwf	buttonsGetMessage@analogMode,c
  3594                           
  3595                           ;buttons.c: 169: buttonsMessage[0] = outButtons.byte0;
  3596  000EF8  0060  F0D4  F041   	movff	_outButtons,_buttonsMessage
  3597                           
  3598                           ;buttons.c: 170: buttonsMessage[1] = outButtons.byte1;
  3599  000EFE  0060  F0D8  F042   	movff	_outButtons+1,_buttonsMessage+1
  3600                           
  3601                           ;buttons.c: 171: buttonsMessage[2] = LUT_SX[ADCValues[0]];
  3602  000F04  0E00               	movlw	low _LUT_SX
  3603  000F06  2449               	addwf	_ADCValues,w,c
  3604  000F08  6ED9               	movwf	fsr2l,c
  3605  000F0A  6ADA               	clrf	fsr2h,c
  3606  000F0C  0E04               	movlw	high _LUT_SX
  3607  000F0E  22DA               	addwfc	fsr2h,f,c
  3608  000F10  50DF               	movf	indf2,w,c
  3609  000F12  6E43               	movwf	_buttonsMessage+2,c
  3610                           
  3611                           ;buttons.c: 172: buttonsMessage[3] = LUT_SY[ADCValues[1]];
  3612  000F14  0E00               	movlw	low _LUT_SY
  3613  000F16  244A               	addwf	_ADCValues+1,w,c
  3614  000F18  6ED9               	movwf	fsr2l,c
  3615  000F1A  6ADA               	clrf	fsr2h,c
  3616  000F1C  0E05               	movlw	high _LUT_SY
  3617  000F1E  22DA               	addwfc	fsr2h,f,c
  3618  000F20  50DF               	movf	indf2,w,c
  3619  000F22  6E44               	movwf	_buttonsMessage+3,c
  3620                           
  3621                           ;buttons.c: 186: switch (analogMode) {
  3622  000F24  D02C               	goto	l3797
  3623  000F26                     l520:
  3624                           
  3625                           ;buttons.c: 188: case 5:;buttons.c: 189: case 6:;buttons.c: 190: case 7:;buttons.c: 191:
      +                           buttonsMessage[4] = LUT_CX[ADCValues[2]];
  3626  000F26  0E00               	movlw	low _LUT_CX
  3627  000F28  244B               	addwf	_ADCValues+2,w,c
  3628  000F2A  6ED9               	movwf	fsr2l,c
  3629  000F2C  6ADA               	clrf	fsr2h,c
  3630  000F2E  0E02               	movlw	high _LUT_CX
  3631  000F30  22DA               	addwfc	fsr2h,f,c
  3632  000F32  50DF               	movf	indf2,w,c
  3633  000F34  6E45               	movwf	_buttonsMessage+4,c
  3634                           
  3635                           ;buttons.c: 192: buttonsMessage[5] = LUT_CY[ADCValues[3]];
  3636  000F36  0E00               	movlw	low _LUT_CY
  3637  000F38  244C               	addwf	_ADCValues+3,w,c
  3638  000F3A  6ED9               	movwf	fsr2l,c
  3639  000F3C  6ADA               	clrf	fsr2h,c
  3640  000F3E  0E03               	movlw	high _LUT_CY
  3641  000F40  22DA               	addwfc	fsr2h,f,c
  3642  000F42  50DF               	movf	indf2,w,c
  3643  000F44  6E46               	movwf	_buttonsMessage+5,c
  3644                           
  3645                           ;buttons.c: 194: buttonsMessage[6] = (uint8_t)((uint8_t)(la & 0xF0U) | (uint8_t)(ra >> 4
      +                          U));
  3646  000F46  0E00               	movlw	0
  3647  000F48  6E47               	movwf	_buttonsMessage+6,c
  3648                           
  3649                           ;buttons.c: 195: buttonsMessage[7] = 0x00;
  3650  000F4A  0E00               	movlw	0
  3651  000F4C  6E48               	movwf	_buttonsMessage+7,c
  3652                           
  3653                           ;buttons.c: 196: break;
  3654  000F4E  D030               	goto	l3799
  3655  000F50                     l3767:
  3656                           
  3657                           ;buttons.c: 199: buttonsMessage[4] = (uint8_t)((uint8_t)(LUT_CX[ADCValues[2]] & 0xF0U) |
      +                           (uint8_t)(LUT_CY[ADCValues[3]] >> 4U));
  3658  000F50  0E00               	movlw	low _LUT_CY
  3659  000F52  244C               	addwf	_ADCValues+3,w,c
  3660  000F54  6ED9               	movwf	fsr2l,c
  3661  000F56  6ADA               	clrf	fsr2h,c
  3662  000F58  0E03               	movlw	high _LUT_CY
  3663  000F5A  22DA               	addwfc	fsr2h,f,c
  3664  000F5C  50DF               	movf	indf2,w,c
  3665  000F5E  6E03               	movwf	??_buttonsGetMessage& (0+255),c
  3666  000F60  3A03               	swapf	??_buttonsGetMessage,f,c
  3667  000F62  0E0F               	movlw	15
  3668  000F64  1603               	andwf	??_buttonsGetMessage,f,c
  3669  000F66  0E00               	movlw	low _LUT_CX
  3670  000F68  244B               	addwf	_ADCValues+2,w,c
  3671  000F6A  6ED9               	movwf	fsr2l,c
  3672  000F6C  6ADA               	clrf	fsr2h,c
  3673  000F6E  0E02               	movlw	high _LUT_CX
  3674  000F70  22DA               	addwfc	fsr2h,f,c
  3675  000F72  50DF               	movf	indf2,w,c
  3676  000F74  0BF0               	andlw	240
  3677  000F76  1003               	iorwf	??_buttonsGetMessage,w,c
  3678  000F78  6E45               	movwf	_buttonsMessage+4,c
  3679                           
  3680                           ;buttons.c: 200: buttonsMessage[5] = la;
  3681  000F7A  0E00               	movlw	0
  3682  000F7C  D7E3               	goto	L3
  3683  000F7E                     l3797:
  3684  000F7E  5004               	movf	buttonsGetMessage@analogMode,w,c
  3685                           
  3686                           ; Switch size 1, requested type "simple"
  3687                           ; Number of cases is 8, Range of values is 0 to 7
  3688                           ; switch strategies available:
  3689                           ; Name         Instructions Cycles
  3690                           ; simple_byte           25    13 (average)
  3691                           ;	Chosen strategy is simple_byte
  3692  000F80  0A00               	xorlw	0	; case 0
  3693  000F82  B4D8               	btfsc	status,2,c
  3694  000F84  D7D0               	goto	l520
  3695  000F86  0A01               	xorlw	1	; case 1
  3696  000F88  B4D8               	btfsc	status,2,c
  3697  000F8A  D7E2               	goto	l3767
  3698  000F8C  0A03               	xorlw	3	; case 2
  3699  000F8E  B4D8               	btfsc	status,2,c
  3700  000F90  D7DF               	goto	l3767
  3701  000F92  0A01               	xorlw	1	; case 3
  3702  000F94  B4D8               	btfsc	status,2,c
  3703  000F96  D7C7               	goto	l520
  3704  000F98  0A07               	xorlw	7	; case 4
  3705  000F9A  B4D8               	btfsc	status,2,c
  3706  000F9C  D7C4               	goto	l520
  3707  000F9E  0A01               	xorlw	1	; case 5
  3708  000FA0  B4D8               	btfsc	status,2,c
  3709  000FA2  D7C1               	goto	l520
  3710  000FA4  0A03               	xorlw	3	; case 6
  3711  000FA6  B4D8               	btfsc	status,2,c
  3712  000FA8  D7BE               	goto	l520
  3713  000FAA  0A01               	xorlw	1	; case 7
  3714  000FAC  B4D8               	btfsc	status,2,c
  3715  000FAE  D7BB               	goto	l520
  3716  000FB0                     l3799:
  3717                           
  3718                           ;buttons.c: 227: return buttonsMessage;
  3719  000FB0  0E41               	movlw	low _buttonsMessage
  3720  000FB2  6E01               	movwf	?_buttonsGetMessage,c
  3721  000FB4  0E00               	movlw	high _buttonsMessage
  3722  000FB6  6E02               	movwf	?_buttonsGetMessage+1,c
  3723  000FB8  0012               	return		;funcret
  3724  000FBA                     __end_of_buttonsGetMessage:
  3725                           	opt callstack 0
  3726                           
  3727 ;; *************** function _buttonsGetMapByte1 *****************
  3728 ;; Defined at:
  3729 ;;		line 256 in file "buttons.c"
  3730 ;; Parameters:    Size  Location     Type
  3731 ;;		None
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;  i               1    2[COMRAM] unsigned char 
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  2    0[COMRAM] PTR unsigned char 
  3736 ;; Registers used:
  3737 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3743 ;;      Params:         2       0       0       0       0       0       0       0       0
  3744 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3745 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3746 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3747 ;;Total ram usage:        3 bytes
  3748 ;; Hardware stack levels used:    1
  3749 ;; Hardware stack levels required when called:    2
  3750 ;; This function calls:
  3751 ;;		Nothing
  3752 ;; This function is called by:
  3753 ;;		_main
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757                           	psect	text13
  3758  001590                     __ptext13:
  3759                           	opt callstack 0
  3760  001590                     _buttonsGetMapByte1:
  3761                           	opt callstack 28
  3762                           
  3763                           ;buttons.c: 257: uint8_t i;;buttons.c: 259: for (i = 0; i < N_BUTTONS; i++) {
  3764                           
  3765                           ;incstack = 0
  3766  001590  0E00               	movlw	0
  3767  001592  6E03               	movwf	buttonsGetMapByte1@i,c
  3768  001594                     l3849:
  3769                           
  3770                           ;buttons.c: 260: buttonsMessage[i] = buttonsMapByte1[i];
  3771  001594  0E3C               	movlw	low _buttonsMapByte1
  3772  001596  2403               	addwf	buttonsGetMapByte1@i,w,c
  3773  001598  6ED9               	movwf	fsr2l,c
  3774  00159A  6ADA               	clrf	fsr2h,c
  3775  00159C  0E01               	movlw	high _buttonsMapByte1
  3776  00159E  22DA               	addwfc	fsr2h,f,c
  3777  0015A0  0E41               	movlw	low _buttonsMessage
  3778  0015A2  2403               	addwf	buttonsGetMapByte1@i,w,c
  3779  0015A4  6EE1               	movwf	fsr1l,c
  3780  0015A6  6AE2               	clrf	fsr1h,c
  3781  0015A8  0E00               	movlw	high _buttonsMessage
  3782  0015AA  22E2               	addwfc	fsr1h,f,c
  3783  0015AC  006F FF7F FFE7     	movff	indf2,indf1
  3784  0015B2  2A03               	incf	buttonsGetMapByte1@i,f,c
  3785  0015B4  0E0E               	movlw	14
  3786  0015B6  6403               	cpfsgt	buttonsGetMapByte1@i,c
  3787  0015B8  D7ED               	goto	l3849
  3788                           
  3789                           ;buttons.c: 261: };buttons.c: 263: return buttonsMessage;
  3790  0015BA  0E41               	movlw	low _buttonsMessage
  3791  0015BC  6E01               	movwf	?_buttonsGetMapByte1,c
  3792  0015BE  0E00               	movlw	high _buttonsMessage
  3793  0015C0  6E02               	movwf	?_buttonsGetMapByte1+1,c
  3794  0015C2  0012               	return		;funcret
  3795  0015C4                     __end_of_buttonsGetMapByte1:
  3796                           	opt callstack 0
  3797                           
  3798 ;; *************** function _buttonsGetMapByte0 *****************
  3799 ;; Defined at:
  3800 ;;		line 246 in file "buttons.c"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;		None
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;  i               1    2[COMRAM] unsigned char 
  3805 ;; Return value:  Size  Location     Type
  3806 ;;                  2    0[COMRAM] PTR unsigned char 
  3807 ;; Registers used:
  3808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3814 ;;      Params:         2       0       0       0       0       0       0       0       0
  3815 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3816 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3817 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3818 ;;Total ram usage:        3 bytes
  3819 ;; Hardware stack levels used:    1
  3820 ;; Hardware stack levels required when called:    2
  3821 ;; This function calls:
  3822 ;;		Nothing
  3823 ;; This function is called by:
  3824 ;;		_main
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828                           	psect	text14
  3829  0015C4                     __ptext14:
  3830                           	opt callstack 0
  3831  0015C4                     _buttonsGetMapByte0:
  3832                           	opt callstack 28
  3833                           
  3834                           ;buttons.c: 247: uint8_t i;;buttons.c: 249: for (i = 0; i < N_BUTTONS; i++) {
  3835                           
  3836                           ;incstack = 0
  3837  0015C4  0E00               	movlw	0
  3838  0015C6  6E03               	movwf	buttonsGetMapByte0@i,c
  3839  0015C8                     l3833:
  3840                           
  3841                           ;buttons.c: 250: buttonsMessage[i] = buttonsMapByte0[i];
  3842  0015C8  0E4B               	movlw	low _buttonsMapByte0
  3843  0015CA  2403               	addwf	buttonsGetMapByte0@i,w,c
  3844  0015CC  6ED9               	movwf	fsr2l,c
  3845  0015CE  6ADA               	clrf	fsr2h,c
  3846  0015D0  0E01               	movlw	high _buttonsMapByte0
  3847  0015D2  22DA               	addwfc	fsr2h,f,c
  3848  0015D4  0E41               	movlw	low _buttonsMessage
  3849  0015D6  2403               	addwf	buttonsGetMapByte0@i,w,c
  3850  0015D8  6EE1               	movwf	fsr1l,c
  3851  0015DA  6AE2               	clrf	fsr1h,c
  3852  0015DC  0E00               	movlw	high _buttonsMessage
  3853  0015DE  22E2               	addwfc	fsr1h,f,c
  3854  0015E0  006F FF7F FFE7     	movff	indf2,indf1
  3855  0015E6  2A03               	incf	buttonsGetMapByte0@i,f,c
  3856  0015E8  0E0E               	movlw	14
  3857  0015EA  6403               	cpfsgt	buttonsGetMapByte0@i,c
  3858  0015EC  D7ED               	goto	l3833
  3859                           
  3860                           ;buttons.c: 251: };buttons.c: 253: return buttonsMessage;
  3861  0015EE  0E41               	movlw	low _buttonsMessage
  3862  0015F0  6E01               	movwf	?_buttonsGetMapByte0,c
  3863  0015F2  0E00               	movlw	high _buttonsMessage
  3864  0015F4  6E02               	movwf	?_buttonsGetMapByte0+1,c
  3865  0015F6  0012               	return		;funcret
  3866  0015F8                     __end_of_buttonsGetMapByte0:
  3867                           	opt callstack 0
  3868                           
  3869 ;; *************** function _buttonsBuildLUTs *****************
  3870 ;; Defined at:
  3871 ;;		line 293 in file "buttons.c"
  3872 ;; Parameters:    Size  Location     Type
  3873 ;;		None
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;		None
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  1    wreg      void 
  3878 ;; Registers used:
  3879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3885 ;;      Params:         0       0       0       0       0       0       0       0       0
  3886 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3887 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3888 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3889 ;;Total ram usage:        0 bytes
  3890 ;; Hardware stack levels used:    1
  3891 ;; Hardware stack levels required when called:    4
  3892 ;; This function calls:
  3893 ;;		_buttonsBuildLUT
  3894 ;; This function is called by:
  3895 ;;		_main
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           	psect	text15
  3900  000E24                     __ptext15:
  3901                           	opt callstack 0
  3902  000E24                     _buttonsBuildLUTs:
  3903                           	opt callstack 26
  3904                           
  3905                           ;buttons.c: 294: buttonsBuildLUT(LUT_SX, config.SXMin, config.SXMax, ADCValues[0], confi
      +                          g.SDeadzone, config.deadzoneMode, config.SXInvert);
  3906                           
  3907                           ;incstack = 0
  3908  000E24  0E00               	movlw	low _LUT_SX
  3909  000E26  6E0F               	movwf	buttonsBuildLUT@LUT,c
  3910  000E28  0E04               	movlw	high _LUT_SX
  3911  000E2A  6E10               	movwf	buttonsBuildLUT@LUT+1,c
  3912  000E2C  0060  F4A8  F011   	movff	_config+6,buttonsBuildLUT@minVal
  3913  000E32  0060  F4AC  F012   	movff	_config+7,buttonsBuildLUT@maxVal
  3914  000E38  0060  F124  F013   	movff	_ADCValues,buttonsBuildLUT@origin
  3915  000E3E  0060  F4DC  F014   	movff	_config+19,buttonsBuildLUT@dz
  3916  000E44  0060  F4E4  F015   	movff	_config+21,buttonsBuildLUT@dzMode
  3917  000E4A  0101               	movlb	1	; () banked
  3918  000E4C  0E00               	movlw	0
  3919  000E4E  B136               	btfsc	(_config+18)& (0+255),0,b
  3920  000E50  0E01               	movlw	1
  3921  000E52  6E16               	movwf	buttonsBuildLUT@invert,c
  3922  000E54  EC5C  F005         	call	_buttonsBuildLUT	;wreg free
  3923                           
  3924                           ;buttons.c: 295: buttonsBuildLUT(LUT_SY, config.SYMin, config.SYMax, ADCValues[1], confi
      +                          g.SDeadzone, config.deadzoneMode, config.SYInvert);
  3925  000E58  0E00               	movlw	low _LUT_SY
  3926  000E5A  6E0F               	movwf	buttonsBuildLUT@LUT,c
  3927  000E5C  0E05               	movlw	high _LUT_SY
  3928  000E5E  6E10               	movwf	buttonsBuildLUT@LUT+1,c
  3929  000E60  0060  F4B0  F011   	movff	_config+8,buttonsBuildLUT@minVal
  3930  000E66  0060  F4B4  F012   	movff	_config+9,buttonsBuildLUT@maxVal
  3931  000E6C  0060  F128  F013   	movff	_ADCValues+1,buttonsBuildLUT@origin
  3932  000E72  0060  F4DC  F014   	movff	_config+19,buttonsBuildLUT@dz
  3933  000E78  0060  F4E4  F015   	movff	_config+21,buttonsBuildLUT@dzMode
  3934  000E7E  0101               	movlb	1	; () banked
  3935  000E80  0E00               	movlw	0
  3936  000E82  B336               	btfsc	(_config+18)& (0+255),1,b
  3937  000E84  0E01               	movlw	1
  3938  000E86  6E16               	movwf	buttonsBuildLUT@invert,c
  3939  000E88  EC5C  F005         	call	_buttonsBuildLUT	;wreg free
  3940                           
  3941                           ;buttons.c: 296: buttonsBuildLUT(LUT_CX, config.CXMin, config.CXMax, ADCValues[2], confi
      +                          g.CDeadzone, config.deadzoneMode, config.CXInvert);
  3942  000E8C  0E00               	movlw	low _LUT_CX
  3943  000E8E  6E0F               	movwf	buttonsBuildLUT@LUT,c
  3944  000E90  0E02               	movlw	high _LUT_CX
  3945  000E92  6E10               	movwf	buttonsBuildLUT@LUT+1,c
  3946  000E94  0060  F4B8  F011   	movff	_config+10,buttonsBuildLUT@minVal
  3947  000E9A  0060  F4BC  F012   	movff	_config+11,buttonsBuildLUT@maxVal
  3948  000EA0  0060  F12C  F013   	movff	_ADCValues+2,buttonsBuildLUT@origin
  3949  000EA6  0060  F4E0  F014   	movff	_config+20,buttonsBuildLUT@dz
  3950  000EAC  0060  F4E4  F015   	movff	_config+21,buttonsBuildLUT@dzMode
  3951  000EB2  0101               	movlb	1	; () banked
  3952  000EB4  0E00               	movlw	0
  3953  000EB6  B536               	btfsc	(_config+18)& (0+255),2,b
  3954  000EB8  0E01               	movlw	1
  3955  000EBA  6E16               	movwf	buttonsBuildLUT@invert,c
  3956  000EBC  EC5C  F005         	call	_buttonsBuildLUT	;wreg free
  3957                           
  3958                           ;buttons.c: 297: buttonsBuildLUT(LUT_CY, config.CYMin, config.CYMax, ADCValues[3], confi
      +                          g.CDeadzone, config.deadzoneMode, config.CYInvert);
  3959  000EC0  0E00               	movlw	low _LUT_CY
  3960  000EC2  6E0F               	movwf	buttonsBuildLUT@LUT,c
  3961  000EC4  0E03               	movlw	high _LUT_CY
  3962  000EC6  6E10               	movwf	buttonsBuildLUT@LUT+1,c
  3963  000EC8  0060  F4C0  F011   	movff	_config+12,buttonsBuildLUT@minVal
  3964  000ECE  0060  F4C4  F012   	movff	_config+13,buttonsBuildLUT@maxVal
  3965  000ED4  0060  F130  F013   	movff	_ADCValues+3,buttonsBuildLUT@origin
  3966  000EDA  0060  F4E0  F014   	movff	_config+20,buttonsBuildLUT@dz
  3967  000EE0  0060  F4E4  F015   	movff	_config+21,buttonsBuildLUT@dzMode
  3968  000EE6  0101               	movlb	1	; () banked
  3969  000EE8  0E00               	movlw	0
  3970  000EEA  B736               	btfsc	(_config+18)& (0+255),3,b
  3971  000EEC  0E01               	movlw	1
  3972  000EEE  6E16               	movwf	buttonsBuildLUT@invert,c
  3973  000EF0  EC5C  F005         	call	_buttonsBuildLUT	;wreg free
  3974  000EF4  0012               	return		;funcret
  3975  000EF6                     __end_of_buttonsBuildLUTs:
  3976                           	opt callstack 0
  3977                           
  3978 ;; *************** function _buttonsBuildLUT *****************
  3979 ;; Defined at:
  3980 ;;		line 266 in file "buttons.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;  LUT             2   14[COMRAM] PTR unsigned char 
  3983 ;;		 -> LUT_CY(256), LUT_CX(256), LUT_SY(256), LUT_SX(256), 
  3984 ;;  minVal          1   16[COMRAM] unsigned char 
  3985 ;;  maxVal          1   17[COMRAM] unsigned char 
  3986 ;;  origin          1   18[COMRAM] unsigned char 
  3987 ;;  dz              1   19[COMRAM] unsigned char 
  3988 ;;  dzMode          1   20[COMRAM] unsigned char 
  3989 ;;  invert          1   21[COMRAM] unsigned char 
  3990 ;; Auto vars:     Size  Location     Type
  3991 ;;  tempVal         2   29[COMRAM] int 
  3992 ;;  radius          2   33[COMRAM] int 
  3993 ;;  i               2   31[COMRAM] int 
  3994 ;;  range           2   27[COMRAM] int 
  3995 ;; Return value:  Size  Location     Type
  3996 ;;                  1    wreg      void 
  3997 ;; Registers used:
  3998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3999 ;; Tracked objects:
  4000 ;;		On entry : 0/0
  4001 ;;		On exit  : 0/0
  4002 ;;		Unchanged: 0/0
  4003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4004 ;;      Params:         8       0       0       0       0       0       0       0       0
  4005 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4006 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4007 ;;      Totals:        21       0       0       0       0       0       0       0       0
  4008 ;;Total ram usage:       21 bytes
  4009 ;; Hardware stack levels used:    1
  4010 ;; Hardware stack levels required when called:    3
  4011 ;; This function calls:
  4012 ;;		___awdiv
  4013 ;;		___wmul
  4014 ;; This function is called by:
  4015 ;;		_buttonsBuildLUTs
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019                           	psect	text16
  4020  000AB8                     __ptext16:
  4021                           	opt callstack 0
  4022  000AB8                     _buttonsBuildLUT:
  4023                           	opt callstack 26
  4024                           
  4025                           ;buttons.c: 267: int16_t i;;buttons.c: 268: int16_t range = ((int16_t)maxVal - (int16_t)
      +                          minVal) / 2;
  4026                           
  4027                           ;incstack = 0
  4028  000AB8  5011               	movf	buttonsBuildLUT@minVal,w,c
  4029  000ABA  5C12               	subwf	buttonsBuildLUT@maxVal,w,c
  4030  000ABC  6E07               	movwf	___awdiv@dividend,c
  4031  000ABE  6A08               	clrf	___awdiv@dividend+1,c
  4032  000AC0  A0D8               	btfss	status,0,c
  4033  000AC2  0608               	decf	___awdiv@dividend+1,f,c
  4034  000AC4  0E00               	movlw	0
  4035  000AC6  6E0A               	movwf	___awdiv@divisor+1,c
  4036  000AC8  0E02               	movlw	2
  4037  000ACA  6E09               	movwf	___awdiv@divisor,c
  4038  000ACC  EC72  F008         	call	___awdiv	;wreg free
  4039  000AD0  0060  F01C  F01C   	movff	?___awdiv,buttonsBuildLUT@range
  4040  000AD6  0060  F020  F01D   	movff	?___awdiv+1,buttonsBuildLUT@range+1
  4041                           
  4042                           ;buttons.c: 270: for (i = 0; i < 256; i++) {
  4043  000ADC  0E00               	movlw	0
  4044  000ADE  6E21               	movwf	buttonsBuildLUT@i+1,c
  4045  000AE0  0E00               	movlw	0
  4046  000AE2  6E20               	movwf	buttonsBuildLUT@i,c
  4047  000AE4                     l3133:
  4048                           
  4049                           ;buttons.c: 271: int16_t radius = i - origin;
  4050  000AE4  5013               	movf	buttonsBuildLUT@origin,w,c
  4051  000AE6  5C20               	subwf	buttonsBuildLUT@i,w,c
  4052  000AE8  6E22               	movwf	buttonsBuildLUT@radius,c
  4053  000AEA  5021               	movf	buttonsBuildLUT@i+1,w,c
  4054  000AEC  A0D8               	btfss	status,0,c
  4055  000AEE  0421               	decf	buttonsBuildLUT@i+1,w,c
  4056  000AF0  6E23               	movwf	buttonsBuildLUT@radius+1,c
  4057                           
  4058                           ;buttons.c: 272: if (invert) radius = -radius;
  4059  000AF2  5016               	movf	buttonsBuildLUT@invert,w,c
  4060  000AF4  B4D8               	btfsc	status,2,c
  4061  000AF6  D004               	goto	l3139
  4062  000AF8  6C22               	negf	buttonsBuildLUT@radius,c
  4063  000AFA  1E23               	comf	buttonsBuildLUT@radius+1,f,c
  4064  000AFC  B0D8               	btfsc	status,0,c
  4065  000AFE  2A23               	incf	buttonsBuildLUT@radius+1,f,c
  4066  000B00                     l3139:
  4067                           
  4068                           ;buttons.c: 273: if (((radius >= 0) ? (radius) : (-radius)) < (int16_t)dz) {
  4069  000B00  AE23               	btfss	buttonsBuildLUT@radius+1,7,c
  4070  000B02  D011               	goto	l555
  4071  000B04  0060  F088  F017   	movff	buttonsBuildLUT@radius,??_buttonsBuildLUT
  4072  000B0A  0060  F08C  F018   	movff	buttonsBuildLUT@radius+1,??_buttonsBuildLUT+1
  4073  000B10  1E17               	comf	??_buttonsBuildLUT,f,c
  4074  000B12  1E18               	comf	??_buttonsBuildLUT+1,f,c
  4075  000B14  4A17               	infsnz	??_buttonsBuildLUT,f,c
  4076  000B16  2A18               	incf	??_buttonsBuildLUT+1,f,c
  4077  000B18  0060  F05C  F01A   	movff	??_buttonsBuildLUT,_buttonsBuildLUT$1143
  4078  000B1E  0060  F060  F01B   	movff	??_buttonsBuildLUT+1,_buttonsBuildLUT$1143+1
  4079  000B24  D006               	goto	l3143
  4080  000B26                     l555:
  4081  000B26  0060  F088  F01A   	movff	buttonsBuildLUT@radius,_buttonsBuildLUT$1143
  4082  000B2C  0060  F08C  F01B   	movff	buttonsBuildLUT@radius+1,_buttonsBuildLUT$1143+1
  4083  000B32                     l3143:
  4084  000B32  5014               	movf	buttonsBuildLUT@dz,w,c
  4085  000B34  6E17               	movwf	??_buttonsBuildLUT& (0+255),c
  4086  000B36  6A18               	clrf	(??_buttonsBuildLUT+1)& (0+255),c
  4087  000B38  5017               	movf	??_buttonsBuildLUT,w,c
  4088  000B3A  5C1A               	subwf	_buttonsBuildLUT$1143,w,c
  4089  000B3C  501B               	movf	_buttonsBuildLUT$1143+1,w,c
  4090  000B3E  0A80               	xorlw	128
  4091  000B40  6E19               	movwf	(??_buttonsBuildLUT+2)& (0+255),c
  4092  000B42  5018               	movf	??_buttonsBuildLUT+1,w,c
  4093  000B44  0A80               	xorlw	128
  4094  000B46  5819               	subwfb	(??_buttonsBuildLUT+2)& (0+255),w,c
  4095  000B48  B0D8               	btfsc	status,0,c
  4096  000B4A  D009               	goto	l3147
  4097                           
  4098                           ;buttons.c: 274: LUT[i] = 0x80;
  4099  000B4C  5020               	movf	buttonsBuildLUT@i,w,c
  4100  000B4E  240F               	addwf	buttonsBuildLUT@LUT,w,c
  4101  000B50  6ED9               	movwf	fsr2l,c
  4102  000B52  5021               	movf	buttonsBuildLUT@i+1,w,c
  4103  000B54  2010               	addwfc	buttonsBuildLUT@LUT+1,w,c
  4104  000B56  6EDA               	movwf	fsr2h,c
  4105  000B58  0E80               	movlw	128
  4106  000B5A  6EDF               	movwf	indf2,c
  4107                           
  4108                           ;buttons.c: 275: } else {
  4109  000B5C  D07E               	goto	l3169
  4110  000B5E                     l3147:
  4111                           
  4112                           ;buttons.c: 276: int16_t tempVal;;buttons.c: 277: if (dzMode == 0) {
  4113  000B5E  5015               	movf	buttonsBuildLUT@dzMode,w,c
  4114  000B60  A4D8               	btfss	status,2,c
  4115  000B62  D01B               	goto	l3151
  4116                           
  4117                           ;buttons.c: 278: tempVal = radius * 127 / range;
  4118  000B64  0060  F088  F001   	movff	buttonsBuildLUT@radius,___wmul@multiplier
  4119  000B6A  0060  F08C  F002   	movff	buttonsBuildLUT@radius+1,___wmul@multiplier+1
  4120  000B70  0E00               	movlw	0
  4121  000B72  6E04               	movwf	___wmul@multiplicand+1,c
  4122  000B74  0E7F               	movlw	127
  4123  000B76  6E03               	movwf	___wmul@multiplicand,c
  4124  000B78  ECFC  F00A         	call	___wmul	;wreg free
  4125  000B7C  0060  F004  F007   	movff	?___wmul,___awdiv@dividend
  4126  000B82  0060  F008  F008   	movff	?___wmul+1,___awdiv@dividend+1
  4127  000B88  0060  F070  F009   	movff	buttonsBuildLUT@range,___awdiv@divisor
  4128  000B8E  0060  F074  F00A   	movff	buttonsBuildLUT@range+1,___awdiv@divisor+1
  4129  000B94  EC72  F008         	call	___awdiv	;wreg free
  4130  000B98  D03F               	goto	L4
  4131  000B9A                     l3151:
  4132                           
  4133                           ;buttons.c: 280: if (radius > 0)
  4134  000B9A  BE23               	btfsc	buttonsBuildLUT@radius+1,7,c
  4135  000B9C  D022               	goto	l3155
  4136  000B9E  5023               	movf	buttonsBuildLUT@radius+1,w,c
  4137  000BA0  E103               	bnz	u2020
  4138  000BA2  0422               	decf	buttonsBuildLUT@radius,w,c
  4139  000BA4  A0D8               	btfss	status,0,c
  4140  000BA6  D01D               	goto	l3155
  4141  000BA8                     u2020:
  4142                           
  4143                           ;buttons.c: 281: tempVal = (radius - dz) * 127 / (range - dz);
  4144  000BA8  5014               	movf	buttonsBuildLUT@dz,w,c
  4145  000BAA  5C22               	subwf	buttonsBuildLUT@radius,w,c
  4146  000BAC  6E01               	movwf	___wmul@multiplier,c
  4147  000BAE  5023               	movf	buttonsBuildLUT@radius+1,w,c
  4148  000BB0  A0D8               	btfss	status,0,c
  4149  000BB2  0423               	decf	buttonsBuildLUT@radius+1,w,c
  4150  000BB4  6E02               	movwf	___wmul@multiplier+1,c
  4151  000BB6  0E00               	movlw	0
  4152  000BB8  6E04               	movwf	___wmul@multiplicand+1,c
  4153  000BBA  0E7F               	movlw	127
  4154  000BBC  6E03               	movwf	___wmul@multiplicand,c
  4155  000BBE  ECFC  F00A         	call	___wmul	;wreg free
  4156  000BC2  0060  F004  F007   	movff	?___wmul,___awdiv@dividend
  4157  000BC8  0060  F008  F008   	movff	?___wmul+1,___awdiv@dividend+1
  4158  000BCE  5014               	movf	buttonsBuildLUT@dz,w,c
  4159  000BD0  5C1C               	subwf	buttonsBuildLUT@range,w,c
  4160  000BD2  6E09               	movwf	___awdiv@divisor,c
  4161  000BD4  501D               	movf	buttonsBuildLUT@range+1,w,c
  4162  000BD6  A0D8               	btfss	status,0,c
  4163  000BD8  041D               	decf	buttonsBuildLUT@range+1,w,c
  4164  000BDA  6E0A               	movwf	___awdiv@divisor+1,c
  4165  000BDC  EC72  F008         	call	___awdiv	;wreg free
  4166  000BE0  D01B               	goto	L4
  4167  000BE2                     l3155:
  4168                           
  4169                           ;buttons.c: 282: else;buttons.c: 283: tempVal = (radius + dz) * 127 / (range - dz);
  4170  000BE2  5014               	movf	buttonsBuildLUT@dz,w,c
  4171  000BE4  2422               	addwf	buttonsBuildLUT@radius,w,c
  4172  000BE6  6E01               	movwf	___wmul@multiplier,c
  4173  000BE8  0E00               	movlw	0
  4174  000BEA  2023               	addwfc	buttonsBuildLUT@radius+1,w,c
  4175  000BEC  6E02               	movwf	___wmul@multiplier+1,c
  4176  000BEE  0E00               	movlw	0
  4177  000BF0  6E04               	movwf	___wmul@multiplicand+1,c
  4178  000BF2  0E7F               	movlw	127
  4179  000BF4  6E03               	movwf	___wmul@multiplicand,c
  4180  000BF6  ECFC  F00A         	call	___wmul	;wreg free
  4181  000BFA  0060  F004  F007   	movff	?___wmul,___awdiv@dividend
  4182  000C00  0060  F008  F008   	movff	?___wmul+1,___awdiv@dividend+1
  4183  000C06  5014               	movf	buttonsBuildLUT@dz,w,c
  4184  000C08  5C1C               	subwf	buttonsBuildLUT@range,w,c
  4185  000C0A  6E09               	movwf	___awdiv@divisor,c
  4186  000C0C  501D               	movf	buttonsBuildLUT@range+1,w,c
  4187  000C0E  A0D8               	btfss	status,0,c
  4188  000C10  041D               	decf	buttonsBuildLUT@range+1,w,c
  4189  000C12  6E0A               	movwf	___awdiv@divisor+1,c
  4190  000C14  EC72  F008         	call	___awdiv	;wreg free
  4191  000C18                     L4:
  4192  000C18  0060  F01C  F01E   	movff	?___awdiv,buttonsBuildLUT@tempVal
  4193  000C1E  0060  F020  F01F   	movff	?___awdiv+1,buttonsBuildLUT@tempVal+1
  4194                           
  4195                           ;buttons.c: 284: };buttons.c: 285: tempVal += 128;
  4196  000C24  0E80               	movlw	128
  4197  000C26  261E               	addwf	buttonsBuildLUT@tempVal,f,c
  4198  000C28  0E00               	movlw	0
  4199  000C2A  221F               	addwfc	buttonsBuildLUT@tempVal+1,f,c
  4200                           
  4201                           ;buttons.c: 286: if (tempVal < 0) tempVal = 0;
  4202  000C2C  AE1F               	btfss	buttonsBuildLUT@tempVal+1,7,c
  4203  000C2E  D004               	goto	l3163
  4204  000C30  0E00               	movlw	0
  4205  000C32  6E1F               	movwf	buttonsBuildLUT@tempVal+1,c
  4206  000C34  0E00               	movlw	0
  4207  000C36  6E1E               	movwf	buttonsBuildLUT@tempVal,c
  4208  000C38                     l3163:
  4209                           
  4210                           ;buttons.c: 287: if (tempVal > 0xFF) tempVal = 0xFF;
  4211  000C38  BE1F               	btfsc	buttonsBuildLUT@tempVal+1,7,c
  4212  000C3A  D006               	goto	l3167
  4213  000C3C  041F               	decf	buttonsBuildLUT@tempVal+1,w,c
  4214  000C3E  A0D8               	btfss	status,0,c
  4215  000C40  D003               	goto	l3167
  4216  000C42  0E00               	movlw	0
  4217  000C44  6E1F               	movwf	buttonsBuildLUT@tempVal+1,c
  4218  000C46  681E               	setf	buttonsBuildLUT@tempVal,c
  4219  000C48                     l3167:
  4220                           
  4221                           ;buttons.c: 288: LUT[i] = (uint8_t)tempVal & 0xFFU;
  4222  000C48  5020               	movf	buttonsBuildLUT@i,w,c
  4223  000C4A  240F               	addwf	buttonsBuildLUT@LUT,w,c
  4224  000C4C  6ED9               	movwf	fsr2l,c
  4225  000C4E  5021               	movf	buttonsBuildLUT@i+1,w,c
  4226  000C50  2010               	addwfc	buttonsBuildLUT@LUT+1,w,c
  4227  000C52  6EDA               	movwf	fsr2h,c
  4228  000C54  0060  F07B  FFDF   	movff	buttonsBuildLUT@tempVal,indf2
  4229  000C5A                     l3169:
  4230  000C5A  4A20               	infsnz	buttonsBuildLUT@i,f,c
  4231  000C5C  2A21               	incf	buttonsBuildLUT@i+1,f,c
  4232  000C5E  BE21               	btfsc	buttonsBuildLUT@i+1,7,c
  4233  000C60  D741               	goto	l3133
  4234  000C62  0421               	decf	buttonsBuildLUT@i+1,w,c
  4235  000C64  B0D8               	btfsc	status,0,c
  4236  000C66  0012               	return	
  4237  000C68  D73D               	goto	l3133
  4238  000C6A                     __end_of_buttonsBuildLUT:
  4239                           	opt callstack 0
  4240                           
  4241 ;; *************** function ___wmul *****************
  4242 ;; Defined at:
  4243 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;  multiplier      2    0[COMRAM] unsigned int 
  4246 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;  product         2    4[COMRAM] unsigned int 
  4249 ;; Return value:  Size  Location     Type
  4250 ;;                  2    0[COMRAM] unsigned int 
  4251 ;; Registers used:
  4252 ;;		wreg, status,2, status,0, prodl, prodh
  4253 ;; Tracked objects:
  4254 ;;		On entry : 0/0
  4255 ;;		On exit  : 0/0
  4256 ;;		Unchanged: 0/0
  4257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4258 ;;      Params:         4       0       0       0       0       0       0       0       0
  4259 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4260 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4261 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4262 ;;Total ram usage:        6 bytes
  4263 ;; Hardware stack levels used:    1
  4264 ;; Hardware stack levels required when called:    2
  4265 ;; This function calls:
  4266 ;;		Nothing
  4267 ;; This function is called by:
  4268 ;;		_buttonsBuildLUT
  4269 ;; This function uses a non-reentrant model
  4270 ;;
  4271                           
  4272                           	psect	text17
  4273  0015F8                     __ptext17:
  4274                           	opt callstack 0
  4275  0015F8                     ___wmul:
  4276                           	opt callstack 26
  4277                           
  4278                           ;incstack = 0
  4279  0015F8  5001               	movf	___wmul@multiplier,w,c
  4280  0015FA  0203               	mulwf	___wmul@multiplicand,c
  4281  0015FC  006F FFCC  F005    	movff	prodl,___wmul@product
  4282  001602  006F FFD0  F006    	movff	prodh,___wmul@product+1
  4283  001608  5001               	movf	___wmul@multiplier,w,c
  4284  00160A  0204               	mulwf	___wmul@multiplicand+1,c
  4285  00160C  50F3               	movf	prodl,w,c
  4286  00160E  2606               	addwf	___wmul@product+1,f,c
  4287  001610  5002               	movf	___wmul@multiplier+1,w,c
  4288  001612  0203               	mulwf	___wmul@multiplicand,c
  4289  001614  50F3               	movf	prodl,w,c
  4290  001616  2606               	addwf	___wmul@product+1,f,c
  4291  001618  0060  F014  F001   	movff	___wmul@product,?___wmul
  4292  00161E  0060  F018  F002   	movff	___wmul@product+1,?___wmul+1
  4293  001624  0012               	return		;funcret
  4294  001626                     __end_of___wmul:
  4295                           	opt callstack 0
  4296                           
  4297 ;; *************** function ___awdiv *****************
  4298 ;; Defined at:
  4299 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;  dividend        2    6[COMRAM] int 
  4302 ;;  divisor         2    8[COMRAM] int 
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;  quotient        2   12[COMRAM] int 
  4305 ;;  sign            1   11[COMRAM] unsigned char 
  4306 ;;  counter         1   10[COMRAM] unsigned char 
  4307 ;; Return value:  Size  Location     Type
  4308 ;;                  2    6[COMRAM] int 
  4309 ;; Registers used:
  4310 ;;		wreg, status,2, status,0
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4316 ;;      Params:         4       0       0       0       0       0       0       0       0
  4317 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4318 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4319 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4320 ;;Total ram usage:        8 bytes
  4321 ;; Hardware stack levels used:    1
  4322 ;; Hardware stack levels required when called:    2
  4323 ;; This function calls:
  4324 ;;		Nothing
  4325 ;; This function is called by:
  4326 ;;		_buttonsBuildLUT
  4327 ;; This function uses a non-reentrant model
  4328 ;;
  4329                           
  4330                           	psect	text18
  4331  0010E4                     __ptext18:
  4332                           	opt callstack 0
  4333  0010E4                     ___awdiv:
  4334                           	opt callstack 26
  4335                           
  4336                           ;incstack = 0
  4337  0010E4  0E00               	movlw	0
  4338  0010E6  6E0C               	movwf	___awdiv@sign,c
  4339  0010E8  AE0A               	btfss	___awdiv@divisor+1,7,c
  4340  0010EA  D006               	goto	l2999
  4341  0010EC  6C09               	negf	___awdiv@divisor,c
  4342  0010EE  1E0A               	comf	___awdiv@divisor+1,f,c
  4343  0010F0  B0D8               	btfsc	status,0,c
  4344  0010F2  2A0A               	incf	___awdiv@divisor+1,f,c
  4345  0010F4  0E01               	movlw	1
  4346  0010F6  6E0C               	movwf	___awdiv@sign,c
  4347  0010F8                     l2999:
  4348  0010F8  AE08               	btfss	___awdiv@dividend+1,7,c
  4349  0010FA  D006               	goto	l3005
  4350  0010FC  6C07               	negf	___awdiv@dividend,c
  4351  0010FE  1E08               	comf	___awdiv@dividend+1,f,c
  4352  001100  B0D8               	btfsc	status,0,c
  4353  001102  2A08               	incf	___awdiv@dividend+1,f,c
  4354  001104  0E01               	movlw	1
  4355  001106  1A0C               	xorwf	___awdiv@sign,f,c
  4356  001108                     l3005:
  4357  001108  0E00               	movlw	0
  4358  00110A  6E0E               	movwf	___awdiv@quotient+1,c
  4359  00110C  0E00               	movlw	0
  4360  00110E  6E0D               	movwf	___awdiv@quotient,c
  4361  001110  5009               	movf	___awdiv@divisor,w,c
  4362  001112  100A               	iorwf	___awdiv@divisor+1,w,c
  4363  001114  B4D8               	btfsc	status,2,c
  4364  001116  D01C               	goto	l3027
  4365  001118  0E01               	movlw	1
  4366  00111A  6E0B               	movwf	___awdiv@counter,c
  4367  00111C  D004               	goto	l3013
  4368  00111E                     l3011:
  4369  00111E  90D8               	bcf	status,0,c
  4370  001120  3609               	rlcf	___awdiv@divisor,f,c
  4371  001122  360A               	rlcf	___awdiv@divisor+1,f,c
  4372  001124  2A0B               	incf	___awdiv@counter,f,c
  4373  001126                     l3013:
  4374  001126  AE0A               	btfss	___awdiv@divisor+1,7,c
  4375  001128  D7FA               	goto	l3011
  4376  00112A                     u1910:
  4377  00112A  90D8               	bcf	status,0,c
  4378  00112C  360D               	rlcf	___awdiv@quotient,f,c
  4379  00112E  360E               	rlcf	___awdiv@quotient+1,f,c
  4380  001130  5009               	movf	___awdiv@divisor,w,c
  4381  001132  5C07               	subwf	___awdiv@dividend,w,c
  4382  001134  500A               	movf	___awdiv@divisor+1,w,c
  4383  001136  5808               	subwfb	___awdiv@dividend+1,w,c
  4384  001138  A0D8               	btfss	status,0,c
  4385  00113A  D005               	goto	l3023
  4386  00113C  5009               	movf	___awdiv@divisor,w,c
  4387  00113E  5E07               	subwf	___awdiv@dividend,f,c
  4388  001140  500A               	movf	___awdiv@divisor+1,w,c
  4389  001142  5A08               	subwfb	___awdiv@dividend+1,f,c
  4390  001144  800D               	bsf	___awdiv@quotient,0,c
  4391  001146                     l3023:
  4392  001146  90D8               	bcf	status,0,c
  4393  001148  320A               	rrcf	___awdiv@divisor+1,f,c
  4394  00114A  3209               	rrcf	___awdiv@divisor,f,c
  4395  00114C  2E0B               	decfsz	___awdiv@counter,f,c
  4396  00114E  D7ED               	goto	u1910
  4397  001150                     l3027:
  4398  001150  500C               	movf	___awdiv@sign,w,c
  4399  001152  B4D8               	btfsc	status,2,c
  4400  001154  D004               	goto	l3031
  4401  001156  6C0D               	negf	___awdiv@quotient,c
  4402  001158  1E0E               	comf	___awdiv@quotient+1,f,c
  4403  00115A  B0D8               	btfsc	status,0,c
  4404  00115C  2A0E               	incf	___awdiv@quotient+1,f,c
  4405  00115E                     l3031:
  4406  00115E  0060  F034  F007   	movff	___awdiv@quotient,?___awdiv
  4407  001164  0060  F038  F008   	movff	___awdiv@quotient+1,?___awdiv+1
  4408  00116A  0012               	return		;funcret
  4409  00116C                     __end_of___awdiv:
  4410                           	opt callstack 0
  4411                           
  4412 ;; *************** function _bootPayload *****************
  4413 ;; Defined at:
  4414 ;;		line 510 in file "main.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;		None
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;  addr            2    0        unsigned int 
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  1    wreg      void 
  4421 ;; Registers used:
  4422 ;;		wreg, status,2, status,0
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4428 ;;      Params:         0       0       0       0       0       0       0       0       0
  4429 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4430 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4431 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4432 ;;Total ram usage:        2 bytes
  4433 ;; Hardware stack levels used:    1
  4434 ;; Hardware stack levels required when called:    2
  4435 ;; This function calls:
  4436 ;;		Nothing
  4437 ;; This function is called by:
  4438 ;;		_main
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           	psect	text19
  4443  0014DA                     __ptext19:
  4444                           	opt callstack 0
  4445  0014DA                     _bootPayload:
  4446                           	opt callstack 28
  4447                           
  4448                           ;main.c: 511: INTCON0 = 0x00;
  4449                           
  4450                           ;incstack = 0
  4451  0014DA  0E00               	movlw	0
  4452  0014DC  6ED2               	movwf	16338,c	;volatile
  4453                           
  4454                           ;main.c: 512: NCO1ACCL = 0x01;
  4455  0014DE  0E01               	movlw	1
  4456  0014E0  013F               	movlb	63	; () banked
  4457  0014E2  6F38               	movwf	56,b	;volatile
  4458                           
  4459                           ;main.c: 513: STKPTR = 0x00;
  4460  0014E4  0E00               	movlw	0
  4461  0014E6  6EFC               	movwf	stkptr,c	;volatile
  4462                           
  4463                           ;main.c: 515: IVTLOCK = 0x55;
  4464  0014E8  0E55               	movlw	85
  4465  0014EA  6ED4               	movwf	16340,c	;volatile
  4466                           
  4467                           ;main.c: 516: IVTLOCK = 0xAA;
  4468  0014EC  0EAA               	movlw	170
  4469  0014EE  6ED4               	movwf	16340,c	;volatile
  4470                           
  4471                           ;main.c: 517: IVTLOCK = 0;
  4472  0014F0  0E00               	movlw	0
  4473  0014F2  6ED4               	movwf	16340,c	;volatile
  4474                           
  4475                           ; BSR set to: 63
  4476                           ;main.c: 518: IVTLOCKED = 0;
  4477  0014F4  90D4               	bcf	16340,0,c	;volatile
  4478                           
  4479                           ; BSR set to: 63
  4480                           ;main.c: 519: IVTBASE = addr + 8;
  4481  0014F6  0E0C               	movlw	12
  4482  0014F8  6ED5               	movwf	16341,c	;volatile
  4483  0014FA  0E20               	movlw	32
  4484  0014FC  6ED6               	movwf	16342,c	;volatile
  4485  0014FE  0E00               	movlw	0
  4486  001500  6ED7               	movwf	16343,c	;volatile
  4487                           
  4488                           ; BSR set to: 63
  4489                           ;main.c: 520: IVTLOCK = 0x55;
  4490  001502  0E55               	movlw	85
  4491  001504  6ED4               	movwf	16340,c	;volatile
  4492                           
  4493                           ; BSR set to: 63
  4494                           ;main.c: 521: IVTLOCK = 0xAA;
  4495  001506  0EAA               	movlw	170
  4496  001508  6ED4               	movwf	16340,c	;volatile
  4497                           
  4498                           ; BSR set to: 63
  4499                           ;main.c: 522: IVTLOCK = 1;
  4500  00150A  0E01               	movlw	1
  4501  00150C  6ED4               	movwf	16340,c	;volatile
  4502                           
  4503                           ; BSR set to: 63
  4504                           ;main.c: 523: IVTLOCKED = 1;
  4505  00150E  80D4               	bsf	16340,0,c	;volatile
  4506                           
  4507                           ; BSR set to: 63
  4508                           ;main.c: 525: PCLATU = 0x00;
  4509  001510  0E00               	movlw	0
  4510  001512  6EFB               	movwf	pclatu,c	;volatile
  4511                           
  4512                           ; BSR set to: 63
  4513                           ;main.c: 526: PCLATH = (addr >> 8) & 0xFF;
  4514  001514  0E20               	movlw	32
  4515  001516  6EFA               	movwf	pclath,c	;volatile
  4516                           
  4517                           ; BSR set to: 63
  4518                           ;main.c: 527: PCL = addr & 0xFFUL;
  4519  001518  0E04               	movlw	4
  4520  00151A  6EF9               	movwf	pcl,c	;volatile
  4521                           
  4522                           ; BSR set to: 63
  4523  00151C  0012               	return		;funcret
  4524  00151E                     __end_of_bootPayload:
  4525                           	opt callstack 0
  4526                           
  4527 ;; *************** function _SISendMessage *****************
  4528 ;; Defined at:
  4529 ;;		line 194 in file "si.c"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;  msg             2    6[COMRAM] PTR unsigned char 
  4532 ;;		 -> buttonsMessage(8), main@msgAnswer(36), 
  4533 ;;  len             1    8[COMRAM] unsigned char 
  4534 ;; Auto vars:     Size  Location     Type
  4535 ;;  leftToSend      1   15[COMRAM] char 
  4536 ;;  idx             1   14[COMRAM] unsigned char 
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  1    wreg      void 
  4539 ;; Registers used:
  4540 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4546 ;;      Params:         3       0       0       0       0       0       0       0       0
  4547 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4548 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4549 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4550 ;;Total ram usage:       10 bytes
  4551 ;; Hardware stack levels used:    1
  4552 ;; Hardware stack levels required when called:    2
  4553 ;; This function calls:
  4554 ;;		Nothing
  4555 ;; This function is called by:
  4556 ;;		_main
  4557 ;; This function uses a non-reentrant model
  4558 ;;
  4559                           
  4560                           	psect	text20
  4561  000D4C                     __ptext20:
  4562                           	opt callstack 0
  4563  000D4C                     _SISendMessage:
  4564                           	opt callstack 28
  4565                           
  4566                           ;si.c: 195: int8_t leftToSend;;si.c: 196: uint8_t idx;;si.c: 203: SMT1CON1bits.GO = 0;
  4567                           
  4568                           ; BSR set to: 63
  4569                           ;incstack = 0
  4570  000D4C  013F               	movlb	63	; () banked
  4571  000D4E  9F1F               	bcf	31,7,b	;volatile
  4572  000D50                     l785:
  4573  000D50  013D               	movlb	61	; () banked
  4574  000D52  AB17               	btfss	23,5,b	;volatile
  4575  000D54  D7FD               	goto	l785
  4576                           
  4577                           ; BSR set to: 61
  4578                           ;si.c: 208: TRISBbits.TRISB2 = 0;
  4579  000D56  94C3               	bcf	16323,2,c	;volatile
  4580                           
  4581                           ; BSR set to: 61
  4582                           ;si.c: 211: SIBitCounter = 0;
  4583  000D58  0E00               	movlw	0
  4584  000D5A  6E3F               	movwf	_SIBitCounter,c
  4585                           
  4586                           ;si.c: 212: SIByteCounter = 0;
  4587  000D5C  0E00               	movlw	0
  4588  000D5E  6E3E               	movwf	_SIByteCounter,c
  4589                           
  4590                           ;si.c: 213: SICMDReceived = 0;
  4591  000D60  0E00               	movlw	0
  4592  000D62  6E3D               	movwf	_SICMDReceived,c
  4593                           
  4594                           ;si.c: 214: SITempByte = 0x00;
  4595  000D64  0E00               	movlw	0
  4596  000D66  6E3C               	movwf	_SITempByte,c
  4597                           
  4598                           ;si.c: 216: T2TMR = 0x01;
  4599  000D68  0E01               	movlw	1
  4600  000D6A  6EAA               	movwf	16298,c	;volatile
  4601                           
  4602                           ;si.c: 218: SPI1TWIDTH = 0x01;
  4603  000D6C  0E01               	movlw	1
  4604  000D6E  6F18               	movwf	24,b	;volatile
  4605                           
  4606                           ; BSR set to: 61
  4607                           ;si.c: 219: SPI1INTFbits.SRMTIF = 0;
  4608  000D70  9F1A               	bcf	26,7,b	;volatile
  4609                           
  4610                           ; BSR set to: 61
  4611                           ;si.c: 220: SPI1TCNTL = len;
  4612  000D72  0060  F027  FD12   	movff	SISendMessage@len,15634	;volatile
  4613                           
  4614                           ; BSR set to: 61
  4615                           ;si.c: 222: if (len == 1) {
  4616  000D78  0409               	decf	SISendMessage@len,w,c
  4617  000D7A  A4D8               	btfss	status,2,c
  4618  000D7C  D00B               	goto	l3733
  4619                           
  4620                           ; BSR set to: 61
  4621                           ;si.c: 223: SPI1TXB = msg[0];
  4622  000D7E  0060  F01F  FFD9   	movff	SISendMessage@msg,fsr2l
  4623  000D84  0060  F023  FFDA   	movff	SISendMessage@msg+1,fsr2h
  4624  000D8A  50DF               	movf	indf2,w,c
  4625  000D8C  6F11               	movwf	17,b	;volatile
  4626                           
  4627                           ; BSR set to: 61
  4628                           ;si.c: 224: SPI1TXB = 0x80;
  4629  000D8E  0E80               	movlw	128
  4630  000D90  6F11               	movwf	17,b	;volatile
  4631                           
  4632                           ;si.c: 225: } else {
  4633  000D92  D03F               	goto	u3000
  4634  000D94                     l3733:
  4635                           
  4636                           ; BSR set to: 61
  4637                           ;si.c: 226: SPI1TXB = msg[0];
  4638  000D94  0060  F01F  FFD9   	movff	SISendMessage@msg,fsr2l
  4639  000D9A  0060  F023  FFDA   	movff	SISendMessage@msg+1,fsr2h
  4640  000DA0  50DF               	movf	indf2,w,c
  4641  000DA2  6F11               	movwf	17,b	;volatile
  4642                           
  4643                           ; BSR set to: 61
  4644                           ;si.c: 227: SPI1TXB = msg[1];
  4645  000DA4  EE20 F001          	lfsr	2,1
  4646  000DA8  5007               	movf	SISendMessage@msg,w,c
  4647  000DAA  26D9               	addwf	fsr2l,f,c
  4648  000DAC  5008               	movf	SISendMessage@msg+1,w,c
  4649  000DAE  22DA               	addwfc	fsr2h,f,c
  4650  000DB0  50DF               	movf	indf2,w,c
  4651  000DB2  6F11               	movwf	17,b	;volatile
  4652                           
  4653                           ; BSR set to: 61
  4654                           ;si.c: 228: leftToSend = len - 2;
  4655  000DB4  5009               	movf	SISendMessage@len,w,c
  4656  000DB6  0FFE               	addlw	254
  4657  000DB8  6E10               	movwf	SISendMessage@leftToSend,c
  4658                           
  4659                           ;si.c: 229: idx = 2;
  4660  000DBA  0E02               	movlw	2
  4661  000DBC  6E0F               	movwf	SISendMessage@idx,c
  4662                           
  4663                           ;si.c: 231: while(leftToSend >= 0) {
  4664  000DBE  D027               	goto	l3751
  4665  000DC0                     l3739:
  4666                           
  4667                           ; BSR set to: 61
  4668                           ;si.c: 232: if (SPI1TCNTL < (leftToSend + 2)) {
  4669  000DC0  0060  F040  F00A   	movff	SISendMessage@leftToSend,??_SISendMessage
  4670  000DC6  6A0B               	clrf	(??_SISendMessage+1)& (0+255),c
  4671  000DC8  BE0A               	btfsc	??_SISendMessage& (0+255),7,c
  4672  000DCA  060B               	decf	(??_SISendMessage+1)& (0+255),f,c
  4673  000DCC  0E02               	movlw	2
  4674  000DCE  260A               	addwf	??_SISendMessage,f,c
  4675  000DD0  0E00               	movlw	0
  4676  000DD2  220B               	addwfc	??_SISendMessage+1,f,c
  4677  000DD4  5112               	movf	18,w,b	;volatile
  4678  000DD6  6E0C               	movwf	(??_SISendMessage+2)& (0+255),c
  4679  000DD8  6A0D               	clrf	(??_SISendMessage+3)& (0+255),c
  4680  000DDA  500A               	movf	??_SISendMessage,w,c
  4681  000DDC  5C0C               	subwf	??_SISendMessage+2,w,c
  4682  000DDE  500D               	movf	??_SISendMessage+3,w,c
  4683  000DE0  0A80               	xorlw	128
  4684  000DE2  6E0E               	movwf	(??_SISendMessage+4)& (0+255),c
  4685  000DE4  500B               	movf	??_SISendMessage+1,w,c
  4686  000DE6  0A80               	xorlw	128
  4687  000DE8  580E               	subwfb	(??_SISendMessage+4)& (0+255),w,c
  4688  000DEA  B0D8               	btfsc	status,0,c
  4689  000DEC  D010               	goto	l3751
  4690                           
  4691                           ; BSR set to: 61
  4692                           ;si.c: 233: if (leftToSend == 0) {
  4693  000DEE  5010               	movf	SISendMessage@leftToSend,w,c
  4694  000DF0  A4D8               	btfss	status,2,c
  4695  000DF2  D003               	goto	l3745
  4696                           
  4697                           ; BSR set to: 61
  4698                           ;si.c: 234: SPI1TXB = 0x80;
  4699  000DF4  0E80               	movlw	128
  4700  000DF6  6F11               	movwf	17,b	;volatile
  4701                           
  4702                           ;si.c: 235: } else {
  4703  000DF8  D009               	goto	l3749
  4704  000DFA                     l3745:
  4705                           
  4706                           ; BSR set to: 61
  4707                           ;si.c: 236: SPI1TXB = msg[idx++];
  4708  000DFA  500F               	movf	SISendMessage@idx,w,c
  4709  000DFC  2407               	addwf	SISendMessage@msg,w,c
  4710  000DFE  6ED9               	movwf	fsr2l,c
  4711  000E00  0E00               	movlw	0
  4712  000E02  2008               	addwfc	SISendMessage@msg+1,w,c
  4713  000E04  6EDA               	movwf	fsr2h,c
  4714  000E06  50DF               	movf	indf2,w,c
  4715  000E08  6F11               	movwf	17,b	;volatile
  4716                           
  4717                           ; BSR set to: 61
  4718  000E0A  2A0F               	incf	SISendMessage@idx,f,c
  4719  000E0C                     l3749:
  4720                           
  4721                           ; BSR set to: 61
  4722                           ;si.c: 237: };si.c: 238: leftToSend--;
  4723  000E0C  0610               	decf	SISendMessage@leftToSend,f,c
  4724  000E0E                     l3751:
  4725                           
  4726                           ; BSR set to: 61
  4727  000E0E  AE10               	btfss	SISendMessage@leftToSend,7,c
  4728  000E10  D7D7               	goto	l3739
  4729  000E12                     u3000:
  4730                           
  4731                           ; BSR set to: 61
  4732  000E12  AF1A               	btfss	26,7,b	;volatile
  4733  000E14  D7FE               	goto	u3000
  4734  000E16                     u3010:
  4735                           
  4736                           ; BSR set to: 61
  4737  000E16  AB17               	btfss	23,5,b	;volatile
  4738  000E18  D7FE               	goto	u3010
  4739                           
  4740                           ; BSR set to: 61
  4741                           ;si.c: 245: SPI1INTFbits.SRMTIF = 0;
  4742  000E1A  9F1A               	bcf	26,7,b	;volatile
  4743                           
  4744                           ;si.c: 248: SMT1CON1bits.GO = 1;
  4745  000E1C  013F               	movlb	63	; () banked
  4746  000E1E  8F1F               	bsf	31,7,b	;volatile
  4747                           
  4748                           ;si.c: 249: TRISBbits.TRISB2 = 1;
  4749  000E20  84C3               	bsf	16323,2,c	;volatile
  4750                           
  4751                           ; BSR set to: 63
  4752  000E22  0012               	return		;funcret
  4753  000E24                     __end_of_SISendMessage:
  4754                           	opt callstack 0
  4755                           
  4756 ;; *************** function _SIInit *****************
  4757 ;; Defined at:
  4758 ;;		line 75 in file "si.c"
  4759 ;; Parameters:    Size  Location     Type
  4760 ;;		None
  4761 ;; Auto vars:     Size  Location     Type
  4762 ;;		None
  4763 ;; Return value:  Size  Location     Type
  4764 ;;                  1    wreg      void 
  4765 ;; Registers used:
  4766 ;;		wreg, status,2, cstack
  4767 ;; Tracked objects:
  4768 ;;		On entry : 0/0
  4769 ;;		On exit  : 0/0
  4770 ;;		Unchanged: 0/0
  4771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4772 ;;      Params:         0       0       0       0       0       0       0       0       0
  4773 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4774 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4775 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4776 ;;Total ram usage:        0 bytes
  4777 ;; Hardware stack levels used:    1
  4778 ;; Hardware stack levels required when called:    3
  4779 ;; This function calls:
  4780 ;;		_SIConfigureCLC
  4781 ;; This function is called by:
  4782 ;;		_main
  4783 ;; This function uses a non-reentrant model
  4784 ;;
  4785                           
  4786                           	psect	text21
  4787  00105A                     __ptext21:
  4788                           	opt callstack 0
  4789  00105A                     _SIInit:
  4790                           	opt callstack 27
  4791                           
  4792                           ;si.c: 77: T6CON = 0x00;
  4793                           
  4794                           ; BSR set to: 63
  4795                           ;incstack = 0
  4796  00105A  0E00               	movlw	0
  4797  00105C  6E94               	movwf	16276,c	;volatile
  4798                           
  4799                           ;si.c: 78: T6CLK = 0x01;
  4800  00105E  0E01               	movlw	1
  4801  001060  6E96               	movwf	16278,c	;volatile
  4802                           
  4803                           ;si.c: 79: T6RST = 0x00;
  4804  001062  0E00               	movlw	0
  4805  001064  6E97               	movwf	16279,c	;volatile
  4806                           
  4807                           ;si.c: 80: T6TMR = 0x00;
  4808  001066  0E00               	movlw	0
  4809  001068  6E92               	movwf	16274,c	;volatile
  4810                           
  4811                           ;si.c: 81: T6PR = 0x50;
  4812  00106A  0E50               	movlw	80
  4813  00106C  6E93               	movwf	16275,c	;volatile
  4814                           
  4815                           ;si.c: 82: T6HLT = 0x05;
  4816  00106E  0E05               	movlw	5
  4817  001070  6E95               	movwf	16277,c	;volatile
  4818                           
  4819                           ;si.c: 83: PIR9bits.TMR6IF = 0;
  4820  001072  0139               	movlb	57	; () banked
  4821  001074  91A9               	bcf	169,0,b	;volatile
  4822                           
  4823                           ; BSR set to: 57
  4824                           ;si.c: 84: PIE9bits.TMR6IE = 1;
  4825  001076  8199               	bsf	153,0,b	;volatile
  4826                           
  4827                           ;si.c: 88: T2CON = 0x00;
  4828  001078  0E00               	movlw	0
  4829  00107A  6EAC               	movwf	16300,c	;volatile
  4830                           
  4831                           ;si.c: 89: T2CLK = 0x01;
  4832  00107C  0E01               	movlw	1
  4833  00107E  6EAE               	movwf	16302,c	;volatile
  4834                           
  4835                           ;si.c: 90: T2RST = 0x00;
  4836  001080  0E00               	movlw	0
  4837  001082  6EAF               	movwf	16303,c	;volatile
  4838                           
  4839                           ;si.c: 91: T2TMR = 0x00;
  4840  001084  0E00               	movlw	0
  4841  001086  6EAA               	movwf	16298,c	;volatile
  4842                           
  4843                           ;si.c: 92: T2PR = 125;
  4844  001088  0E7D               	movlw	125
  4845  00108A  6EAB               	movwf	16299,c	;volatile
  4846                           
  4847                           ; BSR set to: 57
  4848                           ;si.c: 93: PIR4bits.TMR2IF = 0;
  4849  00108C  95A4               	bcf	164,2,b	;volatile
  4850                           
  4851                           ;si.c: 94: T2CON = 0xF0;
  4852  00108E  0EF0               	movlw	240
  4853  001090  6EAC               	movwf	16300,c	;volatile
  4854                           
  4855                           ;si.c: 95: while(!PIR4bits.TMR2IF) {
  4856  001092  D004               	goto	l3349
  4857  001094                     l776:
  4858                           
  4859                           ; BSR set to: 57
  4860                           ;si.c: 96: if (PORTBbits.RB2 == 0) {
  4861  001094  B4CB               	btfsc	16331,2,c	;volatile
  4862  001096  D002               	goto	l3349
  4863                           
  4864                           ; BSR set to: 57
  4865                           ;si.c: 97: T2TMR = 0x00;
  4866  001098  0E00               	movlw	0
  4867  00109A  6EAA               	movwf	16298,c	;volatile
  4868  00109C                     l3349:
  4869                           
  4870                           ; BSR set to: 57
  4871  00109C  A5A4               	btfss	164,2,b	;volatile
  4872  00109E  D7FA               	goto	l776
  4873                           
  4874                           ; BSR set to: 57
  4875                           ;si.c: 98: };si.c: 99: };si.c: 101: CCPTMRS1 = 0x55;
  4876  0010A0  0E55               	movlw	85
  4877  0010A2  013F               	movlb	63	; () banked
  4878  0010A4  6F5F               	movwf	95,b	;volatile
  4879                           
  4880                           ; BSR set to: 63
  4881                           ;si.c: 103: SIConfigureCLC();
  4882  0010A6  EC35  F006         	call	_SIConfigureCLC	;wreg free
  4883                           
  4884                           ;si.c: 105: T6CON = 0x80;
  4885  0010AA  0E80               	movlw	128
  4886  0010AC  6E94               	movwf	16276,c	;volatile
  4887                           
  4888                           ;si.c: 111: SMT1PRL = 0xFF;
  4889  0010AE  013F               	movlb	63	; () banked
  4890  0010B0  691B               	setf	27,b	;volatile
  4891                           
  4892                           ; BSR set to: 63
  4893                           ;si.c: 112: SMT1PRH = 0xFF;
  4894  0010B2  691C               	setf	28,b	;volatile
  4895                           
  4896                           ; BSR set to: 63
  4897                           ;si.c: 113: SMT1PRU = 0xFF;
  4898  0010B4  691D               	setf	29,b	;volatile
  4899                           
  4900                           ; BSR set to: 63
  4901                           ;si.c: 114: SMT1TMRL = 0x00;
  4902  0010B6  0E00               	movlw	0
  4903  0010B8  6F12               	movwf	18,b	;volatile
  4904                           
  4905                           ; BSR set to: 63
  4906                           ;si.c: 115: SMT1TMRH = 0x00;
  4907  0010BA  0E00               	movlw	0
  4908  0010BC  6F13               	movwf	19,b	;volatile
  4909                           
  4910                           ; BSR set to: 63
  4911                           ;si.c: 116: SMT1TMRU = 0x00;
  4912  0010BE  0E00               	movlw	0
  4913  0010C0  6F14               	movwf	20,b	;volatile
  4914                           
  4915                           ; BSR set to: 63
  4916                           ;si.c: 117: SMT1CON0 = 0x88;
  4917  0010C2  0E88               	movlw	136
  4918  0010C4  6F1E               	movwf	30,b	;volatile
  4919                           
  4920                           ; BSR set to: 63
  4921                           ;si.c: 118: SMT1CON1 = 0x43;
  4922  0010C6  0E43               	movlw	67
  4923  0010C8  6F1F               	movwf	31,b	;volatile
  4924                           
  4925                           ; BSR set to: 63
  4926                           ;si.c: 119: SMT1CLK = 0x01;
  4927  0010CA  0E01               	movlw	1
  4928  0010CC  6F21               	movwf	33,b	;volatile
  4929                           
  4930                           ; BSR set to: 63
  4931                           ;si.c: 120: SMT1WIN = 0x00;
  4932  0010CE  0E00               	movlw	0
  4933  0010D0  6F23               	movwf	35,b	;volatile
  4934                           
  4935                           ; BSR set to: 63
  4936                           ;si.c: 121: SMT1SIG = 0x00;
  4937  0010D2  0E00               	movlw	0
  4938  0010D4  6F22               	movwf	34,b	;volatile
  4939                           
  4940                           ; BSR set to: 63
  4941                           ;si.c: 123: PIR1bits.SMT1PWAIF = 0;
  4942  0010D6  0139               	movlb	57	; () banked
  4943  0010D8  9FA1               	bcf	161,7,b	;volatile
  4944                           
  4945                           ; BSR set to: 57
  4946                           ;si.c: 124: IPR1bits.SMT1PWAIP = 1;
  4947  0010DA  8F81               	bsf	129,7,b	;volatile
  4948                           
  4949                           ; BSR set to: 57
  4950                           ;si.c: 125: PIE1bits.SMT1PWAIE = 1;
  4951  0010DC  8F91               	bsf	145,7,b	;volatile
  4952                           
  4953                           ; BSR set to: 57
  4954                           ;si.c: 126: SMT1CON1bits.GO = 1;
  4955  0010DE  013F               	movlb	63	; () banked
  4956  0010E0  8F1F               	bsf	31,7,b	;volatile
  4957                           
  4958                           ; BSR set to: 63
  4959  0010E2  0012               	return		;funcret
  4960  0010E4                     __end_of_SIInit:
  4961                           	opt callstack 0
  4962                           
  4963 ;; *************** function _SIConfigureCLC *****************
  4964 ;; Defined at:
  4965 ;;		line 129 in file "si.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;		None
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;		None
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  1    wreg      void 
  4972 ;; Registers used:
  4973 ;;		wreg, status,2
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4979 ;;      Params:         0       0       0       0       0       0       0       0       0
  4980 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4981 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4982 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4983 ;;Total ram usage:        0 bytes
  4984 ;; Hardware stack levels used:    1
  4985 ;; Hardware stack levels required when called:    2
  4986 ;; This function calls:
  4987 ;;		Nothing
  4988 ;; This function is called by:
  4989 ;;		_SIInit
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           	psect	text22
  4994  000C6A                     __ptext22:
  4995                           	opt callstack 0
  4996  000C6A                     _SIConfigureCLC:
  4997                           	opt callstack 27
  4998                           
  4999                           ;si.c: 130: T2CON = 0x00;
  5000                           
  5001                           ; BSR set to: 63
  5002                           ;incstack = 0
  5003  000C6A  0E00               	movlw	0
  5004  000C6C  6EAC               	movwf	16300,c	;volatile
  5005                           
  5006                           ;si.c: 131: T2CLKCON = 0x01;
  5007  000C6E  0E01               	movlw	1
  5008  000C70  6EAE               	movwf	16302,c	;volatile
  5009                           
  5010                           ;si.c: 132: T2HLT = 0x04;
  5011  000C72  0E04               	movlw	4
  5012  000C74  6EAD               	movwf	16301,c	;volatile
  5013                           
  5014                           ;si.c: 133: T2RST = 0x12;
  5015  000C76  0E12               	movlw	18
  5016  000C78  6EAF               	movwf	16303,c	;volatile
  5017                           
  5018                           ;si.c: 134: T2PR = 0x1F;
  5019  000C7A  0E1F               	movlw	31
  5020  000C7C  6EAB               	movwf	16299,c	;volatile
  5021                           
  5022                           ;si.c: 135: T2TMR = 0x00;
  5023  000C7E  0E00               	movlw	0
  5024  000C80  6EAA               	movwf	16298,c	;volatile
  5025                           
  5026                           ;si.c: 136: T2CON = 0x80;
  5027  000C82  0E80               	movlw	128
  5028  000C84  6EAC               	movwf	16300,c	;volatile
  5029                           
  5030                           ;si.c: 139: PWM5DCH = 0x0F;
  5031  000C86  0E0F               	movlw	15
  5032  000C88  6E6D               	movwf	16237,c	;volatile
  5033                           
  5034                           ;si.c: 140: PWM5DCL = 0x00;
  5035  000C8A  0E00               	movlw	0
  5036  000C8C  6E6C               	movwf	16236,c	;volatile
  5037                           
  5038                           ;si.c: 141: PWM5CON = 0x80;
  5039  000C8E  0E80               	movlw	128
  5040  000C90  6E6E               	movwf	16238,c	;volatile
  5041                           
  5042                           ;si.c: 143: CLC1POL = 0x00;
  5043  000C92  0E00               	movlw	0
  5044  000C94  013C               	movlb	60	; () banked
  5045  000C96  6F75               	movwf	117,b	;volatile
  5046                           
  5047                           ;si.c: 144: CLC1SEL0 = 0x18;
  5048  000C98  0E18               	movlw	24
  5049  000C9A  6F76               	movwf	118,b	;volatile
  5050                           
  5051                           ;si.c: 145: CLC1SEL1 = 0x05;
  5052  000C9C  0E05               	movlw	5
  5053  000C9E  6F77               	movwf	119,b	;volatile
  5054                           
  5055                           ;si.c: 146: CLC1SEL2 = 0x00;
  5056  000CA0  0E00               	movlw	0
  5057  000CA2  6F78               	movwf	120,b	;volatile
  5058                           
  5059                           ;si.c: 147: CLC1SEL3 = 0x00;
  5060  000CA4  0E00               	movlw	0
  5061  000CA6  6F79               	movwf	121,b	;volatile
  5062                           
  5063                           ;si.c: 148: CLC1GLS0 = 0x08;
  5064  000CA8  0E08               	movlw	8
  5065  000CAA  6F7A               	movwf	122,b	;volatile
  5066                           
  5067                           ;si.c: 149: CLC1GLS1 = 0x02;
  5068  000CAC  0E02               	movlw	2
  5069  000CAE  6F7B               	movwf	123,b	;volatile
  5070                           
  5071                           ;si.c: 150: CLC1GLS2 = 0x00;
  5072  000CB0  0E00               	movlw	0
  5073  000CB2  6F7C               	movwf	124,b	;volatile
  5074                           
  5075                           ;si.c: 151: CLC1GLS3 = 0x00;
  5076  000CB4  0E00               	movlw	0
  5077  000CB6  6F7D               	movwf	125,b	;volatile
  5078                           
  5079                           ;si.c: 152: CLC1CON = 0x84;
  5080  000CB8  0E84               	movlw	132
  5081  000CBA  6F74               	movwf	116,b	;volatile
  5082                           
  5083                           ;si.c: 154: CLC2POL = 0x00;
  5084  000CBC  0E00               	movlw	0
  5085  000CBE  6F6B               	movwf	107,b	;volatile
  5086                           
  5087                           ;si.c: 155: CLC2SEL0 = 0x2C;
  5088  000CC0  0E2C               	movlw	44
  5089  000CC2  6F6C               	movwf	108,b	;volatile
  5090                           
  5091                           ;si.c: 156: CLC2SEL1 = 0x05;
  5092  000CC4  0E05               	movlw	5
  5093  000CC6  6F6D               	movwf	109,b	;volatile
  5094                           
  5095                           ;si.c: 157: CLC2SEL2 = 0x00;
  5096  000CC8  0E00               	movlw	0
  5097  000CCA  6F6E               	movwf	110,b	;volatile
  5098                           
  5099                           ;si.c: 158: CLC2SEL3 = 0x00;
  5100  000CCC  0E00               	movlw	0
  5101  000CCE  6F6F               	movwf	111,b	;volatile
  5102                           
  5103                           ;si.c: 159: CLC2GLS0 = 0x08;
  5104  000CD0  0E08               	movlw	8
  5105  000CD2  6F70               	movwf	112,b	;volatile
  5106                           
  5107                           ;si.c: 160: CLC2GLS1 = 0x01;
  5108  000CD4  0E01               	movlw	1
  5109  000CD6  6F71               	movwf	113,b	;volatile
  5110                           
  5111                           ;si.c: 161: CLC2GLS2 = 0x00;
  5112  000CD8  0E00               	movlw	0
  5113  000CDA  6F72               	movwf	114,b	;volatile
  5114                           
  5115                           ;si.c: 162: CLC2GLS3 = 0x00;
  5116  000CDC  0E00               	movlw	0
  5117  000CDE  6F73               	movwf	115,b	;volatile
  5118                           
  5119                           ;si.c: 163: CLC2CON = 0x84;
  5120  000CE0  0E84               	movlw	132
  5121  000CE2  6F6A               	movwf	106,b	;volatile
  5122                           
  5123                           ;si.c: 165: CLC3POL = 0x00;
  5124  000CE4  0E00               	movlw	0
  5125  000CE6  6F61               	movwf	97,b	;volatile
  5126                           
  5127                           ;si.c: 166: CLC3SEL0 = 0x24;
  5128  000CE8  0E24               	movlw	36
  5129  000CEA  6F62               	movwf	98,b	;volatile
  5130                           
  5131                           ;si.c: 167: CLC3SEL1 = 0x18;
  5132  000CEC  0E18               	movlw	24
  5133  000CEE  6F63               	movwf	99,b	;volatile
  5134                           
  5135                           ;si.c: 168: CLC3SEL2 = 0x2B;
  5136  000CF0  0E2B               	movlw	43
  5137  000CF2  6F64               	movwf	100,b	;volatile
  5138                           
  5139                           ;si.c: 169: CLC3SEL3 = 0x2C;
  5140  000CF4  0E2C               	movlw	44
  5141  000CF6  6F65               	movwf	101,b	;volatile
  5142                           
  5143                           ;si.c: 170: CLC3GLS0 = 0x02;
  5144  000CF8  0E02               	movlw	2
  5145  000CFA  6F66               	movwf	102,b	;volatile
  5146                           
  5147                           ;si.c: 171: CLC3GLS1 = 0x04;
  5148  000CFC  0E04               	movlw	4
  5149  000CFE  6F67               	movwf	103,b	;volatile
  5150                           
  5151                           ;si.c: 172: CLC3GLS2 = 0x90;
  5152  000D00  0E90               	movlw	144
  5153  000D02  6F68               	movwf	104,b	;volatile
  5154                           
  5155                           ;si.c: 173: CLC3GLS3 = 0x60;
  5156  000D04  0E60               	movlw	96
  5157  000D06  6F69               	movwf	105,b	;volatile
  5158                           
  5159                           ;si.c: 174: CLC3CON = 0x82;
  5160  000D08  0E82               	movlw	130
  5161  000D0A  6F60               	movwf	96,b	;volatile
  5162                           
  5163                           ;si.c: 176: CLC4POL = 0x04;
  5164  000D0C  0E04               	movlw	4
  5165  000D0E  6F57               	movwf	87,b	;volatile
  5166                           
  5167                           ;si.c: 177: CLC4SEL0 = 0x26;
  5168  000D10  0E26               	movlw	38
  5169  000D12  6F58               	movwf	88,b	;volatile
  5170                           
  5171                           ;si.c: 178: CLC4SEL1 = 0x2C;
  5172  000D14  0E2C               	movlw	44
  5173  000D16  6F59               	movwf	89,b	;volatile
  5174                           
  5175                           ;si.c: 179: CLC4SEL2 = 0x25;
  5176  000D18  0E25               	movlw	37
  5177  000D1A  6F5A               	movwf	90,b	;volatile
  5178                           
  5179                           ;si.c: 180: CLC4SEL3 = 0x00;
  5180  000D1C  0E00               	movlw	0
  5181  000D1E  6F5B               	movwf	91,b	;volatile
  5182                           
  5183                           ;si.c: 181: CLC4GLS0 = 0x02;
  5184  000D20  0E02               	movlw	2
  5185  000D22  6F5C               	movwf	92,b	;volatile
  5186                           
  5187                           ;si.c: 182: CLC4GLS1 = 0x00;
  5188  000D24  0E00               	movlw	0
  5189  000D26  6F5D               	movwf	93,b	;volatile
  5190                           
  5191                           ;si.c: 183: CLC4GLS2 = 0x14;
  5192  000D28  0E14               	movlw	20
  5193  000D2A  6F5E               	movwf	94,b	;volatile
  5194                           
  5195                           ;si.c: 184: CLC4GLS3 = 0x00;
  5196  000D2C  0E00               	movlw	0
  5197  000D2E  6F5F               	movwf	95,b	;volatile
  5198                           
  5199                           ;si.c: 185: CLC4CON = 0x83;
  5200  000D30  0E83               	movlw	131
  5201  000D32  6F56               	movwf	86,b	;volatile
  5202                           
  5203                           ;si.c: 187: SPI1CLK = 0x05;
  5204  000D34  0E05               	movlw	5
  5205  000D36  013D               	movlb	61	; () banked
  5206  000D38  6F1C               	movwf	28,b	;volatile
  5207                           
  5208                           ;si.c: 188: SPI1BAUD = 0x00;
  5209  000D3A  0E00               	movlw	0
  5210  000D3C  6F19               	movwf	25,b	;volatile
  5211                           
  5212                           ;si.c: 189: SPI1CON1 = 0x00;
  5213  000D3E  0E00               	movlw	0
  5214  000D40  6F15               	movwf	21,b	;volatile
  5215                           
  5216                           ;si.c: 190: SPI1CON2 = 0x02;
  5217  000D42  0E02               	movlw	2
  5218  000D44  6F16               	movwf	22,b	;volatile
  5219                           
  5220                           ;si.c: 191: SPI1CON0 = 0x82;
  5221  000D46  0E82               	movlw	130
  5222  000D48  6F14               	movwf	20,b	;volatile
  5223                           
  5224                           ; BSR set to: 61
  5225  000D4A  0012               	return		;funcret
  5226  000D4C                     __end_of_SIConfigureCLC:
  5227                           	opt callstack 0
  5228                           
  5229 ;; *************** function _SIGetCommand *****************
  5230 ;; Defined at:
  5231 ;;		line 257 in file "si.c"
  5232 ;; Parameters:    Size  Location     Type
  5233 ;;  msg             2    0[COMRAM] PTR unsigned char 
  5234 ;;		 -> main@cmd(36), 
  5235 ;; Auto vars:     Size  Location     Type
  5236 ;;  i               1    2[COMRAM] unsigned char 
  5237 ;; Return value:  Size  Location     Type
  5238 ;;                  1    wreg      unsigned char 
  5239 ;; Registers used:
  5240 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5241 ;; Tracked objects:
  5242 ;;		On entry : 0/0
  5243 ;;		On exit  : 0/0
  5244 ;;		Unchanged: 0/0
  5245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5246 ;;      Params:         2       0       0       0       0       0       0       0       0
  5247 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5248 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5249 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5250 ;;Total ram usage:        3 bytes
  5251 ;; Hardware stack levels used:    1
  5252 ;; Hardware stack levels required when called:    2
  5253 ;; This function calls:
  5254 ;;		Nothing
  5255 ;; This function is called by:
  5256 ;;		_main
  5257 ;; This function uses a non-reentrant model
  5258 ;;
  5259                           
  5260                           	psect	text23
  5261  00151E                     __ptext23:
  5262                           	opt callstack 0
  5263  00151E                     _SIGetCommand:
  5264                           	opt callstack 28
  5265                           
  5266                           ;si.c: 258: uint8_t i;;si.c: 259: if (!SICMDReceived) {
  5267                           
  5268                           ; BSR set to: 61
  5269                           ;incstack = 0
  5270  00151E  503D               	movf	_SICMDReceived,w,c
  5271  001520  A4D8               	btfss	status,2,c
  5272  001522  D002               	goto	l3707
  5273                           
  5274                           ;si.c: 260: return 0;
  5275  001524  0E00               	movlw	0
  5276  001526  0012               	return	
  5277  001528                     l3707:
  5278                           
  5279                           ;si.c: 261: };si.c: 262: for (i = 0; i < SIByteCounter; i++) {
  5280  001528  0E00               	movlw	0
  5281  00152A  6E03               	movwf	SIGetCommand@i,c
  5282  00152C  D010               	goto	l3713
  5283  00152E                     l3709:
  5284                           
  5285                           ;si.c: 263: msg[i] = SIInputMessage[i];
  5286  00152E  0E00               	movlw	low _SIInputMessage
  5287  001530  2403               	addwf	SIGetCommand@i,w,c
  5288  001532  6ED9               	movwf	fsr2l,c
  5289  001534  6ADA               	clrf	fsr2h,c
  5290  001536  0E01               	movlw	high _SIInputMessage
  5291  001538  22DA               	addwfc	fsr2h,f,c
  5292  00153A  5003               	movf	SIGetCommand@i,w,c
  5293  00153C  2401               	addwf	SIGetCommand@msg,w,c
  5294  00153E  6EE1               	movwf	fsr1l,c
  5295  001540  0E00               	movlw	0
  5296  001542  2002               	addwfc	SIGetCommand@msg+1,w,c
  5297  001544  6EE2               	movwf	fsr1h,c
  5298  001546  006F FF7F FFE7     	movff	indf2,indf1
  5299  00154C  2A03               	incf	SIGetCommand@i,f,c
  5300  00154E                     l3713:
  5301  00154E  503E               	movf	_SIByteCounter,w,c
  5302  001550  5C03               	subwf	SIGetCommand@i,w,c
  5303  001552  A0D8               	btfss	status,0,c
  5304  001554  D7EC               	goto	l3709
  5305                           
  5306                           ;si.c: 264: };si.c: 266: return SIByteCounter;
  5307  001556  503E               	movf	_SIByteCounter,w,c
  5308  001558  0012               	return		;funcret
  5309  00155A                     __end_of_SIGetCommand:
  5310                           	opt callstack 0
  5311                           
  5312 ;; *************** function _SIClear *****************
  5313 ;; Defined at:
  5314 ;;		line 283 in file "si.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;		None
  5317 ;; Auto vars:     Size  Location     Type
  5318 ;;		None
  5319 ;; Return value:  Size  Location     Type
  5320 ;;                  1    wreg      void 
  5321 ;; Registers used:
  5322 ;;		wreg, status,2
  5323 ;; Tracked objects:
  5324 ;;		On entry : 0/0
  5325 ;;		On exit  : 0/0
  5326 ;;		Unchanged: 0/0
  5327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5328 ;;      Params:         0       0       0       0       0       0       0       0       0
  5329 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5330 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5331 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5332 ;;Total ram usage:        0 bytes
  5333 ;; Hardware stack levels used:    1
  5334 ;; Hardware stack levels required when called:    2
  5335 ;; This function calls:
  5336 ;;		Nothing
  5337 ;; This function is called by:
  5338 ;;		_main
  5339 ;; This function uses a non-reentrant model
  5340 ;;
  5341                           
  5342                           	psect	text24
  5343  0016E2                     __ptext24:
  5344                           	opt callstack 0
  5345  0016E2                     _SIClear:
  5346                           	opt callstack 28
  5347                           
  5348                           ;si.c: 285: SIBitCounter = 0;
  5349                           
  5350                           ;incstack = 0
  5351  0016E2  0E00               	movlw	0
  5352  0016E4  6E3F               	movwf	_SIBitCounter,c
  5353                           
  5354                           ;si.c: 286: SIByteCounter = 0;
  5355  0016E6  0E00               	movlw	0
  5356  0016E8  6E3E               	movwf	_SIByteCounter,c
  5357                           
  5358                           ;si.c: 287: SICMDReceived = 0;
  5359  0016EA  0E00               	movlw	0
  5360  0016EC  6E3D               	movwf	_SICMDReceived,c
  5361                           
  5362                           ;si.c: 288: SITempByte = 0x00;
  5363  0016EE  0E00               	movlw	0
  5364  0016F0  6E3C               	movwf	_SITempByte,c
  5365  0016F2  0012               	return		;funcret
  5366  0016F4                     __end_of_SIClear:
  5367                           	opt callstack 0
  5368                           
  5369 ;; *************** function _PGMWriteBlock *****************
  5370 ;; Defined at:
  5371 ;;		line 55 in file "nvm.c"
  5372 ;; Parameters:    Size  Location     Type
  5373 ;;  addr            2    4[COMRAM] unsigned int 
  5374 ;;  data            2    6[COMRAM] PTR unsigned char 
  5375 ;;		 -> main@flashBuffer(64), 
  5376 ;; Auto vars:     Size  Location     Type
  5377 ;;  i               2   10[COMRAM] unsigned int 
  5378 ;; Return value:  Size  Location     Type
  5379 ;;                  1    wreg      void 
  5380 ;; Registers used:
  5381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5382 ;; Tracked objects:
  5383 ;;		On entry : 0/0
  5384 ;;		On exit  : 0/0
  5385 ;;		Unchanged: 0/0
  5386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5387 ;;      Params:         4       0       0       0       0       0       0       0       0
  5388 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5389 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5390 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5391 ;;Total ram usage:        8 bytes
  5392 ;; Hardware stack levels used:    1
  5393 ;; Hardware stack levels required when called:    4
  5394 ;; This function calls:
  5395 ;;		_NVMUnlock
  5396 ;;		_PGMEraseRow
  5397 ;; This function is called by:
  5398 ;;		_main
  5399 ;; This function uses a non-reentrant model
  5400 ;;
  5401                           
  5402                           	psect	text25
  5403  00116C                     __ptext25:
  5404                           	opt callstack 0
  5405  00116C                     _PGMWriteBlock:
  5406                           	opt callstack 26
  5407                           
  5408                           ;nvm.c: 56: if (addr & 63)
  5409                           
  5410                           ;incstack = 0
  5411  00116C  0E3F               	movlw	63
  5412  00116E  1405               	andwf	PGMWriteBlock@addr,w,c
  5413  001170  6E09               	movwf	??_PGMWriteBlock& (0+255),c
  5414  001172  0E00               	movlw	0
  5415  001174  1406               	andwf	PGMWriteBlock@addr+1,w,c
  5416  001176  6E0A               	movwf	(??_PGMWriteBlock+1)& (0+255),c
  5417  001178  5009               	movf	??_PGMWriteBlock,w,c
  5418  00117A  100A               	iorwf	??_PGMWriteBlock+1,w,c
  5419  00117C  A4D8               	btfss	status,2,c
  5420  00117E  0012               	return	
  5421                           
  5422                           ;nvm.c: 58: if (addr < 0x2000 || (addr + 64) > 0x8000)
  5423  001180  0E20               	movlw	32
  5424  001182  5C06               	subwf	PGMWriteBlock@addr+1,w,c
  5425  001184  A0D8               	btfss	status,0,c
  5426  001186  0012               	return	
  5427  001188  0E40               	movlw	64
  5428  00118A  2405               	addwf	PGMWriteBlock@addr,w,c
  5429  00118C  6E09               	movwf	??_PGMWriteBlock& (0+255),c
  5430  00118E  0E00               	movlw	0
  5431  001190  2006               	addwfc	PGMWriteBlock@addr+1,w,c
  5432  001192  6E0A               	movwf	(??_PGMWriteBlock+1)& (0+255),c
  5433  001194  0409               	decf	??_PGMWriteBlock,w,c
  5434  001196  0E80               	movlw	128
  5435  001198  580A               	subwfb	??_PGMWriteBlock+1,w,c
  5436  00119A  B0D8               	btfsc	status,0,c
  5437  00119C  0012               	return	
  5438                           
  5439                           ;nvm.c: 61: uint16_t i;;nvm.c: 70: PGMEraseRow(addr);
  5440  00119E  0060  F014  F001   	movff	PGMWriteBlock@addr,PGMEraseRow@addr
  5441  0011A4  0060  F018  F002   	movff	PGMWriteBlock@addr+1,PGMEraseRow@addr+1
  5442  0011AA  EC41  F00A         	call	_PGMEraseRow	;wreg free
  5443  0011AE  000A               	tblrd		*-	;# 
  5444                           
  5445                           ;nvm.c: 74: for (i = 0; i < 64; i++) {
  5446  0011B0  0E00               	movlw	0
  5447  0011B2  6E0C               	movwf	PGMWriteBlock@i+1,c
  5448  0011B4  0E00               	movlw	0
  5449  0011B6  6E0B               	movwf	PGMWriteBlock@i,c
  5450  0011B8                     l3875:
  5451                           
  5452                           ;nvm.c: 75: TABLAT = data[i];
  5453  0011B8  500B               	movf	PGMWriteBlock@i,w,c
  5454  0011BA  2407               	addwf	PGMWriteBlock@data,w,c
  5455  0011BC  6ED9               	movwf	fsr2l,c
  5456  0011BE  500C               	movf	PGMWriteBlock@i+1,w,c
  5457  0011C0  2008               	addwfc	PGMWriteBlock@data+1,w,c
  5458  0011C2  6EDA               	movwf	fsr2h,c
  5459  0011C4  50DF               	movf	indf2,w,c
  5460  0011C6  6EF5               	movwf	tablat,c	;volatile
  5461  0011C8  000F               	tblwt		+*	;# 
  5462  0011CA  4A0B               	infsnz	PGMWriteBlock@i,f,c
  5463  0011CC  2A0C               	incf	PGMWriteBlock@i+1,f,c
  5464  0011CE  500C               	movf	PGMWriteBlock@i+1,w,c
  5465  0011D0  E104               	bnz	u3100
  5466  0011D2  0E40               	movlw	64
  5467  0011D4  5C0B               	subwf	PGMWriteBlock@i,w,c
  5468  0011D6  A0D8               	btfss	status,0,c
  5469  0011D8  D7EF               	goto	l3875
  5470  0011DA                     u3100:
  5471                           
  5472                           ;nvm.c: 77: };nvm.c: 79: NVMCON1bits.REG0 = 0;
  5473  0011DA  0139               	movlb	57	; () banked
  5474  0011DC  9DE5               	bcf	229,6,b	;volsfr
  5475                           
  5476                           ;nvm.c: 80: NVMCON1bits.REG1 = 1;
  5477  0011DE  8FE5               	bsf	229,7,b	;volsfr
  5478                           
  5479                           ;nvm.c: 81: NVMCON1bits.WREN = 1;
  5480  0011E0  85E5               	bsf	229,2,b	;volsfr
  5481                           
  5482                           ;nvm.c: 82: NVMCON1bits.FREE = 0;
  5483  0011E2  99E5               	bcf	229,4,b	;volsfr
  5484                           
  5485                           ; BSR set to: 57
  5486                           ;nvm.c: 84: NVMUnlock();
  5487  0011E4  EC7A  F00B         	call	_NVMUnlock	;wreg free
  5488                           
  5489                           ;nvm.c: 86: NVMCON1bits.WREN = 0;
  5490  0011E8  0139               	movlb	57	; () banked
  5491  0011EA  95E5               	bcf	229,2,b	;volsfr
  5492  0011EC  0012               	return		;funcret
  5493  0011EE                     __end_of_PGMWriteBlock:
  5494                           	opt callstack 0
  5495                           
  5496 ;; *************** function _PGMEraseRow *****************
  5497 ;; Defined at:
  5498 ;;		line 37 in file "nvm.c"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;  addr            2    0[COMRAM] unsigned int 
  5501 ;; Auto vars:     Size  Location     Type
  5502 ;;		None
  5503 ;; Return value:  Size  Location     Type
  5504 ;;                  1    wreg      void 
  5505 ;; Registers used:
  5506 ;;		wreg, status,2, status,0, cstack
  5507 ;; Tracked objects:
  5508 ;;		On entry : 0/0
  5509 ;;		On exit  : 0/0
  5510 ;;		Unchanged: 0/0
  5511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5512 ;;      Params:         2       0       0       0       0       0       0       0       0
  5513 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5514 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5515 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5516 ;;Total ram usage:        4 bytes
  5517 ;; Hardware stack levels used:    1
  5518 ;; Hardware stack levels required when called:    3
  5519 ;; This function calls:
  5520 ;;		_NVMUnlock
  5521 ;; This function is called by:
  5522 ;;		_PGMWriteBlock
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           	psect	text26
  5527  001482                     __ptext26:
  5528                           	opt callstack 0
  5529  001482                     _PGMEraseRow:
  5530                           	opt callstack 26
  5531                           
  5532                           ;nvm.c: 38: if (addr & 63)
  5533                           
  5534                           ;incstack = 0
  5535  001482  0E3F               	movlw	63
  5536  001484  1401               	andwf	PGMEraseRow@addr,w,c
  5537  001486  6E03               	movwf	??_PGMEraseRow& (0+255),c
  5538  001488  0E00               	movlw	0
  5539  00148A  1402               	andwf	PGMEraseRow@addr+1,w,c
  5540  00148C  6E04               	movwf	(??_PGMEraseRow+1)& (0+255),c
  5541  00148E  5003               	movf	??_PGMEraseRow,w,c
  5542  001490  1004               	iorwf	??_PGMEraseRow+1,w,c
  5543  001492  A4D8               	btfss	status,2,c
  5544  001494  0012               	return	
  5545                           
  5546                           ;nvm.c: 40: if (addr < 0x2000 || (addr + 64) > 0x8000)
  5547  001496  0E20               	movlw	32
  5548  001498  5C02               	subwf	PGMEraseRow@addr+1,w,c
  5549  00149A  A0D8               	btfss	status,0,c
  5550  00149C  0012               	return	
  5551  00149E  0E40               	movlw	64
  5552  0014A0  2401               	addwf	PGMEraseRow@addr,w,c
  5553  0014A2  6E03               	movwf	??_PGMEraseRow& (0+255),c
  5554  0014A4  0E00               	movlw	0
  5555  0014A6  2002               	addwfc	PGMEraseRow@addr+1,w,c
  5556  0014A8  6E04               	movwf	(??_PGMEraseRow+1)& (0+255),c
  5557  0014AA  0403               	decf	??_PGMEraseRow,w,c
  5558  0014AC  0E80               	movlw	128
  5559  0014AE  5804               	subwfb	??_PGMEraseRow+1,w,c
  5560  0014B0  B0D8               	btfsc	status,0,c
  5561  0014B2  0012               	return	
  5562                           
  5563                           ;nvm.c: 43: NVMCON1 = 0;
  5564  0014B4  0E00               	movlw	0
  5565  0014B6  0139               	movlb	57	; () banked
  5566  0014B8  6FE5               	movwf	229,b	;volsfr
  5567                           
  5568                           ;nvm.c: 44: TBLPTRU = 0;
  5569  0014BA  0E00               	movlw	0
  5570  0014BC  6EF8               	movwf	tblptru,c	;volatile
  5571                           
  5572                           ;nvm.c: 45: TBLPTRH = (addr >> 8) & 0xFF;
  5573  0014BE  5002               	movf	PGMEraseRow@addr+1,w,c
  5574  0014C0  6EF7               	movwf	tblptrh,c	;volatile
  5575                           
  5576                           ; BSR set to: 57
  5577                           ;nvm.c: 46: TBLPTRL = addr & 0xFF;
  5578  0014C2  0060  F007  FFF6   	movff	PGMEraseRow@addr,tblptrl	;volatile
  5579                           
  5580                           ; BSR set to: 57
  5581                           ;nvm.c: 47: NVMCON1bits.REG0 = 0;
  5582  0014C8  9DE5               	bcf	229,6,b	;volsfr
  5583                           
  5584                           ; BSR set to: 57
  5585                           ;nvm.c: 48: NVMCON1bits.REG1 = 1;
  5586  0014CA  8FE5               	bsf	229,7,b	;volsfr
  5587                           
  5588                           ; BSR set to: 57
  5589                           ;nvm.c: 49: NVMCON1bits.FREE = 1;
  5590  0014CC  89E5               	bsf	229,4,b	;volsfr
  5591                           
  5592                           ; BSR set to: 57
  5593                           ;nvm.c: 50: NVMCON1bits.WREN = 1;
  5594  0014CE  85E5               	bsf	229,2,b	;volsfr
  5595                           
  5596                           ; BSR set to: 57
  5597                           ;nvm.c: 51: NVMUnlock();
  5598  0014D0  EC7A  F00B         	call	_NVMUnlock	;wreg free
  5599                           
  5600                           ;nvm.c: 52: NVMCON1bits.WREN = 0;
  5601  0014D4  0139               	movlb	57	; () banked
  5602  0014D6  95E5               	bcf	229,2,b	;volsfr
  5603  0014D8  0012               	return		;funcret
  5604  0014DA                     __end_of_PGMEraseRow:
  5605                           	opt callstack 0
  5606                           
  5607 ;; *************** function _NVMUnlock *****************
  5608 ;; Defined at:
  5609 ;;		line 29 in file "nvm.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;		None
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;		None
  5614 ;; Return value:  Size  Location     Type
  5615 ;;                  1    wreg      void 
  5616 ;; Registers used:
  5617 ;;		wreg, status,2
  5618 ;; Tracked objects:
  5619 ;;		On entry : 0/0
  5620 ;;		On exit  : 0/0
  5621 ;;		Unchanged: 0/0
  5622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5623 ;;      Params:         0       0       0       0       0       0       0       0       0
  5624 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5625 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5626 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5627 ;;Total ram usage:        0 bytes
  5628 ;; Hardware stack levels used:    1
  5629 ;; Hardware stack levels required when called:    2
  5630 ;; This function calls:
  5631 ;;		Nothing
  5632 ;; This function is called by:
  5633 ;;		_PGMEraseRow
  5634 ;;		_PGMWriteBlock
  5635 ;;		_EEPROMWriteByte
  5636 ;; This function uses a non-reentrant model
  5637 ;;
  5638                           
  5639                           	psect	text27
  5640  0016F4                     __ptext27:
  5641                           	opt callstack 0
  5642  0016F4                     _NVMUnlock:
  5643                           	opt callstack 25
  5644                           
  5645                           ;nvm.c: 30: INTCON0bits.GIE = 0;
  5646                           
  5647                           ;incstack = 0
  5648  0016F4  9ED2               	bcf	16338,7,c	;volatile
  5649                           
  5650                           ;nvm.c: 31: NVMCON2 = 0x55;
  5651  0016F6  0E55               	movlw	85
  5652  0016F8  0139               	movlb	57	; () banked
  5653  0016FA  6FE6               	movwf	230,b	;volsfr
  5654                           
  5655                           ;nvm.c: 32: NVMCON2 = 0xAA;
  5656  0016FC  0EAA               	movlw	170
  5657  0016FE  6FE6               	movwf	230,b	;volsfr
  5658                           
  5659                           ; BSR set to: 57
  5660                           ;nvm.c: 33: NVMCON1bits.WR = 1;
  5661  001700  83E5               	bsf	229,1,b	;volsfr
  5662                           
  5663                           ; BSR set to: 57
  5664                           ;nvm.c: 34: INTCON0bits.GIE = 1;
  5665  001702  8ED2               	bsf	16338,7,c	;volatile
  5666                           
  5667                           ; BSR set to: 57
  5668  001704  0012               	return		;funcret
  5669  001706                     __end_of_NVMUnlock:
  5670                           	opt callstack 0
  5671                           
  5672 ;; *************** function _PGMReadBlock *****************
  5673 ;; Defined at:
  5674 ;;		line 89 in file "nvm.c"
  5675 ;; Parameters:    Size  Location     Type
  5676 ;;  addr            2    0[COMRAM] unsigned int 
  5677 ;;  data            2    2[COMRAM] PTR unsigned char 
  5678 ;;		 -> main@flashBuffer(64), 
  5679 ;; Auto vars:     Size  Location     Type
  5680 ;;  i               2    6[COMRAM] unsigned int 
  5681 ;; Return value:  Size  Location     Type
  5682 ;;                  1    wreg      void 
  5683 ;; Registers used:
  5684 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5685 ;; Tracked objects:
  5686 ;;		On entry : 0/0
  5687 ;;		On exit  : 0/0
  5688 ;;		Unchanged: 0/0
  5689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5690 ;;      Params:         4       0       0       0       0       0       0       0       0
  5691 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5692 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5693 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5694 ;;Total ram usage:        8 bytes
  5695 ;; Hardware stack levels used:    1
  5696 ;; Hardware stack levels required when called:    2
  5697 ;; This function calls:
  5698 ;;		Nothing
  5699 ;; This function is called by:
  5700 ;;		_main
  5701 ;; This function uses a non-reentrant model
  5702 ;;
  5703                           
  5704                           	psect	text28
  5705  0012E4                     __ptext28:
  5706                           	opt callstack 0
  5707  0012E4                     _PGMReadBlock:
  5708                           	opt callstack 28
  5709                           
  5710                           ;nvm.c: 90: if (addr & 63)
  5711                           
  5712                           ; BSR set to: 57
  5713                           ;incstack = 0
  5714  0012E4  0E3F               	movlw	63
  5715  0012E6  1401               	andwf	PGMReadBlock@addr,w,c
  5716  0012E8  6E05               	movwf	??_PGMReadBlock& (0+255),c
  5717  0012EA  0E00               	movlw	0
  5718  0012EC  1402               	andwf	PGMReadBlock@addr+1,w,c
  5719  0012EE  6E06               	movwf	(??_PGMReadBlock+1)& (0+255),c
  5720  0012F0  5005               	movf	??_PGMReadBlock,w,c
  5721  0012F2  1006               	iorwf	??_PGMReadBlock+1,w,c
  5722  0012F4  A4D8               	btfss	status,2,c
  5723  0012F6  0012               	return	
  5724                           
  5725                           ;nvm.c: 92: if (addr < 0x2000 || (addr + 64) > 0x8000)
  5726  0012F8  0E20               	movlw	32
  5727  0012FA  5C02               	subwf	PGMReadBlock@addr+1,w,c
  5728  0012FC  A0D8               	btfss	status,0,c
  5729  0012FE  0012               	return	
  5730  001300  0E40               	movlw	64
  5731  001302  2401               	addwf	PGMReadBlock@addr,w,c
  5732  001304  6E05               	movwf	??_PGMReadBlock& (0+255),c
  5733  001306  0E00               	movlw	0
  5734  001308  2002               	addwfc	PGMReadBlock@addr+1,w,c
  5735  00130A  6E06               	movwf	(??_PGMReadBlock+1)& (0+255),c
  5736  00130C  0405               	decf	??_PGMReadBlock,w,c
  5737  00130E  0E80               	movlw	128
  5738  001310  5806               	subwfb	??_PGMReadBlock+1,w,c
  5739  001312  B0D8               	btfsc	status,0,c
  5740  001314  0012               	return	
  5741                           
  5742                           ;nvm.c: 95: uint16_t i;;nvm.c: 98: TBLPTRU = 0;
  5743  001316  0E00               	movlw	0
  5744  001318  6EF8               	movwf	tblptru,c	;volatile
  5745                           
  5746                           ;nvm.c: 99: TBLPTRH = (addr >> 8) & 0xFF;
  5747  00131A  5002               	movf	PGMReadBlock@addr+1,w,c
  5748  00131C  6EF7               	movwf	tblptrh,c	;volatile
  5749                           
  5750                           ;nvm.c: 100: TBLPTRL = addr & 0xFF;
  5751  00131E  0060  F007  FFF6   	movff	PGMReadBlock@addr,tblptrl	;volatile
  5752                           
  5753                           ;nvm.c: 103: NVMCON1bits.REG0 = 0;
  5754  001324  0139               	movlb	57	; () banked
  5755  001326  9DE5               	bcf	229,6,b	;volsfr
  5756                           
  5757                           ; BSR set to: 57
  5758                           ;nvm.c: 104: NVMCON1bits.REG1 = 1;
  5759  001328  8FE5               	bsf	229,7,b	;volsfr
  5760                           
  5761                           ;nvm.c: 107: for (i = 0; i < 64; i++) {
  5762  00132A  0E00               	movlw	0
  5763  00132C  6E08               	movwf	PGMReadBlock@i+1,c
  5764  00132E  0E00               	movlw	0
  5765  001330  6E07               	movwf	PGMReadBlock@i,c
  5766  001332                     l313:
  5767  001332  0009               	tblrd		*+	;# 
  5768                           
  5769                           ;nvm.c: 109: data[i] = TABLAT;
  5770  001334  5007               	movf	PGMReadBlock@i,w,c
  5771  001336  2403               	addwf	PGMReadBlock@data,w,c
  5772  001338  6ED9               	movwf	fsr2l,c
  5773  00133A  5008               	movf	PGMReadBlock@i+1,w,c
  5774  00133C  2004               	addwfc	PGMReadBlock@data+1,w,c
  5775  00133E  6EDA               	movwf	fsr2h,c
  5776  001340  006F FFD7 FFDF     	movff	tablat,indf2	;volatile
  5777  001346  4A07               	infsnz	PGMReadBlock@i,f,c
  5778  001348  2A08               	incf	PGMReadBlock@i+1,f,c
  5779  00134A  5008               	movf	PGMReadBlock@i+1,w,c
  5780  00134C  E105               	bnz	u2110
  5781  00134E  0E40               	movlw	64
  5782  001350  5C07               	subwf	PGMReadBlock@i,w,c
  5783  001352  B0D8               	btfsc	status,0,c
  5784  001354  0012               	return	
  5785  001356  D7ED               	goto	l313
  5786  001358                     u2110:
  5787  001358  0012               	return		;funcret
  5788  00135A                     __end_of_PGMReadBlock:
  5789                           	opt callstack 0
  5790                           
  5791 ;; *************** function _ADCInit *****************
  5792 ;; Defined at:
  5793 ;;		line 41 in file "adc.c"
  5794 ;; Parameters:    Size  Location     Type
  5795 ;;  sxCh            1    wreg     unsigned char 
  5796 ;;  syCh            1    0[COMRAM] unsigned char 
  5797 ;;  cxCh            1    1[COMRAM] unsigned char 
  5798 ;;  cyCh            1    2[COMRAM] unsigned char 
  5799 ;; Auto vars:     Size  Location     Type
  5800 ;;  sxCh            1    7[COMRAM] unsigned char 
  5801 ;;  i               1    8[COMRAM] unsigned char 
  5802 ;; Return value:  Size  Location     Type
  5803 ;;                  1    wreg      void 
  5804 ;; Registers used:
  5805 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5806 ;; Tracked objects:
  5807 ;;		On entry : 0/0
  5808 ;;		On exit  : 0/0
  5809 ;;		Unchanged: 0/0
  5810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5811 ;;      Params:         3       0       0       0       0       0       0       0       0
  5812 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5813 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5814 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5815 ;;Total ram usage:        9 bytes
  5816 ;; Hardware stack levels used:    1
  5817 ;; Hardware stack levels required when called:    2
  5818 ;; This function calls:
  5819 ;;		Nothing
  5820 ;; This function is called by:
  5821 ;;		_main
  5822 ;; This function uses a non-reentrant model
  5823 ;;
  5824                           
  5825                           	psect	text29
  5826  000900                     __ptext29:
  5827                           	opt callstack 0
  5828  000900                     _ADCInit:
  5829                           	opt callstack 28
  5830                           
  5831                           ;incstack = 0
  5832                           ;ADCInit@sxCh stored from wreg
  5833  000900  6E08               	movwf	ADCInit@sxCh,c
  5834                           
  5835                           ;adc.c: 42: uint8_t i;;adc.c: 45: ADCON0 = 0x80;
  5836  000902  0E80               	movlw	128
  5837  000904  013E               	movlb	62	; () banked
  5838  000906  6FF8               	movwf	248,b	;volatile
  5839                           
  5840                           ;adc.c: 47: ADCON1 = 0x00;
  5841  000908  0E00               	movlw	0
  5842  00090A  6FF9               	movwf	249,b	;volatile
  5843                           
  5844                           ;adc.c: 48: ADCON2 = 0x03;
  5845  00090C  0E03               	movlw	3
  5846  00090E  6FFA               	movwf	250,b	;volatile
  5847                           
  5848                           ; BSR set to: 62
  5849                           ;adc.c: 49: ADCON2bits.CRS = 6;
  5850  000910  51FA               	movf	250,w,b	;volatile
  5851  000912  0B8F               	andlw	-113
  5852  000914  0960               	iorlw	96
  5853  000916  6FFA               	movwf	250,b	;volatile
  5854                           
  5855                           ; BSR set to: 62
  5856                           ;adc.c: 50: ADCON3 = 0x07;
  5857  000918  0E07               	movlw	7
  5858  00091A  6FFB               	movwf	251,b	;volatile
  5859                           
  5860                           ; BSR set to: 62
  5861                           ;adc.c: 51: ADCLK = 0x3F;
  5862  00091C  0E3F               	movlw	63
  5863  00091E  6FFF               	movwf	255,b	;volatile
  5864                           
  5865                           ; BSR set to: 62
  5866                           ;adc.c: 52: ADREF = 0x00;
  5867  000920  0E00               	movlw	0
  5868  000922  6FFD               	movwf	253,b	;volatile
  5869                           
  5870                           ; BSR set to: 62
  5871                           ;adc.c: 53: ADACQL = 0xFF;
  5872  000924  69F3               	setf	243,b	;volatile
  5873                           
  5874                           ; BSR set to: 62
  5875                           ;adc.c: 55: ADRPT = 4;
  5876  000926  0E04               	movlw	4
  5877  000928  6FEC               	movwf	236,b	;volatile
  5878                           
  5879                           ; BSR set to: 62
  5880                           ;adc.c: 56: ADACT = 0x1D;
  5881  00092A  0E1D               	movlw	29
  5882  00092C  6FFE               	movwf	254,b	;volatile
  5883                           
  5884                           ; BSR set to: 62
  5885                           ;adc.c: 59: ADCPbits.CPON = 1;
  5886  00092E  8FD7               	bsf	215,7,b	;volatile
  5887  000930                     l408:
  5888                           
  5889                           ; BSR set to: 62
  5890  000930  A1D7               	btfss	215,0,b	;volatile
  5891  000932  D7FE               	goto	l408
  5892                           
  5893                           ; BSR set to: 62
  5894                           ;adc.c: 62: ADCChannels[0] = sxCh;
  5895  000934  0060  F020  F04F   	movff	ADCInit@sxCh,_ADCChannels
  5896                           
  5897                           ;adc.c: 63: ADCChannels[1] = syCh;
  5898  00093A  0060  F004  F050   	movff	ADCInit@syCh,_ADCChannels+1
  5899                           
  5900                           ;adc.c: 64: ADCChannels[2] = cxCh;
  5901  000940  0060  F008  F051   	movff	ADCInit@cxCh,_ADCChannels+2
  5902                           
  5903                           ;adc.c: 65: ADCChannels[3] = cyCh;
  5904  000946  0060  F00C  F052   	movff	ADCInit@cyCh,_ADCChannels+3
  5905                           
  5906                           ;adc.c: 68: ADTIF = 0;
  5907  00094C  0139               	movlb	57	; () banked
  5908  00094E  97A1               	bcf	161,3,b	;volatile
  5909                           
  5910                           ; BSR set to: 57
  5911                           ;adc.c: 69: for (i = 0; i < 6; i++) {
  5912  000950  0E00               	movlw	0
  5913  000952  6E09               	movwf	ADCInit@i,c
  5914  000954                     l3283:
  5915                           
  5916                           ; BSR set to: 57
  5917                           ;adc.c: 70: ADPCH = ADCChannels[i];
  5918  000954  0E4F               	movlw	low _ADCChannels
  5919  000956  2409               	addwf	ADCInit@i,w,c
  5920  000958  6ED9               	movwf	fsr2l,c
  5921  00095A  6ADA               	clrf	fsr2h,c
  5922  00095C  0E00               	movlw	high _ADCChannels
  5923  00095E  22DA               	addwfc	fsr2h,f,c
  5924  000960  50DF               	movf	indf2,w,c
  5925  000962  013E               	movlb	62	; () banked
  5926  000964  6FF1               	movwf	241,b	;volatile
  5927  000966                     l413:
  5928  000966  0139               	movlb	57	; () banked
  5929  000968  A7A1               	btfss	161,3,b	;volatile
  5930  00096A  D7FD               	goto	l413
  5931                           
  5932                           ; BSR set to: 57
  5933                           ;adc.c: 72: ADTIF = 0;
  5934  00096C  97A1               	bcf	161,3,b	;volatile
  5935                           
  5936                           ; BSR set to: 57
  5937                           ;adc.c: 73: ADCValues[i] = ADFLTRL;
  5938  00096E  0E49               	movlw	low _ADCValues
  5939  000970  2409               	addwf	ADCInit@i,w,c
  5940  000972  6ED9               	movwf	fsr2l,c
  5941  000974  6ADA               	clrf	fsr2h,c
  5942  000976  0E00               	movlw	high _ADCValues
  5943  000978  22DA               	addwfc	fsr2h,f,c
  5944  00097A  006F FB9B FFDF     	movff	16102,indf2	;volatile
  5945                           
  5946                           ; BSR set to: 57
  5947  000980  2A09               	incf	ADCInit@i,f,c
  5948                           
  5949                           ; BSR set to: 57
  5950  000982  0E05               	movlw	5
  5951  000984  6409               	cpfsgt	ADCInit@i,c
  5952  000986  D7E6               	goto	l3283
  5953                           
  5954                           ; BSR set to: 57
  5955  000988  0139               	banksel	14831	;# 
  5956  00098A  0E55               	movlw	85	;# 
  5957  00098C  6FEF               	movwf	14831,b	;# 
  5958  00098E  0EAA               	movlw	170	;# 
  5959  000990  6FEF               	movwf	14831,b	;# 
  5960  000992  81EF               	bsf	14831,0,b	;# 
  5961                           
  5962                           ;adc.c: 85: DMA1SSAU = ((uint32_t)ADCChannels >> 16) & 0xFF;
  5963  000994  0E4F               	movlw	low _ADCChannels
  5964  000996  6E04               	movwf	??_ADCInit& (0+255),c
  5965  000998  0E00               	movlw	high _ADCChannels
  5966  00099A  6E05               	movwf	(??_ADCInit+1)& (0+255),c
  5967  00099C  6A06               	clrf	(??_ADCInit+2)& (0+255),c
  5968  00099E  6A07               	clrf	(??_ADCInit+3)& (0+255),c
  5969  0009A0  0E11               	movlw	17
  5970  0009A2  D005               	goto	u2180
  5971  0009A4                     u2185:
  5972  0009A4  90D8               	bcf	status,0,c
  5973  0009A6  3207               	rrcf	??_ADCInit+3,f,c
  5974  0009A8  3206               	rrcf	??_ADCInit+2,f,c
  5975  0009AA  3205               	rrcf	??_ADCInit+1,f,c
  5976  0009AC  3204               	rrcf	??_ADCInit,f,c
  5977  0009AE                     u2180:
  5978  0009AE  2EE8               	decfsz	wreg,f,c
  5979  0009B0  D7F9               	goto	u2185
  5980  0009B2  5004               	movf	??_ADCInit,w,c
  5981  0009B4  013B               	movlb	59	; () banked
  5982  0009B6  6FFB               	movwf	251,b	;volatile
  5983                           
  5984                           ;adc.c: 86: DMA1SSAH = ((uint32_t)ADCChannels >> 8) & 0xFF;
  5985  0009B8  0E4F               	movlw	low _ADCChannels
  5986  0009BA  6E04               	movwf	??_ADCInit& (0+255),c
  5987  0009BC  0E00               	movlw	high _ADCChannels
  5988  0009BE  6E05               	movwf	(??_ADCInit+1)& (0+255),c
  5989  0009C0  6A06               	clrf	(??_ADCInit+2)& (0+255),c
  5990  0009C2  6A07               	clrf	(??_ADCInit+3)& (0+255),c
  5991  0009C4  0060  F014  F004   	movff	??_ADCInit+1,??_ADCInit
  5992  0009CA  0060  F018  F005   	movff	??_ADCInit+2,??_ADCInit+1
  5993  0009D0  0060  F01C  F006   	movff	??_ADCInit+3,??_ADCInit+2
  5994  0009D6  6A07               	clrf	??_ADCInit+3,c
  5995  0009D8  5004               	movf	??_ADCInit,w,c
  5996  0009DA  6FFA               	movwf	250,b	;volatile
  5997                           
  5998                           ; BSR set to: 59
  5999                           ;adc.c: 87: DMA1SSAL = ((uint32_t)ADCChannels) & 0xFF;
  6000  0009DC  0E4F               	movlw	low (low _ADCChannels)
  6001  0009DE  6FF9               	movwf	249,b	;volatile
  6002                           
  6003                           ; BSR set to: 59
  6004                           ;adc.c: 88: DMA1DSAH = ((uint32_t)&ADPCH >> 8) & 0xFF;
  6005  0009E0  0EF1               	movlw	241
  6006  0009E2  6E04               	movwf	??_ADCInit& (0+255),c
  6007  0009E4  0E3E               	movlw	62
  6008  0009E6  6E05               	movwf	(??_ADCInit+1)& (0+255),c
  6009  0009E8  6A06               	clrf	(??_ADCInit+2)& (0+255),c
  6010  0009EA  6A07               	clrf	(??_ADCInit+3)& (0+255),c
  6011  0009EC  0060  F014  F004   	movff	??_ADCInit+1,??_ADCInit
  6012  0009F2  0060  F018  F005   	movff	??_ADCInit+2,??_ADCInit+1
  6013  0009F8  0060  F01C  F006   	movff	??_ADCInit+3,??_ADCInit+2
  6014  0009FE  6A07               	clrf	??_ADCInit+3,c
  6015  000A00  5004               	movf	??_ADCInit,w,c
  6016  000A02  6FF1               	movwf	241,b	;volatile
  6017                           
  6018                           ;adc.c: 89: DMA1DSAL = ((uint32_t)&ADPCH) & 0xFF;
  6019  000A04  0EF1               	movlw	241
  6020  000A06  6FF0               	movwf	240,b	;volatile
  6021                           
  6022                           ;adc.c: 90: DMA1SSZH = 0x00;
  6023  000A08  0E00               	movlw	0
  6024  000A0A  6FF8               	movwf	248,b	;volatile
  6025                           
  6026                           ;adc.c: 91: DMA1SSZL = 6;
  6027  000A0C  0E06               	movlw	6
  6028  000A0E  6FF7               	movwf	247,b	;volatile
  6029                           
  6030                           ;adc.c: 92: DMA1DSZH = 0x00;
  6031  000A10  0E00               	movlw	0
  6032  000A12  6FEF               	movwf	239,b	;volatile
  6033                           
  6034                           ;adc.c: 93: DMA1DSZL = 0x01;
  6035  000A14  0E01               	movlw	1
  6036  000A16  6FEE               	movwf	238,b	;volatile
  6037                           
  6038                           ;adc.c: 94: DMA1SIRQ = 42;
  6039  000A18  0E2A               	movlw	42
  6040  000A1A  6FFF               	movwf	255,b	;volatile
  6041                           
  6042                           ;adc.c: 95: DMA1CON1bits.DMODE = 0b00;
  6043  000A1C  0E3F               	movlw	-193
  6044  000A1E  17FD               	andwf	253,f,b	;volatile
  6045                           
  6046                           ; BSR set to: 59
  6047                           ;adc.c: 96: DMA1CON1bits.DSTP = 0;
  6048  000A20  9BFD               	bcf	253,5,b	;volatile
  6049                           
  6050                           ;adc.c: 97: DMA1CON1bits.SMR = 0b00;
  6051  000A22  0EE7               	movlw	-25
  6052  000A24  17FD               	andwf	253,f,b	;volatile
  6053                           
  6054                           ;adc.c: 98: DMA1CON1bits.SMODE = 0b01;
  6055  000A26  51FD               	movf	253,w,b	;volatile
  6056  000A28  0BF9               	andlw	-7
  6057  000A2A  0902               	iorlw	2
  6058  000A2C  6FFD               	movwf	253,b	;volatile
  6059                           
  6060                           ; BSR set to: 59
  6061                           ;adc.c: 99: DMA1CON1bits.SSTP = 0;
  6062  000A2E  91FD               	bcf	253,0,b	;volatile
  6063                           
  6064                           ;adc.c: 100: DMA1CON0 = 0xC0;
  6065  000A30  0EC0               	movlw	192
  6066  000A32  6FFC               	movwf	252,b	;volatile
  6067                           
  6068                           ;adc.c: 103: DMA2SSAU = 0;
  6069  000A34  0E00               	movlw	0
  6070  000A36  6FDB               	movwf	219,b	;volatile
  6071                           
  6072                           ; BSR set to: 59
  6073                           ;adc.c: 104: DMA2SSAH = ((uint32_t)&ADFLTRL >> 8) & 0xFF;
  6074  000A38  0EE6               	movlw	230
  6075  000A3A  6E04               	movwf	??_ADCInit& (0+255),c
  6076  000A3C  0E3E               	movlw	62
  6077  000A3E  6E05               	movwf	(??_ADCInit+1)& (0+255),c
  6078  000A40  6A06               	clrf	(??_ADCInit+2)& (0+255),c
  6079  000A42  6A07               	clrf	(??_ADCInit+3)& (0+255),c
  6080  000A44  0060  F014  F004   	movff	??_ADCInit+1,??_ADCInit
  6081  000A4A  0060  F018  F005   	movff	??_ADCInit+2,??_ADCInit+1
  6082  000A50  0060  F01C  F006   	movff	??_ADCInit+3,??_ADCInit+2
  6083  000A56  6A07               	clrf	??_ADCInit+3,c
  6084  000A58  5004               	movf	??_ADCInit,w,c
  6085  000A5A  6FDA               	movwf	218,b	;volatile
  6086                           
  6087                           ; BSR set to: 59
  6088                           ;adc.c: 105: DMA2SSAL = ((uint32_t)&ADFLTRL) & 0xFF;
  6089  000A5C  0EE6               	movlw	230
  6090  000A5E  6FD9               	movwf	217,b	;volatile
  6091                           
  6092                           ;adc.c: 106: DMA2DSAH = ((uint32_t)ADCValues >> 8) & 0xFF;
  6093  000A60  0E49               	movlw	low _ADCValues
  6094  000A62  6E04               	movwf	??_ADCInit& (0+255),c
  6095  000A64  0E00               	movlw	high _ADCValues
  6096  000A66  6E05               	movwf	(??_ADCInit+1)& (0+255),c
  6097  000A68  6A06               	clrf	(??_ADCInit+2)& (0+255),c
  6098  000A6A  6A07               	clrf	(??_ADCInit+3)& (0+255),c
  6099  000A6C  0060  F014  F004   	movff	??_ADCInit+1,??_ADCInit
  6100  000A72  0060  F018  F005   	movff	??_ADCInit+2,??_ADCInit+1
  6101  000A78  0060  F01C  F006   	movff	??_ADCInit+3,??_ADCInit+2
  6102  000A7E  6A07               	clrf	??_ADCInit+3,c
  6103  000A80  5004               	movf	??_ADCInit,w,c
  6104  000A82  6FD1               	movwf	209,b	;volatile
  6105                           
  6106                           ; BSR set to: 59
  6107                           ;adc.c: 107: DMA2DSAL = ((uint32_t)ADCValues) & 0xFF;
  6108  000A84  0E49               	movlw	low (low _ADCValues)
  6109  000A86  6FD0               	movwf	208,b	;volatile
  6110                           
  6111                           ; BSR set to: 59
  6112                           ;adc.c: 108: DMA2SSZH = 0x00;
  6113  000A88  0E00               	movlw	0
  6114  000A8A  6FD8               	movwf	216,b	;volatile
  6115                           
  6116                           ; BSR set to: 59
  6117                           ;adc.c: 109: DMA2SSZL = 0x01;
  6118  000A8C  0E01               	movlw	1
  6119  000A8E  6FD7               	movwf	215,b	;volatile
  6120                           
  6121                           ; BSR set to: 59
  6122                           ;adc.c: 110: DMA2DSZH = 0x00;
  6123  000A90  0E00               	movlw	0
  6124  000A92  6FCF               	movwf	207,b	;volatile
  6125                           
  6126                           ; BSR set to: 59
  6127                           ;adc.c: 111: DMA2DSZL = 6;
  6128  000A94  0E06               	movlw	6
  6129  000A96  6FCE               	movwf	206,b	;volatile
  6130                           
  6131                           ; BSR set to: 59
  6132                           ;adc.c: 112: DMA2SIRQ = 11;
  6133  000A98  0E0B               	movlw	11
  6134  000A9A  6FDF               	movwf	223,b	;volatile
  6135                           
  6136                           ; BSR set to: 59
  6137                           ;adc.c: 113: DMA2CON1bits.DMODE = 0b01;
  6138  000A9C  51DD               	movf	221,w,b	;volatile
  6139  000A9E  0B3F               	andlw	-193
  6140  000AA0  0940               	iorlw	64
  6141  000AA2  6FDD               	movwf	221,b	;volatile
  6142                           
  6143                           ; BSR set to: 59
  6144                           ;adc.c: 114: DMA2CON1bits.DSTP = 0;
  6145  000AA4  9BDD               	bcf	221,5,b	;volatile
  6146                           
  6147                           ; BSR set to: 59
  6148                           ;adc.c: 115: DMA2CON1bits.SMR = 0b00;
  6149  000AA6  0EE7               	movlw	-25
  6150  000AA8  17DD               	andwf	221,f,b	;volatile
  6151                           
  6152                           ; BSR set to: 59
  6153                           ;adc.c: 116: DMA2CON1bits.SMODE = 0b00;
  6154  000AAA  0EF9               	movlw	-7
  6155  000AAC  17DD               	andwf	221,f,b	;volatile
  6156                           
  6157                           ; BSR set to: 59
  6158                           ;adc.c: 117: DMA2CON1bits.SSTP = 0;
  6159  000AAE  91DD               	bcf	221,0,b	;volatile
  6160                           
  6161                           ; BSR set to: 59
  6162                           ;adc.c: 118: DMA2CON0 = 0xC0;
  6163  000AB0  0EC0               	movlw	192
  6164  000AB2  6FDC               	movwf	220,b	;volatile
  6165                           
  6166                           ; BSR set to: 59
  6167                           ;adc.c: 120: DMA1CON0bits.DGO = 1;
  6168  000AB4  8BFC               	bsf	252,5,b	;volatile
  6169                           
  6170                           ; BSR set to: 59
  6171  000AB6  0012               	return		;funcret
  6172  000AB8                     __end_of_ADCInit:
  6173                           	opt callstack 0
  6174                           
  6175 ;; *************** function _hi_int *****************
  6176 ;; Defined at:
  6177 ;;		line 38 in file "si.c"
  6178 ;; Parameters:    Size  Location     Type
  6179 ;;		None
  6180 ;; Auto vars:     Size  Location     Type
  6181 ;;		None
  6182 ;; Return value:  Size  Location     Type
  6183 ;;                  1    wreg      void 
  6184 ;; Registers used:
  6185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6186 ;; Tracked objects:
  6187 ;;		On entry : 0/0
  6188 ;;		On exit  : 0/0
  6189 ;;		Unchanged: 0/0
  6190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6191 ;;      Params:         0       0       0       0       0       0       0       0       0
  6192 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6193 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6194 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6195 ;;Total ram usage:        0 bytes
  6196 ;; Hardware stack levels used:    1
  6197 ;; Hardware stack levels required when called:    1
  6198 ;; This function calls:
  6199 ;;		i2_SIClear
  6200 ;; This function is called by:
  6201 ;;		Interrupt level 2
  6202 ;; This function uses a non-reentrant model
  6203 ;;
  6204                           
  6205                           	psect	text30
  6206  00135A                     __ptext30:
  6207                           	opt callstack 0
  6208  00135A                     _hi_int:
  6209                           	opt callstack 25
  6210                           
  6211                           ;si.c: 40: if (SMT1PWAIE && SMT1PWAIF)
  6212                           
  6213                           ; BSR set to: 59
  6214                           ;incstack = 0
  6215  00135A  0139               	movlb	57	; () banked
  6216  00135C  BF91               	btfsc	145,7,b	;volatile
  6217                           
  6218                           ; BSR set to: 57
  6219  00135E  AFA1               	btfss	161,7,b	;volatile
  6220  001360  D023               	goto	i2l4317
  6221                           
  6222                           ; BSR set to: 57
  6223                           ;si.c: 41: {;si.c: 42: SMT1PWAIF = 0;
  6224  001362  9FA1               	bcf	161,7,b	;volatile
  6225                           
  6226                           ; BSR set to: 57
  6227                           ;si.c: 44: SITempByte <<= 1;
  6228  001364  90D8               	bcf	status,0,c
  6229  001366  363C               	rlcf	_SITempByte,f,c
  6230                           
  6231                           ;si.c: 45: SITempByte |= (SMT1CPWL < 128) ? 1U : 0U;
  6232  001368  0E7F               	movlw	127
  6233  00136A  013F               	movlb	63	; () banked
  6234  00136C  6518               	cpfsgt	24,b	;volatile
  6235  00136E  D001               	goto	i2u366_41
  6236  001370  D002               	goto	i2u366_40
  6237  001372                     i2u366_41:
  6238  001372  0E01               	movlw	1
  6239  001374  D001               	goto	i2u367_40
  6240  001376                     i2u366_40:
  6241  001376  0E00               	movlw	0
  6242  001378                     i2u367_40:
  6243  001378  123C               	iorwf	_SITempByte,f,c
  6244                           
  6245                           ; BSR set to: 63
  6246                           ;si.c: 48: SICMDReceived = 0;
  6247  00137A  0E00               	movlw	0
  6248  00137C  6E3D               	movwf	_SICMDReceived,c
  6249                           
  6250                           ; BSR set to: 63
  6251                           ;si.c: 49: T6TMR = 0;
  6252  00137E  0E00               	movlw	0
  6253  001380  6E92               	movwf	16274,c	;volatile
  6254                           
  6255                           ; BSR set to: 63
  6256                           ;si.c: 52: ++SIBitCounter;
  6257  001382  2A3F               	incf	_SIBitCounter,f,c
  6258                           
  6259                           ; BSR set to: 63
  6260                           ;si.c: 53: if (SIBitCounter == 8) {
  6261  001384  0E08               	movlw	8
  6262  001386  183F               	xorwf	_SIBitCounter,w,c
  6263  001388  A4D8               	btfss	status,2,c
  6264  00138A  D00E               	goto	i2l4317
  6265                           
  6266                           ; BSR set to: 63
  6267                           ;si.c: 54: SIInputMessage[SIByteCounter] = SITempByte;
  6268  00138C  0E00               	movlw	low _SIInputMessage
  6269  00138E  243E               	addwf	_SIByteCounter,w,c
  6270  001390  6ED9               	movwf	fsr2l,c
  6271  001392  6ADA               	clrf	fsr2h,c
  6272  001394  0E01               	movlw	high _SIInputMessage
  6273  001396  22DA               	addwfc	fsr2h,f,c
  6274  001398  0060  F0F3  FFDF   	movff	_SITempByte,indf2
  6275                           
  6276                           ; BSR set to: 63
  6277                           ;si.c: 55: SITempByte = 0x00;
  6278  00139E  0E00               	movlw	0
  6279  0013A0  6E3C               	movwf	_SITempByte,c
  6280                           
  6281                           ; BSR set to: 63
  6282                           ;si.c: 56: SIBitCounter = 0;
  6283  0013A2  0E00               	movlw	0
  6284  0013A4  6E3F               	movwf	_SIBitCounter,c
  6285                           
  6286                           ; BSR set to: 63
  6287                           ;si.c: 57: ++SIByteCounter;
  6288  0013A6  2A3E               	incf	_SIByteCounter,f,c
  6289  0013A8                     i2l4317:
  6290                           
  6291                           ;si.c: 58: };si.c: 63: };si.c: 65: if (PIR9bits.TMR6IF) {
  6292  0013A8  0139               	movlb	57	; () banked
  6293  0013AA  A1A9               	btfss	169,0,b	;volatile
  6294  0013AC  0011               	retfie		f
  6295                           
  6296                           ; BSR set to: 57
  6297                           ;si.c: 66: if (SIByteCounter) {
  6298  0013AE  503E               	movf	_SIByteCounter,w,c
  6299  0013B0  B4D8               	btfsc	status,2,c
  6300  0013B2  D003               	goto	i2l4323
  6301                           
  6302                           ; BSR set to: 57
  6303                           ;si.c: 67: SICMDReceived = 1;
  6304  0013B4  0E01               	movlw	1
  6305  0013B6  6E3D               	movwf	_SICMDReceived,c
  6306                           
  6307                           ;si.c: 68: } else {
  6308  0013B8  D002               	goto	i2l4325
  6309  0013BA                     i2l4323:
  6310                           
  6311                           ; BSR set to: 57
  6312                           ;si.c: 69: SIClear();
  6313  0013BA  EC83  F00B         	call	i2_SIClear	;wreg free
  6314  0013BE                     i2l4325:
  6315                           
  6316                           ;si.c: 70: };si.c: 71: PIR9bits.TMR6IF = 0;
  6317  0013BE  0139               	movlb	57	; () banked
  6318  0013C0  91A9               	bcf	169,0,b	;volatile
  6319                           
  6320                           ; BSR set to: 57
  6321  0013C2  0011               	retfie		f
  6322  0013C4                     __end_of_hi_int:
  6323                           	opt callstack 0
  6324                           
  6325 ;; *************** function i2_SIClear *****************
  6326 ;; Defined at:
  6327 ;;		line 283 in file "si.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;		None
  6330 ;; Auto vars:     Size  Location     Type
  6331 ;;		None
  6332 ;; Return value:  Size  Location     Type
  6333 ;;                  1    wreg      void 
  6334 ;; Registers used:
  6335 ;;		wreg, status,2
  6336 ;; Tracked objects:
  6337 ;;		On entry : 0/0
  6338 ;;		On exit  : 0/0
  6339 ;;		Unchanged: 0/0
  6340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6341 ;;      Params:         0       0       0       0       0       0       0       0       0
  6342 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6343 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6344 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6345 ;;Total ram usage:        0 bytes
  6346 ;; Hardware stack levels used:    1
  6347 ;; This function calls:
  6348 ;;		Nothing
  6349 ;; This function is called by:
  6350 ;;		_hi_int
  6351 ;; This function uses a non-reentrant model
  6352 ;;
  6353                           
  6354                           	psect	text31
  6355  001706                     __ptext31:
  6356                           	opt callstack 0
  6357  001706                     i2_SIClear:
  6358                           	opt callstack 25
  6359                           
  6360                           ;si.c: 285: SIBitCounter = 0;
  6361                           
  6362                           ; BSR set to: 57
  6363                           ;incstack = 0
  6364  001706  0E00               	movlw	0
  6365  001708  6E3F               	movwf	_SIBitCounter,c
  6366                           
  6367                           ;si.c: 286: SIByteCounter = 0;
  6368  00170A  0E00               	movlw	0
  6369  00170C  6E3E               	movwf	_SIByteCounter,c
  6370                           
  6371                           ;si.c: 287: SICMDReceived = 0;
  6372  00170E  0E00               	movlw	0
  6373  001710  6E3D               	movwf	_SICMDReceived,c
  6374                           
  6375                           ;si.c: 288: SITempByte = 0x00;
  6376  001712  0E00               	movlw	0
  6377  001714  6E3C               	movwf	_SITempByte,c
  6378  001716  0012               	return		;funcret
  6379  001718                     __end_ofi2_SIClear:
  6380                           	opt callstack 0
  6381                           
  6382                           ;
  6383                           ; Interrupt Vector Table @ 0x8
  6384                           ;
  6385                           
  6386                           	psect	ivt0x8
  6387  000008                     __pivt0x8:
  6388                           	opt callstack 0
  6389  000008                     ivt0x8_base:
  6390                           	opt callstack 0
  6391                           
  6392                           ; high-priority vector
  6393  000008  EFAD  F009         	goto	_hi_int
  6394  000018                     	org	16
  6395                           
  6396                           ; low-priority vector
  6397  000018  00FF               	reset	
  6398  0000                     
  6399                           	psect	rparam
  6400  0000                     tosu	equ	0x3FFF
  6401                           tosh	equ	0x3FFE
  6402                           tosl	equ	0x3FFD
  6403                           stkptr	equ	0x3FFC
  6404                           pclatu	equ	0x3FFB
  6405                           pclath	equ	0x3FFA
  6406                           pcl	equ	0x3FF9
  6407                           tblptru	equ	0x3FF8
  6408                           tblptrh	equ	0x3FF7
  6409                           tblptrl	equ	0x3FF6
  6410                           tablat	equ	0x3FF5
  6411                           prodh	equ	0x3FF4
  6412                           prodl	equ	0x3FF3
  6413                           indf0	equ	0x3FEF
  6414                           postinc0	equ	0x3FEE
  6415                           postdec0	equ	0x3FED
  6416                           preinc0	equ	0x3FEC
  6417                           plusw0	equ	0x3FEB
  6418                           fsr0h	equ	0x3FEA
  6419                           fsr0l	equ	0x3FE9
  6420                           wreg	equ	0x3FE8
  6421                           indf1	equ	0x3FE7
  6422                           postinc1	equ	0x3FE6
  6423                           postdec1	equ	0x3FE5
  6424                           preinc1	equ	0x3FE4
  6425                           plusw1	equ	0x3FE3
  6426                           fsr1h	equ	0x3FE2
  6427                           fsr1l	equ	0x3FE1
  6428                           bsr	equ	0x3FE0
  6429                           indf2	equ	0x3FDF
  6430                           postinc2	equ	0x3FDE
  6431                           postdec2	equ	0x3FDD
  6432                           preinc2	equ	0x3FDC
  6433                           plusw2	equ	0x3FDB
  6434                           fsr2h	equ	0x3FDA
  6435                           fsr2l	equ	0x3FD9
  6436                           status	equ	0x3FD8


Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         1149
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     37      84
    BANK0           160    151     151
    BANK1           256      0      90
    BANK2           256      0     256
    BANK3           256      0     256
    BANK4           256      0     256
    BANK5           256      0     256
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(2) Largest target is 24
		 -> buttonsMapByte1(BANK1[15]), buttonsMapByte0(BANK1[15]), config(BANK1[24]), 

    memset@p	PTR unsigned char  size(2) Largest target is 24
		 -> buttonsMapByte1(BANK1[15]), buttonsMapByte0(BANK1[15]), config(BANK1[24]), 

    SIGetCommand@msg	PTR unsigned char  size(2) Largest target is 36
		 -> main@cmd(BANK0[36]), 

    SISendMessage@msg	PTR unsigned char  size(2) Largest target is 36
		 -> buttonsMessage(COMRAM[8]), main@msgAnswer(BANK0[36]), 

    buttonsBuildLUT@LUT	PTR unsigned char  size(2) Largest target is 256
		 -> LUT_CY(BANK3[256]), LUT_CX(BANK2[256]), LUT_SY(BANK5[256]), LUT_SX(BANK4[256]), 

    buttonsSetMapByte1@map	PTR unsigned char  size(2) Largest target is 36
		 -> main@cmd(BANK0[36]), 

    buttonsSetMapByte0@map	PTR unsigned char  size(2) Largest target is 36
		 -> main@cmd(BANK0[36]), 

    PGMReadBlock@data	PTR unsigned char  size(2) Largest target is 64
		 -> main@flashBuffer(BANK0[64]), 

    PGMWriteBlock@data	PTR unsigned char  size(2) Largest target is 64
		 -> main@flashBuffer(BANK0[64]), 

    configFlashAll@data	PTR unsigned char  size(2) Largest target is 24
		 -> config(BANK1[24]), 

    sp__memset	PTR void  size(2) Largest target is 24
		 -> buttonsMapByte1(BANK1[15]), buttonsMapByte0(BANK1[15]), config(BANK1[24]), 

    configInit@data	PTR unsigned char  size(2) Largest target is 24
		 -> config(BANK1[24]), 

    sp__buttonsGetMapByte1	PTR unsigned char  size(2) Largest target is 8
		 -> buttonsMessage(COMRAM[8]), 

    main@btnMsg_365	PTR unsigned char  size(2) Largest target is 8
		 -> buttonsMessage(COMRAM[8]), 

    sp__buttonsGetMapByte0	PTR unsigned char  size(2) Largest target is 8
		 -> buttonsMessage(COMRAM[8]), 

    main@btnMsg	PTR unsigned char  size(2) Largest target is 8
		 -> buttonsMessage(COMRAM[8]), 

    sp__buttonsGetMessage	PTR unsigned char  size(2) Largest target is 8
		 -> buttonsMessage(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _configSetDefault->_memset
    _configFlashAll->_EEPROMWriteByte
    _buttonsInit->_memset
    _buttonsBuildLUTs->_buttonsBuildLUT
    _buttonsBuildLUT->___awdiv
    ___awdiv->___wmul
    _SISendMessage->_buttonsGetMessage
    _PGMWriteBlock->_PGMEraseRow

Critical Paths under _hi_int in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _hi_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _hi_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _hi_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _hi_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _hi_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _hi_int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _hi_int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _hi_int in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               153   153      0   23712
                                             35 COMRAM     2     2      0
                                              0 BANK0    151   151      0
                            _ADCInit
                     _EEPROMReadByte
                    _EEPROMWriteByte
                       _PGMReadBlock
                      _PGMWriteBlock
                            _SIClear
                       _SIGetCommand
                             _SIInit
                      _SISendMessage
                        _bootPayload
                   _buttonsBuildLUTs
                 _buttonsGetMapByte0
                 _buttonsGetMapByte1
                  _buttonsGetMessage
                        _buttonsInit
                 _buttonsSetMapByte0
                 _buttonsSetMapByte1
                      _buttonsUpdate
                     _configFlashAll
                         _configInit
                   _configSetDefault
                          _portsInit
 ---------------------------------------------------------------------------------
 (1) _portsInit                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configInit                                           3     3      0    1389
                                              8 COMRAM     3     3      0
                     _EEPROMReadByte
                     _configFlashAll
                   _configSetDefault
 ---------------------------------------------------------------------------------
 (1) _configSetDefault                                     0     0      0     897
                             _memset
 ---------------------------------------------------------------------------------
 (2) _configFlashAll                                       3     3      0     335
                                              2 COMRAM     3     3      0
                    _EEPROMWriteByte
 ---------------------------------------------------------------------------------
 (3) _EEPROMWriteByte                                      2     1      1     222
                                              0 COMRAM     2     1      1
                          _NVMUnlock
 ---------------------------------------------------------------------------------
 (2) _EEPROMReadByte                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _buttonsUpdate                                        7     7      0     591
                                              0 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 (1) _buttonsSetMapByte1                                   3     1      2     201
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _buttonsSetMapByte0                                   3     1      2     201
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _buttonsInit                                          0     0      0     897
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     897
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _buttonsGetMessage                                    6     4      2     289
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _buttonsGetMapByte1                                   3     1      2      90
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _buttonsGetMapByte0                                   3     1      2      90
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _buttonsBuildLUTs                                     0     0      0    4914
                    _buttonsBuildLUT
 ---------------------------------------------------------------------------------
 (2) _buttonsBuildLUT                                     21    13      8    4914
                                             14 COMRAM    21    13      8
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     693
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1012
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _bootPayload                                          2     2      0      67
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SISendMessage                                       10     7      3    7900
                                              6 COMRAM    10     7      3
                  _buttonsGetMessage (ARG)
 ---------------------------------------------------------------------------------
 (1) _SIInit                                               0     0      0       0
                     _SIConfigureCLC
 ---------------------------------------------------------------------------------
 (2) _SIConfigureCLC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SIGetCommand                                         3     1      2     179
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _SIClear                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PGMWriteBlock                                        8     4      4     555
                                              4 COMRAM     8     4      4
                          _NVMUnlock
                        _PGMEraseRow
 ---------------------------------------------------------------------------------
 (2) _PGMEraseRow                                          4     2      2     199
                                              0 COMRAM     4     2      2
                          _NVMUnlock
 ---------------------------------------------------------------------------------
 (4) _NVMUnlock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PGMReadBlock                                         8     4      4     556
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _ADCInit                                              9     6      3     445
                                              0 COMRAM     9     6      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _hi_int                                               0     0      0       0
                          i2_SIClear
 ---------------------------------------------------------------------------------
 (6) i2_SIClear                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCInit
   _EEPROMReadByte
   _EEPROMWriteByte
     _NVMUnlock
   _PGMReadBlock
   _PGMWriteBlock
     _NVMUnlock
     _PGMEraseRow
       _NVMUnlock
   _SIClear
   _SIGetCommand
   _SIInit
     _SIConfigureCLC
   _SISendMessage
     _buttonsGetMessage (ARG)
   _bootPayload
   _buttonsBuildLUTs
     _buttonsBuildLUT
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _buttonsGetMapByte0
   _buttonsGetMapByte1
   _buttonsGetMessage
   _buttonsInit
     _memset
   _buttonsSetMapByte0
   _buttonsSetMapByte1
   _buttonsUpdate
   _configFlashAll
     _EEPROMWriteByte
       _NVMUnlock
   _configInit
     _EEPROMReadByte
     _configFlashAll
       _EEPROMWriteByte
         _NVMUnlock
     _configSetDefault
       _memset
   _configSetDefault
     _memset
   _portsInit

 _hi_int (ROOT)
   i2_SIClear

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      20        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      17        0.0%
BANK7              100      0       0      18        0.0%
BITBANK6           100      0       0      15        0.0%
BANK6              100      0       0      16        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0     100      14      100.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0     100      12      100.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0     100      10      100.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0     100       8      100.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      5A       6       35.2%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     97      97       4       94.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     25      54       1       88.4%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     545      19        0.0%
DATA                 0      0     545      21        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Mar 26 23:35:38 2020

                  __CFG_CP$OFF 000000                   ___awdiv@sign 000C            ___wmul@multiplicand 0003  
                   _SITempByte 003C                   __CFG_BBEN$ON 000000                    configInit@i 000B  
                  __CFG_LVP$ON 000000        __size_of_EEPROMReadByte 0014                  SIGetCommand@i 0003  
                          l142 01CC                            l320 16C4                            l144 0210  
                          l313 1332                            l413 0966                            l253 1436  
                          l510 08E6                            l166 02E4                            l408 0930  
                          l520 0F26                            l513 08FC                            l555 0B26  
                          l776 1094                            l785 0D50                            _GIE 01FE97  
                          _PCL 003FF9     __end_of_buttonsGetMapByte0 15F8     __end_of_buttonsGetMapByte1 15C4  
              __end_of_ADCInit 0AB8                            wreg 003FE8                    main@len_366 00ED  
                 __CFG_ZCD$OFF 000000                           l3011 111E                           l3013 1126  
                         l3005 1108                           l3031 115E                           l3023 1146  
                         l3027 1150                           l4003 0214                           l3133 0AE4  
                         l4021 0256                           l3151 0B9A                           l3143 0B32  
                         l4015 0238                           l4033 0264                           l3163 0C38  
                         l3155 0BE2                           l3147 0B5E                           l3139 0B00  
                         l3411 0640                           l3403 0630                           l4203 0460  
                         l4211 0494                           l4115 0344                           l4107 0324  
                         l4027 0260                           l3501 0706                           l3085 1632  
                         l4141 03B6                           l4125 037C                           l4053 029A  
                         l3167 0C48                           l3431 0668                           l3423 0658  
                         l3415 0648                           l3407 0638                           l3255 1478  
                         l4223 04B4                           l4151 03E6                           l4119 034C  
                         l4071 02E8                           l3169 0C5A                           l4161 03F2  
                         l4137 03AE                           l4129 038E          buttonsBuildLUT@dzMode 0015  
                         l3283 0954                           l3451 0690                           l3443 0680  
                         l3435 0670                           l3427 0660                           l3419 0650  
                         l4251 0502                           l4091 0308                           l4075 02EC  
                         l4059 02C4                           l3349 109C                           l3621 0832  
                         l3613 081E                           l3605 080A                           l3541 076A  
                         l3533 0756                           l3525 0742                           l3517 072E  
                         l3509 071A                           l4173 040C                           l4181 0432  
                         l3455 0698                           l3447 0688                           l3439 0678  
                         l3713 154E                           l4273 053C                           l4169 0400  
                         l3707 1528                           l3459 06A0                           l4283 055C  
                         l3709 152E                           l3733 0D94                           l3821 1656  
                         l3661 0896                           l3653 0882                           l3645 086E  
                         l3637 085A                           l3629 0846                           l3581 07CE  
                         l3573 07BA                           l3565 07A6                           l3557 0792  
                         l3549 077E                           l3493 06F2                           l3485 06DE  
                         l3469 06AC                           l4189 043C                           l3751 0E0E  
                         l4287 0562                           l3745 0DFA                           l3833 15C8  
                         l3809 1682                           l4289 05EA                           l3739 0DC0  
                         l3749 0E0C                           l3693 08E8                           l3685 08D2  
                         l3677 08BE                           l3669 08AA                           l3597 07F6  
                         l3589 07E2                           l3941 00D6                           l3767 0F50  
                         l2983 157E                           l3927 00A0                           l3919 0088  
                         l3849 1594                           l3945 00DE                           l3875 11B8  
                         l2979 1568                           l3971 0138                           l3797 0F7E  
                         l3965 011A                           l2999 10F8                           l3799 0FB0  
                         l3991 01C8                           l3975 0162                           l3993 01D2  
                         l3995 01E4                           l3979 019C                   __CFG_WDTE$ON 000000  
                         u2020 0BA8                           u2110 1358                           u3000 0E12  
                         u3010 0E16                           u2130 1470                           u3100 11DA  
                         u2060 13F8                           _LATB 003FBB                           u2075 13FA  
                         u2180 09AE          buttonsBuildLUT@maxVal 0012                           u3400 02D2  
                         u2185 09A4                           u3250 00FA                           u3170 007E  
                         _T2PR 003FAB                           u1910 112A                           u3570 04A2  
                         _T6PR 003F93          buttonsBuildLUT@minVal 0011          buttonsBuildLUT@radius 0022  
                         _WPUA 003A41                           _WPUB 003A51                           _WPUC 003A61  
        buttonsBuildLUT@invert 0016                  __CFG_FCMEN$ON 000000          buttonsBuildLUT@origin 0013  
                 __CFG_WRTB$ON 000000              ??_buttonsBuildLUT 0017                           _main 001E  
              __end_of_SIClear 16F4                           fsr1h 003FE2                           fsr2h 003FDA  
                         indf1 003FE7                           indf2 003FDF                           fsr1l 003FE1  
                         fsr2l 003FD9                           prodh 003FF4                           prodl 003FF3  
                         start 001A                  __CFG_CSWEN$ON 000000                 _SPI1STATUSbits 003D17  
    __size_of_configSetDefault 0076                   ___param_bank 000000                  __CFG_SAFEN$ON 000000  
      SISendMessage@leftToSend 0010                          PRLOCK 0039EF                          _ADACT 003EFE  
                        ?_main 0001                          _ADCLK 003EFF                          _ADPCH 003EF1  
                _SISendMessage 0D4C                          _ADREF 003EFD                __end_of___awdiv 116C  
                        _ADTIF 01CD0B                SIGetCommand@msg 0001                          _ADRPT 003EEC  
              ___awdiv@divisor 0009                          _T2CLK 003FAE                          _T2CON 003FAC  
                        _T2HLT 003FAD                          _T6CLK 003F96                          _T6CON 003F94  
               __CFG_DEBUG$OFF 000000                          _T6HLT 003F95                          _T2TMR 003FAA  
                        _T2RST 003FAF                          _T6TMR 003F92                          _T6RST 003F97  
              ___awdiv@counter 000B             __size_ofi2_SIClear 0012                          _TMR0H 003FB7  
                        _PORTA 003FCA                          _PORTB 003FCB                          _PORTC 003FCC  
                        _TRISA 003FC2                          _TRISB 003FC3                          _TRISC 003FC4  
            ?_buttonsBuildLUTs 0001                   ?_buttonsInit 0001         buttonsBuildLUT@tempVal 001E  
                __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000                   _DMA1CON0bits 003BFC  
                 _DMA1CON1bits 003BFD             ??_buttonsBuildLUTs 0024                   _DMA2CON1bits 003BDD  
           __CFG_MCLRE$EXTMCLR 000000                          main@i 00F6          EEPROMReadByte@address 0001  
     __size_of_EEPROMWriteByte 0024                          tablat 003FF5             __size_of_NVMUnlock 0012  
                        status 003FD8                 _SIInputMessage 0100             configFlashAll@data 0003  
              __initialization 0FBA                   ?_PGMEraseRow 0001                   __end_of_main 05F2  
               PGMWriteBlock@i 000B                      ??_ADCInit 0004                  main@gcpLocked 00F2  
               ?_SISendMessage 0007                         ??_main 0024                 configInit@data 0009  
                __activetblptr 000002              _buttonsGetMessage 0EF6              PGMWriteBlock@addr 0005  
            PGMWriteBlock@data 0007             main@flashBufferIdx 00EE                         _ADACQL 003EF3  
                       _ADCON0 003EF8                         _ADCON1 003EF9                         _ADCON2 003EFA  
                       _ADCON3 003EFB                      ??_SIClear 0001             ?_buttonsGetMessage 0001  
             ??_configFlashAll 0003               ___awdiv@dividend 0007                         _ANSELA 003A40  
                       _ANSELB 003A50                         _ANSELC 003A60                         _T0CON0 003FB8  
                       _T0CON1 003FB9                         _RB4PPS 003A0C                         _ODCONA 003A42  
                       _ODCONB 003A52                         _ODCONC 003A62                         i2l4323 13BA  
                       _PCLATH 003FFA                         i2l4325 13BE                         i2l4317 13A8  
                       _PCLATU 003FFB          __end_of_PGMWriteBlock 11EE                         _TABLAT 003FF5  
                       _NVMDAT 0039E3                         _TMR0IF 01CD1F                         _LUT_CX 0200  
                       _LUT_CY 0300                         _LUT_SX 0400                         _LUT_SY 0500  
                       _STKPTR 003FFC                         _SIInit 105A            ??_buttonsGetMessage 0003  
            __end_ofi2_SIClear 1718                  main@msgAnswer 00C8                 __CFG_XINST$OFF 000000  
         __size_of_bootPayload 0044                         ___wmul 15F8                      ??___awdiv 000B  
               __CFG_STVREN$ON 000000                         _hi_int 135A                         _config 0124  
                       _memset 155A                         clear_0 0FE4                         clear_1 0FF8  
                       clear_2 100C                         clear_3 1020                         clear_4 1032  
                       clear_5 103E               ___awdiv@quotient 000D                 _EEPROMReadByte 16CE  
            __end_of_NVMUnlock 1706      __end_of_buttonsGetMessage 0FBA                   __pdataCOMRAM 0049  
   __end_of_buttonsSetMapByte0 16AA     __end_of_buttonsSetMapByte1 167E                         tblptrh 003FF7  
                       tblptrl 003FF6                         tblptru 003FF8         __size_of_buttonsUpdate 030E  
             ??_SIConfigureCLC 0001                     __accesstop 0060        __end_of__initialization 1050  
                ___rparam_used 000001              ??_EEPROMWriteByte 0002               _configSetDefault 126E  
              configFlashAll@i 0005                 __pcstackCOMRAM 0001                ??_SISendMessage 000A  
       __end_of_EEPROMReadByte 16E2                  ?_PGMReadBlock 0001                  PGMReadBlock@i 0007  
              _buttonsBuildLUT 0AB8                _buttonsMapByte0 014B                _buttonsMapByte1 013C  
         __size_of_buttonsInit 0080                __CFG_PR1WAY$OFF 000000                     __pbssBANK1 0100  
                   __pbssBANK2 0200                     __pbssBANK3 0300                     __pbssBANK4 0400  
                   __pbssBANK5 0500             _buttonsGetMapByte0 15C4             _buttonsGetMapByte1 1590  
               main@btnMsg_365 00C6                __CFG_MVECEN$OFF 000000                        ?_SIInit 0001  
                      IVTBASEH 003FD6                        IVTBASEL 003FD5                        IVTBASEU 003FD7  
                _buttonsTimers 0026                  _buttonsUpdate 05F2            ?_buttonsGetMapByte0 0001  
          ?_buttonsGetMapByte1 0001                        ?___wmul 0001                        ?_hi_int 0001  
              ?_EEPROMReadByte 0001               buttonsBuildLUT@i 0020                        _ADFLTRL 003EE6  
                      _CLC1CON 003C74                        _CLC2CON 003C6A                        _CLC3CON 003C60  
                      _CLC4CON 003C56           __size_of_PGMEraseRow 0058                        ?_memset 0001  
                      _CLC1POL 003C75                        _CLC2POL 003C6B                        _CLC3POL 003C61  
                      _ADCInit 0900                        _CLC4POL 003C57                 ??_PGMReadBlock 0005  
   __size_of_buttonsGetMessage 00C4               PGMReadBlock@addr 0001               PGMReadBlock@data 0003  
                      _T6INPPS 003ACC            __CFG_PWRTS$PWRT_OFF 000000                        _INTCON0 003FD2  
                   _configInit 142A                        _IVTBASE 003FD5           ??_buttonsGetMapByte0 0003  
         ??_buttonsGetMapByte1 0003            buttonsSetMapByte0@i 0003            buttonsSetMapByte1@i 0003  
                      _IVTLOCK 003FD4                        _TBLPTRH 003FF7                        _TBLPTRL 003FF6  
                      _SPI1CLK 003D1C                        _TBLPTRU 003FF8             __size_of_portsInit 0066  
                      _SMT1CLK 003F21                        _NVMADRL 0039E0                        _SPI1TXB 003D11  
                      _NVMCON1 0039E5                        _NVMCON2 0039E6                        _PWM5DCH 003F6D  
                      _PWM5DCL 003F6C                        _SMT1SIG 003F22                        _PWM5CON 003F6E  
                      _SMT1PRH 003F1C                        _SMT1PRL 003F1B                        _SMT1PRU 003F1D  
                      _SMT1WIN 003F23                        _PPSLOCK 003ABF                        _SIClear 16E2  
           buttonsBuildLUT@LUT 000F        __CFG_BBSIZE$BBSIZE_4096 000000                __size_of_SIInit 008A  
    __size_of_buttonsBuildLUTs 00D2                      _ADCValues 0049                 ?_buttonsUpdate 0001  
                      __Hparam 0000                        __Lparam 0000     __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
                      ___awdiv 10E4                __size_of___wmul 002E                __size_of_hi_int 006A  
      __end_of_buttonsBuildLUT 0C6A                        __pcinit 0FBA                __size_of_memset 0036  
                      __ramtop 0800                  _SICMDReceived 003D                        __ptext0 001E  
                      __ptext1 13C4                        __ptext2 142A                        __ptext3 126E  
                      __ptext4 1626                        __ptext5 16AA                        __ptext6 16CE  
                      __ptext7 05F2                        __ptext8 1652                        __ptext9 167E  
              __CFG_WRTAPP$OFF 000000                __CFG_WRTSAF$OFF 000000                        main@cmd 00A0  
                      main@len 00EC           end_of_initialization 1050                        memset@c 0003  
                      memset@n 0005                        memset@p 0007                  __Lmediumconst 0000  
         _buttonsBuildLUT$1143 001A          buttonsSetMapByte0@map 0001          buttonsSetMapByte1@map 0001  
                    _IVTLOCKED 01FEA0                      _SPI1TCNTL 003D12                  ?_SIGetCommand 0001  
            __end_of_portsInit 142A                        postdec1 003FE5                        postinc0 003FEE  
                    i2_SIClear 1706                      _SMT1PWAIE 01CC8F                      _SMT1PWAIF 01CD0F  
          EEPROMWriteByte@data 0001                 portsInit@state 0001          __CFG_WDTCPS$WDTCPS_12 000000  
                   _outButtons 0035    buttonsUpdate@toggledButtons 0005                      _PORTBbits 003FCB  
                  ?_configInit 0001           __CFG_WDTCCS$LFINTOSC 000000                      _TRISBbits 003FC3  
                    _NVMUnlock 16F4       __end_of_configSetDefault 12E4                _EEPROMWriteByte 16AA  
             __CFG_FEXTOSC$OFF 000000                     main@cmdLen 00EF                     main@btnMsg 00C4  
           _buttonsSetMapByte0 167E             _buttonsSetMapByte1 1652           __end_of_PGMReadBlock 135A  
              ??_buttonsUpdate 0001                  ??_bootPayload 0001           buttonsBuildLUT@range 001C  
               __end_of_SIInit 10E4                 ??_SIGetCommand 0003                    _ADCChannels 004F  
          ?_buttonsSetMapByte0 0001            ?_buttonsSetMapByte1 0001                     ?i2_SIClear 0001  
               __end_of___wmul 1626               SISendMessage@idx 000F               SISendMessage@len 0009  
             SISendMessage@msg 0007               ?_buttonsBuildLUT 000F                  __pidataCOMRAM 1718  
               __end_of_hi_int 13C4            buttonsGetMapByte0@i 0003            buttonsGetMapByte1@i 0003  
       __size_of_PGMWriteBlock 0082                 __end_of_memset 1590            start_initialization 0FBA  
                   ?_NVMUnlock 0001           ??_buttonsSetMapByte0 0003           ??_buttonsSetMapByte1 0003  
                    _ButtonsID 0040                     ivt0x8_base 0008                       ADCInit@i 0009  
                     ??_SIInit 0001               _buttonsBuildLUTs 0E24               ??_EEPROMReadByte 0001  
             __CFG_LPBOREN$OFF 000000        __size_of_configFlashAll 002C            __size_of_configInit 0058  
                     ??___wmul 0005            __end_of_bootPayload 151E                       ??_hi_int 0001  
                     ??_memset 0007                       ?_ADCInit 0001          __end_of_SISendMessage 0E24  
             __CFG_IVT1WAY$OFF 000000        __end_of_EEPROMWriteByte 16CE                  ??_buttonsInit 0009  
                  __pbssCOMRAM 0026                  __pcstackBANK0 0060                       ?_SIClear 0001  
              main@flashBuffer 0060                  _PGMWriteBlock 116C                 _buttonsMessage 0041  
                ??_PGMEraseRow 0003        __size_of_SIConfigureCLC 00E2                    ??i2_SIClear 0001  
                     ?___awdiv 0007                    ADCInit@cxCh 0002                    ADCInit@cyCh 0003  
                  ADCInit@sxCh 0008                    ADCInit@syCh 0001               __CFG_PPS1WAY$OFF 000000  
            buttonsBuildLUT@dz 0014                       _CLC1GLS0 003C7A                       _CLC1GLS1 003C7B  
                     _CLC1GLS2 003C7C                       _CLC1GLS3 003C7D                       _CLC2GLS0 003C70  
                     _CLC2GLS1 003C71                       _CLC2GLS2 003C72                       _CLC2GLS3 003C73  
                     _CLC3GLS0 003C66                       _CLC3GLS1 003C67                       _CLC3GLS2 003C68  
                     _CLC3GLS3 003C69                       _CLC4GLS0 003C5C                       _CLC4GLS1 003C5D  
                     _CLC4GLS2 003C5E                       _CLC4GLS3 003C5F                       _CLC1SEL0 003C76  
                     _CLC1SEL1 003C77                       _CLC1SEL2 003C78                       _CLC1SEL3 003C79  
                     _CLC2SEL0 003C6C                       _CLC2SEL1 003C6D                       _CLC2SEL2 003C6E  
                     _CLC2SEL3 003C6F                       _CLC3SEL0 003C62                       _CLC3SEL1 003C63  
                     _CLC3SEL2 003C64                       _CLC3SEL3 003C65                       _DMA1CON0 003BFC  
                     _CLC4SEL0 003C58                       _CLC4SEL1 003C59                       _CLC4SEL2 003C5A  
                     _CLC4SEL3 003C5B                       _DMA2CON0 003BDC                       _DMA1DSAH 003BF1  
                     _DMA1DSAL 003BF0                       _DMA2DSAH 003BD1                       _DMA2DSAL 003BD0  
                     _DMA1DSZH 003BEF                       _DMA1DSZL 003BEE                       _DMA2DSZH 003BCF  
                     _DMA2DSZL 003BCE                       _ADCPbits 003ED7                       _DMA1SSAH 003BFA  
                     _DMA1SIRQ 003BFF                       _DMA1SSAL 003BF9                       _DMA1SSAU 003BFB  
                     _DMA2SSAH 003BDA                       _DMA2SIRQ 003BDF                       _DMA2SSAL 003BD9  
                     _DMA2SSAU 003BDB                       _DMA1SSZH 003BF8                       _DMA1SSZL 003BF7  
                     _DMA2SSZH 003BD8                       _DMA2SSZL 003BD7                    ??_NVMUnlock 0001  
                     _CCPTMRS1 003F5F    __size_of_buttonsGetMapByte0 0034    __size_of_buttonsGetMapByte1 0034  
         __end_of_SIGetCommand 155A          __size_of_PGMReadBlock 0076                       _T2CLKCON 003FAE  
                     _NCO1ACCL 003F38            __end_of_buttonsInit 126E                 ?_PGMWriteBlock 0005  
               ___wmul@product 0005                       _IPR1bits 003981                       _PIE1bits 003991  
                  _bootPayload 14DA            __CFG_BORV$VBOR_2P85 000000                       _PIE9bits 003999  
                     _PIR1bits 0039A1                       _SPI1BAUD 003D19                       i2u366_40 1376  
                     i2u366_41 1372                       i2u367_40 1378                       _PIR4bits 0039A4  
                     _SPI1CON0 003D14                       _SPI1CON1 003D15                       _SPI1CON2 003D16  
                     _PIR9bits 0039A9                       _SMT1CON0 003F1E                       _SMT1CON1 003F1F  
                     _SMT1CPWL 003F18                buttonsUpdate@PA 0001                buttonsUpdate@PB 0002  
              buttonsUpdate@PC 0003                       _SMT1TMRH 003F13                       _SMT1TMRL 003F12  
                     _SMT1TMRU 003F14    buttonsGetMessage@analogMode 0004                   _SPI1INTFbits 003D1A  
                    _portsInit 13C4               __size_of_ADCInit 01B8                     _ADCON2bits 003EFA  
            ___wmul@multiplier 0001            __end_of_PGMEraseRow 14DA                   _PGMReadBlock 12E4  
             ?_EEPROMWriteByte 0001                      main@inBut 00F3                   ??_configInit 0009  
            ?_configSetDefault 0001                   _SMT1CON1bits 003F1F                    _INTCON0bits 003FD2  
                    copy_data0 0FCE               __size_of_SIClear 0012             ??_configSetDefault 0009  
                     __Hrparam 0000                 _configFlashAll 1626                       __Lrparam 0000  
           __CFG_BOREN$SBORDIS 000000             __end_of_configInit 1482               __size_of___awdiv 0088  
       EEPROMWriteByte@address 0002                     ?_portsInit 0001       __end_of_buttonsBuildLUTs 0EF6  
                  _buttonsInit 11EE                       __pivt0x8 0008                       __ptext10 11EE  
                     __ptext11 155A                       __ptext20 0D4C                       __ptext12 0EF6  
                     __ptext21 105A                       __ptext13 1590                       __ptext30 135A  
                     __ptext22 0C6A                       __ptext14 15C4                       __ptext31 1706  
                     __ptext23 151E                       __ptext15 0E24                       __ptext24 16E2  
                     __ptext16 0AB8                       __ptext25 116C                       __ptext17 15F8  
                     __ptext26 1482                       __ptext18 10E4                       __ptext27 16F4  
                     __ptext19 14DA                       __ptext28 12E4                       __ptext29 0900  
              ??_PGMWriteBlock 0009                  __size_of_main 05D4         __end_of_configFlashAll 1652  
         __CFG_WDTCWS$WDTCWS_7 000000          __end_of_buttonsUpdate 0900                 _SIConfigureCLC 0C6A  
               buttonsUpdate@i 0004                    _PGMEraseRow 1482                       main@addr 00F0  
        __size_of_SIGetCommand 003C                    _NVMCON1bits 0039E5       __size_of_buttonsBuildLUT 01B2  
  __size_of_buttonsSetMapByte0 002C    __size_of_buttonsSetMapByte1 002C                       memset@p1 0001  
                     intlevel2 0000                   _SIBitCounter 003F  buttonsGetMessage@triggersMode 0001  
              ?_configFlashAll 0001              __CFG_CLKOUTEN$OFF 000000                    _PPSLOCKbits 003ABF  
       __end_of_SIConfigureCLC 0D4C                   _SIGetCommand 151E                     _SPI1TWIDTH 003D18  
                  _prevButtons 0039                    ??_portsInit 0001                     _SMT1SIGPPS 003AD2  
              PGMEraseRow@addr 0001         __size_of_SISendMessage 00D8                   ?_bootPayload 0001  
                _SIByteCounter 003E                ?_SIConfigureCLC 0001  
