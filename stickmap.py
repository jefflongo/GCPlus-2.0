import numpy as np
from tkinter import Tk, Canvas
from datetime import datetime

file_name = "sticks_lut"

PIXEL_WIDTH = 5
PIXEL_HEIGHT = PIXEL_WIDTH
WINDOW_WIDTH = PIXEL_WIDTH * 128
WINDOW_HEIGHT = PIXEL_HEIGHT * 128

MAP_EMPTY = 0x00
MAP_ANGLE_HORIZ = 0x01
MAP_ANGLE_VERT = 0x02
MAP_SHIELD_DROP = 0x04
MAP_C_HORIZ = 0x40
MAP_C_VERT = 0x80


def cart2pol(x, y):
    mag = np.sqrt(x ** 2 + y ** 2)
    ang = np.degrees(np.arctan2(y, x))
    return (mag, ang)


def generate_lut(map):
    file = open(file_name + ".c", 'w')
    file.write("// This file was autogenerated on " +
               datetime.now().strftime("%Y-%m-%d %H:%M:%S") + "\n\n")
    file.write("#include \"" + file_name + ".h\"\n\n")
    file.write("const uint8_t " + file_name + "[128][128] = {\n")
    for x in range(128):
        file.write("\t{\n\t\t")
        i = 8
        for y in range(128):
            file.write("0x")
            file.write(format(map[x, y], '02x'))
            file.write(", " if y < 127 else "")
            i -= 1
            if (i == 0 and y < 127):
                file.write("\n\t\t")
                i = 8
        file.write("\n\t},\n" if x < 127 else "\n\t}\n")
    file.write("};\n")


if __name__ == "__main__":
    root = Tk()
    canvas = Canvas(root, width=WINDOW_WIDTH, height=WINDOW_HEIGHT)
    map = np.zeros((128, 128), dtype=np.uint8)

    for x in range(128):
        for y in range(128):
            mag, ang = cart2pol(x, y)
            color = "white"
            if (mag >= 70):
                if (6 <= ang <= 30):
                    map[x, y] |= MAP_ANGLE_HORIZ
                    color = "green"
                elif (90 - 30 <= ang <= 90 - 6):
                    map[x, y] |= MAP_ANGLE_VERT
                    color = "blue"
            if (mag >= 23):
                if (ang <= 60):
                    map[x, y] |= MAP_C_HORIZ
                elif (ang > 60):
                    map[x, y] |= MAP_C_VERT

            canvas.create_rectangle(1 + x * PIXEL_WIDTH, WINDOW_HEIGHT - y * PIXEL_HEIGHT, 1 + (
                x + 1) * PIXEL_WIDTH, WINDOW_HEIGHT - (y + 1) * PIXEL_HEIGHT, fill=color, outline="black")

    canvas.create_arc(WINDOW_WIDTH, 2 * WINDOW_HEIGHT,
                      -WINDOW_WIDTH, 1, extent="180", outline="magenta")
    canvas.pack()
    generate_lut(map)
    root.mainloop()
