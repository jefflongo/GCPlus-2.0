

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Mar 27 20:39:31 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F25K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	ivt0x200C,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51  0000                     
    52                           ; Version 2.05
    53                           ; Generated 20/12/2018 GMT
    54                           ; 
    55                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F25K42 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     
    87                           	psect	idataCOMRAM
    88  003560                     __pidataCOMRAM:
    89                           	opt callstack 0
    90                           
    91                           ;initializer for _ADCValues
    92  003560  80                 	db	128
    93  003561  80                 	db	128
    94  003562  80                 	db	128
    95  003563  80                 	db	128
    96  003564  00                 	db	0
    97  003565  00                 	db	0
    98                           
    99                           ;initializer for _ADCChannels
   100  003566  11                 	db	17
   101  003567  12                 	db	18
   102  003568  13                 	db	19
   103  003569  14                 	db	20
   104  00356A  15                 	db	21
   105  00356B  10                 	db	16
   106  0000                     _NVMDAT	set	14819
   107  0000                     _NVMADRL	set	14816
   108  0000                     _NVMCON1	set	14821
   109  0000                     _NVMCON1bits	set	14821
   110  0000                     _NVMCON2	set	14822
   111  0000                     _PIE1bits	set	14737
   112  0000                     _IPR1bits	set	14721
   113  0000                     _PIR1bits	set	14753
   114  0000                     _PIR4bits	set	14756
   115  0000                     _PIE9bits	set	14745
   116  0000                     _PIR9bits	set	14761
   117  0000                     _TMR0IF	set	118047
   118  0000                     _ADTIF	set	118027
   119  0000                     _SMT1PWAIF	set	118031
   120  0000                     _SMT1PWAIE	set	117903
   121  0000                     _ODCONC	set	14946
   122  0000                     _ODCONB	set	14930
   123  0000                     _ODCONA	set	14914
   124  0000                     _WPUC	set	14945
   125  0000                     _WPUB	set	14929
   126  0000                     _WPUA	set	14913
   127  0000                     _ANSELB	set	14928
   128  0000                     _ANSELA	set	14912
   129  0000                     _RB4PPS	set	14860
   130  0000                     _SMT1SIGPPS	set	15058
   131  0000                     _T6INPPS	set	15052
   132  0000                     _PPSLOCKbits	set	15039
   133  0000                     _PPSLOCK	set	15039
   134  0000                     _ANSELC	set	14944
   135  0000                     _DMA1CON0bits	set	15356
   136  0000                     _DMA2CON0	set	15324
   137  0000                     _DMA2CON1bits	set	15325
   138  0000                     _DMA2SIRQ	set	15327
   139  0000                     _DMA2DSZL	set	15310
   140  0000                     _DMA2DSZH	set	15311
   141  0000                     _DMA2SSZL	set	15319
   142  0000                     _DMA2SSZH	set	15320
   143  0000                     _DMA2DSAL	set	15312
   144  0000                     _DMA2DSAH	set	15313
   145  0000                     _DMA2SSAL	set	15321
   146  0000                     _DMA2SSAH	set	15322
   147  0000                     _DMA2SSAU	set	15323
   148  0000                     _DMA1CON0	set	15356
   149  0000                     _DMA1CON1bits	set	15357
   150  0000                     _DMA1SIRQ	set	15359
   151  0000                     _DMA1DSZL	set	15342
   152  0000                     _DMA1DSZH	set	15343
   153  0000                     _DMA1SSZL	set	15351
   154  0000                     _DMA1SSZH	set	15352
   155  0000                     _DMA1DSAL	set	15344
   156  0000                     _DMA1DSAH	set	15345
   157  0000                     _DMA1SSAL	set	15353
   158  0000                     _DMA1SSAH	set	15354
   159  0000                     _DMA1SSAU	set	15355
   160  0000                     _CLC4CON	set	15446
   161  0000                     _CLC4GLS3	set	15455
   162  0000                     _CLC4GLS2	set	15454
   163  0000                     _CLC4GLS1	set	15453
   164  0000                     _CLC4GLS0	set	15452
   165  0000                     _CLC4SEL3	set	15451
   166  0000                     _CLC4SEL2	set	15450
   167  0000                     _CLC4SEL1	set	15449
   168  0000                     _CLC4SEL0	set	15448
   169  0000                     _CLC4POL	set	15447
   170  0000                     _CLC3CON	set	15456
   171  0000                     _CLC3GLS3	set	15465
   172  0000                     _CLC3GLS2	set	15464
   173  0000                     _CLC3GLS1	set	15463
   174  0000                     _CLC3GLS0	set	15462
   175  0000                     _CLC3SEL3	set	15461
   176  0000                     _CLC3SEL2	set	15460
   177  0000                     _CLC3SEL1	set	15459
   178  0000                     _CLC3SEL0	set	15458
   179  0000                     _CLC3POL	set	15457
   180  0000                     _CLC2CON	set	15466
   181  0000                     _CLC2GLS3	set	15475
   182  0000                     _CLC2GLS2	set	15474
   183  0000                     _CLC2GLS1	set	15473
   184  0000                     _CLC2GLS0	set	15472
   185  0000                     _CLC2SEL3	set	15471
   186  0000                     _CLC2SEL2	set	15470
   187  0000                     _CLC2SEL1	set	15469
   188  0000                     _CLC2SEL0	set	15468
   189  0000                     _CLC2POL	set	15467
   190  0000                     _CLC1CON	set	15476
   191  0000                     _CLC1GLS3	set	15485
   192  0000                     _CLC1GLS2	set	15484
   193  0000                     _CLC1GLS1	set	15483
   194  0000                     _CLC1GLS0	set	15482
   195  0000                     _CLC1SEL3	set	15481
   196  0000                     _CLC1SEL2	set	15480
   197  0000                     _CLC1SEL1	set	15479
   198  0000                     _CLC1SEL0	set	15478
   199  0000                     _CLC1POL	set	15477
   200  0000                     _SPI1TXB	set	15633
   201  0000                     _SPI1TCNTL	set	15634
   202  0000                     _SPI1INTFbits	set	15642
   203  0000                     _SPI1TWIDTH	set	15640
   204  0000                     _SPI1STATUSbits	set	15639
   205  0000                     _SPI1CON0	set	15636
   206  0000                     _SPI1CON2	set	15638
   207  0000                     _SPI1CON1	set	15637
   208  0000                     _SPI1BAUD	set	15641
   209  0000                     _SPI1CLK	set	15644
   210  0000                     _ADCPbits	set	16087
   211  0000                     _ADACT	set	16126
   212  0000                     _ADRPT	set	16108
   213  0000                     _ADACQL	set	16115
   214  0000                     _ADREF	set	16125
   215  0000                     _ADCLK	set	16127
   216  0000                     _ADCON3	set	16123
   217  0000                     _ADCON2bits	set	16122
   218  0000                     _ADCON2	set	16122
   219  0000                     _ADCON1	set	16121
   220  0000                     _ADCON0	set	16120
   221  0000                     _ADFLTRL	set	16102
   222  0000                     _ADPCH	set	16113
   223  0000                     _SMT1CON1bits	set	16159
   224  0000                     _SMT1SIG	set	16162
   225  0000                     _SMT1WIN	set	16163
   226  0000                     _SMT1CLK	set	16161
   227  0000                     _SMT1CON1	set	16159
   228  0000                     _SMT1CON0	set	16158
   229  0000                     _SMT1TMRU	set	16148
   230  0000                     _SMT1TMRH	set	16147
   231  0000                     _SMT1TMRL	set	16146
   232  0000                     _SMT1PRU	set	16157
   233  0000                     _SMT1PRH	set	16156
   234  0000                     _SMT1PRL	set	16155
   235  0000                     _CCPTMRS1	set	16223
   236  0000                     _SMT1CPWL	set	16152
   237  0000                     _NCO1ACCL	set	16184
   238  0000                     _IVTBASE	set	16341
   239  0000                     _INTCON0bits	set	16338
   240  0000                     _TMR0H	set	16311
   241  0000                     _T0CON1	set	16313
   242  0000                     _T0CON0	set	16312
   243  0000                     _TRISBbits	set	16323
   244  0000                     _PWM5CON	set	16238
   245  0000                     _PWM5DCL	set	16236
   246  0000                     _PWM5DCH	set	16237
   247  0000                     _T2HLT	set	16301
   248  0000                     _T2CLKCON	set	16302
   249  0000                     _PORTBbits	set	16331
   250  0000                     _T2PR	set	16299
   251  0000                     _T2TMR	set	16298
   252  0000                     _T2RST	set	16303
   253  0000                     _T2CLK	set	16302
   254  0000                     _T2CON	set	16300
   255  0000                     _T6HLT	set	16277
   256  0000                     _T6PR	set	16275
   257  0000                     _T6RST	set	16279
   258  0000                     _T6CLK	set	16278
   259  0000                     _T6CON	set	16276
   260  0000                     _T6TMR	set	16274
   261  0000                     _PCL	set	16377
   262  0000                     _PCLATH	set	16378
   263  0000                     _PCLATU	set	16379
   264  0000                     _IVTLOCK	set	16340
   265  0000                     _STKPTR	set	16380
   266  0000                     _TRISC	set	16324
   267  0000                     _TRISB	set	16323
   268  0000                     _TRISA	set	16322
   269  0000                     _LATB	set	16315
   270  0000                     _INTCON0	set	16338
   271  0000                     _PORTC	set	16332
   272  0000                     _PORTB	set	16331
   273  0000                     _PORTA	set	16330
   274  0000                     _IVTLOCKED	set	130720
   275  0000                     _GIE	set	130711
   276                           
   277                           ; #config settings
   278  0000                     
   279                           	psect	cinit
   280  002EA4                     __pcinit:
   281                           	opt callstack 0
   282  002EA4                     start_initialization:
   283                           	opt callstack 0
   284  002EA4                     __initialization:
   285                           	opt callstack 0
   286                           
   287                           ; Initialize objects allocated to COMRAM (12 bytes)
   288                           ; load TBLPTR registers with __pidataCOMRAM
   289  002EA4  0E60               	movlw	low __pidataCOMRAM
   290  002EA6  6EF6               	movwf	tblptrl,c
   291  002EA8  0E35               	movlw	high __pidataCOMRAM
   292  002EAA  6EF7               	movwf	tblptrh,c
   293  002EAC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   294  002EAE  6EF8               	movwf	tblptru,c
   295  002EB0  EE00  F051         	lfsr	0,__pdataCOMRAM
   296  002EB4  EE10 F00C          	lfsr	1,12
   297  002EB8                     copy_data0:
   298  002EB8  0009               	tblrd		*+
   299  002EBA  006F FFD7 FFEE     	movff	tablat,postinc0
   300  002EC0  50E5               	movf	postdec1,w,c
   301  002EC2  50E1               	movf	fsr1l,w,c
   302  002EC4  E1F9               	bnz	copy_data0
   303                           
   304                           ; Clear objects allocated to BANK5 (256 bytes)
   305  002EC6  EE01  F100         	lfsr	0,__pbssBANK5
   306  002ECA  EE10 F100          	lfsr	1,256
   307  002ECE                     clear_0:
   308  002ECE  6AEE               	clrf	postinc0,c
   309  002ED0  50E5               	movf	postdec1,w,c
   310  002ED2  50E1               	movf	fsr1l,w,c
   311  002ED4  E1FC               	bnz	clear_0
   312  002ED6  50E2               	movf	fsr1h,w,c
   313  002ED8  E1FA               	bnz	clear_0
   314                           
   315                           ; Clear objects allocated to BANK4 (256 bytes)
   316  002EDA  EE01  F000         	lfsr	0,__pbssBANK4
   317  002EDE  EE10 F100          	lfsr	1,256
   318  002EE2                     clear_1:
   319  002EE2  6AEE               	clrf	postinc0,c
   320  002EE4  50E5               	movf	postdec1,w,c
   321  002EE6  50E1               	movf	fsr1l,w,c
   322  002EE8  E1FC               	bnz	clear_1
   323  002EEA  50E2               	movf	fsr1h,w,c
   324  002EEC  E1FA               	bnz	clear_1
   325                           
   326                           ; Clear objects allocated to BANK3 (256 bytes)
   327  002EEE  EE00  F300         	lfsr	0,__pbssBANK3
   328  002EF2  EE10 F100          	lfsr	1,256
   329  002EF6                     clear_2:
   330  002EF6  6AEE               	clrf	postinc0,c
   331  002EF8  50E5               	movf	postdec1,w,c
   332  002EFA  50E1               	movf	fsr1l,w,c
   333  002EFC  E1FC               	bnz	clear_2
   334  002EFE  50E2               	movf	fsr1h,w,c
   335  002F00  E1FA               	bnz	clear_2
   336                           
   337                           ; Clear objects allocated to BANK2 (256 bytes)
   338  002F02  EE00  F200         	lfsr	0,__pbssBANK2
   339  002F06  EE10 F100          	lfsr	1,256
   340  002F0A                     clear_3:
   341  002F0A  6AEE               	clrf	postinc0,c
   342  002F0C  50E5               	movf	postdec1,w,c
   343  002F0E  50E1               	movf	fsr1l,w,c
   344  002F10  E1FC               	bnz	clear_3
   345  002F12  50E2               	movf	fsr1h,w,c
   346  002F14  E1FA               	bnz	clear_3
   347                           
   348                           ; Clear objects allocated to BANK1 (36 bytes)
   349  002F16  EE00  F100         	lfsr	0,__pbssBANK1
   350  002F1A  0E24               	movlw	36
   351  002F1C                     clear_4:
   352  002F1C  6AEE               	clrf	postinc0,c
   353  002F1E  06E8               	decf	wreg,f,c
   354  002F20  E1FD               	bnz	clear_4
   355                           
   356                           ; Clear objects allocated to BANK0 (54 bytes)
   357  002F22  EE00  F0B6         	lfsr	0,__pbssBANK0
   358  002F26  0E36               	movlw	54
   359  002F28                     clear_5:
   360  002F28  6AEE               	clrf	postinc0,c
   361  002F2A  06E8               	decf	wreg,f,c
   362  002F2C  E1FD               	bnz	clear_5
   363                           
   364                           ; Clear objects allocated to COMRAM (43 bytes)
   365  002F2E  EE00  F001         	lfsr	0,__pbssCOMRAM
   366  002F32  0E2B               	movlw	43
   367  002F34                     clear_6:
   368  002F34  6AEE               	clrf	postinc0,c
   369  002F36  06E8               	decf	wreg,f,c
   370  002F38  E1FD               	bnz	clear_6
   371                           
   372                           ;
   373                           ; Setup IVTBASE
   374                           ;
   375  002F3A  0E0C               	movlw	(ivt0x200C_base shr 0)& (0+255)
   376  002F3C  6ED5               	movwf	213,c
   377  002F3E  0E20               	movlw	(ivt0x200C_base shr (0+8))& (0+255)
   378  002F40  6ED6               	movwf	214,c
   379  002F42  0E00               	movlw	(ivt0x200C_base shr (0+16))& (0+255)
   380  002F44  6ED7               	movwf	215,c
   381  002F46                     end_of_initialization:
   382                           	opt callstack 0
   383  002F46                     __end_of__initialization:
   384                           	opt callstack 0
   385  002F46  0E00               	movlw	low (__Lmediumconst shr (0+16))
   386  002F48  6EF8               	movwf	tblptru,c
   387  002F4A  0100               	movlb	0
   388  002F4C  EF11  F010         	goto	_main	;jump to C main() function
   389                           
   390                           	psect	bssCOMRAM
   391  000001                     __pbssCOMRAM:
   392                           	opt callstack 0
   393  000001                     _buttonsTimers:
   394                           	opt callstack 0
   395  000001                     	ds	15
   396  000010                     _origins:
   397                           	opt callstack 0
   398  000010                     	ds	6
   399  000016                     _outButtons:
   400                           	opt callstack 0
   401  000016                     	ds	4
   402  00001A                     _prevButtons:
   403                           	opt callstack 0
   404  00001A                     	ds	3
   405  00001D                     _SITempByte:
   406                           	opt callstack 0
   407  00001D                     	ds	1
   408  00001E                     _SICMDReceived:
   409                           	opt callstack 0
   410  00001E                     	ds	1
   411  00001F                     _SIByteCounter:
   412                           	opt callstack 0
   413  00001F                     	ds	1
   414  000020                     _SIBitCounter:
   415                           	opt callstack 0
   416  000020                     	ds	1
   417  000021                     _ButtonsID:
   418                           	opt callstack 0
   419  000021                     	ds	1
   420  000022                     _buttonsMessage:
   421                           	opt callstack 0
   422  000022                     	ds	10
   423                           
   424                           	psect	dataCOMRAM
   425  000051                     __pdataCOMRAM:
   426                           	opt callstack 0
   427  000051                     _ADCValues:
   428                           	opt callstack 0
   429  000051                     	ds	6
   430  000057                     _ADCChannels:
   431                           	opt callstack 0
   432  000057                     	ds	6
   433                           
   434                           	psect	bssBANK0
   435  0000B6                     __pbssBANK0:
   436                           	opt callstack 0
   437  0000B6                     _config:
   438                           	opt callstack 0
   439  0000B6                     	ds	24
   440  0000CE                     _buttonsMapByte1:
   441                           	opt callstack 0
   442  0000CE                     	ds	15
   443  0000DD                     _buttonsMapByte0:
   444                           	opt callstack 0
   445  0000DD                     	ds	15
   446                           
   447                           	psect	bssBANK1
   448  000100                     __pbssBANK1:
   449                           	opt callstack 0
   450  000100                     _SIInputMessage:
   451                           	opt callstack 0
   452  000100                     	ds	36
   453                           
   454                           	psect	bssBANK2
   455  000200                     __pbssBANK2:
   456                           	opt callstack 0
   457  000200                     _LUT_CX:
   458                           	opt callstack 0
   459  000200                     	ds	256
   460                           
   461                           	psect	bssBANK3
   462  000300                     __pbssBANK3:
   463                           	opt callstack 0
   464  000300                     _LUT_CY:
   465                           	opt callstack 0
   466  000300                     	ds	256
   467                           
   468                           	psect	bssBANK4
   469  000400                     __pbssBANK4:
   470                           	opt callstack 0
   471  000400                     _LUT_SX:
   472                           	opt callstack 0
   473  000400                     	ds	256
   474                           
   475                           	psect	bssBANK5
   476  000500                     __pbssBANK5:
   477                           	opt callstack 0
   478  000500                     _LUT_SY:
   479                           	opt callstack 0
   480  000500                     	ds	256
   481                           
   482                           	psect	cstackBANK0
   483  000060                     __pcstackBANK0:
   484                           	opt callstack 0
   485  000060                     main@cmd:
   486                           	opt callstack 0
   487                           
   488                           ; 36 bytes @ 0x0
   489  000060                     	ds	36
   490  000084                     main@flashBufferIdx:
   491                           	opt callstack 0
   492                           
   493                           ; 1 bytes @ 0x24
   494  000084                     	ds	1
   495  000085                     main@msgAnswer:
   496                           	opt callstack 0
   497                           
   498                           ; 36 bytes @ 0x25
   499  000085                     	ds	36
   500  0000A9                     main@btnMsg:
   501                           	opt callstack 0
   502                           
   503                           ; 2 bytes @ 0x49
   504  0000A9                     	ds	2
   505  0000AB                     main@btnMsg_329:
   506                           	opt callstack 0
   507                           
   508                           ; 2 bytes @ 0x4B
   509  0000AB                     	ds	2
   510  0000AD                     main@len:
   511                           	opt callstack 0
   512                           
   513                           ; 1 bytes @ 0x4D
   514  0000AD                     	ds	1
   515  0000AE                     main@addr:
   516                           	opt callstack 0
   517                           
   518                           ; 2 bytes @ 0x4E
   519  0000AE                     	ds	2
   520  0000B0                     main@cmdLen:
   521                           	opt callstack 0
   522                           
   523                           ; 1 bytes @ 0x50
   524  0000B0                     	ds	1
   525  0000B1                     main@gcpLocked:
   526                           	opt callstack 0
   527                           
   528                           ; 1 bytes @ 0x51
   529  0000B1                     	ds	1
   530  0000B2                     main@inBut:
   531                           	opt callstack 0
   532                           
   533                           ; 3 bytes @ 0x52
   534  0000B2                     	ds	3
   535  0000B5                     main@i:
   536                           	opt callstack 0
   537                           
   538                           ; 1 bytes @ 0x55
   539  0000B5                     	ds	1
   540                           
   541                           	psect	cstackCOMRAM
   542  00002C                     __pcstackCOMRAM:
   543                           	opt callstack 0
   544  00002C                     ?_buttonsGetMessage:
   545                           	opt callstack 0
   546  00002C                     ?_buttonsGetOrigins:
   547                           	opt callstack 0
   548  00002C                     ?_buttonsGetMapByte0:
   549                           	opt callstack 0
   550  00002C                     ?_buttonsGetMapByte1:
   551                           	opt callstack 0
   552  00002C                     ?___wmul:
   553                           	opt callstack 0
   554  00002C                     portsInit@state:
   555                           	opt callstack 0
   556  00002C                     ADCInit@syCh:
   557                           	opt callstack 0
   558  00002C                     buttonsUpdate@PA:
   559                           	opt callstack 0
   560  00002C                     buttonsGetMessage@triggersMode:
   561                           	opt callstack 0
   562  00002C                     buttonsSetOrigins@triggersMode:
   563                           	opt callstack 0
   564  00002C                     EEPROMReadByte@address:
   565                           	opt callstack 0
   566  00002C                     EEPROMWriteByte@data:
   567                           	opt callstack 0
   568  00002C                     SIGetCommand@msg:
   569                           	opt callstack 0
   570  00002C                     buttonsSetMapByte0@map:
   571                           	opt callstack 0
   572  00002C                     buttonsSetMapByte1@map:
   573                           	opt callstack 0
   574  00002C                     ___wmul@multiplier:
   575                           	opt callstack 0
   576  00002C                     memset@p1:
   577                           	opt callstack 0
   578                           
   579                           ; 2 bytes @ 0x0
   580  00002C                     	ds	1
   581  00002D                     ADCInit@cxCh:
   582                           	opt callstack 0
   583  00002D                     buttonsUpdate@PB:
   584                           	opt callstack 0
   585  00002D                     EEPROMWriteByte@address:
   586                           	opt callstack 0
   587                           
   588                           ; 1 bytes @ 0x1
   589  00002D                     	ds	1
   590  00002E                     ??_buttonsGetMessage:
   591  00002E                     SIGetCommand@i:
   592                           	opt callstack 0
   593  00002E                     ADCInit@cyCh:
   594                           	opt callstack 0
   595  00002E                     buttonsUpdate@PC:
   596                           	opt callstack 0
   597  00002E                     buttonsSetMapByte0@i:
   598                           	opt callstack 0
   599  00002E                     buttonsSetMapByte1@i:
   600                           	opt callstack 0
   601  00002E                     buttonsGetMapByte0@i:
   602                           	opt callstack 0
   603  00002E                     buttonsGetMapByte1@i:
   604                           	opt callstack 0
   605  00002E                     configFlashAll@data:
   606                           	opt callstack 0
   607  00002E                     ___wmul@multiplicand:
   608                           	opt callstack 0
   609  00002E                     memset@c:
   610                           	opt callstack 0
   611                           
   612                           ; 2 bytes @ 0x2
   613  00002E                     	ds	1
   614  00002F                     ??_ADCInit:
   615  00002F                     buttonsUpdate@i:
   616                           	opt callstack 0
   617  00002F                     buttonsGetMessage@analogMode:
   618                           	opt callstack 0
   619                           
   620                           ; 1 bytes @ 0x3
   621  00002F                     	ds	1
   622  000030                     configFlashAll@i:
   623                           	opt callstack 0
   624  000030                     buttonsGetMessage@ra:
   625                           	opt callstack 0
   626  000030                     ___wmul@product:
   627                           	opt callstack 0
   628  000030                     memset@n:
   629                           	opt callstack 0
   630  000030                     buttonsUpdate@toggledButtons:
   631                           	opt callstack 0
   632                           
   633                           ; 3 bytes @ 0x4
   634  000030                     	ds	1
   635  000031                     buttonsGetMessage@la:
   636                           	opt callstack 0
   637                           
   638                           ; 1 bytes @ 0x5
   639  000031                     	ds	1
   640  000032                     ?___awdiv:
   641                           	opt callstack 0
   642  000032                     SISendMessage@msg:
   643                           	opt callstack 0
   644  000032                     ___awdiv@dividend:
   645                           	opt callstack 0
   646  000032                     memset@p:
   647                           	opt callstack 0
   648                           
   649                           ; 2 bytes @ 0x6
   650  000032                     	ds	1
   651  000033                     ADCInit@sxCh:
   652                           	opt callstack 0
   653                           
   654                           ; 1 bytes @ 0x7
   655  000033                     	ds	1
   656  000034                     SISendMessage@len:
   657                           	opt callstack 0
   658  000034                     ADCInit@i:
   659                           	opt callstack 0
   660  000034                     configInit@data:
   661                           	opt callstack 0
   662  000034                     ___awdiv@divisor:
   663                           	opt callstack 0
   664                           
   665                           ; 2 bytes @ 0x8
   666  000034                     	ds	1
   667  000035                     ??_SISendMessage:
   668                           
   669                           ; 1 bytes @ 0x9
   670  000035                     	ds	1
   671  000036                     configInit@i:
   672                           	opt callstack 0
   673  000036                     ___awdiv@counter:
   674                           	opt callstack 0
   675                           
   676                           ; 1 bytes @ 0xA
   677  000036                     	ds	1
   678  000037                     ___awdiv@sign:
   679                           	opt callstack 0
   680                           
   681                           ; 1 bytes @ 0xB
   682  000037                     	ds	1
   683  000038                     ___awdiv@quotient:
   684                           	opt callstack 0
   685                           
   686                           ; 2 bytes @ 0xC
   687  000038                     	ds	2
   688  00003A                     SISendMessage@idx:
   689                           	opt callstack 0
   690  00003A                     buttonsBuildLUT@LUT:
   691                           	opt callstack 0
   692                           
   693                           ; 2 bytes @ 0xE
   694  00003A                     	ds	1
   695  00003B                     SISendMessage@leftToSend:
   696                           	opt callstack 0
   697                           
   698                           ; 1 bytes @ 0xF
   699  00003B                     	ds	1
   700  00003C                     buttonsBuildLUT@minVal:
   701                           	opt callstack 0
   702                           
   703                           ; 1 bytes @ 0x10
   704  00003C                     	ds	1
   705  00003D                     buttonsBuildLUT@maxVal:
   706                           	opt callstack 0
   707                           
   708                           ; 1 bytes @ 0x11
   709  00003D                     	ds	1
   710  00003E                     buttonsBuildLUT@origin:
   711                           	opt callstack 0
   712                           
   713                           ; 1 bytes @ 0x12
   714  00003E                     	ds	1
   715  00003F                     buttonsBuildLUT@dz:
   716                           	opt callstack 0
   717                           
   718                           ; 1 bytes @ 0x13
   719  00003F                     	ds	1
   720  000040                     buttonsBuildLUT@dzMode:
   721                           	opt callstack 0
   722                           
   723                           ; 1 bytes @ 0x14
   724  000040                     	ds	1
   725  000041                     buttonsBuildLUT@invert:
   726                           	opt callstack 0
   727                           
   728                           ; 1 bytes @ 0x15
   729  000041                     	ds	1
   730  000042                     ??_buttonsBuildLUT:
   731                           
   732                           ; 1 bytes @ 0x16
   733  000042                     	ds	3
   734  000045                     _buttonsBuildLUT$1521:
   735                           	opt callstack 0
   736                           
   737                           ; 2 bytes @ 0x19
   738  000045                     	ds	2
   739  000047                     buttonsBuildLUT@range:
   740                           	opt callstack 0
   741                           
   742                           ; 2 bytes @ 0x1B
   743  000047                     	ds	2
   744  000049                     buttonsBuildLUT@tempVal:
   745                           	opt callstack 0
   746                           
   747                           ; 2 bytes @ 0x1D
   748  000049                     	ds	2
   749  00004B                     buttonsBuildLUT@i:
   750                           	opt callstack 0
   751                           
   752                           ; 2 bytes @ 0x1F
   753  00004B                     	ds	2
   754  00004D                     buttonsBuildLUT@radius:
   755                           	opt callstack 0
   756                           
   757                           ; 2 bytes @ 0x21
   758  00004D                     	ds	2
   759  00004F                     ??_main:
   760                           
   761                           ; 1 bytes @ 0x23
   762  00004F                     	ds	2
   763                           
   764 ;;
   765 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   766 ;;
   767 ;; *************** function _main *****************
   768 ;; Defined at:
   769 ;;		line 79 in file "main.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;		None
   772 ;; Auto vars:     Size  Location     Type
   773 ;;  len             1   77[BANK0 ] unsigned char 
   774 ;;  btnMsg          2   75[BANK0 ] PTR unsigned char 
   775 ;;		 -> buttonsMessage(10), 
   776 ;;  btnMsg          2   73[BANK0 ] PTR unsigned char 
   777 ;;		 -> buttonsMessage(10), 
   778 ;;  flashBuffer    64    0        unsigned char [64]
   779 ;;  msgAnswer      36   37[BANK0 ] unsigned char [36]
   780 ;;  cmd            36    0[BANK0 ] unsigned char [36]
   781 ;;  inBut           3   82[BANK0 ] struct .
   782 ;;  addr            2   78[BANK0 ] unsigned int 
   783 ;;  i               1   85[BANK0 ] unsigned char 
   784 ;;  gcpLocked       1   81[BANK0 ] unsigned char 
   785 ;;  cmdLen          1   80[BANK0 ] unsigned char 
   786 ;;  flashBufferI    1   36[BANK0 ] unsigned char 
   787 ;; Return value:  Size  Location     Type
   788 ;;                  1    wreg      void 
   789 ;; Registers used:
   790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   796 ;;      Params:         0       0       0       0       0       0       0       0       0
   797 ;;      Locals:         0      86       0       0       0       0       0       0       0
   798 ;;      Temps:          2       0       0       0       0       0       0       0       0
   799 ;;      Totals:         2      86       0       0       0       0       0       0       0
   800 ;;Total ram usage:       88 bytes
   801 ;; Hardware stack levels required when called:    6
   802 ;; This function calls:
   803 ;;		_ADCInit
   804 ;;		_EEPROMReadByte
   805 ;;		_EEPROMWriteByte
   806 ;;		_SIClear
   807 ;;		_SIGetCommand
   808 ;;		_SIInit
   809 ;;		_SISendMessage
   810 ;;		_bootBootloader
   811 ;;		_buttonsBuildLUTs
   812 ;;		_buttonsGetMapByte0
   813 ;;		_buttonsGetMapByte1
   814 ;;		_buttonsGetMessage
   815 ;;		_buttonsGetOrigins
   816 ;;		_buttonsInit
   817 ;;		_buttonsSetMapByte0
   818 ;;		_buttonsSetMapByte1
   819 ;;		_buttonsSetOrigins
   820 ;;		_buttonsUpdate
   821 ;;		_configFlashAll
   822 ;;		_configInit
   823 ;;		_configSetDefault
   824 ;;		_portsInit
   825 ;; This function is called by:
   826 ;;		Startup code after reset
   827 ;; This function uses a non-reentrant model
   828 ;;
   829                           
   830                           	psect	text0
   831  002022                     __ptext0:
   832                           	opt callstack 0
   833  002022                     _main:
   834                           	opt callstack 25
   835                           
   836                           ;main.c: 82: char cmd[0x24];;main.c: 83: char msgAnswer[0x24];;main.c: 84: uint8_t gcpLo
      +                          cked = 1;
   837                           
   838                           ;incstack = 0
   839  002022  0E01               	movlw	1
   840  002024  0100               	movlb	0	; () banked
   841  002026  6FB1               	movwf	main@gcpLocked& (0+255),b
   842                           
   843                           ;main.c: 85: uint16_t addr;;main.c: 88: uint8_t flashBuffer[64];;main.c: 89: uint8_t fla
      +                          shBufferIdx = 0;
   844  002028  0E00               	movlw	0
   845  00202A  6F84               	movwf	main@flashBufferIdx& (0+255),b
   846                           
   847                           ; BSR set to: 0
   848                           ;main.c: 103: portsInit();
   849  00202C  ECE1  F018         	call	_portsInit	;wreg free
   850                           
   851                           ;main.c: 106: inButtons_t inBut;;main.c: 107: inBut.PORTA = PORTA;
   852  002030  006F FF28  F0B2    	movff	16330,main@inBut	;volatile
   853                           
   854                           ;main.c: 108: inBut.PORTB = PORTB;
   855  002036  006F FF2C  F0B3    	movff	16331,main@inBut+1	;volatile
   856                           
   857                           ;main.c: 109: inBut.PORTC = PORTC;
   858  00203C  006F FF30  F0B4    	movff	16332,main@inBut+2	;volatile
   859                           
   860                           ;main.c: 111: configInit();
   861  002042  EC46  F019         	call	_configInit	;wreg free
   862                           
   863                           ;main.c: 112: if (config.triggersMode == 1) {
   864  002046  0100               	movlb	0	; () banked
   865  002048  05CD               	decf	(_config+23)& (0+255),w,b
   866  00204A  A4D8               	btfss	status,2,c
   867  00204C  D003               	goto	l3570
   868                           
   869                           ; BSR set to: 0
   870                           ;main.c: 113: ANSELC |= 0x21;
   871  00204E  0E21               	movlw	33
   872  002050  013A               	movlb	58	; () banked
   873  002052  1360               	iorwf	96,f,b	;volatile
   874  002054                     l3570:
   875                           
   876                           ;main.c: 114: };main.c: 116: ADCInit(config.SXChan, config.SYChan, config.CXChan, config
      +                          .CYChan);
   877  002054  0060  F314  F02C   	movff	_config+15,ADCInit@syCh
   878  00205A  0060  F318  F02D   	movff	_config+16,ADCInit@cxCh
   879  002060  0060  F31C  F02E   	movff	_config+17,ADCInit@cyCh
   880  002066  0100               	movlb	0	; () banked
   881  002068  51C4               	movf	(_config+14)& (0+255),w,b
   882  00206A  EC90  F013         	call	_ADCInit
   883                           
   884                           ;main.c: 117: buttonsInit();
   885  00206E  EC31  F018         	call	_buttonsInit	;wreg free
   886                           
   887                           ;main.c: 118: SIInit();
   888  002072  ECA8  F017         	call	_SIInit	;wreg free
   889                           
   890                           ;main.c: 121: if (!inBut.X && !inBut.Y && !inBut.A) {
   891  002076  0100               	movlb	0	; () banked
   892  002078  A7B3               	btfss	(main@inBut+1)& (0+255),3,b
   893                           
   894                           ; BSR set to: 0
   895  00207A  B5B3               	btfsc	(main@inBut+1)& (0+255),2,b
   896  00207C  D006               	goto	l3584
   897                           
   898                           ; BSR set to: 0
   899  00207E  BFB4               	btfsc	(main@inBut+2)& (0+255),7,b
   900  002080  D004               	goto	l3584
   901                           
   902                           ; BSR set to: 0
   903                           ;main.c: 122: configSetDefault();
   904  002082  EC71  F018         	call	_configSetDefault	;wreg free
   905                           
   906                           ;main.c: 123: configFlashAll();
   907  002086  EC37  F01A         	call	_configFlashAll	;wreg free
   908  00208A                     l3584:
   909                           
   910                           ;main.c: 124: };main.c: 126: buttonsBuildLUTs();
   911  00208A  ECE9  F016         	call	_buttonsBuildLUTs	;wreg free
   912                           
   913                           ;main.c: 127: buttonsSetOrigins(config.triggersMode);
   914  00208E  0100               	movlb	0	; () banked
   915  002090  51CD               	movf	(_config+23)& (0+255),w,b
   916  002092  EC14  F019         	call	_buttonsSetOrigins
   917                           
   918                           ;main.c: 129: INTCON0 = 0x80;
   919  002096  0E80               	movlw	128
   920  002098  6ED2               	movwf	16338,c	;volatile
   921  00209A                     l3590:
   922                           
   923                           ;main.c: 132: inBut.PORTA = PORTA;
   924  00209A  006F FF28  F0B2    	movff	16330,main@inBut	;volatile
   925                           
   926                           ;main.c: 133: inBut.PORTB = PORTB;
   927  0020A0  006F FF2C  F0B3    	movff	16331,main@inBut+1	;volatile
   928                           
   929                           ;main.c: 134: inBut.PORTC = PORTC;
   930  0020A6  006F FF30  F0B4    	movff	16332,main@inBut+2	;volatile
   931                           
   932                           ;main.c: 136: if (inBut.X || inBut.Y || inBut.ST) {
   933  0020AC  0100               	movlb	0	; () banked
   934  0020AE  A7B3               	btfss	(main@inBut+1)& (0+255),3,b
   935                           
   936                           ; BSR set to: 0
   937  0020B0  B5B3               	btfsc	(main@inBut+1)& (0+255),2,b
   938  0020B2  D001               	goto	u2780
   939                           
   940                           ; BSR set to: 0
   941  0020B4  BDB2               	btfsc	main@inBut& (0+255),6,b
   942  0020B6                     u2780:
   943                           
   944                           ; BSR set to: 0
   945  0020B6  0004               	clrwdt		;# 
   946                           
   947                           ;main.c: 138: };main.c: 139: buttonsUpdate();
   948  0020B8  EC09  F012         	call	_buttonsUpdate	;wreg free
   949                           
   950                           ;main.c: 140: cmdLen = SIGetCommand(cmd);
   951  0020BC  0E60               	movlw	low main@cmd
   952  0020BE  6E2C               	movwf	SIGetCommand@msg,c
   953  0020C0  0E00               	movlw	high main@cmd
   954  0020C2  6E2D               	movwf	SIGetCommand@msg+1,c
   955  0020C4  ECB3  F019         	call	_SIGetCommand	;wreg free
   956  0020C8  0100               	movlb	0	; () banked
   957  0020CA  6FB0               	movwf	main@cmdLen& (0+255),b
   958                           
   959                           ; BSR set to: 0
   960                           ;main.c: 142: if (cmdLen > 0) {
   961  0020CC  51B0               	movf	main@cmdLen& (0+255),w,b
   962  0020CE  A4D8               	btfss	status,2,c
   963  0020D0  D16E               	goto	l3814
   964  0020D2  D7E3               	goto	l3590
   965  0020D4                     l3610:
   966                           
   967                           ; BSR set to: 0
   968                           ;main.c: 145: case 0xFF:;main.c: 146: msgAnswer[0] = 0x09;
   969  0020D4  0E09               	movlw	9
   970  0020D6  6F85               	movwf	main@msgAnswer& (0+255),b
   971                           
   972                           ;main.c: 147: msgAnswer[1] = 0x00;
   973  0020D8  0E00               	movlw	0
   974  0020DA  6F86               	movwf	(main@msgAnswer+1)& (0+255),b
   975                           
   976                           ;main.c: 148: msgAnswer[2] = 0x03;
   977  0020DC  0E03               	movlw	3
   978  0020DE  6F87               	movwf	(main@msgAnswer+2)& (0+255),b
   979                           
   980                           ; BSR set to: 0
   981                           ;main.c: 149: SISendMessage(msgAnswer, 3);
   982  0020E0  0E85               	movlw	low main@msgAnswer
   983  0020E2  6E32               	movwf	SISendMessage@msg,c
   984  0020E4  0E00               	movlw	high main@msgAnswer
   985  0020E6  6E33               	movwf	SISendMessage@msg+1,c
   986  0020E8  0E03               	movlw	3
   987  0020EA  6E34               	movwf	SISendMessage@len,c
   988  0020EC  EC7D  F016         	call	_SISendMessage	;wreg free
   989                           
   990                           ;main.c: 150: break;
   991  0020F0  D7D4               	goto	l3590
   992  0020F2                     l3616:
   993                           
   994                           ; BSR set to: 0
   995  0020F2  5162               	movf	(main@cmd+2)& (0+255),w,b
   996                           
   997                           ; Switch size 1, requested type "simple"
   998                           ; Number of cases is 2, Range of values is 1 to 2
   999                           ; switch strategies available:
  1000                           ; Name         Instructions Cycles
  1001                           ; simple_byte            7     4 (average)
  1002                           ;	Chosen strategy is simple_byte
  1003  0020F4  0A01               	xorlw	1	; case 1
  1004  0020F6  A4D8               	btfss	status,2,c
  1005  0020F8  0A03               	xorlw	3	; case 2
  1006                           
  1007                           ; BSR set to: 0
  1008                           ;main.c: 168: SISendMessage(buttonsGetMessage(cmd[1], config.triggersMode), 8);
  1009  0020FA  0060  F334  F02C   	movff	_config+23,buttonsGetMessage@triggersMode
  1010  002100  5161               	movf	(main@cmd+1)& (0+255),w,b
  1011  002102  EC45  F015         	call	_buttonsGetMessage
  1012  002106  0060  F0B0  F032   	movff	?_buttonsGetMessage,SISendMessage@msg
  1013  00210C  0060  F0B4  F033   	movff	?_buttonsGetMessage+1,SISendMessage@msg+1
  1014  002112  0E08               	movlw	8
  1015  002114  6E34               	movwf	SISendMessage@len,c
  1016  002116  EC7D  F016         	call	_SISendMessage	;wreg free
  1017                           
  1018                           ;main.c: 169: break;
  1019  00211A  D7BF               	goto	l3590
  1020  00211C                     l3620:
  1021                           
  1022                           ; BSR set to: 0
  1023                           ;main.c: 172: case 0x42:;main.c: 173: SISendMessage(buttonsGetOrigins(), 10);
  1024  00211C  EC94  F019         	call	_buttonsGetOrigins	;wreg free
  1025  002120  0060  F0B0  F032   	movff	?_buttonsGetOrigins,SISendMessage@msg
  1026  002126  0060  F0B4  F033   	movff	?_buttonsGetOrigins+1,SISendMessage@msg+1
  1027  00212C  0E0A               	movlw	10
  1028  00212E  6E34               	movwf	SISendMessage@len,c
  1029  002130  EC7D  F016         	call	_SISendMessage	;wreg free
  1030                           
  1031                           ;main.c: 174: break;
  1032  002134  D7B2               	goto	l3590
  1033  002136                     l3622:
  1034                           
  1035                           ; BSR set to: 0
  1036                           ;main.c: 177: if ((cmd[1] == 0x47) && (cmd[2] == 0x43) && (cmd[3] == 0x2B) && (cmd[4] ==
      +                           0x32) && cmdLen == 5) {
  1037  002136  0E47               	movlw	71
  1038  002138  1961               	xorwf	(main@cmd+1)& (0+255),w,b
  1039  00213A  A4D8               	btfss	status,2,c
  1040  00213C  D012               	goto	l3634
  1041                           
  1042                           ; BSR set to: 0
  1043  00213E  0E43               	movlw	67
  1044  002140  1962               	xorwf	(main@cmd+2)& (0+255),w,b
  1045  002142  A4D8               	btfss	status,2,c
  1046  002144  D00E               	goto	l3634
  1047                           
  1048                           ; BSR set to: 0
  1049  002146  0E2B               	movlw	43
  1050  002148  1963               	xorwf	(main@cmd+3)& (0+255),w,b
  1051  00214A  A4D8               	btfss	status,2,c
  1052  00214C  D00A               	goto	l3634
  1053                           
  1054                           ; BSR set to: 0
  1055  00214E  0E32               	movlw	50
  1056  002150  1964               	xorwf	(main@cmd+4)& (0+255),w,b
  1057  002152  A4D8               	btfss	status,2,c
  1058  002154  D006               	goto	l3634
  1059                           
  1060                           ; BSR set to: 0
  1061  002156  0E05               	movlw	5
  1062  002158  19B0               	xorwf	main@cmdLen& (0+255),w,b
  1063  00215A  A4D8               	btfss	status,2,c
  1064  00215C  D002               	goto	l3634
  1065                           
  1066                           ; BSR set to: 0
  1067                           ;main.c: 178: gcpLocked = 0;
  1068  00215E  0E00               	movlw	0
  1069  002160  D001               	goto	L1
  1070  002162                     l3634:
  1071                           
  1072                           ; BSR set to: 0
  1073                           ;main.c: 180: gcpLocked = 1;
  1074  002162  0E01               	movlw	1
  1075  002164                     L1:
  1076  002164  6FB1               	movwf	main@gcpLocked& (0+255),b
  1077  002166                     l136:
  1078                           
  1079                           ;main.c: 181: };main.c: 182: msgAnswer[0] = 0x00;
  1080  002166  0E00               	movlw	0
  1081  002168  0100               	movlb	0	; () banked
  1082  00216A  6F85               	movwf	main@msgAnswer& (0+255),b
  1083  00216C                     l3636:
  1084                           
  1085                           ; BSR set to: 0
  1086                           ;main.c: 183: SISendMessage(msgAnswer, 1);
  1087  00216C  0E85               	movlw	low main@msgAnswer
  1088  00216E  6E32               	movwf	SISendMessage@msg,c
  1089  002170  0E00               	movlw	high main@msgAnswer
  1090  002172  6E33               	movwf	SISendMessage@msg+1,c
  1091  002174  0E01               	movlw	1
  1092  002176  6E34               	movwf	SISendMessage@len,c
  1093  002178  EC7D  F016         	call	_SISendMessage	;wreg free
  1094                           
  1095                           ;main.c: 184: break;
  1096  00217C  D78E               	goto	l3590
  1097  00217E                     l3638:
  1098                           
  1099                           ; BSR set to: 0
  1100                           ;main.c: 187: if (!gcpLocked) {
  1101  00217E  51B1               	movf	main@gcpLocked& (0+255),w,b
  1102  002180  A4D8               	btfss	status,2,c
  1103  002182  D013               	goto	l138
  1104                           
  1105                           ; BSR set to: 0
  1106                           ;main.c: 188: msgAnswer[0] = 0x02;
  1107  002184  0E02               	movlw	2
  1108  002186  6F85               	movwf	main@msgAnswer& (0+255),b
  1109                           
  1110                           ;main.c: 189: msgAnswer[1] = (((2U & 0x1FFF) << 3) | (0U & 0x0007)) & 0xFFUL;
  1111  002188  0E10               	movlw	16
  1112  00218A  6F86               	movwf	(main@msgAnswer+1)& (0+255),b
  1113                           
  1114                           ;main.c: 190: msgAnswer[2] = ((((2U & 0x1FFF) << 3) | (0U & 0x0007)) >> 8) & 0xFF;
  1115  00218C  0E00               	movlw	0
  1116  00218E  6F87               	movwf	(main@msgAnswer+2)& (0+255),b
  1117                           
  1118                           ;main.c: 191: msgAnswer[3] = (((2U & 0x1FFF) << 3) | (0U & 0x0007)) & 0xFFUL;
  1119  002190  0E10               	movlw	16
  1120  002192  6F88               	movwf	(main@msgAnswer+3)& (0+255),b
  1121                           
  1122                           ;main.c: 192: msgAnswer[4] = ((((2U & 0x1FFF) << 3) | (0U & 0x0007)) >> 8) & 0xFF;
  1123  002194  0E00               	movlw	0
  1124  002196  6F89               	movwf	(main@msgAnswer+4)& (0+255),b
  1125                           
  1126                           ; BSR set to: 0
  1127                           ;main.c: 193: SISendMessage(msgAnswer, 5);
  1128  002198  0E85               	movlw	low main@msgAnswer
  1129  00219A  6E32               	movwf	SISendMessage@msg,c
  1130  00219C  0E00               	movlw	high main@msgAnswer
  1131  00219E  6E33               	movwf	SISendMessage@msg+1,c
  1132  0021A0  0E05               	movlw	5
  1133  0021A2  6E34               	movwf	SISendMessage@len,c
  1134  0021A4  EC7D  F016         	call	_SISendMessage	;wreg free
  1135                           
  1136                           ;main.c: 194: } else {
  1137  0021A8  D778               	goto	l3590
  1138  0021AA                     l138:
  1139                           
  1140                           ; BSR set to: 0
  1141                           ;main.c: 195: msgAnswer[0] = 0xFF;
  1142  0021AA  6985               	setf	main@msgAnswer& (0+255),b
  1143  0021AC  D7DF               	goto	l3636
  1144  0021AE                     l3646:
  1145                           
  1146                           ; BSR set to: 0
  1147                           ;main.c: 201: if (!gcpLocked) {
  1148  0021AE  51B1               	movf	main@gcpLocked& (0+255),w,b
  1149  0021B0  A4D8               	btfss	status,2,c
  1150  0021B2  D7FB               	goto	l138
  1151                           
  1152                           ; BSR set to: 0
  1153                           ;main.c: 202: if (cmdLen > 3) {
  1154  0021B4  0E03               	movlw	3
  1155  0021B6  65B0               	cpfsgt	main@cmdLen& (0+255),b
  1156  0021B8  D020               	goto	l3670
  1157                           
  1158                           ; BSR set to: 0
  1159                           ;main.c: 203: addr = cmd[2];
  1160  0021BA  0060  F188  F0AE   	movff	main@cmd+2,main@addr
  1161  0021C0  6BAF               	clrf	(main@addr+1)& (0+255),b
  1162                           
  1163                           ; BSR set to: 0
  1164                           ;main.c: 204: addr = addr << 8;
  1165  0021C2  51AE               	movf	main@addr& (0+255),w,b
  1166  0021C4  6FAF               	movwf	(main@addr+1)& (0+255),b
  1167  0021C6  6BAE               	clrf	main@addr& (0+255),b
  1168                           
  1169                           ; BSR set to: 0
  1170                           ;main.c: 205: addr |= cmd[1];
  1171  0021C8  5161               	movf	(main@cmd+1)& (0+255),w,b
  1172  0021CA  13AE               	iorwf	main@addr& (0+255),f,b
  1173                           
  1174                           ; BSR set to: 0
  1175                           ;main.c: 206: for (i = 3; i < cmdLen; i++) {
  1176  0021CC  0E03               	movlw	3
  1177  0021CE  6FB5               	movwf	main@i& (0+255),b
  1178  0021D0  D00F               	goto	l3664
  1179  0021D2                     l3658:
  1180                           
  1181                           ; BSR set to: 0
  1182                           ;main.c: 207: EEPROMWriteByte(addr++, cmd[i]);
  1183  0021D2  0E60               	movlw	low main@cmd
  1184  0021D4  25B5               	addwf	main@i& (0+255),w,b
  1185  0021D6  6ED9               	movwf	fsr2l,c
  1186  0021D8  6ADA               	clrf	fsr2h,c
  1187  0021DA  0E00               	movlw	high main@cmd
  1188  0021DC  22DA               	addwfc	fsr2h,f,c
  1189  0021DE  50DF               	movf	indf2,w,c
  1190  0021E0  6E2C               	movwf	EEPROMWriteByte@data,c
  1191  0021E2  51AE               	movf	main@addr& (0+255),w,b
  1192  0021E4  EC79  F01A         	call	_EEPROMWriteByte
  1193  0021E8  0100               	movlb	0	; () banked
  1194  0021EA  4BAE               	infsnz	main@addr& (0+255),f,b
  1195  0021EC  2BAF               	incf	(main@addr+1)& (0+255),f,b
  1196                           
  1197                           ; BSR set to: 0
  1198  0021EE  2BB5               	incf	main@i& (0+255),f,b
  1199  0021F0                     l3664:
  1200                           
  1201                           ; BSR set to: 0
  1202  0021F0  51B0               	movf	main@cmdLen& (0+255),w,b
  1203  0021F2  5DB5               	subwf	main@i& (0+255),w,b
  1204  0021F4  B0D8               	btfsc	status,0,c
  1205  0021F6  D7B7               	goto	l136
  1206  0021F8  D7EC               	goto	l3658
  1207  0021FA                     l3670:
  1208                           
  1209                           ; BSR set to: 0
  1210                           ;main.c: 212: msgAnswer[0] = 0xFE;
  1211  0021FA  0EFE               	movlw	254
  1212  0021FC  D7B6               	goto	L2
  1213  0021FE                     l3676:
  1214                           
  1215                           ; BSR set to: 0
  1216                           ;main.c: 222: if (!gcpLocked) {
  1217  0021FE  51B1               	movf	main@gcpLocked& (0+255),w,b
  1218  002200  A4D8               	btfss	status,2,c
  1219  002202  D7D3               	goto	l138
  1220                           
  1221                           ; BSR set to: 0
  1222                           ;main.c: 223: if (cmdLen == 4) {
  1223  002204  0E04               	movlw	4
  1224  002206  19B0               	xorwf	main@cmdLen& (0+255),w,b
  1225  002208  A4D8               	btfss	status,2,c
  1226  00220A  D7F7               	goto	l3670
  1227                           
  1228                           ; BSR set to: 0
  1229                           ;main.c: 224: addr = cmd[2];
  1230  00220C  0060  F188  F0AE   	movff	main@cmd+2,main@addr
  1231  002212  6BAF               	clrf	(main@addr+1)& (0+255),b
  1232                           
  1233                           ; BSR set to: 0
  1234                           ;main.c: 225: addr = addr << 8;
  1235  002214  51AE               	movf	main@addr& (0+255),w,b
  1236  002216  6FAF               	movwf	(main@addr+1)& (0+255),b
  1237  002218  6BAE               	clrf	main@addr& (0+255),b
  1238                           
  1239                           ; BSR set to: 0
  1240                           ;main.c: 226: addr |= cmd[1];
  1241  00221A  5161               	movf	(main@cmd+1)& (0+255),w,b
  1242  00221C  13AE               	iorwf	main@addr& (0+255),f,b
  1243                           
  1244                           ; BSR set to: 0
  1245                           ;main.c: 227: uint8_t len = cmd[3];
  1246  00221E  0060  F18C  F0AD   	movff	main@cmd+3,main@len
  1247                           
  1248                           ; BSR set to: 0
  1249                           ;main.c: 228: if (len == 0) {
  1250  002224  51AD               	movf	main@len& (0+255),w,b
  1251  002226  B4D8               	btfsc	status,2,c
  1252  002228  D7E8               	goto	l3670
  1253                           
  1254                           ; BSR set to: 0
  1255                           ;main.c: 232: msgAnswer[0] = 0x00;
  1256  00222A  0E00               	movlw	0
  1257  00222C  6F85               	movwf	main@msgAnswer& (0+255),b
  1258                           
  1259                           ;main.c: 233: for (i = 0; i < len && i < 0x20; i++) {
  1260  00222E  0E00               	movlw	0
  1261  002230  6FB5               	movwf	main@i& (0+255),b
  1262  002232  D015               	goto	l3702
  1263  002234                     l3696:
  1264                           
  1265                           ; BSR set to: 0
  1266                           ;main.c: 234: msgAnswer[i + 1] = EEPROMReadByte(addr++);
  1267  002234  51B5               	movf	main@i& (0+255),w,b
  1268  002236  6E4F               	movwf	??_main& (0+255),c
  1269  002238  6A50               	clrf	(??_main+1)& (0+255),c
  1270  00223A  0E01               	movlw	1
  1271  00223C  264F               	addwf	??_main,f,c
  1272  00223E  0E00               	movlw	0
  1273  002240  2250               	addwfc	??_main+1,f,c
  1274  002242  0E85               	movlw	low main@msgAnswer
  1275  002244  244F               	addwf	??_main,w,c
  1276  002246  6ED9               	movwf	fsr2l,c
  1277  002248  0E00               	movlw	high main@msgAnswer
  1278  00224A  2050               	addwfc	??_main+1,w,c
  1279  00224C  6EDA               	movwf	fsr2h,c
  1280  00224E  51AE               	movf	main@addr& (0+255),w,b
  1281  002250  EC8B  F01A         	call	_EEPROMReadByte
  1282  002254  6EDF               	movwf	indf2,c
  1283  002256  0100               	movlb	0	; () banked
  1284  002258  4BAE               	infsnz	main@addr& (0+255),f,b
  1285  00225A  2BAF               	incf	(main@addr+1)& (0+255),f,b
  1286                           
  1287                           ; BSR set to: 0
  1288  00225C  2BB5               	incf	main@i& (0+255),f,b
  1289  00225E                     l3702:
  1290                           
  1291                           ; BSR set to: 0
  1292  00225E  51AD               	movf	main@len& (0+255),w,b
  1293  002260  5DB5               	subwf	main@i& (0+255),w,b
  1294  002262  B0D8               	btfsc	status,0,c
  1295  002264  D003               	goto	u2930
  1296                           
  1297                           ; BSR set to: 0
  1298  002266  0E1F               	movlw	31
  1299  002268  65B5               	cpfsgt	main@i& (0+255),b
  1300  00226A  D7E4               	goto	l3696
  1301  00226C                     u2930:
  1302                           
  1303                           ; BSR set to: 0
  1304                           ;main.c: 235: };main.c: 236: SISendMessage(msgAnswer, len + 1);
  1305  00226C  0E85               	movlw	low main@msgAnswer
  1306  00226E  6E32               	movwf	SISendMessage@msg,c
  1307  002270  0E00               	movlw	high main@msgAnswer
  1308  002272  6E33               	movwf	SISendMessage@msg+1,c
  1309  002274  29AD               	incf	main@len& (0+255),w,b
  1310  002276  6E34               	movwf	SISendMessage@len,c
  1311  002278  EC7D  F016         	call	_SISendMessage	;wreg free
  1312  00227C  D70E               	goto	l3590
  1313  00227E                     l160:
  1314                           
  1315                           ; BSR set to: 0
  1316  00227E  00FF               	reset		;# 
  1317                           
  1318                           ;main.c: 250: break;
  1319  002280  D70C               	goto	l3590
  1320  002282                     l3714:
  1321                           
  1322                           ; BSR set to: 0
  1323                           ;main.c: 253: if (!gcpLocked) {
  1324  002282  51B1               	movf	main@gcpLocked& (0+255),w,b
  1325  002284  A4D8               	btfss	status,2,c
  1326  002286  D791               	goto	l138
  1327                           
  1328                           ; BSR set to: 0
  1329                           ;main.c: 254: msgAnswer[0] = 0x00;
  1330  002288  0E00               	movlw	0
  1331  00228A  6F85               	movwf	main@msgAnswer& (0+255),b
  1332                           
  1333                           ; BSR set to: 0
  1334                           ;main.c: 255: SISendMessage(msgAnswer, 1);
  1335  00228C  0E85               	movlw	low main@msgAnswer
  1336  00228E  6E32               	movwf	SISendMessage@msg,c
  1337  002290  0E00               	movlw	high main@msgAnswer
  1338  002292  6E33               	movwf	SISendMessage@msg+1,c
  1339  002294  0E01               	movlw	1
  1340  002296  6E34               	movwf	SISendMessage@len,c
  1341  002298  EC7D  F016         	call	_SISendMessage	;wreg free
  1342                           
  1343                           ;main.c: 256: bootBootloader();
  1344  00229C  EC72  F019         	call	_bootBootloader	;wreg free
  1345                           
  1346                           ;main.c: 257: } else {
  1347  0022A0  D6FC               	goto	l3590
  1348  0022A2                     l3724:
  1349                           
  1350                           ; BSR set to: 0
  1351                           ;main.c: 264: if (!gcpLocked) {
  1352  0022A2  51B1               	movf	main@gcpLocked& (0+255),w,b
  1353  0022A4  A4D8               	btfss	status,2,c
  1354  0022A6  D781               	goto	l138
  1355                           
  1356                           ; BSR set to: 0
  1357                           ;main.c: 265: if (cmdLen == (N_BUTTONS + 1)) {
  1358  0022A8  0E10               	movlw	16
  1359  0022AA  19B0               	xorwf	main@cmdLen& (0+255),w,b
  1360  0022AC  A4D8               	btfss	status,2,c
  1361  0022AE  D7A5               	goto	l3670
  1362                           
  1363                           ; BSR set to: 0
  1364                           ;main.c: 266: buttonsSetMapByte0(&cmd[1]);
  1365  0022B0  0E61               	movlw	low (main@cmd+1)
  1366  0022B2  6E2C               	movwf	buttonsSetMapByte0@map,c
  1367  0022B4  0E00               	movlw	high (main@cmd+1)
  1368  0022B6  6E2D               	movwf	buttonsSetMapByte0@map+1,c
  1369  0022B8  EC63  F01A         	call	_buttonsSetMapByte0	;wreg free
  1370  0022BC  D754               	goto	l136
  1371  0022BE                     l3740:
  1372                           
  1373                           ; BSR set to: 0
  1374                           ;main.c: 280: if (!gcpLocked) {
  1375  0022BE  51B1               	movf	main@gcpLocked& (0+255),w,b
  1376  0022C0  A4D8               	btfss	status,2,c
  1377  0022C2  D773               	goto	l138
  1378                           
  1379                           ; BSR set to: 0
  1380                           ;main.c: 281: if (cmdLen == (N_BUTTONS + 1)) {
  1381  0022C4  0E10               	movlw	16
  1382  0022C6  19B0               	xorwf	main@cmdLen& (0+255),w,b
  1383  0022C8  A4D8               	btfss	status,2,c
  1384  0022CA  D797               	goto	l3670
  1385                           
  1386                           ; BSR set to: 0
  1387                           ;main.c: 282: buttonsSetMapByte1(&cmd[1]);
  1388  0022CC  0E61               	movlw	low (main@cmd+1)
  1389  0022CE  6E2C               	movwf	buttonsSetMapByte1@map,c
  1390  0022D0  0E00               	movlw	high (main@cmd+1)
  1391  0022D2  6E2D               	movwf	buttonsSetMapByte1@map+1,c
  1392  0022D4  EC4D  F01A         	call	_buttonsSetMapByte1	;wreg free
  1393  0022D8  D746               	goto	l136
  1394  0022DA                     l3756:
  1395                           
  1396                           ; BSR set to: 0
  1397                           ;main.c: 296: if (!gcpLocked) {
  1398  0022DA  51B1               	movf	main@gcpLocked& (0+255),w,b
  1399  0022DC  A4D8               	btfss	status,2,c
  1400  0022DE  D765               	goto	l138
  1401                           
  1402                           ; BSR set to: 0
  1403                           ;main.c: 297: uint8_t* btnMsg = buttonsGetMapByte0();
  1404  0022E0  EC06  F01A         	call	_buttonsGetMapByte0	;wreg free
  1405  0022E4  0060  F0B0  F0A9   	movff	?_buttonsGetMapByte0,main@btnMsg
  1406  0022EA  0060  F0B4  F0AA   	movff	?_buttonsGetMapByte0+1,main@btnMsg+1
  1407                           
  1408                           ;main.c: 298: msgAnswer[0] = 0x00;
  1409  0022F0  0E00               	movlw	0
  1410  0022F2  0100               	movlb	0	; () banked
  1411  0022F4  6F85               	movwf	main@msgAnswer& (0+255),b
  1412                           
  1413                           ; BSR set to: 0
  1414                           ;main.c: 299: for (i = 0; i < N_BUTTONS; i++) {
  1415  0022F6  0E00               	movlw	0
  1416  0022F8  6FB5               	movwf	main@i& (0+255),b
  1417  0022FA                     l3764:
  1418                           
  1419                           ; BSR set to: 0
  1420  0022FA  0E0E               	movlw	14
  1421  0022FC  65B5               	cpfsgt	main@i& (0+255),b
  1422  0022FE  D001               	goto	l3768
  1423  002300  D018               	goto	l3774
  1424  002302                     l3768:
  1425                           
  1426                           ; BSR set to: 0
  1427                           ;main.c: 300: msgAnswer[i + 1] = btnMsg[i];
  1428  002302  51B5               	movf	main@i& (0+255),w,b
  1429  002304  25A9               	addwf	main@btnMsg& (0+255),w,b
  1430  002306  6ED9               	movwf	fsr2l,c
  1431  002308  0E00               	movlw	0
  1432  00230A  21AA               	addwfc	(main@btnMsg+1)& (0+255),w,b
  1433  00230C  6EDA               	movwf	fsr2h,c
  1434  00230E  51B5               	movf	main@i& (0+255),w,b
  1435  002310  6E4F               	movwf	??_main& (0+255),c
  1436  002312  6A50               	clrf	(??_main+1)& (0+255),c
  1437  002314  0E01               	movlw	1
  1438  002316  264F               	addwf	??_main,f,c
  1439  002318  0E00               	movlw	0
  1440  00231A  2250               	addwfc	??_main+1,f,c
  1441  00231C  0E85               	movlw	low main@msgAnswer
  1442  00231E  244F               	addwf	??_main,w,c
  1443  002320  6EE1               	movwf	fsr1l,c
  1444  002322  0E00               	movlw	high main@msgAnswer
  1445  002324  2050               	addwfc	??_main+1,w,c
  1446  002326  6EE2               	movwf	fsr1h,c
  1447  002328  006F FF7F FFE7     	movff	indf2,indf1
  1448                           
  1449                           ; BSR set to: 0
  1450  00232E  2BB5               	incf	main@i& (0+255),f,b
  1451  002330  D7E4               	goto	l3764
  1452  002332                     l3774:
  1453                           
  1454                           ; BSR set to: 0
  1455                           ;main.c: 301: };main.c: 302: SISendMessage(msgAnswer, N_BUTTONS + 1);
  1456  002332  0E85               	movlw	low main@msgAnswer
  1457  002334  6E32               	movwf	SISendMessage@msg,c
  1458  002336  0E00               	movlw	high main@msgAnswer
  1459  002338  6E33               	movwf	SISendMessage@msg+1,c
  1460  00233A  0E10               	movlw	16
  1461  00233C  6E34               	movwf	SISendMessage@len,c
  1462  00233E  EC7D  F016         	call	_SISendMessage	;wreg free
  1463                           
  1464                           ;main.c: 303: } else {
  1465  002342  D6AB               	goto	l3590
  1466  002344                     l3778:
  1467                           
  1468                           ; BSR set to: 0
  1469                           ;main.c: 310: if (!gcpLocked) {
  1470  002344  51B1               	movf	main@gcpLocked& (0+255),w,b
  1471  002346  A4D8               	btfss	status,2,c
  1472  002348  D730               	goto	l138
  1473                           
  1474                           ; BSR set to: 0
  1475                           ;main.c: 311: uint8_t* btnMsg = buttonsGetMapByte1();
  1476  00234A  ECEC  F019         	call	_buttonsGetMapByte1	;wreg free
  1477  00234E  0060  F0B0  F0AB   	movff	?_buttonsGetMapByte1,main@btnMsg_329
  1478  002354  0060  F0B4  F0AC   	movff	?_buttonsGetMapByte1+1,main@btnMsg_329+1
  1479                           
  1480                           ;main.c: 312: msgAnswer[0] = 0x00;
  1481  00235A  0E00               	movlw	0
  1482  00235C  0100               	movlb	0	; () banked
  1483  00235E  6F85               	movwf	main@msgAnswer& (0+255),b
  1484                           
  1485                           ; BSR set to: 0
  1486                           ;main.c: 313: for (i = 0; i < N_BUTTONS; i++) {
  1487  002360  0E00               	movlw	0
  1488  002362  6FB5               	movwf	main@i& (0+255),b
  1489  002364                     l3786:
  1490                           
  1491                           ; BSR set to: 0
  1492  002364  0E0E               	movlw	14
  1493  002366  65B5               	cpfsgt	main@i& (0+255),b
  1494  002368  D001               	goto	l3790
  1495  00236A  D7E3               	goto	l3774
  1496  00236C                     l3790:
  1497                           
  1498                           ; BSR set to: 0
  1499                           ;main.c: 314: msgAnswer[i + 1] = btnMsg[i];
  1500  00236C  51B5               	movf	main@i& (0+255),w,b
  1501  00236E  25AB               	addwf	main@btnMsg_329& (0+255),w,b
  1502  002370  6ED9               	movwf	fsr2l,c
  1503  002372  0E00               	movlw	0
  1504  002374  21AC               	addwfc	(main@btnMsg_329+1)& (0+255),w,b
  1505  002376  6EDA               	movwf	fsr2h,c
  1506  002378  51B5               	movf	main@i& (0+255),w,b
  1507  00237A  6E4F               	movwf	??_main& (0+255),c
  1508  00237C  6A50               	clrf	(??_main+1)& (0+255),c
  1509  00237E  0E01               	movlw	1
  1510  002380  264F               	addwf	??_main,f,c
  1511  002382  0E00               	movlw	0
  1512  002384  2250               	addwfc	??_main+1,f,c
  1513  002386  0E85               	movlw	low main@msgAnswer
  1514  002388  244F               	addwf	??_main,w,c
  1515  00238A  6EE1               	movwf	fsr1l,c
  1516  00238C  0E00               	movlw	high main@msgAnswer
  1517  00238E  2050               	addwfc	??_main+1,w,c
  1518  002390  6EE2               	movwf	fsr1h,c
  1519  002392  006F FF7F FFE7     	movff	indf2,indf1
  1520                           
  1521                           ; BSR set to: 0
  1522  002398  2BB5               	incf	main@i& (0+255),f,b
  1523  00239A  D7E4               	goto	l3786
  1524  00239C                     l3800:
  1525                           
  1526                           ; BSR set to: 0
  1527                           ;main.c: 324: if (!gcpLocked) {
  1528  00239C  51B1               	movf	main@gcpLocked& (0+255),w,b
  1529  00239E  A4D8               	btfss	status,2,c
  1530  0023A0  D704               	goto	l138
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;main.c: 325: buttonsBuildLUTs();
  1534  0023A2  ECE9  F016         	call	_buttonsBuildLUTs	;wreg free
  1535  0023A6  D6DF               	goto	l136
  1536  0023A8                     l3810:
  1537                           
  1538                           ; BSR set to: 0
  1539                           ;main.c: 335: SIClear();
  1540  0023A8  EC9E  F01A         	call	_SIClear	;wreg free
  1541                           
  1542                           ;main.c: 336: break;
  1543  0023AC  D676               	goto	l3590
  1544  0023AE                     l3814:
  1545                           
  1546                           ; BSR set to: 0
  1547  0023AE  5160               	movf	main@cmd& (0+255),w,b
  1548                           
  1549                           ; Switch size 1, requested type "simple"
  1550                           ; Number of cases is 16, Range of values is 0 to 255
  1551                           ; switch strategies available:
  1552                           ; Name         Instructions Cycles
  1553                           ; simple_byte           49    25 (average)
  1554                           ;	Chosen strategy is simple_byte
  1555  0023B0  0A00               	xorlw	0	; case 0
  1556  0023B2  B4D8               	btfsc	status,2,c
  1557  0023B4  D68F               	goto	l3610
  1558  0023B6  0A10               	xorlw	16	; case 16
  1559  0023B8  B4D8               	btfsc	status,2,c
  1560  0023BA  D6BD               	goto	l3622
  1561  0023BC  0A01               	xorlw	1	; case 17
  1562  0023BE  B4D8               	btfsc	status,2,c
  1563  0023C0  D6DE               	goto	l3638
  1564  0023C2  0A03               	xorlw	3	; case 18
  1565  0023C4  B4D8               	btfsc	status,2,c
  1566  0023C6  D6F3               	goto	l3646
  1567  0023C8  0A01               	xorlw	1	; case 19
  1568  0023CA  B4D8               	btfsc	status,2,c
  1569  0023CC  D718               	goto	l3676
  1570  0023CE  0A07               	xorlw	7	; case 20
  1571  0023D0  B4D8               	btfsc	status,2,c
  1572  0023D2  D755               	goto	l160
  1573  0023D4  0A01               	xorlw	1	; case 21
  1574  0023D6  B4D8               	btfsc	status,2,c
  1575  0023D8  D754               	goto	l3714
  1576  0023DA  0A03               	xorlw	3	; case 22
  1577  0023DC  B4D8               	btfsc	status,2,c
  1578  0023DE  D761               	goto	l3724
  1579  0023E0  0A01               	xorlw	1	; case 23
  1580  0023E2  B4D8               	btfsc	status,2,c
  1581  0023E4  D76C               	goto	l3740
  1582  0023E6  0A0F               	xorlw	15	; case 24
  1583  0023E8  B4D8               	btfsc	status,2,c
  1584  0023EA  D777               	goto	l3756
  1585  0023EC  0A01               	xorlw	1	; case 25
  1586  0023EE  B4D8               	btfsc	status,2,c
  1587  0023F0  D7A9               	goto	l3778
  1588  0023F2  0A39               	xorlw	57	; case 32
  1589  0023F4  B4D8               	btfsc	status,2,c
  1590  0023F6  D7D2               	goto	l3800
  1591  0023F8  0A60               	xorlw	96	; case 64
  1592  0023FA  B4D8               	btfsc	status,2,c
  1593  0023FC  D67A               	goto	l3616
  1594  0023FE  0A01               	xorlw	1	; case 65
  1595  002400  B4D8               	btfsc	status,2,c
  1596  002402  D68C               	goto	l3620
  1597  002404  0A03               	xorlw	3	; case 66
  1598  002406  B4D8               	btfsc	status,2,c
  1599  002408  D689               	goto	l3620
  1600  00240A  0ABD               	xorlw	189	; case 255
  1601  00240C  B4D8               	btfsc	status,2,c
  1602  00240E  D662               	goto	l3610
  1603  002410  D7CB               	goto	l3810
  1604  002412                     __end_of_main:
  1605                           	opt callstack 0
  1606                           
  1607 ;; *************** function _portsInit *****************
  1608 ;; Defined at:
  1609 ;;		line 344 in file "main.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;		None
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;  state           1    0[COMRAM] unsigned char 
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  1    wreg      void 
  1616 ;; Registers used:
  1617 ;;		wreg, status,2
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1623 ;;      Params:         0       0       0       0       0       0       0       0       0
  1624 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1625 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1626 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1627 ;;Total ram usage:        1 bytes
  1628 ;; Hardware stack levels used:    1
  1629 ;; Hardware stack levels required when called:    2
  1630 ;; This function calls:
  1631 ;;		Nothing
  1632 ;; This function is called by:
  1633 ;;		_main
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           	psect	text1
  1638  0031C2                     __ptext1:
  1639                           	opt callstack 0
  1640  0031C2                     _portsInit:
  1641                           	opt callstack 28
  1642                           
  1643                           ;main.c: 346: bool state = (unsigned char)GIE;
  1644                           
  1645                           ; BSR set to: 0
  1646                           ;incstack = 0
  1647  0031C2  0E00               	movlw	0
  1648  0031C4  BED2               	btfsc	16338,7,c	;volatile
  1649  0031C6  0E01               	movlw	1
  1650  0031C8  6E2C               	movwf	portsInit@state,c
  1651                           
  1652                           ;main.c: 347: GIE = 0;
  1653  0031CA  9ED2               	bcf	16338,7,c	;volatile
  1654                           
  1655                           ;main.c: 348: PPSLOCK = 0x55;
  1656  0031CC  0E55               	movlw	85
  1657  0031CE  013A               	movlb	58	; () banked
  1658  0031D0  6FBF               	movwf	191,b	;volsfr
  1659                           
  1660                           ;main.c: 349: PPSLOCK = 0xAA;
  1661  0031D2  0EAA               	movlw	170
  1662  0031D4  6FBF               	movwf	191,b	;volsfr
  1663                           
  1664                           ; BSR set to: 58
  1665                           ;main.c: 350: PPSLOCKbits.PPSLOCKED = 0x00;
  1666  0031D6  91BF               	bcf	191,0,b	;volsfr
  1667                           
  1668                           ;main.c: 354: T6INPPS = 0x0C;
  1669  0031D8  0E0C               	movlw	12
  1670  0031DA  6FCC               	movwf	204,b	;volatile
  1671                           
  1672                           ;main.c: 355: SMT1SIGPPS = 0x0C;
  1673  0031DC  0E0C               	movlw	12
  1674  0031DE  6FD2               	movwf	210,b	;volatile
  1675                           
  1676                           ;main.c: 358: RB4PPS = 0x04;
  1677  0031E0  0E04               	movlw	4
  1678  0031E2  6F0C               	movwf	12,b	;volatile
  1679                           
  1680                           ;main.c: 363: PPSLOCK = 0x55;
  1681  0031E4  0E55               	movlw	85
  1682  0031E6  6FBF               	movwf	191,b	;volsfr
  1683                           
  1684                           ;main.c: 364: PPSLOCK = 0xAA;
  1685  0031E8  0EAA               	movlw	170
  1686  0031EA  6FBF               	movwf	191,b	;volsfr
  1687                           
  1688                           ; BSR set to: 58
  1689                           ;main.c: 365: PPSLOCKbits.PPSLOCKED = 0x01;
  1690  0031EC  81BF               	bsf	191,0,b	;volsfr
  1691                           
  1692                           ; BSR set to: 58
  1693                           ;main.c: 366: GIE = state;
  1694  0031EE  A02C               	btfss	portsInit@state,0,c
  1695  0031F0  D002               	goto	u1730
  1696  0031F2  8ED2               	bsf	16338,7,c	;volatile
  1697  0031F4  D001               	goto	u1745
  1698  0031F6                     u1730:
  1699  0031F6  9ED2               	bcf	16338,7,c	;volatile
  1700  0031F8                     u1745:
  1701                           
  1702                           ;main.c: 368: LATB = 0xFF;
  1703  0031F8  68BB               	setf	16315,c	;volatile
  1704                           
  1705                           ;main.c: 371: TRISA = 0xFF;
  1706  0031FA  68C2               	setf	16322,c	;volatile
  1707                           
  1708                           ;main.c: 372: TRISB = 0xFF;
  1709  0031FC  68C3               	setf	16323,c	;volatile
  1710                           
  1711                           ;main.c: 373: TRISC = 0xFF;
  1712  0031FE  68C4               	setf	16324,c	;volatile
  1713                           
  1714                           ;main.c: 374: ANSELA = 0x03;
  1715  003200  0E03               	movlw	3
  1716  003202  013A               	movlb	58	; () banked
  1717  003204  6F40               	movwf	64,b	;volatile
  1718                           
  1719                           ;main.c: 375: ANSELB = 0x00;
  1720  003206  0E00               	movlw	0
  1721  003208  6F50               	movwf	80,b	;volatile
  1722                           
  1723                           ;main.c: 376: ANSELC = 0x1E;
  1724  00320A  0E1E               	movlw	30
  1725  00320C  6F60               	movwf	96,b	;volatile
  1726                           
  1727                           ;main.c: 377: WPUA = 0xFC;
  1728  00320E  0EFC               	movlw	252
  1729  003210  6F41               	movwf	65,b	;volatile
  1730                           
  1731                           ;main.c: 378: WPUB = 0x3F;
  1732  003212  0E3F               	movlw	63
  1733  003214  6F51               	movwf	81,b	;volatile
  1734                           
  1735                           ;main.c: 379: WPUC = 0xE1;
  1736  003216  0EE1               	movlw	225
  1737  003218  6F61               	movwf	97,b	;volatile
  1738                           
  1739                           ;main.c: 380: ODCONA = 0x00;
  1740  00321A  0E00               	movlw	0
  1741  00321C  6F42               	movwf	66,b	;volatile
  1742                           
  1743                           ;main.c: 381: ODCONB = 0x10;
  1744  00321E  0E10               	movlw	16
  1745  003220  6F52               	movwf	82,b	;volatile
  1746                           
  1747                           ;main.c: 382: ODCONC = 0x00;
  1748  003222  0E00               	movlw	0
  1749  003224  6F62               	movwf	98,b	;volatile
  1750                           
  1751                           ; BSR set to: 58
  1752  003226  0012               	return		;funcret
  1753  003228                     __end_of_portsInit:
  1754                           	opt callstack 0
  1755                           
  1756 ;; *************** function _configInit *****************
  1757 ;; Defined at:
  1758 ;;		line 31 in file "config.c"
  1759 ;; Parameters:    Size  Location     Type
  1760 ;;		None
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;  data            2    8[COMRAM] PTR unsigned char 
  1763 ;;		 -> config(24), 
  1764 ;;  i               1   10[COMRAM] unsigned char 
  1765 ;; Return value:  Size  Location     Type
  1766 ;;                  1    wreg      void 
  1767 ;; Registers used:
  1768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1769 ;; Tracked objects:
  1770 ;;		On entry : 0/0
  1771 ;;		On exit  : 0/0
  1772 ;;		Unchanged: 0/0
  1773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1774 ;;      Params:         0       0       0       0       0       0       0       0       0
  1775 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1776 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1777 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1778 ;;Total ram usage:        3 bytes
  1779 ;; Hardware stack levels used:    1
  1780 ;; Hardware stack levels required when called:    5
  1781 ;; This function calls:
  1782 ;;		_EEPROMReadByte
  1783 ;;		_configFlashAll
  1784 ;;		_configSetDefault
  1785 ;; This function is called by:
  1786 ;;		_main
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           	psect	text2
  1791  00328C                     __ptext2:
  1792                           	opt callstack 0
  1793  00328C                     _configInit:
  1794                           	opt callstack 25
  1795                           
  1796                           ;config.c: 32: uint8_t* data = (uint8_t*)&config;
  1797                           
  1798                           ; BSR set to: 58
  1799                           ;incstack = 0
  1800  00328C  0EB6               	movlw	low _config
  1801  00328E  6E34               	movwf	configInit@data,c
  1802  003290  0E00               	movlw	high _config
  1803  003292  6E35               	movwf	configInit@data+1,c
  1804                           
  1805                           ;config.c: 33: uint8_t i;;config.c: 34: for (i = 0; i < sizeof(config_t); i++) {
  1806  003294  0E00               	movlw	0
  1807  003296  6E36               	movwf	configInit@i,c
  1808  003298                     l213:
  1809  003298  0004               	clrwdt		;# 
  1810                           
  1811                           ;config.c: 36: data[i] = EEPROMReadByte(i);
  1812  00329A  5036               	movf	configInit@i,w,c
  1813  00329C  2434               	addwf	configInit@data,w,c
  1814  00329E  6ED9               	movwf	fsr2l,c
  1815  0032A0  0E00               	movlw	0
  1816  0032A2  2035               	addwfc	configInit@data+1,w,c
  1817  0032A4  6EDA               	movwf	fsr2h,c
  1818  0032A6  5036               	movf	configInit@i,w,c
  1819  0032A8  EC8B  F01A         	call	_EEPROMReadByte
  1820  0032AC  6EDF               	movwf	indf2,c
  1821                           
  1822                           ;config.c: 39: if (i == 3U && config.magicCode != 0x322B4347UL) {
  1823  0032AE  0E03               	movlw	3
  1824  0032B0  1836               	xorwf	configInit@i,w,c
  1825  0032B2  A4D8               	btfss	status,2,c
  1826  0032B4  D012               	goto	l2916
  1827  0032B6  0E47               	movlw	71
  1828  0032B8  0100               	movlb	0	; () banked
  1829  0032BA  19B6               	xorwf	_config& (0+255),w,b
  1830  0032BC  E10A               	bnz	u1760
  1831  0032BE  0E43               	movlw	67
  1832  0032C0  19B7               	xorwf	(_config+1)& (0+255),w,b
  1833  0032C2  E107               	bnz	u1760
  1834  0032C4  0E2B               	movlw	43
  1835  0032C6  19B8               	xorwf	(_config+2)& (0+255),w,b
  1836  0032C8  E104               	bnz	u1760
  1837  0032CA  0E32               	movlw	50
  1838  0032CC  19B9               	xorwf	(_config+3)& (0+255),w,b
  1839  0032CE  B4D8               	btfsc	status,2,c
  1840  0032D0  D004               	goto	l2916
  1841  0032D2                     u1760:
  1842                           
  1843                           ; BSR set to: 0
  1844                           ;config.c: 41: configSetDefault();
  1845  0032D2  EC71  F018         	call	_configSetDefault	;wreg free
  1846                           
  1847                           ;config.c: 42: configFlashAll();
  1848  0032D6  EC37  F01A         	call	_configFlashAll	;wreg free
  1849  0032DA                     l2916:
  1850  0032DA  2A36               	incf	configInit@i,f,c
  1851  0032DC  0E17               	movlw	23
  1852  0032DE  6436               	cpfsgt	configInit@i,c
  1853  0032E0  D7DB               	goto	l213
  1854  0032E2  0012               	return	
  1855  0032E4                     __end_of_configInit:
  1856                           	opt callstack 0
  1857                           
  1858 ;; *************** function _configSetDefault *****************
  1859 ;; Defined at:
  1860 ;;		line 47 in file "config.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;		None
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;		None
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  1    wreg      void 
  1867 ;; Registers used:
  1868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1874 ;;      Params:         0       0       0       0       0       0       0       0       0
  1875 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1876 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1877 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1878 ;;Total ram usage:        0 bytes
  1879 ;; Hardware stack levels used:    1
  1880 ;; Hardware stack levels required when called:    3
  1881 ;; This function calls:
  1882 ;;		_memset
  1883 ;; This function is called by:
  1884 ;;		_main
  1885 ;;		_configInit
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           	psect	text3
  1890  0030E2                     __ptext3:
  1891                           	opt callstack 0
  1892  0030E2                     _configSetDefault:
  1893                           	opt callstack 27
  1894                           
  1895                           ;config.c: 49: memset((void*)&config, 0, sizeof(config_t));
  1896                           
  1897                           ;incstack = 0
  1898  0030E2  0EB6               	movlw	low _config
  1899  0030E4  6E2C               	movwf	memset@p1,c
  1900  0030E6  0E00               	movlw	high _config
  1901  0030E8  6E2D               	movwf	memset@p1+1,c
  1902  0030EA  0E00               	movlw	0
  1903  0030EC  6E2F               	movwf	memset@c+1,c
  1904  0030EE  0E00               	movlw	0
  1905  0030F0  6E2E               	movwf	memset@c,c
  1906  0030F2  0E00               	movlw	0
  1907  0030F4  6E31               	movwf	memset@n+1,c
  1908  0030F6  0E18               	movlw	24
  1909  0030F8  6E30               	movwf	memset@n,c
  1910  0030FA  ECD1  F019         	call	_memset	;wreg free
  1911                           
  1912                           ;config.c: 52: config.magicCode = 0x322B4347UL;
  1913  0030FE  0E47               	movlw	71
  1914  003100  0100               	movlb	0	; () banked
  1915  003102  6FB6               	movwf	_config& (0+255),b
  1916  003104  0E43               	movlw	67
  1917  003106  6FB7               	movwf	(_config+1)& (0+255),b
  1918  003108  0E2B               	movlw	43
  1919  00310A  6FB8               	movwf	(_config+2)& (0+255),b
  1920  00310C  0E32               	movlw	50
  1921  00310E  6FB9               	movwf	(_config+3)& (0+255),b
  1922                           
  1923                           ; BSR set to: 0
  1924                           ;config.c: 53: config.version = (((2U & 0x1FFF) << 3) | (0U & 0x0007));
  1925  003110  0E00               	movlw	0
  1926  003112  6FBB               	movwf	(_config+5)& (0+255),b
  1927  003114  0E10               	movlw	16
  1928  003116  6FBA               	movwf	(_config+4)& (0+255),b
  1929                           
  1930                           ; BSR set to: 0
  1931                           ;config.c: 56: config.SXMin = 0x00;
  1932  003118  0E00               	movlw	0
  1933  00311A  6FBC               	movwf	(_config+6)& (0+255),b
  1934                           
  1935                           ; BSR set to: 0
  1936                           ;config.c: 57: config.SXMax = 0xFF;
  1937  00311C  69BD               	setf	(_config+7)& (0+255),b
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;config.c: 58: config.SYMin = 0x00;
  1941  00311E  0E00               	movlw	0
  1942  003120  6FBE               	movwf	(_config+8)& (0+255),b
  1943                           
  1944                           ; BSR set to: 0
  1945                           ;config.c: 59: config.SYMax = 0xFF;
  1946  003122  69BF               	setf	(_config+9)& (0+255),b
  1947                           
  1948                           ; BSR set to: 0
  1949                           ;config.c: 60: config.CXMin = 0x00;
  1950  003124  0E00               	movlw	0
  1951  003126  6FC0               	movwf	(_config+10)& (0+255),b
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;config.c: 61: config.CXMax = 0xFF;
  1955  003128  69C1               	setf	(_config+11)& (0+255),b
  1956                           
  1957                           ; BSR set to: 0
  1958                           ;config.c: 62: config.CYMin = 0x00;
  1959  00312A  0E00               	movlw	0
  1960  00312C  6FC2               	movwf	(_config+12)& (0+255),b
  1961                           
  1962                           ; BSR set to: 0
  1963                           ;config.c: 63: config.CYMax = 0xFF;
  1964  00312E  69C3               	setf	(_config+13)& (0+255),b
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;config.c: 64: config.SXChan = 0x11;
  1968  003130  0E11               	movlw	17
  1969  003132  6FC4               	movwf	(_config+14)& (0+255),b
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;config.c: 65: config.SYChan = 0x12;
  1973  003134  0E12               	movlw	18
  1974  003136  6FC5               	movwf	(_config+15)& (0+255),b
  1975                           
  1976                           ; BSR set to: 0
  1977                           ;config.c: 66: config.CXChan = 0x13;
  1978  003138  0E13               	movlw	19
  1979  00313A  6FC6               	movwf	(_config+16)& (0+255),b
  1980                           
  1981                           ; BSR set to: 0
  1982                           ;config.c: 67: config.CYChan = 0x14;
  1983  00313C  0E14               	movlw	20
  1984  00313E  6FC7               	movwf	(_config+17)& (0+255),b
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;config.c: 68: config.axInvert = 0x00;
  1988  003140  0E00               	movlw	0
  1989  003142  6FC8               	movwf	(_config+18)& (0+255),b
  1990                           
  1991                           ; BSR set to: 0
  1992                           ;config.c: 69: config.SDeadzone = 0x18;
  1993  003144  0E18               	movlw	24
  1994  003146  6FC9               	movwf	(_config+19)& (0+255),b
  1995                           
  1996                           ; BSR set to: 0
  1997                           ;config.c: 70: config.CDeadzone = 0x18;
  1998  003148  0E18               	movlw	24
  1999  00314A  6FCA               	movwf	(_config+20)& (0+255),b
  2000                           
  2001                           ; BSR set to: 0
  2002                           ;config.c: 71: config.deadzoneMode = 1;
  2003  00314C  0E01               	movlw	1
  2004  00314E  6FCB               	movwf	(_config+21)& (0+255),b
  2005                           
  2006                           ; BSR set to: 0
  2007                           ;config.c: 74: config.rumbleIntensity = 0xFF;
  2008  003150  69CC               	setf	(_config+22)& (0+255),b
  2009                           
  2010                           ; BSR set to: 0
  2011                           ;config.c: 77: config.triggersMode = 1;
  2012  003152  0E01               	movlw	1
  2013  003154  6FCD               	movwf	(_config+23)& (0+255),b
  2014                           
  2015                           ; BSR set to: 0
  2016  003156  0012               	return		;funcret
  2017  003158                     __end_of_configSetDefault:
  2018                           	opt callstack 0
  2019                           
  2020 ;; *************** function _configFlashAll *****************
  2021 ;; Defined at:
  2022 ;;		line 80 in file "config.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;		None
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;  data            2    2[COMRAM] PTR unsigned char 
  2027 ;;		 -> config(24), 
  2028 ;;  i               1    4[COMRAM] unsigned char 
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  1    wreg      void 
  2031 ;; Registers used:
  2032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2038 ;;      Params:         0       0       0       0       0       0       0       0       0
  2039 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2040 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2041 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2042 ;;Total ram usage:        3 bytes
  2043 ;; Hardware stack levels used:    1
  2044 ;; Hardware stack levels required when called:    4
  2045 ;; This function calls:
  2046 ;;		_EEPROMWriteByte
  2047 ;; This function is called by:
  2048 ;;		_main
  2049 ;;		_configInit
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053                           	psect	text4
  2054  00346E                     __ptext4:
  2055                           	opt callstack 0
  2056  00346E                     _configFlashAll:
  2057                           	opt callstack 25
  2058                           
  2059                           ;config.c: 81: uint8_t i;;config.c: 82: uint8_t* data = (uint8_t*)&config;
  2060                           
  2061                           ; BSR set to: 0
  2062                           ;incstack = 0
  2063  00346E  0EB6               	movlw	low _config
  2064  003470  6E2E               	movwf	configFlashAll@data,c
  2065  003472  0E00               	movlw	high _config
  2066  003474  6E2F               	movwf	configFlashAll@data+1,c
  2067                           
  2068                           ;config.c: 83: for (i = 0; i < sizeof(config_t); i++) {
  2069  003476  0E00               	movlw	0
  2070  003478  6E30               	movwf	configFlashAll@i,c
  2071  00347A                     l2816:
  2072                           
  2073                           ;config.c: 84: EEPROMWriteByte(i, data[i]);
  2074  00347A  5030               	movf	configFlashAll@i,w,c
  2075  00347C  242E               	addwf	configFlashAll@data,w,c
  2076  00347E  6ED9               	movwf	fsr2l,c
  2077  003480  0E00               	movlw	0
  2078  003482  202F               	addwfc	configFlashAll@data+1,w,c
  2079  003484  6EDA               	movwf	fsr2h,c
  2080  003486  50DF               	movf	indf2,w,c
  2081  003488  6E2C               	movwf	EEPROMWriteByte@data,c
  2082  00348A  5030               	movf	configFlashAll@i,w,c
  2083  00348C  EC79  F01A         	call	_EEPROMWriteByte
  2084  003490  2A30               	incf	configFlashAll@i,f,c
  2085  003492  0E17               	movlw	23
  2086  003494  6430               	cpfsgt	configFlashAll@i,c
  2087  003496  D7F1               	goto	l2816
  2088  003498  0012               	return	
  2089  00349A                     __end_of_configFlashAll:
  2090                           	opt callstack 0
  2091                           
  2092 ;; *************** function _EEPROMWriteByte *****************
  2093 ;; Defined at:
  2094 ;;		line 44 in file "nvm.c"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;  address         1    wreg     unsigned char 
  2097 ;;  data            1    0[COMRAM] unsigned char 
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;  address         1    1[COMRAM] unsigned char 
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  1    wreg      void 
  2102 ;; Registers used:
  2103 ;;		wreg, status,2, cstack
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2109 ;;      Params:         1       0       0       0       0       0       0       0       0
  2110 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2111 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2112 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2113 ;;Total ram usage:        2 bytes
  2114 ;; Hardware stack levels used:    1
  2115 ;; Hardware stack levels required when called:    3
  2116 ;; This function calls:
  2117 ;;		_NVMUnlock
  2118 ;; This function is called by:
  2119 ;;		_main
  2120 ;;		_configFlashAll
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           	psect	text5
  2125  0034F2                     __ptext5:
  2126                           	opt callstack 0
  2127  0034F2                     _EEPROMWriteByte:
  2128                           	opt callstack 25
  2129                           
  2130                           ;incstack = 0
  2131                           ;EEPROMWriteByte@address stored from wreg
  2132  0034F2  6E2D               	movwf	EEPROMWriteByte@address,c
  2133                           
  2134                           ;nvm.c: 45: NVMCON1 = 0;
  2135  0034F4  0E00               	movlw	0
  2136  0034F6  0139               	movlb	57	; () banked
  2137  0034F8  6FE5               	movwf	229,b	;volsfr
  2138                           
  2139                           ; BSR set to: 57
  2140                           ;nvm.c: 46: NVMADRL = address;
  2141  0034FA  0060  F0B7  F9E0   	movff	EEPROMWriteByte@address,14816	;volatile
  2142                           
  2143                           ; BSR set to: 57
  2144                           ;nvm.c: 47: NVMDAT = data;
  2145  003500  0060  F0B3  F9E3   	movff	EEPROMWriteByte@data,14819	;volatile
  2146                           
  2147                           ; BSR set to: 57
  2148                           ;nvm.c: 48: NVMCON1bits.WREN = 1;
  2149  003506  85E5               	bsf	229,2,b	;volsfr
  2150                           
  2151                           ; BSR set to: 57
  2152                           ;nvm.c: 49: NVMUnlock();
  2153  003508  EC95  F01A         	call	_NVMUnlock	;wreg free
  2154  00350C                     l755:
  2155  00350C  0139               	movlb	57	; () banked
  2156  00350E  B3E5               	btfsc	229,1,b	;volsfr
  2157  003510  D7FD               	goto	l755
  2158                           
  2159                           ; BSR set to: 57
  2160                           ;nvm.c: 51: NVMCON1bits.WREN = 0;
  2161  003512  95E5               	bcf	229,2,b	;volsfr
  2162                           
  2163                           ; BSR set to: 57
  2164  003514  0012               	return		;funcret
  2165  003516                     __end_of_EEPROMWriteByte:
  2166                           	opt callstack 0
  2167                           
  2168 ;; *************** function _NVMUnlock *****************
  2169 ;; Defined at:
  2170 ;;		line 29 in file "nvm.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;		None
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;		None
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  1    wreg      void 
  2177 ;; Registers used:
  2178 ;;		wreg, status,2
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2184 ;;      Params:         0       0       0       0       0       0       0       0       0
  2185 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2186 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2187 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2188 ;;Total ram usage:        0 bytes
  2189 ;; Hardware stack levels used:    1
  2190 ;; Hardware stack levels required when called:    2
  2191 ;; This function calls:
  2192 ;;		Nothing
  2193 ;; This function is called by:
  2194 ;;		_EEPROMWriteByte
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           	psect	text6
  2199  00352A                     __ptext6:
  2200                           	opt callstack 0
  2201  00352A                     _NVMUnlock:
  2202                           	opt callstack 25
  2203                           
  2204                           ;nvm.c: 30: INTCON0bits.GIE = 0;
  2205                           
  2206                           ; BSR set to: 57
  2207                           ;incstack = 0
  2208  00352A  9ED2               	bcf	16338,7,c	;volatile
  2209                           
  2210                           ;nvm.c: 31: NVMCON2 = 0x55;
  2211  00352C  0E55               	movlw	85
  2212  00352E  0139               	movlb	57	; () banked
  2213  003530  6FE6               	movwf	230,b	;volsfr
  2214                           
  2215                           ;nvm.c: 32: NVMCON2 = 0xAA;
  2216  003532  0EAA               	movlw	170
  2217  003534  6FE6               	movwf	230,b	;volsfr
  2218                           
  2219                           ; BSR set to: 57
  2220                           ;nvm.c: 33: NVMCON1bits.WR = 1;
  2221  003536  83E5               	bsf	229,1,b	;volsfr
  2222                           
  2223                           ; BSR set to: 57
  2224                           ;nvm.c: 34: INTCON0bits.GIE = 1;
  2225  003538  8ED2               	bsf	16338,7,c	;volatile
  2226                           
  2227                           ; BSR set to: 57
  2228  00353A  0012               	return		;funcret
  2229  00353C                     __end_of_NVMUnlock:
  2230                           	opt callstack 0
  2231                           
  2232 ;; *************** function _EEPROMReadByte *****************
  2233 ;; Defined at:
  2234 ;;		line 37 in file "nvm.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;  address         1    wreg     unsigned char 
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;  address         1    0[COMRAM] unsigned char 
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  1    wreg      unsigned char 
  2241 ;; Registers used:
  2242 ;;		wreg, status,2
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2248 ;;      Params:         0       0       0       0       0       0       0       0       0
  2249 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2250 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2251 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2252 ;;Total ram usage:        1 bytes
  2253 ;; Hardware stack levels used:    1
  2254 ;; Hardware stack levels required when called:    2
  2255 ;; This function calls:
  2256 ;;		Nothing
  2257 ;; This function is called by:
  2258 ;;		_main
  2259 ;;		_configInit
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           
  2263                           	psect	text7
  2264  003516                     __ptext7:
  2265                           	opt callstack 0
  2266  003516                     _EEPROMReadByte:
  2267                           	opt callstack 27
  2268                           
  2269                           ; BSR set to: 57
  2270                           ;incstack = 0
  2271                           ;EEPROMReadByte@address stored from wreg
  2272  003516  6E2C               	movwf	EEPROMReadByte@address,c
  2273                           
  2274                           ;nvm.c: 38: NVMCON1 = 0;
  2275  003518  0E00               	movlw	0
  2276  00351A  0139               	movlb	57	; () banked
  2277  00351C  6FE5               	movwf	229,b	;volsfr
  2278                           
  2279                           ; BSR set to: 57
  2280                           ;nvm.c: 39: NVMADRL = address;
  2281  00351E  0060  F0B3  F9E0   	movff	EEPROMReadByte@address,14816	;volatile
  2282                           
  2283                           ; BSR set to: 57
  2284                           ;nvm.c: 40: NVMCON1bits.RD = 1;
  2285  003524  81E5               	bsf	229,0,b	;volsfr
  2286                           
  2287                           ; BSR set to: 57
  2288                           ;nvm.c: 41: return NVMDAT;
  2289  003526  51E3               	movf	227,w,b	;volatile
  2290                           
  2291                           ; BSR set to: 57
  2292  003528  0012               	return		;funcret
  2293  00352A                     __end_of_EEPROMReadByte:
  2294                           	opt callstack 0
  2295                           
  2296 ;; *************** function _buttonsUpdate *****************
  2297 ;; Defined at:
  2298 ;;		line 87 in file "buttons.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;		None
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;  toggledButto    3    4[COMRAM] struct .
  2303 ;;  i               1    3[COMRAM] unsigned char 
  2304 ;;  PC              1    2[COMRAM] unsigned char 
  2305 ;;  PB              1    1[COMRAM] unsigned char 
  2306 ;;  PA              1    0[COMRAM] unsigned char 
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  1    wreg      void 
  2309 ;; Registers used:
  2310 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2316 ;;      Params:         0       0       0       0       0       0       0       0       0
  2317 ;;      Locals:         7       0       0       0       0       0       0       0       0
  2318 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2319 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2320 ;;Total ram usage:        7 bytes
  2321 ;; Hardware stack levels used:    1
  2322 ;; Hardware stack levels required when called:    2
  2323 ;; This function calls:
  2324 ;;		Nothing
  2325 ;; This function is called by:
  2326 ;;		_main
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           	psect	text8
  2331  002412                     __ptext8:
  2332                           	opt callstack 0
  2333  002412                     _buttonsUpdate:
  2334                           	opt callstack 28
  2335                           
  2336                           ;buttons.c: 88: uint8_t i;;buttons.c: 89: uint8_t PA, PB, PC;;buttons.c: 90: inButtons_t
      +                           toggledButtons;;buttons.c: 93: PA = PORTA;
  2337                           
  2338                           ; BSR set to: 57
  2339                           ;incstack = 0
  2340  002412  006F FF28  F02C    	movff	16330,buttonsUpdate@PA	;volatile
  2341                           
  2342                           ;buttons.c: 94: PB = PORTB;
  2343  002418  006F FF2C  F02D    	movff	16331,buttonsUpdate@PB	;volatile
  2344                           
  2345                           ;buttons.c: 95: PC = PORTC;
  2346  00241E  006F FF30  F02E    	movff	16332,buttonsUpdate@PC	;volatile
  2347                           
  2348                           ;buttons.c: 96: toggledButtons.PORTA = (uint8_t)(PA ^ prevButtons.PORTA);
  2349  002424  501A               	movf	_prevButtons,w,c
  2350  002426  182C               	xorwf	buttonsUpdate@PA,w,c
  2351  002428  6E30               	movwf	buttonsUpdate@toggledButtons,c
  2352                           
  2353                           ;buttons.c: 97: toggledButtons.PORTB = (uint8_t)(PB ^ prevButtons.PORTB);
  2354  00242A  501B               	movf	_prevButtons+1,w,c
  2355  00242C  182D               	xorwf	buttonsUpdate@PB,w,c
  2356  00242E  6E31               	movwf	buttonsUpdate@toggledButtons+1,c
  2357                           
  2358                           ;buttons.c: 98: toggledButtons.PORTC = (uint8_t)(PC ^ prevButtons.PORTC);
  2359  002430  501C               	movf	_prevButtons+2,w,c
  2360  002432  182E               	xorwf	buttonsUpdate@PC,w,c
  2361  002434  6E32               	movwf	buttonsUpdate@toggledButtons+2,c
  2362                           
  2363                           ;buttons.c: 100: prevButtons.PORTA = PA;
  2364  002436  0060  F0B0  F01A   	movff	buttonsUpdate@PA,_prevButtons
  2365                           
  2366                           ;buttons.c: 101: prevButtons.PORTB = PB;
  2367  00243C  0060  F0B4  F01B   	movff	buttonsUpdate@PB,_prevButtons+1
  2368                           
  2369                           ;buttons.c: 102: prevButtons.PORTC = PC;
  2370  002442  0060  F0B8  F01C   	movff	buttonsUpdate@PC,_prevButtons+2
  2371                           
  2372                           ;buttons.c: 105: if (toggledButtons.A) buttonsTimers[BUTTON_A_ID] = 0;
  2373  002448  AE32               	btfss	buttonsUpdate@toggledButtons+2,7,c
  2374  00244A  D002               	goto	l3070
  2375  00244C  0E00               	movlw	0
  2376  00244E  6E01               	movwf	_buttonsTimers,c
  2377  002450                     l3070:
  2378                           
  2379                           ;buttons.c: 106: if (toggledButtons.B) buttonsTimers[BUTTON_B_ID] = 0;
  2380  002450  AC32               	btfss	buttonsUpdate@toggledButtons+2,6,c
  2381  002452  D002               	goto	l3074
  2382  002454  0E00               	movlw	0
  2383  002456  6E02               	movwf	_buttonsTimers+1,c
  2384  002458                     l3074:
  2385                           
  2386                           ;buttons.c: 107: if (toggledButtons.X) buttonsTimers[BUTTON_X_ID] = 0;
  2387  002458  A631               	btfss	buttonsUpdate@toggledButtons+1,3,c
  2388  00245A  D002               	goto	l3078
  2389  00245C  0E00               	movlw	0
  2390  00245E  6E03               	movwf	_buttonsTimers+2,c
  2391  002460                     l3078:
  2392                           
  2393                           ;buttons.c: 108: if (toggledButtons.Y) buttonsTimers[BUTTON_Y_ID] = 0;
  2394  002460  A431               	btfss	buttonsUpdate@toggledButtons+1,2,c
  2395  002462  D002               	goto	l3082
  2396  002464  0E00               	movlw	0
  2397  002466  6E04               	movwf	_buttonsTimers+3,c
  2398  002468                     l3082:
  2399                           
  2400                           ;buttons.c: 109: if (toggledButtons.ST) buttonsTimers[BUTTON_ST_ID] = 0;
  2401  002468  AC30               	btfss	buttonsUpdate@toggledButtons,6,c
  2402  00246A  D002               	goto	l3086
  2403  00246C  0E00               	movlw	0
  2404  00246E  6E05               	movwf	_buttonsTimers+4,c
  2405  002470                     l3086:
  2406                           
  2407                           ;buttons.c: 110: if (toggledButtons.DL) buttonsTimers[BUTTON_DL_ID] = 0;
  2408  002470  A630               	btfss	buttonsUpdate@toggledButtons,3,c
  2409  002472  D002               	goto	l3090
  2410  002474  0E00               	movlw	0
  2411  002476  6E06               	movwf	_buttonsTimers+5,c
  2412  002478                     l3090:
  2413                           
  2414                           ;buttons.c: 111: if (toggledButtons.DR) buttonsTimers[BUTTON_DR_ID] = 0;
  2415  002478  AA30               	btfss	buttonsUpdate@toggledButtons,5,c
  2416  00247A  D002               	goto	l3094
  2417  00247C  0E00               	movlw	0
  2418  00247E  6E07               	movwf	_buttonsTimers+6,c
  2419  002480                     l3094:
  2420                           
  2421                           ;buttons.c: 112: if (toggledButtons.DD) buttonsTimers[BUTTON_DD_ID] = 0;
  2422  002480  AE30               	btfss	buttonsUpdate@toggledButtons,7,c
  2423  002482  D002               	goto	l3098
  2424  002484  0E00               	movlw	0
  2425  002486  6E08               	movwf	_buttonsTimers+7,c
  2426  002488                     l3098:
  2427                           
  2428                           ;buttons.c: 113: if (toggledButtons.DU) buttonsTimers[BUTTON_DU_ID] = 0;
  2429  002488  A830               	btfss	buttonsUpdate@toggledButtons,4,c
  2430  00248A  D002               	goto	l3102
  2431  00248C  0E00               	movlw	0
  2432  00248E  6E09               	movwf	_buttonsTimers+8,c
  2433  002490                     l3102:
  2434                           
  2435                           ;buttons.c: 114: if (toggledButtons.Z) buttonsTimers[BUTTON_Z_ID] = 0;
  2436  002490  A031               	btfss	buttonsUpdate@toggledButtons+1,0,c
  2437  002492  D002               	goto	l3106
  2438  002494  0E00               	movlw	0
  2439  002496  6E0A               	movwf	_buttonsTimers+9,c
  2440  002498                     l3106:
  2441                           
  2442                           ;buttons.c: 115: if (toggledButtons.RD) buttonsTimers[BUTTON_RD_ID] = 0;
  2443  002498  A231               	btfss	buttonsUpdate@toggledButtons+1,1,c
  2444  00249A  D002               	goto	l3110
  2445  00249C  0E00               	movlw	0
  2446  00249E  6E0B               	movwf	_buttonsTimers+10,c
  2447  0024A0                     l3110:
  2448                           
  2449                           ;buttons.c: 116: if (toggledButtons.LD) buttonsTimers[BUTTON_LD_ID] = 0;
  2450  0024A0  A430               	btfss	buttonsUpdate@toggledButtons,2,c
  2451  0024A2  D002               	goto	l3114
  2452  0024A4  0E00               	movlw	0
  2453  0024A6  6E0C               	movwf	_buttonsTimers+11,c
  2454  0024A8                     l3114:
  2455                           
  2456                           ;buttons.c: 117: if (toggledButtons.LA) buttonsTimers[BUTTON_LA_ID] = 0;
  2457  0024A8  A032               	btfss	buttonsUpdate@toggledButtons+2,0,c
  2458  0024AA  D002               	goto	l3118
  2459  0024AC  0E00               	movlw	0
  2460  0024AE  6E0D               	movwf	_buttonsTimers+12,c
  2461  0024B0                     l3118:
  2462                           
  2463                           ;buttons.c: 118: if (toggledButtons.RA) buttonsTimers[BUTTON_RA_ID] = 0;
  2464  0024B0  AA32               	btfss	buttonsUpdate@toggledButtons+2,5,c
  2465  0024B2  D002               	goto	l3122
  2466  0024B4  0E00               	movlw	0
  2467  0024B6  6E0E               	movwf	_buttonsTimers+13,c
  2468  0024B8                     l3122:
  2469                           
  2470                           ;buttons.c: 119: if (toggledButtons.Z2) buttonsTimers[BUTTON_Z2_ID] = 0;
  2471  0024B8  AA31               	btfss	buttonsUpdate@toggledButtons+1,5,c
  2472  0024BA  D002               	goto	l3126
  2473  0024BC  0E00               	movlw	0
  2474  0024BE  6E0F               	movwf	_buttonsTimers+14,c
  2475  0024C0                     l3126:
  2476                           
  2477                           ;buttons.c: 121: if (!TMR0IF) return;
  2478  0024C0  0139               	movlb	57	; () banked
  2479  0024C2  AFA3               	btfss	163,7,b	;volatile
  2480  0024C4  0012               	return	
  2481                           
  2482                           ; BSR set to: 57
  2483                           ;buttons.c: 122: TMR0IF = 0;
  2484  0024C6  9FA3               	bcf	163,7,b	;volatile
  2485                           
  2486                           ; BSR set to: 57
  2487                           ;buttons.c: 125: for (i = 0; i < N_BUTTONS; i++) {
  2488  0024C8  0E00               	movlw	0
  2489  0024CA  6E2F               	movwf	buttonsUpdate@i,c
  2490  0024CC                     l3136:
  2491                           
  2492                           ;buttons.c: 126: buttonsTimers[i]++;
  2493  0024CC  0E01               	movlw	low _buttonsTimers
  2494  0024CE  242F               	addwf	buttonsUpdate@i,w,c
  2495  0024D0  6ED9               	movwf	fsr2l,c
  2496  0024D2  6ADA               	clrf	fsr2h,c
  2497  0024D4  0E00               	movlw	high _buttonsTimers
  2498  0024D6  22DA               	addwfc	fsr2h,f,c
  2499  0024D8  2ADF               	incf	indf2,f,c
  2500  0024DA  2A2F               	incf	buttonsUpdate@i,f,c
  2501  0024DC  0E0E               	movlw	14
  2502  0024DE  642F               	cpfsgt	buttonsUpdate@i,c
  2503  0024E0  D7F5               	goto	l3136
  2504                           
  2505                           ;buttons.c: 127: };buttons.c: 129: outButtons.byte0 = 0x00;
  2506  0024E2  0E00               	movlw	0
  2507  0024E4  6E16               	movwf	_outButtons,c
  2508                           
  2509                           ;buttons.c: 130: outButtons.byte1 = 0x80;
  2510  0024E6  0E80               	movlw	128
  2511  0024E8  6E17               	movwf	_outButtons+1,c
  2512                           
  2513                           ;buttons.c: 132: if (buttonsTimers[BUTTON_A_ID] >= 10 && !prevButtons.A) { buttonsTimers
      +                          [BUTTON_A_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_A_ID]; } if (buttonsTimer
      +                          s[BUTTON_A_ID] >= 10 && !prevButtons.A) { buttonsTimers[BUTTON_A_ID] = 10; outButtons.by
      +                          te1
  2514  0024EA  0E09               	movlw	9
  2515  0024EC  6401               	cpfsgt	_buttonsTimers,c
  2516  0024EE  D007               	goto	l3152
  2517  0024F0  BE1C               	btfsc	_prevButtons+2,7,c
  2518  0024F2  D005               	goto	l3152
  2519  0024F4  0E0A               	movlw	10
  2520  0024F6  6E01               	movwf	_buttonsTimers,c
  2521  0024F8  0100               	movlb	0	; () banked
  2522  0024FA  51DD               	movf	_buttonsMapByte0& (0+255),w,b
  2523  0024FC  1216               	iorwf	_outButtons,f,c
  2524  0024FE                     l3152:
  2525  0024FE  0E09               	movlw	9
  2526  002500  6401               	cpfsgt	_buttonsTimers,c
  2527  002502  D007               	goto	l3160
  2528  002504  BE1C               	btfsc	_prevButtons+2,7,c
  2529  002506  D005               	goto	l3160
  2530  002508  0E0A               	movlw	10
  2531  00250A  6E01               	movwf	_buttonsTimers,c
  2532  00250C  0100               	movlb	0	; () banked
  2533  00250E  51CE               	movf	_buttonsMapByte1& (0+255),w,b
  2534  002510  1217               	iorwf	_outButtons+1,f,c
  2535  002512                     l3160:
  2536                           
  2537                           ;buttons.c: 133: if (buttonsTimers[BUTTON_B_ID] >= 10 && !prevButtons.B) { buttonsTimers
      +                          [BUTTON_B_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_B_ID]; } if (buttonsTimer
      +                          s[BUTTON_B_ID] >= 10 && !prevButtons.B) { buttonsTimers[BUTTON_B_ID] = 10; outButtons.by
      +                          te1
  2538  002512  0E09               	movlw	9
  2539  002514  6402               	cpfsgt	_buttonsTimers+1,c
  2540  002516  D007               	goto	l3168
  2541  002518  BC1C               	btfsc	_prevButtons+2,6,c
  2542  00251A  D005               	goto	l3168
  2543  00251C  0E0A               	movlw	10
  2544  00251E  6E02               	movwf	_buttonsTimers+1,c
  2545  002520  0100               	movlb	0	; () banked
  2546  002522  51DE               	movf	(_buttonsMapByte0+1)& (0+255),w,b
  2547  002524  1216               	iorwf	_outButtons,f,c
  2548  002526                     l3168:
  2549  002526  0E09               	movlw	9
  2550  002528  6402               	cpfsgt	_buttonsTimers+1,c
  2551  00252A  D007               	goto	l3176
  2552  00252C  BC1C               	btfsc	_prevButtons+2,6,c
  2553  00252E  D005               	goto	l3176
  2554  002530  0E0A               	movlw	10
  2555  002532  6E02               	movwf	_buttonsTimers+1,c
  2556  002534  0100               	movlb	0	; () banked
  2557  002536  51CF               	movf	(_buttonsMapByte1+1)& (0+255),w,b
  2558  002538  1217               	iorwf	_outButtons+1,f,c
  2559  00253A                     l3176:
  2560                           
  2561                           ;buttons.c: 134: if (buttonsTimers[BUTTON_X_ID] >= 10 && !prevButtons.X) { buttonsTimers
      +                          [BUTTON_X_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_X_ID]; } if (buttonsTimer
      +                          s[BUTTON_X_ID] >= 10 && !prevButtons.X) { buttonsTimers[BUTTON_X_ID] = 10; outButtons.by
      +                          te1
  2562  00253A  0E09               	movlw	9
  2563  00253C  6403               	cpfsgt	_buttonsTimers+2,c
  2564  00253E  D007               	goto	l3184
  2565  002540  B61B               	btfsc	_prevButtons+1,3,c
  2566  002542  D005               	goto	l3184
  2567  002544  0E0A               	movlw	10
  2568  002546  6E03               	movwf	_buttonsTimers+2,c
  2569  002548  0100               	movlb	0	; () banked
  2570  00254A  51DF               	movf	(_buttonsMapByte0+2)& (0+255),w,b
  2571  00254C  1216               	iorwf	_outButtons,f,c
  2572  00254E                     l3184:
  2573  00254E  0E09               	movlw	9
  2574  002550  6403               	cpfsgt	_buttonsTimers+2,c
  2575  002552  D007               	goto	l3192
  2576  002554  B61B               	btfsc	_prevButtons+1,3,c
  2577  002556  D005               	goto	l3192
  2578  002558  0E0A               	movlw	10
  2579  00255A  6E03               	movwf	_buttonsTimers+2,c
  2580  00255C  0100               	movlb	0	; () banked
  2581  00255E  51D0               	movf	(_buttonsMapByte1+2)& (0+255),w,b
  2582  002560  1217               	iorwf	_outButtons+1,f,c
  2583  002562                     l3192:
  2584                           
  2585                           ;buttons.c: 135: if (buttonsTimers[BUTTON_Y_ID] >= 10 && !prevButtons.Y) { buttonsTimers
      +                          [BUTTON_Y_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_Y_ID]; } if (buttonsTimer
      +                          s[BUTTON_Y_ID] >= 10 && !prevButtons.Y) { buttonsTimers[BUTTON_Y_ID] = 10; outButtons.by
      +                          te1
  2586  002562  0E09               	movlw	9
  2587  002564  6404               	cpfsgt	_buttonsTimers+3,c
  2588  002566  D007               	goto	l3200
  2589  002568  B41B               	btfsc	_prevButtons+1,2,c
  2590  00256A  D005               	goto	l3200
  2591  00256C  0E0A               	movlw	10
  2592  00256E  6E04               	movwf	_buttonsTimers+3,c
  2593  002570  0100               	movlb	0	; () banked
  2594  002572  51E0               	movf	(_buttonsMapByte0+3)& (0+255),w,b
  2595  002574  1216               	iorwf	_outButtons,f,c
  2596  002576                     l3200:
  2597  002576  0E09               	movlw	9
  2598  002578  6404               	cpfsgt	_buttonsTimers+3,c
  2599  00257A  D007               	goto	l3208
  2600  00257C  B41B               	btfsc	_prevButtons+1,2,c
  2601  00257E  D005               	goto	l3208
  2602  002580  0E0A               	movlw	10
  2603  002582  6E04               	movwf	_buttonsTimers+3,c
  2604  002584  0100               	movlb	0	; () banked
  2605  002586  51D1               	movf	(_buttonsMapByte1+3)& (0+255),w,b
  2606  002588  1217               	iorwf	_outButtons+1,f,c
  2607  00258A                     l3208:
  2608                           
  2609                           ;buttons.c: 136: if (buttonsTimers[BUTTON_ST_ID] >= 10 && !prevButtons.ST) { buttonsTime
      +                          rs[BUTTON_ST_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_ST_ID]; } if (buttonsT
      +                          imers[BUTTON_ST_ID] >= 10 && !prevButtons.ST) { buttonsTimers[BUTTON_ST_ID] = 10; outBut
      +                          ton
  2610  00258A  0E09               	movlw	9
  2611  00258C  6405               	cpfsgt	_buttonsTimers+4,c
  2612  00258E  D007               	goto	l3216
  2613  002590  BC1A               	btfsc	_prevButtons,6,c
  2614  002592  D005               	goto	l3216
  2615  002594  0E0A               	movlw	10
  2616  002596  6E05               	movwf	_buttonsTimers+4,c
  2617  002598  0100               	movlb	0	; () banked
  2618  00259A  51E1               	movf	(_buttonsMapByte0+4)& (0+255),w,b
  2619  00259C  1216               	iorwf	_outButtons,f,c
  2620  00259E                     l3216:
  2621  00259E  0E09               	movlw	9
  2622  0025A0  6405               	cpfsgt	_buttonsTimers+4,c
  2623  0025A2  D007               	goto	l3224
  2624  0025A4  BC1A               	btfsc	_prevButtons,6,c
  2625  0025A6  D005               	goto	l3224
  2626  0025A8  0E0A               	movlw	10
  2627  0025AA  6E05               	movwf	_buttonsTimers+4,c
  2628  0025AC  0100               	movlb	0	; () banked
  2629  0025AE  51D2               	movf	(_buttonsMapByte1+4)& (0+255),w,b
  2630  0025B0  1217               	iorwf	_outButtons+1,f,c
  2631  0025B2                     l3224:
  2632                           
  2633                           ;buttons.c: 137: if (buttonsTimers[BUTTON_DL_ID] >= 10 && !prevButtons.DL) { buttonsTime
      +                          rs[BUTTON_DL_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_DL_ID]; } if (buttonsT
      +                          imers[BUTTON_DL_ID] >= 10 && !prevButtons.DL) { buttonsTimers[BUTTON_DL_ID] = 10; outBut
      +                          ton
  2634  0025B2  0E09               	movlw	9
  2635  0025B4  6406               	cpfsgt	_buttonsTimers+5,c
  2636  0025B6  D007               	goto	l3232
  2637  0025B8  B61A               	btfsc	_prevButtons,3,c
  2638  0025BA  D005               	goto	l3232
  2639  0025BC  0E0A               	movlw	10
  2640  0025BE  6E06               	movwf	_buttonsTimers+5,c
  2641  0025C0  0100               	movlb	0	; () banked
  2642  0025C2  51E2               	movf	(_buttonsMapByte0+5)& (0+255),w,b
  2643  0025C4  1216               	iorwf	_outButtons,f,c
  2644  0025C6                     l3232:
  2645  0025C6  0E09               	movlw	9
  2646  0025C8  6406               	cpfsgt	_buttonsTimers+5,c
  2647  0025CA  D007               	goto	l3240
  2648  0025CC  B61A               	btfsc	_prevButtons,3,c
  2649  0025CE  D005               	goto	l3240
  2650  0025D0  0E0A               	movlw	10
  2651  0025D2  6E06               	movwf	_buttonsTimers+5,c
  2652  0025D4  0100               	movlb	0	; () banked
  2653  0025D6  51D3               	movf	(_buttonsMapByte1+5)& (0+255),w,b
  2654  0025D8  1217               	iorwf	_outButtons+1,f,c
  2655  0025DA                     l3240:
  2656                           
  2657                           ;buttons.c: 138: if (buttonsTimers[BUTTON_DR_ID] >= 10 && !prevButtons.DR) { buttonsTime
      +                          rs[BUTTON_DR_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_DR_ID]; } if (buttonsT
      +                          imers[BUTTON_DR_ID] >= 10 && !prevButtons.DR) { buttonsTimers[BUTTON_DR_ID] = 10; outBut
      +                          ton
  2658  0025DA  0E09               	movlw	9
  2659  0025DC  6407               	cpfsgt	_buttonsTimers+6,c
  2660  0025DE  D007               	goto	l3248
  2661  0025E0  BA1A               	btfsc	_prevButtons,5,c
  2662  0025E2  D005               	goto	l3248
  2663  0025E4  0E0A               	movlw	10
  2664  0025E6  6E07               	movwf	_buttonsTimers+6,c
  2665  0025E8  0100               	movlb	0	; () banked
  2666  0025EA  51E3               	movf	(_buttonsMapByte0+6)& (0+255),w,b
  2667  0025EC  1216               	iorwf	_outButtons,f,c
  2668  0025EE                     l3248:
  2669  0025EE  0E09               	movlw	9
  2670  0025F0  6407               	cpfsgt	_buttonsTimers+6,c
  2671  0025F2  D007               	goto	l3256
  2672  0025F4  BA1A               	btfsc	_prevButtons,5,c
  2673  0025F6  D005               	goto	l3256
  2674  0025F8  0E0A               	movlw	10
  2675  0025FA  6E07               	movwf	_buttonsTimers+6,c
  2676  0025FC  0100               	movlb	0	; () banked
  2677  0025FE  51D4               	movf	(_buttonsMapByte1+6)& (0+255),w,b
  2678  002600  1217               	iorwf	_outButtons+1,f,c
  2679  002602                     l3256:
  2680                           
  2681                           ;buttons.c: 139: if (buttonsTimers[BUTTON_DD_ID] >= 10 && !prevButtons.DD) { buttonsTime
      +                          rs[BUTTON_DD_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_DD_ID]; } if (buttonsT
      +                          imers[BUTTON_DD_ID] >= 10 && !prevButtons.DD) { buttonsTimers[BUTTON_DD_ID] = 10; outBut
      +                          ton
  2682  002602  0E09               	movlw	9
  2683  002604  6408               	cpfsgt	_buttonsTimers+7,c
  2684  002606  D007               	goto	l3264
  2685  002608  BE1A               	btfsc	_prevButtons,7,c
  2686  00260A  D005               	goto	l3264
  2687  00260C  0E0A               	movlw	10
  2688  00260E  6E08               	movwf	_buttonsTimers+7,c
  2689  002610  0100               	movlb	0	; () banked
  2690  002612  51E4               	movf	(_buttonsMapByte0+7)& (0+255),w,b
  2691  002614  1216               	iorwf	_outButtons,f,c
  2692  002616                     l3264:
  2693  002616  0E09               	movlw	9
  2694  002618  6408               	cpfsgt	_buttonsTimers+7,c
  2695  00261A  D007               	goto	l3272
  2696  00261C  BE1A               	btfsc	_prevButtons,7,c
  2697  00261E  D005               	goto	l3272
  2698  002620  0E0A               	movlw	10
  2699  002622  6E08               	movwf	_buttonsTimers+7,c
  2700  002624  0100               	movlb	0	; () banked
  2701  002626  51D5               	movf	(_buttonsMapByte1+7)& (0+255),w,b
  2702  002628  1217               	iorwf	_outButtons+1,f,c
  2703  00262A                     l3272:
  2704                           
  2705                           ;buttons.c: 140: if (buttonsTimers[BUTTON_DU_ID] >= 10 && !prevButtons.DU) { buttonsTime
      +                          rs[BUTTON_DU_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_DU_ID]; } if (buttonsT
      +                          imers[BUTTON_DU_ID] >= 10 && !prevButtons.DU) { buttonsTimers[BUTTON_DU_ID] = 10; outBut
      +                          ton
  2706  00262A  0E09               	movlw	9
  2707  00262C  6409               	cpfsgt	_buttonsTimers+8,c
  2708  00262E  D007               	goto	l3280
  2709  002630  B81A               	btfsc	_prevButtons,4,c
  2710  002632  D005               	goto	l3280
  2711  002634  0E0A               	movlw	10
  2712  002636  6E09               	movwf	_buttonsTimers+8,c
  2713  002638  0100               	movlb	0	; () banked
  2714  00263A  51E5               	movf	(_buttonsMapByte0+8)& (0+255),w,b
  2715  00263C  1216               	iorwf	_outButtons,f,c
  2716  00263E                     l3280:
  2717  00263E  0E09               	movlw	9
  2718  002640  6409               	cpfsgt	_buttonsTimers+8,c
  2719  002642  D007               	goto	l3288
  2720  002644  B81A               	btfsc	_prevButtons,4,c
  2721  002646  D005               	goto	l3288
  2722  002648  0E0A               	movlw	10
  2723  00264A  6E09               	movwf	_buttonsTimers+8,c
  2724  00264C  0100               	movlb	0	; () banked
  2725  00264E  51D6               	movf	(_buttonsMapByte1+8)& (0+255),w,b
  2726  002650  1217               	iorwf	_outButtons+1,f,c
  2727  002652                     l3288:
  2728                           
  2729                           ;buttons.c: 141: if (buttonsTimers[BUTTON_Z_ID] >= 10 && !prevButtons.Z) { buttonsTimers
      +                          [BUTTON_Z_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_Z_ID]; } if (buttonsTimer
      +                          s[BUTTON_Z_ID] >= 10 && !prevButtons.Z) { buttonsTimers[BUTTON_Z_ID] = 10; outButtons.by
      +                          te1
  2730  002652  0E09               	movlw	9
  2731  002654  640A               	cpfsgt	_buttonsTimers+9,c
  2732  002656  D007               	goto	l3296
  2733  002658  B01B               	btfsc	_prevButtons+1,0,c
  2734  00265A  D005               	goto	l3296
  2735  00265C  0E0A               	movlw	10
  2736  00265E  6E0A               	movwf	_buttonsTimers+9,c
  2737  002660  0100               	movlb	0	; () banked
  2738  002662  51E6               	movf	(_buttonsMapByte0+9)& (0+255),w,b
  2739  002664  1216               	iorwf	_outButtons,f,c
  2740  002666                     l3296:
  2741  002666  0E09               	movlw	9
  2742  002668  640A               	cpfsgt	_buttonsTimers+9,c
  2743  00266A  D007               	goto	l3304
  2744  00266C  B01B               	btfsc	_prevButtons+1,0,c
  2745  00266E  D005               	goto	l3304
  2746  002670  0E0A               	movlw	10
  2747  002672  6E0A               	movwf	_buttonsTimers+9,c
  2748  002674  0100               	movlb	0	; () banked
  2749  002676  51D7               	movf	(_buttonsMapByte1+9)& (0+255),w,b
  2750  002678  1217               	iorwf	_outButtons+1,f,c
  2751  00267A                     l3304:
  2752                           
  2753                           ;buttons.c: 142: if (buttonsTimers[BUTTON_RD_ID] >= 10 && !prevButtons.RD) { buttonsTime
      +                          rs[BUTTON_RD_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_RD_ID]; } if (buttonsT
      +                          imers[BUTTON_RD_ID] >= 10 && !prevButtons.RD) { buttonsTimers[BUTTON_RD_ID] = 10; outBut
      +                          ton
  2754  00267A  0E09               	movlw	9
  2755  00267C  640B               	cpfsgt	_buttonsTimers+10,c
  2756  00267E  D007               	goto	l3312
  2757  002680  B21B               	btfsc	_prevButtons+1,1,c
  2758  002682  D005               	goto	l3312
  2759  002684  0E0A               	movlw	10
  2760  002686  6E0B               	movwf	_buttonsTimers+10,c
  2761  002688  0100               	movlb	0	; () banked
  2762  00268A  51E7               	movf	(_buttonsMapByte0+10)& (0+255),w,b
  2763  00268C  1216               	iorwf	_outButtons,f,c
  2764  00268E                     l3312:
  2765  00268E  0E09               	movlw	9
  2766  002690  640B               	cpfsgt	_buttonsTimers+10,c
  2767  002692  D007               	goto	l3320
  2768  002694  B21B               	btfsc	_prevButtons+1,1,c
  2769  002696  D005               	goto	l3320
  2770  002698  0E0A               	movlw	10
  2771  00269A  6E0B               	movwf	_buttonsTimers+10,c
  2772  00269C  0100               	movlb	0	; () banked
  2773  00269E  51D8               	movf	(_buttonsMapByte1+10)& (0+255),w,b
  2774  0026A0  1217               	iorwf	_outButtons+1,f,c
  2775  0026A2                     l3320:
  2776                           
  2777                           ;buttons.c: 143: if (buttonsTimers[BUTTON_LD_ID] >= 10 && !prevButtons.LD) { buttonsTime
      +                          rs[BUTTON_LD_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_LD_ID]; } if (buttonsT
      +                          imers[BUTTON_LD_ID] >= 10 && !prevButtons.LD) { buttonsTimers[BUTTON_LD_ID] = 10; outBut
      +                          ton
  2778  0026A2  0E09               	movlw	9
  2779  0026A4  640C               	cpfsgt	_buttonsTimers+11,c
  2780  0026A6  D007               	goto	l3328
  2781  0026A8  B41A               	btfsc	_prevButtons,2,c
  2782  0026AA  D005               	goto	l3328
  2783  0026AC  0E0A               	movlw	10
  2784  0026AE  6E0C               	movwf	_buttonsTimers+11,c
  2785  0026B0  0100               	movlb	0	; () banked
  2786  0026B2  51E8               	movf	(_buttonsMapByte0+11)& (0+255),w,b
  2787  0026B4  1216               	iorwf	_outButtons,f,c
  2788  0026B6                     l3328:
  2789  0026B6  0E09               	movlw	9
  2790  0026B8  640C               	cpfsgt	_buttonsTimers+11,c
  2791  0026BA  D007               	goto	l3336
  2792  0026BC  B41A               	btfsc	_prevButtons,2,c
  2793  0026BE  D005               	goto	l3336
  2794  0026C0  0E0A               	movlw	10
  2795  0026C2  6E0C               	movwf	_buttonsTimers+11,c
  2796  0026C4  0100               	movlb	0	; () banked
  2797  0026C6  51D9               	movf	(_buttonsMapByte1+11)& (0+255),w,b
  2798  0026C8  1217               	iorwf	_outButtons+1,f,c
  2799  0026CA                     l3336:
  2800                           
  2801                           ;buttons.c: 144: if (buttonsTimers[BUTTON_Z2_ID] >= 10 && !prevButtons.Z2) { buttonsTime
      +                          rs[BUTTON_Z2_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_Z2_ID]; } if (buttonsT
      +                          imers[BUTTON_Z2_ID] >= 10 && !prevButtons.Z2) { buttonsTimers[BUTTON_Z2_ID] = 10; outBut
      +                          ton
  2802  0026CA  0E09               	movlw	9
  2803  0026CC  640F               	cpfsgt	_buttonsTimers+14,c
  2804  0026CE  D007               	goto	l3344
  2805  0026D0  BA1B               	btfsc	_prevButtons+1,5,c
  2806  0026D2  D005               	goto	l3344
  2807  0026D4  0E0A               	movlw	10
  2808  0026D6  6E0F               	movwf	_buttonsTimers+14,c
  2809  0026D8  0100               	movlb	0	; () banked
  2810  0026DA  51EB               	movf	(_buttonsMapByte0+14)& (0+255),w,b
  2811  0026DC  1216               	iorwf	_outButtons,f,c
  2812  0026DE                     l3344:
  2813  0026DE  0E09               	movlw	9
  2814  0026E0  640F               	cpfsgt	_buttonsTimers+14,c
  2815  0026E2  D007               	goto	l3352
  2816  0026E4  BA1B               	btfsc	_prevButtons+1,5,c
  2817  0026E6  D005               	goto	l3352
  2818  0026E8  0E0A               	movlw	10
  2819  0026EA  6E0F               	movwf	_buttonsTimers+14,c
  2820  0026EC  0100               	movlb	0	; () banked
  2821  0026EE  51DC               	movf	(_buttonsMapByte1+14)& (0+255),w,b
  2822  0026F0  1217               	iorwf	_outButtons+1,f,c
  2823  0026F2                     l3352:
  2824                           
  2825                           ;buttons.c: 146: if (buttonsTimers[BUTTON_LA_ID] >= 10) {
  2826  0026F2  0E09               	movlw	9
  2827  0026F4  640D               	cpfsgt	_buttonsTimers+12,c
  2828  0026F6  D008               	goto	l3360
  2829                           
  2830                           ;buttons.c: 147: buttonsTimers[BUTTON_LA_ID] = 10;
  2831  0026F8  0E0A               	movlw	10
  2832  0026FA  6E0D               	movwf	_buttonsTimers+12,c
  2833                           
  2834                           ;buttons.c: 148: if (prevButtons.LA) {
  2835  0026FC  A01C               	btfss	_prevButtons+2,0,c
  2836  0026FE  D003               	goto	l664
  2837                           
  2838                           ;buttons.c: 149: outButtons.LA = 0;
  2839  002700  0E00               	movlw	0
  2840  002702  6E18               	movwf	_outButtons+2,c
  2841                           
  2842                           ;buttons.c: 150: } else {
  2843  002704  D001               	goto	l3360
  2844  002706                     l664:
  2845                           
  2846                           ;buttons.c: 151: outButtons.LA = 0xFF;
  2847  002706  6818               	setf	_outButtons+2,c
  2848  002708                     l3360:
  2849                           
  2850                           ;buttons.c: 152: };buttons.c: 153: };buttons.c: 154: if (buttonsTimers[BUTTON_RA_ID] >= 
      +                          10) {
  2851  002708  0E09               	movlw	9
  2852  00270A  640E               	cpfsgt	_buttonsTimers+13,c
  2853  00270C  0012               	return	
  2854                           
  2855                           ;buttons.c: 155: buttonsTimers[BUTTON_RA_ID] = 10;
  2856  00270E  0E0A               	movlw	10
  2857  002710  6E0E               	movwf	_buttonsTimers+13,c
  2858                           
  2859                           ;buttons.c: 156: if (prevButtons.RA) {
  2860  002712  AA1C               	btfss	_prevButtons+2,5,c
  2861  002714  D003               	goto	l667
  2862                           
  2863                           ;buttons.c: 157: outButtons.RA = 0;
  2864  002716  0E00               	movlw	0
  2865  002718  6E19               	movwf	_outButtons+3,c
  2866                           
  2867                           ;buttons.c: 158: } else {
  2868  00271A  0012               	return	
  2869  00271C                     l667:
  2870                           
  2871                           ;buttons.c: 159: outButtons.RA = 0xFF;
  2872  00271C  6819               	setf	_outButtons+3,c
  2873  00271E  0012               	return		;funcret
  2874  002720                     __end_of_buttonsUpdate:
  2875                           	opt callstack 0
  2876                           
  2877 ;; *************** function _buttonsSetOrigins *****************
  2878 ;; Defined at:
  2879 ;;		line 223 in file "buttons.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;  triggersMode    1    wreg     unsigned char 
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;  triggersMode    1    0[COMRAM] unsigned char 
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  1    wreg      void 
  2886 ;; Registers used:
  2887 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2893 ;;      Params:         0       0       0       0       0       0       0       0       0
  2894 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2895 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2896 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2897 ;;Total ram usage:        1 bytes
  2898 ;; Hardware stack levels used:    1
  2899 ;; Hardware stack levels required when called:    2
  2900 ;; This function calls:
  2901 ;;		Nothing
  2902 ;; This function is called by:
  2903 ;;		_main
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           	psect	text9
  2908  003228                     __ptext9:
  2909                           	opt callstack 0
  2910  003228                     _buttonsSetOrigins:
  2911                           	opt callstack 28
  2912                           
  2913                           ;incstack = 0
  2914                           ;buttonsSetOrigins@triggersMode stored from wreg
  2915  003228  6E2C               	movwf	buttonsSetOrigins@triggersMode,c
  2916                           
  2917                           ;buttons.c: 224: origins.SX = LUT_SX[ADCValues[0]];
  2918  00322A  0E00               	movlw	low _LUT_SX
  2919  00322C  2451               	addwf	_ADCValues,w,c
  2920  00322E  6ED9               	movwf	fsr2l,c
  2921  003230  6ADA               	clrf	fsr2h,c
  2922  003232  0E04               	movlw	high _LUT_SX
  2923  003234  22DA               	addwfc	fsr2h,f,c
  2924  003236  50DF               	movf	indf2,w,c
  2925  003238  6E10               	movwf	_origins,c
  2926                           
  2927                           ;buttons.c: 225: origins.SY = LUT_SY[ADCValues[1]];
  2928  00323A  0E00               	movlw	low _LUT_SY
  2929  00323C  2452               	addwf	_ADCValues+1,w,c
  2930  00323E  6ED9               	movwf	fsr2l,c
  2931  003240  6ADA               	clrf	fsr2h,c
  2932  003242  0E05               	movlw	high _LUT_SY
  2933  003244  22DA               	addwfc	fsr2h,f,c
  2934  003246  50DF               	movf	indf2,w,c
  2935  003248  6E11               	movwf	_origins+1,c
  2936                           
  2937                           ;buttons.c: 226: origins.CX = LUT_CX[ADCValues[2]];
  2938  00324A  0E00               	movlw	low _LUT_CX
  2939  00324C  2453               	addwf	_ADCValues+2,w,c
  2940  00324E  6ED9               	movwf	fsr2l,c
  2941  003250  6ADA               	clrf	fsr2h,c
  2942  003252  0E02               	movlw	high _LUT_CX
  2943  003254  22DA               	addwfc	fsr2h,f,c
  2944  003256  50DF               	movf	indf2,w,c
  2945  003258  6E12               	movwf	_origins+2,c
  2946                           
  2947                           ;buttons.c: 227: origins.CY = LUT_CY[ADCValues[3]];
  2948  00325A  0E00               	movlw	low _LUT_CY
  2949  00325C  2454               	addwf	_ADCValues+3,w,c
  2950  00325E  6ED9               	movwf	fsr2l,c
  2951  003260  6ADA               	clrf	fsr2h,c
  2952  003262  0E03               	movlw	high _LUT_CY
  2953  003264  22DA               	addwfc	fsr2h,f,c
  2954  003266  50DF               	movf	indf2,w,c
  2955  003268  6E13               	movwf	_origins+3,c
  2956                           
  2957                           ;buttons.c: 228: if (triggersMode == 0) {
  2958  00326A  502C               	movf	buttonsSetOrigins@triggersMode,w,c
  2959  00326C  A4D8               	btfss	status,2,c
  2960  00326E  D007               	goto	l686
  2961                           
  2962                           ;buttons.c: 229: origins.L = outButtons.LA;
  2963  003270  0060  F060  F014   	movff	_outButtons+2,_origins+4
  2964                           
  2965                           ;buttons.c: 230: origins.R = outButtons.RA;
  2966  003276  0060  F064  F015   	movff	_outButtons+3,_origins+5
  2967                           
  2968                           ;buttons.c: 231: } else {
  2969  00327C  0012               	return	
  2970  00327E                     l686:
  2971                           
  2972                           ;buttons.c: 232: origins.L = ADCValues[5];
  2973  00327E  0060  F158  F014   	movff	_ADCValues+5,_origins+4
  2974                           
  2975                           ;buttons.c: 233: origins.R = ADCValues[4];
  2976  003284  0060  F154  F015   	movff	_ADCValues+4,_origins+5
  2977  00328A  0012               	return		;funcret
  2978  00328C                     __end_of_buttonsSetOrigins:
  2979                           	opt callstack 0
  2980                           
  2981 ;; *************** function _buttonsSetMapByte1 *****************
  2982 ;; Defined at:
  2983 ;;		line 260 in file "buttons.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  map             2    0[COMRAM] PTR unsigned char 
  2986 ;;		 -> main@cmd(36), 
  2987 ;; Auto vars:     Size  Location     Type
  2988 ;;  i               1    2[COMRAM] unsigned char 
  2989 ;; Return value:  Size  Location     Type
  2990 ;;                  1    wreg      void 
  2991 ;; Registers used:
  2992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2993 ;; Tracked objects:
  2994 ;;		On entry : 0/0
  2995 ;;		On exit  : 0/0
  2996 ;;		Unchanged: 0/0
  2997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2998 ;;      Params:         2       0       0       0       0       0       0       0       0
  2999 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3000 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3001 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3002 ;;Total ram usage:        3 bytes
  3003 ;; Hardware stack levels used:    1
  3004 ;; Hardware stack levels required when called:    2
  3005 ;; This function calls:
  3006 ;;		Nothing
  3007 ;; This function is called by:
  3008 ;;		_main
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           	psect	text10
  3013  00349A                     __ptext10:
  3014                           	opt callstack 0
  3015  00349A                     _buttonsSetMapByte1:
  3016                           	opt callstack 28
  3017                           
  3018                           ;buttons.c: 261: uint8_t i;;buttons.c: 263: for (i = 0; i < N_BUTTONS; i++) {
  3019                           
  3020                           ;incstack = 0
  3021  00349A  0E00               	movlw	0
  3022  00349C  6E2E               	movwf	buttonsSetMapByte1@i,c
  3023  00349E                     l3512:
  3024                           
  3025                           ;buttons.c: 264: buttonsMapByte1[i] = map[i];
  3026  00349E  502E               	movf	buttonsSetMapByte1@i,w,c
  3027  0034A0  242C               	addwf	buttonsSetMapByte1@map,w,c
  3028  0034A2  6ED9               	movwf	fsr2l,c
  3029  0034A4  0E00               	movlw	0
  3030  0034A6  202D               	addwfc	buttonsSetMapByte1@map+1,w,c
  3031  0034A8  6EDA               	movwf	fsr2h,c
  3032  0034AA  0ECE               	movlw	low _buttonsMapByte1
  3033  0034AC  242E               	addwf	buttonsSetMapByte1@i,w,c
  3034  0034AE  6EE1               	movwf	fsr1l,c
  3035  0034B0  6AE2               	clrf	fsr1h,c
  3036  0034B2  0E00               	movlw	high _buttonsMapByte1
  3037  0034B4  22E2               	addwfc	fsr1h,f,c
  3038  0034B6  006F FF7F FFE7     	movff	indf2,indf1
  3039  0034BC  2A2E               	incf	buttonsSetMapByte1@i,f,c
  3040  0034BE  0E0E               	movlw	14
  3041  0034C0  642E               	cpfsgt	buttonsSetMapByte1@i,c
  3042  0034C2  D7ED               	goto	l3512
  3043  0034C4  0012               	return	
  3044  0034C6                     __end_of_buttonsSetMapByte1:
  3045                           	opt callstack 0
  3046                           
  3047 ;; *************** function _buttonsSetMapByte0 *****************
  3048 ;; Defined at:
  3049 ;;		line 252 in file "buttons.c"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;  map             2    0[COMRAM] PTR unsigned char 
  3052 ;;		 -> main@cmd(36), 
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;  i               1    2[COMRAM] unsigned char 
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  1    wreg      void 
  3057 ;; Registers used:
  3058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3064 ;;      Params:         2       0       0       0       0       0       0       0       0
  3065 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3066 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3067 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3068 ;;Total ram usage:        3 bytes
  3069 ;; Hardware stack levels used:    1
  3070 ;; Hardware stack levels required when called:    2
  3071 ;; This function calls:
  3072 ;;		Nothing
  3073 ;; This function is called by:
  3074 ;;		_main
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           	psect	text11
  3079  0034C6                     __ptext11:
  3080                           	opt callstack 0
  3081  0034C6                     _buttonsSetMapByte0:
  3082                           	opt callstack 28
  3083                           
  3084                           ;buttons.c: 253: uint8_t i;;buttons.c: 255: for (i = 0; i < N_BUTTONS; i++) {
  3085                           
  3086                           ;incstack = 0
  3087  0034C6  0E00               	movlw	0
  3088  0034C8  6E2E               	movwf	buttonsSetMapByte0@i,c
  3089  0034CA                     l3500:
  3090                           
  3091                           ;buttons.c: 256: buttonsMapByte0[i] = map[i];
  3092  0034CA  502E               	movf	buttonsSetMapByte0@i,w,c
  3093  0034CC  242C               	addwf	buttonsSetMapByte0@map,w,c
  3094  0034CE  6ED9               	movwf	fsr2l,c
  3095  0034D0  0E00               	movlw	0
  3096  0034D2  202D               	addwfc	buttonsSetMapByte0@map+1,w,c
  3097  0034D4  6EDA               	movwf	fsr2h,c
  3098  0034D6  0EDD               	movlw	low _buttonsMapByte0
  3099  0034D8  242E               	addwf	buttonsSetMapByte0@i,w,c
  3100  0034DA  6EE1               	movwf	fsr1l,c
  3101  0034DC  6AE2               	clrf	fsr1h,c
  3102  0034DE  0E00               	movlw	high _buttonsMapByte0
  3103  0034E0  22E2               	addwfc	fsr1h,f,c
  3104  0034E2  006F FF7F FFE7     	movff	indf2,indf1
  3105  0034E8  2A2E               	incf	buttonsSetMapByte0@i,f,c
  3106  0034EA  0E0E               	movlw	14
  3107  0034EC  642E               	cpfsgt	buttonsSetMapByte0@i,c
  3108  0034EE  D7ED               	goto	l3500
  3109  0034F0  0012               	return	
  3110  0034F2                     __end_of_buttonsSetMapByte0:
  3111                           	opt callstack 0
  3112                           
  3113 ;; *************** function _buttonsInit *****************
  3114 ;; Defined at:
  3115 ;;		line 60 in file "buttons.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;		None
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;		None
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  1    wreg      void 
  3122 ;; Registers used:
  3123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3129 ;;      Params:         0       0       0       0       0       0       0       0       0
  3130 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3131 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3132 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3133 ;;Total ram usage:        0 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; Hardware stack levels required when called:    3
  3136 ;; This function calls:
  3137 ;;		_memset
  3138 ;; This function is called by:
  3139 ;;		_main
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           	psect	text12
  3144  003062                     __ptext12:
  3145                           	opt callstack 0
  3146  003062                     _buttonsInit:
  3147                           	opt callstack 27
  3148                           
  3149                           ;buttons.c: 62: T0CON0 = 0x00;
  3150                           
  3151                           ;incstack = 0
  3152  003062  0E00               	movlw	0
  3153  003064  6EB8               	movwf	16312,c	;volatile
  3154                           
  3155                           ;buttons.c: 63: T0CON1 = 0x47;
  3156  003066  0E47               	movlw	71
  3157  003068  6EB9               	movwf	16313,c	;volatile
  3158                           
  3159                           ;buttons.c: 64: TMR0H = 124;
  3160  00306A  0E7C               	movlw	124
  3161  00306C  6EB7               	movwf	16311,c	;volatile
  3162                           
  3163                           ;buttons.c: 65: TMR0IF = 0;
  3164  00306E  0139               	movlb	57	; () banked
  3165  003070  9FA3               	bcf	163,7,b	;volatile
  3166                           
  3167                           ;buttons.c: 66: T0CON0 = 0x80;
  3168  003072  0E80               	movlw	128
  3169  003074  6EB8               	movwf	16312,c	;volatile
  3170                           
  3171                           ; BSR set to: 57
  3172                           ;buttons.c: 69: memset(buttonsMapByte0, 0, N_BUTTONS);
  3173  003076  0EDD               	movlw	low _buttonsMapByte0
  3174  003078  6E2C               	movwf	memset@p1,c
  3175  00307A  0E00               	movlw	high _buttonsMapByte0
  3176  00307C  6E2D               	movwf	memset@p1+1,c
  3177  00307E  0E00               	movlw	0
  3178  003080  6E2F               	movwf	memset@c+1,c
  3179  003082  0E00               	movlw	0
  3180  003084  6E2E               	movwf	memset@c,c
  3181  003086  0E00               	movlw	0
  3182  003088  6E31               	movwf	memset@n+1,c
  3183  00308A  0E0F               	movlw	15
  3184  00308C  6E30               	movwf	memset@n,c
  3185  00308E  ECD1  F019         	call	_memset	;wreg free
  3186                           
  3187                           ;buttons.c: 70: memset(buttonsMapByte1, 0, N_BUTTONS);
  3188  003092  0ECE               	movlw	low _buttonsMapByte1
  3189  003094  6E2C               	movwf	memset@p1,c
  3190  003096  0E00               	movlw	high _buttonsMapByte1
  3191  003098  6E2D               	movwf	memset@p1+1,c
  3192  00309A  0E00               	movlw	0
  3193  00309C  6E2F               	movwf	memset@c+1,c
  3194  00309E  0E00               	movlw	0
  3195  0030A0  6E2E               	movwf	memset@c,c
  3196  0030A2  0E00               	movlw	0
  3197  0030A4  6E31               	movwf	memset@n+1,c
  3198  0030A6  0E0F               	movlw	15
  3199  0030A8  6E30               	movwf	memset@n,c
  3200  0030AA  ECD1  F019         	call	_memset	;wreg free
  3201                           
  3202                           ;buttons.c: 72: buttonsMapByte0[BUTTON_A_ID] = 0x01;
  3203  0030AE  0E01               	movlw	1
  3204  0030B0  0100               	movlb	0	; () banked
  3205  0030B2  6FDD               	movwf	_buttonsMapByte0& (0+255),b
  3206                           
  3207                           ;buttons.c: 73: buttonsMapByte0[BUTTON_B_ID] = 0x02;
  3208  0030B4  0E02               	movlw	2
  3209  0030B6  6FDE               	movwf	(_buttonsMapByte0+1)& (0+255),b
  3210                           
  3211                           ;buttons.c: 74: buttonsMapByte0[BUTTON_X_ID] = 0x04;
  3212  0030B8  0E04               	movlw	4
  3213  0030BA  6FDF               	movwf	(_buttonsMapByte0+2)& (0+255),b
  3214                           
  3215                           ;buttons.c: 75: buttonsMapByte0[BUTTON_Y_ID] = 0x08;
  3216  0030BC  0E08               	movlw	8
  3217  0030BE  6FE0               	movwf	(_buttonsMapByte0+3)& (0+255),b
  3218                           
  3219                           ;buttons.c: 76: buttonsMapByte0[BUTTON_ST_ID] = 0x10;
  3220  0030C0  0E10               	movlw	16
  3221  0030C2  6FE1               	movwf	(_buttonsMapByte0+4)& (0+255),b
  3222                           
  3223                           ;buttons.c: 78: buttonsMapByte1[BUTTON_DL_ID] = 0x01;
  3224  0030C4  0E01               	movlw	1
  3225  0030C6  6FD3               	movwf	(_buttonsMapByte1+5)& (0+255),b
  3226                           
  3227                           ;buttons.c: 79: buttonsMapByte1[BUTTON_DR_ID] = 0x02;
  3228  0030C8  0E02               	movlw	2
  3229  0030CA  6FD4               	movwf	(_buttonsMapByte1+6)& (0+255),b
  3230                           
  3231                           ;buttons.c: 80: buttonsMapByte1[BUTTON_DD_ID] = 0x04;
  3232  0030CC  0E04               	movlw	4
  3233  0030CE  6FD5               	movwf	(_buttonsMapByte1+7)& (0+255),b
  3234                           
  3235                           ;buttons.c: 81: buttonsMapByte1[BUTTON_DU_ID] = 0x08;
  3236  0030D0  0E08               	movlw	8
  3237  0030D2  6FD6               	movwf	(_buttonsMapByte1+8)& (0+255),b
  3238                           
  3239                           ;buttons.c: 82: buttonsMapByte1[BUTTON_Z_ID] = 0x10;
  3240  0030D4  0E10               	movlw	16
  3241  0030D6  6FD7               	movwf	(_buttonsMapByte1+9)& (0+255),b
  3242                           
  3243                           ;buttons.c: 83: buttonsMapByte1[BUTTON_RD_ID] = 0x20;
  3244  0030D8  0E20               	movlw	32
  3245  0030DA  6FD8               	movwf	(_buttonsMapByte1+10)& (0+255),b
  3246                           
  3247                           ;buttons.c: 84: buttonsMapByte1[BUTTON_LD_ID] = 0x40;
  3248  0030DC  0E40               	movlw	64
  3249  0030DE  6FD9               	movwf	(_buttonsMapByte1+11)& (0+255),b
  3250                           
  3251                           ; BSR set to: 0
  3252  0030E0  0012               	return		;funcret
  3253  0030E2                     __end_of_buttonsInit:
  3254                           	opt callstack 0
  3255                           
  3256 ;; *************** function _memset *****************
  3257 ;; Defined at:
  3258 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memset.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;  p1              2    0[COMRAM] PTR void 
  3261 ;;		 -> buttonsMapByte1(15), buttonsMapByte0(15), config(24), 
  3262 ;;  c               2    2[COMRAM] int 
  3263 ;;  n               2    4[COMRAM] unsigned int 
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;  p               2    6[COMRAM] PTR unsigned char 
  3266 ;;		 -> buttonsMapByte1(15), buttonsMapByte0(15), config(24), 
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  2    0[COMRAM] PTR void 
  3269 ;; Registers used:
  3270 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3276 ;;      Params:         6       0       0       0       0       0       0       0       0
  3277 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3278 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3279 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3280 ;;Total ram usage:        8 bytes
  3281 ;; Hardware stack levels used:    1
  3282 ;; Hardware stack levels required when called:    2
  3283 ;; This function calls:
  3284 ;;		Nothing
  3285 ;; This function is called by:
  3286 ;;		_configSetDefault
  3287 ;;		_buttonsInit
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           	psect	text13
  3292  0033A2                     __ptext13:
  3293                           	opt callstack 0
  3294  0033A2                     _memset:
  3295                           	opt callstack 27
  3296                           
  3297                           ; BSR set to: 0
  3298                           ;incstack = 0
  3299  0033A2  0060  F0B0  F032   	movff	memset@p1,memset@p
  3300  0033A8  0060  F0B4  F033   	movff	memset@p1+1,memset@p+1
  3301  0033AE  D00B               	goto	l2714
  3302  0033B0                     l2710:
  3303  0033B0  0060  F0CB  FFD9   	movff	memset@p,fsr2l
  3304  0033B6  0060  F0CF  FFDA   	movff	memset@p+1,fsr2h
  3305  0033BC  0060  F0BB  FFDF   	movff	memset@c,indf2
  3306  0033C2  4A32               	infsnz	memset@p,f,c
  3307  0033C4  2A33               	incf	memset@p+1,f,c
  3308  0033C6                     l2714:
  3309  0033C6  0630               	decf	memset@n,f,c
  3310  0033C8  A0D8               	btfss	status,0,c
  3311  0033CA  0631               	decf	memset@n+1,f,c
  3312  0033CC  2830               	incf	memset@n,w,c
  3313  0033CE  E1F0               	bnz	l2710
  3314  0033D0  2831               	incf	memset@n+1,w,c
  3315  0033D2  B4D8               	btfsc	status,2,c
  3316  0033D4  0012               	return	
  3317  0033D6  D7EC               	goto	l2710
  3318  0033D8                     __end_of_memset:
  3319                           	opt callstack 0
  3320                           
  3321 ;; *************** function _buttonsGetOrigins *****************
  3322 ;; Defined at:
  3323 ;;		line 237 in file "buttons.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;		None
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;		None
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  2    0[COMRAM] PTR unsigned char 
  3330 ;; Registers used:
  3331 ;;		wreg, status,2, status,0
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3337 ;;      Params:         2       0       0       0       0       0       0       0       0
  3338 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3339 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3340 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3341 ;;Total ram usage:        2 bytes
  3342 ;; Hardware stack levels used:    1
  3343 ;; Hardware stack levels required when called:    2
  3344 ;; This function calls:
  3345 ;;		Nothing
  3346 ;; This function is called by:
  3347 ;;		_main
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           	psect	text14
  3352  003328                     __ptext14:
  3353                           	opt callstack 0
  3354  003328                     _buttonsGetOrigins:
  3355                           	opt callstack 28
  3356                           
  3357                           ;buttons.c: 238: buttonsMessage[0] = 0x00;
  3358                           
  3359                           ;incstack = 0
  3360  003328  0E00               	movlw	0
  3361  00332A  6E22               	movwf	_buttonsMessage,c
  3362                           
  3363                           ;buttons.c: 239: buttonsMessage[1] = 0x00;
  3364  00332C  0E00               	movlw	0
  3365  00332E  6E23               	movwf	_buttonsMessage+1,c
  3366                           
  3367                           ;buttons.c: 240: buttonsMessage[2] = origins.SX;
  3368  003330  0060  F040  F024   	movff	_origins,_buttonsMessage+2
  3369                           
  3370                           ;buttons.c: 241: buttonsMessage[3] = origins.SY;
  3371  003336  0060  F044  F025   	movff	_origins+1,_buttonsMessage+3
  3372                           
  3373                           ;buttons.c: 242: buttonsMessage[4] = origins.CX;
  3374  00333C  0060  F048  F026   	movff	_origins+2,_buttonsMessage+4
  3375                           
  3376                           ;buttons.c: 243: buttonsMessage[5] = origins.CY;
  3377  003342  0060  F04C  F027   	movff	_origins+3,_buttonsMessage+5
  3378                           
  3379                           ;buttons.c: 244: buttonsMessage[6] = origins.L;
  3380  003348  0060  F050  F028   	movff	_origins+4,_buttonsMessage+6
  3381                           
  3382                           ;buttons.c: 245: buttonsMessage[7] = origins.R;
  3383  00334E  0060  F054  F029   	movff	_origins+5,_buttonsMessage+7
  3384                           
  3385                           ;buttons.c: 246: buttonsMessage[8] = 0x02;
  3386  003354  0E02               	movlw	2
  3387  003356  6E2A               	movwf	_buttonsMessage+8,c
  3388                           
  3389                           ;buttons.c: 247: buttonsMessage[9] = 0x02;
  3390  003358  0E02               	movlw	2
  3391  00335A  6E2B               	movwf	_buttonsMessage+9,c
  3392                           
  3393                           ;buttons.c: 249: return buttonsMessage;
  3394  00335C  0E22               	movlw	low _buttonsMessage
  3395  00335E  6E2C               	movwf	?_buttonsGetOrigins,c
  3396  003360  0E00               	movlw	high _buttonsMessage
  3397  003362  6E2D               	movwf	?_buttonsGetOrigins+1,c
  3398  003364  0012               	return		;funcret
  3399  003366                     __end_of_buttonsGetOrigins:
  3400                           	opt callstack 0
  3401                           
  3402 ;; *************** function _buttonsGetMessage *****************
  3403 ;; Defined at:
  3404 ;;		line 164 in file "buttons.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;  analogMode      1    wreg     unsigned char 
  3407 ;;  triggersMode    1    0[COMRAM] unsigned char 
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;  analogMode      1    3[COMRAM] unsigned char 
  3410 ;;  la              1    5[COMRAM] unsigned char 
  3411 ;;  ra              1    4[COMRAM] unsigned char 
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  2    0[COMRAM] PTR unsigned char 
  3414 ;; Registers used:
  3415 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3421 ;;      Params:         2       0       0       0       0       0       0       0       0
  3422 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3423 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3424 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3425 ;;Total ram usage:        6 bytes
  3426 ;; Hardware stack levels used:    1
  3427 ;; Hardware stack levels required when called:    2
  3428 ;; This function calls:
  3429 ;;		Nothing
  3430 ;; This function is called by:
  3431 ;;		_main
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435                           	psect	text15
  3436  002A8A                     __ptext15:
  3437                           	opt callstack 0
  3438  002A8A                     _buttonsGetMessage:
  3439                           	opt callstack 28
  3440                           
  3441                           ;incstack = 0
  3442                           ;buttonsGetMessage@analogMode stored from wreg
  3443  002A8A  6E2F               	movwf	buttonsGetMessage@analogMode,c
  3444                           
  3445                           ;buttons.c: 165: buttonsMessage[0] = outButtons.byte0;
  3446  002A8C  0060  F058  F022   	movff	_outButtons,_buttonsMessage
  3447                           
  3448                           ;buttons.c: 166: buttonsMessage[1] = outButtons.byte1;
  3449  002A92  0060  F05C  F023   	movff	_outButtons+1,_buttonsMessage+1
  3450                           
  3451                           ;buttons.c: 167: buttonsMessage[2] = LUT_SX[ADCValues[0]];
  3452  002A98  0E00               	movlw	low _LUT_SX
  3453  002A9A  2451               	addwf	_ADCValues,w,c
  3454  002A9C  6ED9               	movwf	fsr2l,c
  3455  002A9E  6ADA               	clrf	fsr2h,c
  3456  002AA0  0E04               	movlw	high _LUT_SX
  3457  002AA2  22DA               	addwfc	fsr2h,f,c
  3458  002AA4  50DF               	movf	indf2,w,c
  3459  002AA6  6E24               	movwf	_buttonsMessage+2,c
  3460                           
  3461                           ;buttons.c: 168: buttonsMessage[3] = LUT_SY[ADCValues[1]];
  3462  002AA8  0E00               	movlw	low _LUT_SY
  3463  002AAA  2452               	addwf	_ADCValues+1,w,c
  3464  002AAC  6ED9               	movwf	fsr2l,c
  3465  002AAE  6ADA               	clrf	fsr2h,c
  3466  002AB0  0E05               	movlw	high _LUT_SY
  3467  002AB2  22DA               	addwfc	fsr2h,f,c
  3468  002AB4  50DF               	movf	indf2,w,c
  3469  002AB6  6E25               	movwf	_buttonsMessage+3,c
  3470                           
  3471                           ;buttons.c: 170: uint8_t ra, la;;buttons.c: 171: if (triggersMode == 0) {
  3472  002AB8  502C               	movf	buttonsGetMessage@triggersMode,w,c
  3473  002ABA  A4D8               	btfss	status,2,c
  3474  002ABC  D007               	goto	l671
  3475                           
  3476                           ;buttons.c: 172: ra = outButtons.RA;
  3477  002ABE  0060  F064  F030   	movff	_outButtons+3,buttonsGetMessage@ra
  3478                           
  3479                           ;buttons.c: 173: la = outButtons.LA;
  3480  002AC4  0060  F060  F031   	movff	_outButtons+2,buttonsGetMessage@la
  3481                           
  3482                           ;buttons.c: 174: } else {
  3483  002ACA  D088               	goto	l3464
  3484  002ACC                     l671:
  3485                           
  3486                           ;buttons.c: 175: ra = ADCValues[4];
  3487  002ACC  0060  F154  F030   	movff	_ADCValues+4,buttonsGetMessage@ra
  3488                           
  3489                           ;buttons.c: 176: la = ADCValues[5];
  3490  002AD2  0060  F158  F031   	movff	_ADCValues+5,buttonsGetMessage@la
  3491  002AD8  D081               	goto	l3464
  3492  002ADA                     l676:
  3493                           
  3494                           ;buttons.c: 181: case 5:;buttons.c: 182: case 6:;buttons.c: 183: case 7:;buttons.c: 184:
      +                           buttonsMessage[4] = LUT_CX[ADCValues[2]];
  3495  002ADA  0E00               	movlw	low _LUT_CX
  3496  002ADC  2453               	addwf	_ADCValues+2,w,c
  3497  002ADE  6ED9               	movwf	fsr2l,c
  3498  002AE0  6ADA               	clrf	fsr2h,c
  3499  002AE2  0E02               	movlw	high _LUT_CX
  3500  002AE4  22DA               	addwfc	fsr2h,f,c
  3501  002AE6  50DF               	movf	indf2,w,c
  3502  002AE8  6E26               	movwf	_buttonsMessage+4,c
  3503                           
  3504                           ;buttons.c: 185: buttonsMessage[5] = LUT_CY[ADCValues[3]];
  3505  002AEA  0E00               	movlw	low _LUT_CY
  3506  002AEC  2454               	addwf	_ADCValues+3,w,c
  3507  002AEE  6ED9               	movwf	fsr2l,c
  3508  002AF0  6ADA               	clrf	fsr2h,c
  3509  002AF2  0E03               	movlw	high _LUT_CY
  3510  002AF4  22DA               	addwfc	fsr2h,f,c
  3511  002AF6  50DF               	movf	indf2,w,c
  3512  002AF8  6E27               	movwf	_buttonsMessage+5,c
  3513                           
  3514                           ;buttons.c: 187: buttonsMessage[6] = (uint8_t)((uint8_t)(la & 0xF0U) | (uint8_t)(ra >> 4
      +                          U));
  3515  002AFA  0060  F0C0  F02E   	movff	buttonsGetMessage@ra,??_buttonsGetMessage
  3516  002B00  3A2E               	swapf	??_buttonsGetMessage,f,c
  3517  002B02  0E0F               	movlw	15
  3518  002B04  162E               	andwf	??_buttonsGetMessage,f,c
  3519  002B06  5031               	movf	buttonsGetMessage@la,w,c
  3520  002B08  0BF0               	andlw	240
  3521  002B0A  102E               	iorwf	??_buttonsGetMessage,w,c
  3522  002B0C  6E28               	movwf	_buttonsMessage+6,c
  3523  002B0E                     l3432:
  3524                           
  3525                           ;buttons.c: 188: buttonsMessage[7] = 0x00;
  3526  002B0E  0E00               	movlw	0
  3527  002B10  6E29               	movwf	_buttonsMessage+7,c
  3528                           
  3529                           ;buttons.c: 189: break;
  3530  002B12  D07D               	goto	l3466
  3531  002B14                     l3434:
  3532                           
  3533                           ;buttons.c: 192: buttonsMessage[4] = (uint8_t)((uint8_t)(LUT_CX[ADCValues[2]] & 0xF0U) |
      +                           (uint8_t)(LUT_CY[ADCValues[3]] >> 4U));
  3534  002B14  0E00               	movlw	low _LUT_CY
  3535  002B16  2454               	addwf	_ADCValues+3,w,c
  3536  002B18  6ED9               	movwf	fsr2l,c
  3537  002B1A  6ADA               	clrf	fsr2h,c
  3538  002B1C  0E03               	movlw	high _LUT_CY
  3539  002B1E  22DA               	addwfc	fsr2h,f,c
  3540  002B20  50DF               	movf	indf2,w,c
  3541  002B22  6E2E               	movwf	??_buttonsGetMessage& (0+255),c
  3542  002B24  3A2E               	swapf	??_buttonsGetMessage,f,c
  3543  002B26  0E0F               	movlw	15
  3544  002B28  162E               	andwf	??_buttonsGetMessage,f,c
  3545  002B2A  0E00               	movlw	low _LUT_CX
  3546  002B2C  2453               	addwf	_ADCValues+2,w,c
  3547  002B2E  6ED9               	movwf	fsr2l,c
  3548  002B30  6ADA               	clrf	fsr2h,c
  3549  002B32  0E02               	movlw	high _LUT_CX
  3550  002B34  22DA               	addwfc	fsr2h,f,c
  3551  002B36  50DF               	movf	indf2,w,c
  3552  002B38  0BF0               	andlw	240
  3553  002B3A  102E               	iorwf	??_buttonsGetMessage,w,c
  3554  002B3C  6E26               	movwf	_buttonsMessage+4,c
  3555                           
  3556                           ;buttons.c: 193: buttonsMessage[5] = la;
  3557  002B3E  0060  F0C4  F027   	movff	buttonsGetMessage@la,_buttonsMessage+5
  3558                           
  3559                           ;buttons.c: 194: buttonsMessage[6] = ra;
  3560  002B44  0060  F0C0  F028   	movff	buttonsGetMessage@ra,_buttonsMessage+6
  3561  002B4A  D7E1               	goto	l3432
  3562  002B4C                     l3442:
  3563                           
  3564                           ;buttons.c: 199: buttonsMessage[4] = (uint8_t)((uint8_t)(LUT_CX[ADCValues[2]] & 0xF0U) |
      +                           (uint8_t)(LUT_CY[ADCValues[3]] >> 4U));
  3565  002B4C  0E00               	movlw	low _LUT_CY
  3566  002B4E  2454               	addwf	_ADCValues+3,w,c
  3567  002B50  6ED9               	movwf	fsr2l,c
  3568  002B52  6ADA               	clrf	fsr2h,c
  3569  002B54  0E03               	movlw	high _LUT_CY
  3570  002B56  22DA               	addwfc	fsr2h,f,c
  3571  002B58  50DF               	movf	indf2,w,c
  3572  002B5A  6E2E               	movwf	??_buttonsGetMessage& (0+255),c
  3573  002B5C  3A2E               	swapf	??_buttonsGetMessage,f,c
  3574  002B5E  0E0F               	movlw	15
  3575  002B60  162E               	andwf	??_buttonsGetMessage,f,c
  3576  002B62  0E00               	movlw	low _LUT_CX
  3577  002B64  2453               	addwf	_ADCValues+2,w,c
  3578  002B66  6ED9               	movwf	fsr2l,c
  3579  002B68  6ADA               	clrf	fsr2h,c
  3580  002B6A  0E02               	movlw	high _LUT_CX
  3581  002B6C  22DA               	addwfc	fsr2h,f,c
  3582  002B6E  50DF               	movf	indf2,w,c
  3583  002B70  0BF0               	andlw	240
  3584  002B72  102E               	iorwf	??_buttonsGetMessage,w,c
  3585  002B74  6E26               	movwf	_buttonsMessage+4,c
  3586                           
  3587                           ;buttons.c: 200: buttonsMessage[5] = (uint8_t)((uint8_t)(la & 0xF0U) | (uint8_t)(ra >> 4
      +                          U));
  3588  002B76  0060  F0C0  F02E   	movff	buttonsGetMessage@ra,??_buttonsGetMessage
  3589  002B7C  3A2E               	swapf	??_buttonsGetMessage,f,c
  3590  002B7E  0E0F               	movlw	15
  3591  002B80  162E               	andwf	??_buttonsGetMessage,f,c
  3592  002B82  5031               	movf	buttonsGetMessage@la,w,c
  3593  002B84  0BF0               	andlw	240
  3594  002B86  102E               	iorwf	??_buttonsGetMessage,w,c
  3595  002B88  6E27               	movwf	_buttonsMessage+5,c
  3596                           
  3597                           ;buttons.c: 201: buttonsMessage[6] = 0x00;
  3598  002B8A  0E00               	movlw	0
  3599  002B8C  D7BF               	goto	L3
  3600  002B8E                     l3450:
  3601                           
  3602                           ;buttons.c: 206: buttonsMessage[4] = LUT_CX[ADCValues[2]];
  3603  002B8E  0E00               	movlw	low _LUT_CX
  3604  002B90  2453               	addwf	_ADCValues+2,w,c
  3605  002B92  6ED9               	movwf	fsr2l,c
  3606  002B94  6ADA               	clrf	fsr2h,c
  3607  002B96  0E02               	movlw	high _LUT_CX
  3608  002B98  22DA               	addwfc	fsr2h,f,c
  3609  002B9A  50DF               	movf	indf2,w,c
  3610  002B9C  6E26               	movwf	_buttonsMessage+4,c
  3611                           
  3612                           ;buttons.c: 207: buttonsMessage[5] = LUT_CY[ADCValues[3]];
  3613  002B9E  0E00               	movlw	low _LUT_CY
  3614  002BA0  2454               	addwf	_ADCValues+3,w,c
  3615  002BA2  6ED9               	movwf	fsr2l,c
  3616  002BA4  6ADA               	clrf	fsr2h,c
  3617  002BA6  0E03               	movlw	high _LUT_CY
  3618  002BA8  22DA               	addwfc	fsr2h,f,c
  3619  002BAA  50DF               	movf	indf2,w,c
  3620  002BAC  6E27               	movwf	_buttonsMessage+5,c
  3621                           
  3622                           ;buttons.c: 208: buttonsMessage[6] = la;
  3623  002BAE  0060  F0C4  F028   	movff	buttonsGetMessage@la,_buttonsMessage+6
  3624                           
  3625                           ;buttons.c: 209: buttonsMessage[7] = ra;
  3626  002BB4  0060  F0C0  F029   	movff	buttonsGetMessage@ra,_buttonsMessage+7
  3627                           
  3628                           ;buttons.c: 210: break;
  3629  002BBA  D029               	goto	l3466
  3630  002BBC                     l3456:
  3631                           
  3632                           ;buttons.c: 213: buttonsMessage[4] = LUT_CX[ADCValues[2]];
  3633  002BBC  0E00               	movlw	low _LUT_CX
  3634  002BBE  2453               	addwf	_ADCValues+2,w,c
  3635  002BC0  6ED9               	movwf	fsr2l,c
  3636  002BC2  6ADA               	clrf	fsr2h,c
  3637  002BC4  0E02               	movlw	high _LUT_CX
  3638  002BC6  22DA               	addwfc	fsr2h,f,c
  3639  002BC8  50DF               	movf	indf2,w,c
  3640  002BCA  6E26               	movwf	_buttonsMessage+4,c
  3641                           
  3642                           ;buttons.c: 214: buttonsMessage[5] = LUT_CY[ADCValues[3]];
  3643  002BCC  0E00               	movlw	low _LUT_CY
  3644  002BCE  2454               	addwf	_ADCValues+3,w,c
  3645  002BD0  6ED9               	movwf	fsr2l,c
  3646  002BD2  6ADA               	clrf	fsr2h,c
  3647  002BD4  0E03               	movlw	high _LUT_CY
  3648  002BD6  22DA               	addwfc	fsr2h,f,c
  3649  002BD8  50DF               	movf	indf2,w,c
  3650  002BDA  D7D6               	goto	L4
  3651  002BDC                     l3464:
  3652  002BDC  502F               	movf	buttonsGetMessage@analogMode,w,c
  3653                           
  3654                           ; Switch size 1, requested type "simple"
  3655                           ; Number of cases is 8, Range of values is 0 to 7
  3656                           ; switch strategies available:
  3657                           ; Name         Instructions Cycles
  3658                           ; simple_byte           25    13 (average)
  3659                           ;	Chosen strategy is simple_byte
  3660  002BDE  0A00               	xorlw	0	; case 0
  3661  002BE0  B4D8               	btfsc	status,2,c
  3662  002BE2  D77B               	goto	l676
  3663  002BE4  0A01               	xorlw	1	; case 1
  3664  002BE6  B4D8               	btfsc	status,2,c
  3665  002BE8  D795               	goto	l3434
  3666  002BEA  0A03               	xorlw	3	; case 2
  3667  002BEC  B4D8               	btfsc	status,2,c
  3668  002BEE  D7AE               	goto	l3442
  3669  002BF0  0A01               	xorlw	1	; case 3
  3670  002BF2  B4D8               	btfsc	status,2,c
  3671  002BF4  D7CC               	goto	l3450
  3672  002BF6  0A07               	xorlw	7	; case 4
  3673  002BF8  B4D8               	btfsc	status,2,c
  3674  002BFA  D7E0               	goto	l3456
  3675  002BFC  0A01               	xorlw	1	; case 5
  3676  002BFE  B4D8               	btfsc	status,2,c
  3677  002C00  D76C               	goto	l676
  3678  002C02  0A03               	xorlw	3	; case 6
  3679  002C04  B4D8               	btfsc	status,2,c
  3680  002C06  D769               	goto	l676
  3681  002C08  0A01               	xorlw	1	; case 7
  3682  002C0A  B4D8               	btfsc	status,2,c
  3683  002C0C  D766               	goto	l676
  3684  002C0E                     l3466:
  3685                           
  3686                           ;buttons.c: 220: return buttonsMessage;
  3687  002C0E  0E22               	movlw	low _buttonsMessage
  3688  002C10  6E2C               	movwf	?_buttonsGetMessage,c
  3689  002C12  0E00               	movlw	high _buttonsMessage
  3690  002C14  6E2D               	movwf	?_buttonsGetMessage+1,c
  3691  002C16  0012               	return		;funcret
  3692  002C18                     __end_of_buttonsGetMessage:
  3693                           	opt callstack 0
  3694                           
  3695 ;; *************** function _buttonsGetMapByte1 *****************
  3696 ;; Defined at:
  3697 ;;		line 278 in file "buttons.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;		None
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;  i               1    2[COMRAM] unsigned char 
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  2    0[COMRAM] PTR unsigned char 
  3704 ;; Registers used:
  3705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3711 ;;      Params:         2       0       0       0       0       0       0       0       0
  3712 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3713 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3714 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3715 ;;Total ram usage:        3 bytes
  3716 ;; Hardware stack levels used:    1
  3717 ;; Hardware stack levels required when called:    2
  3718 ;; This function calls:
  3719 ;;		Nothing
  3720 ;; This function is called by:
  3721 ;;		_main
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725                           	psect	text16
  3726  0033D8                     __ptext16:
  3727                           	opt callstack 0
  3728  0033D8                     _buttonsGetMapByte1:
  3729                           	opt callstack 28
  3730                           
  3731                           ;buttons.c: 279: uint8_t i;;buttons.c: 281: for (i = 0; i < N_BUTTONS; i++) {
  3732                           
  3733                           ;incstack = 0
  3734  0033D8  0E00               	movlw	0
  3735  0033DA  6E2E               	movwf	buttonsGetMapByte1@i,c
  3736  0033DC                     l3540:
  3737                           
  3738                           ;buttons.c: 282: buttonsMessage[i] = buttonsMapByte1[i];
  3739  0033DC  0ECE               	movlw	low _buttonsMapByte1
  3740  0033DE  242E               	addwf	buttonsGetMapByte1@i,w,c
  3741  0033E0  6ED9               	movwf	fsr2l,c
  3742  0033E2  6ADA               	clrf	fsr2h,c
  3743  0033E4  0E00               	movlw	high _buttonsMapByte1
  3744  0033E6  22DA               	addwfc	fsr2h,f,c
  3745  0033E8  0E22               	movlw	low _buttonsMessage
  3746  0033EA  242E               	addwf	buttonsGetMapByte1@i,w,c
  3747  0033EC  6EE1               	movwf	fsr1l,c
  3748  0033EE  6AE2               	clrf	fsr1h,c
  3749  0033F0  0E00               	movlw	high _buttonsMessage
  3750  0033F2  22E2               	addwfc	fsr1h,f,c
  3751  0033F4  006F FF7F FFE7     	movff	indf2,indf1
  3752  0033FA  2A2E               	incf	buttonsGetMapByte1@i,f,c
  3753  0033FC  0E0E               	movlw	14
  3754  0033FE  642E               	cpfsgt	buttonsGetMapByte1@i,c
  3755  003400  D7ED               	goto	l3540
  3756                           
  3757                           ;buttons.c: 283: };buttons.c: 285: return buttonsMessage;
  3758  003402  0E22               	movlw	low _buttonsMessage
  3759  003404  6E2C               	movwf	?_buttonsGetMapByte1,c
  3760  003406  0E00               	movlw	high _buttonsMessage
  3761  003408  6E2D               	movwf	?_buttonsGetMapByte1+1,c
  3762  00340A  0012               	return		;funcret
  3763  00340C                     __end_of_buttonsGetMapByte1:
  3764                           	opt callstack 0
  3765                           
  3766 ;; *************** function _buttonsGetMapByte0 *****************
  3767 ;; Defined at:
  3768 ;;		line 268 in file "buttons.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;		None
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;  i               1    2[COMRAM] unsigned char 
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  2    0[COMRAM] PTR unsigned char 
  3775 ;; Registers used:
  3776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3782 ;;      Params:         2       0       0       0       0       0       0       0       0
  3783 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3784 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3785 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3786 ;;Total ram usage:        3 bytes
  3787 ;; Hardware stack levels used:    1
  3788 ;; Hardware stack levels required when called:    2
  3789 ;; This function calls:
  3790 ;;		Nothing
  3791 ;; This function is called by:
  3792 ;;		_main
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           	psect	text17
  3797  00340C                     __ptext17:
  3798                           	opt callstack 0
  3799  00340C                     _buttonsGetMapByte0:
  3800                           	opt callstack 28
  3801                           
  3802                           ;buttons.c: 269: uint8_t i;;buttons.c: 271: for (i = 0; i < N_BUTTONS; i++) {
  3803                           
  3804                           ;incstack = 0
  3805  00340C  0E00               	movlw	0
  3806  00340E  6E2E               	movwf	buttonsGetMapByte0@i,c
  3807  003410                     l3524:
  3808                           
  3809                           ;buttons.c: 272: buttonsMessage[i] = buttonsMapByte0[i];
  3810  003410  0EDD               	movlw	low _buttonsMapByte0
  3811  003412  242E               	addwf	buttonsGetMapByte0@i,w,c
  3812  003414  6ED9               	movwf	fsr2l,c
  3813  003416  6ADA               	clrf	fsr2h,c
  3814  003418  0E00               	movlw	high _buttonsMapByte0
  3815  00341A  22DA               	addwfc	fsr2h,f,c
  3816  00341C  0E22               	movlw	low _buttonsMessage
  3817  00341E  242E               	addwf	buttonsGetMapByte0@i,w,c
  3818  003420  6EE1               	movwf	fsr1l,c
  3819  003422  6AE2               	clrf	fsr1h,c
  3820  003424  0E00               	movlw	high _buttonsMessage
  3821  003426  22E2               	addwfc	fsr1h,f,c
  3822  003428  006F FF7F FFE7     	movff	indf2,indf1
  3823  00342E  2A2E               	incf	buttonsGetMapByte0@i,f,c
  3824  003430  0E0E               	movlw	14
  3825  003432  642E               	cpfsgt	buttonsGetMapByte0@i,c
  3826  003434  D7ED               	goto	l3524
  3827                           
  3828                           ;buttons.c: 273: };buttons.c: 275: return buttonsMessage;
  3829  003436  0E22               	movlw	low _buttonsMessage
  3830  003438  6E2C               	movwf	?_buttonsGetMapByte0,c
  3831  00343A  0E00               	movlw	high _buttonsMessage
  3832  00343C  6E2D               	movwf	?_buttonsGetMapByte0+1,c
  3833  00343E  0012               	return		;funcret
  3834  003440                     __end_of_buttonsGetMapByte0:
  3835                           	opt callstack 0
  3836                           
  3837 ;; *************** function _buttonsBuildLUTs *****************
  3838 ;; Defined at:
  3839 ;;		line 315 in file "buttons.c"
  3840 ;; Parameters:    Size  Location     Type
  3841 ;;		None
  3842 ;; Auto vars:     Size  Location     Type
  3843 ;;		None
  3844 ;; Return value:  Size  Location     Type
  3845 ;;                  1    wreg      void 
  3846 ;; Registers used:
  3847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3848 ;; Tracked objects:
  3849 ;;		On entry : 0/0
  3850 ;;		On exit  : 0/0
  3851 ;;		Unchanged: 0/0
  3852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3853 ;;      Params:         0       0       0       0       0       0       0       0       0
  3854 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3855 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3856 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3857 ;;Total ram usage:        0 bytes
  3858 ;; Hardware stack levels used:    1
  3859 ;; Hardware stack levels required when called:    4
  3860 ;; This function calls:
  3861 ;;		_buttonsBuildLUT
  3862 ;; This function is called by:
  3863 ;;		_main
  3864 ;; This function uses a non-reentrant model
  3865 ;;
  3866                           
  3867                           	psect	text18
  3868  002DD2                     __ptext18:
  3869                           	opt callstack 0
  3870  002DD2                     _buttonsBuildLUTs:
  3871                           	opt callstack 26
  3872                           
  3873                           ;buttons.c: 316: buttonsBuildLUT(LUT_SX, config.SXMin, config.SXMax, ADCValues[0], confi
      +                          g.SDeadzone, config.deadzoneMode, config.SXInvert);
  3874                           
  3875                           ;incstack = 0
  3876  002DD2  0E00               	movlw	low _LUT_SX
  3877  002DD4  6E3A               	movwf	buttonsBuildLUT@LUT,c
  3878  002DD6  0E04               	movlw	high _LUT_SX
  3879  002DD8  6E3B               	movwf	buttonsBuildLUT@LUT+1,c
  3880  002DDA  0060  F2F0  F03C   	movff	_config+6,buttonsBuildLUT@minVal
  3881  002DE0  0060  F2F4  F03D   	movff	_config+7,buttonsBuildLUT@maxVal
  3882  002DE6  0060  F144  F03E   	movff	_ADCValues,buttonsBuildLUT@origin
  3883  002DEC  0060  F324  F03F   	movff	_config+19,buttonsBuildLUT@dz
  3884  002DF2  0060  F32C  F040   	movff	_config+21,buttonsBuildLUT@dzMode
  3885  002DF8  0100               	movlb	0	; () banked
  3886  002DFA  0E00               	movlw	0
  3887  002DFC  B1C8               	btfsc	(_config+18)& (0+255),0,b
  3888  002DFE  0E01               	movlw	1
  3889  002E00  6E41               	movwf	buttonsBuildLUT@invert,c
  3890  002E02  EC6C  F014         	call	_buttonsBuildLUT	;wreg free
  3891                           
  3892                           ;buttons.c: 317: buttonsBuildLUT(LUT_SY, config.SYMin, config.SYMax, ADCValues[1], confi
      +                          g.SDeadzone, config.deadzoneMode, config.SYInvert);
  3893  002E06  0E00               	movlw	low _LUT_SY
  3894  002E08  6E3A               	movwf	buttonsBuildLUT@LUT,c
  3895  002E0A  0E05               	movlw	high _LUT_SY
  3896  002E0C  6E3B               	movwf	buttonsBuildLUT@LUT+1,c
  3897  002E0E  0060  F2F8  F03C   	movff	_config+8,buttonsBuildLUT@minVal
  3898  002E14  0060  F2FC  F03D   	movff	_config+9,buttonsBuildLUT@maxVal
  3899  002E1A  0060  F148  F03E   	movff	_ADCValues+1,buttonsBuildLUT@origin
  3900  002E20  0060  F324  F03F   	movff	_config+19,buttonsBuildLUT@dz
  3901  002E26  0060  F32C  F040   	movff	_config+21,buttonsBuildLUT@dzMode
  3902  002E2C  0100               	movlb	0	; () banked
  3903  002E2E  0E00               	movlw	0
  3904  002E30  B3C8               	btfsc	(_config+18)& (0+255),1,b
  3905  002E32  0E01               	movlw	1
  3906  002E34  6E41               	movwf	buttonsBuildLUT@invert,c
  3907  002E36  EC6C  F014         	call	_buttonsBuildLUT	;wreg free
  3908                           
  3909                           ;buttons.c: 318: buttonsBuildLUT(LUT_CX, config.CXMin, config.CXMax, ADCValues[2], confi
      +                          g.CDeadzone, config.deadzoneMode, config.CXInvert);
  3910  002E3A  0E00               	movlw	low _LUT_CX
  3911  002E3C  6E3A               	movwf	buttonsBuildLUT@LUT,c
  3912  002E3E  0E02               	movlw	high _LUT_CX
  3913  002E40  6E3B               	movwf	buttonsBuildLUT@LUT+1,c
  3914  002E42  0060  F300  F03C   	movff	_config+10,buttonsBuildLUT@minVal
  3915  002E48  0060  F304  F03D   	movff	_config+11,buttonsBuildLUT@maxVal
  3916  002E4E  0060  F14C  F03E   	movff	_ADCValues+2,buttonsBuildLUT@origin
  3917  002E54  0060  F328  F03F   	movff	_config+20,buttonsBuildLUT@dz
  3918  002E5A  0060  F32C  F040   	movff	_config+21,buttonsBuildLUT@dzMode
  3919  002E60  0100               	movlb	0	; () banked
  3920  002E62  0E00               	movlw	0
  3921  002E64  B5C8               	btfsc	(_config+18)& (0+255),2,b
  3922  002E66  0E01               	movlw	1
  3923  002E68  6E41               	movwf	buttonsBuildLUT@invert,c
  3924  002E6A  EC6C  F014         	call	_buttonsBuildLUT	;wreg free
  3925                           
  3926                           ;buttons.c: 319: buttonsBuildLUT(LUT_CY, config.CYMin, config.CYMax, ADCValues[3], confi
      +                          g.CDeadzone, config.deadzoneMode, config.CYInvert);
  3927  002E6E  0E00               	movlw	low _LUT_CY
  3928  002E70  6E3A               	movwf	buttonsBuildLUT@LUT,c
  3929  002E72  0E03               	movlw	high _LUT_CY
  3930  002E74  6E3B               	movwf	buttonsBuildLUT@LUT+1,c
  3931  002E76  0060  F308  F03C   	movff	_config+12,buttonsBuildLUT@minVal
  3932  002E7C  0060  F30C  F03D   	movff	_config+13,buttonsBuildLUT@maxVal
  3933  002E82  0060  F150  F03E   	movff	_ADCValues+3,buttonsBuildLUT@origin
  3934  002E88  0060  F328  F03F   	movff	_config+20,buttonsBuildLUT@dz
  3935  002E8E  0060  F32C  F040   	movff	_config+21,buttonsBuildLUT@dzMode
  3936  002E94  0100               	movlb	0	; () banked
  3937  002E96  0E00               	movlw	0
  3938  002E98  B7C8               	btfsc	(_config+18)& (0+255),3,b
  3939  002E9A  0E01               	movlw	1
  3940  002E9C  6E41               	movwf	buttonsBuildLUT@invert,c
  3941  002E9E  EC6C  F014         	call	_buttonsBuildLUT	;wreg free
  3942  002EA2  0012               	return		;funcret
  3943  002EA4                     __end_of_buttonsBuildLUTs:
  3944                           	opt callstack 0
  3945                           
  3946 ;; *************** function _buttonsBuildLUT *****************
  3947 ;; Defined at:
  3948 ;;		line 288 in file "buttons.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;  LUT             2   14[COMRAM] PTR unsigned char 
  3951 ;;		 -> LUT_CY(256), LUT_CX(256), LUT_SY(256), LUT_SX(256), 
  3952 ;;  minVal          1   16[COMRAM] unsigned char 
  3953 ;;  maxVal          1   17[COMRAM] unsigned char 
  3954 ;;  origin          1   18[COMRAM] unsigned char 
  3955 ;;  dz              1   19[COMRAM] unsigned char 
  3956 ;;  dzMode          1   20[COMRAM] unsigned char 
  3957 ;;  invert          1   21[COMRAM] unsigned char 
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;  tempVal         2   29[COMRAM] int 
  3960 ;;  radius          2   33[COMRAM] int 
  3961 ;;  i               2   31[COMRAM] int 
  3962 ;;  range           2   27[COMRAM] int 
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  1    wreg      void 
  3965 ;; Registers used:
  3966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3972 ;;      Params:         8       0       0       0       0       0       0       0       0
  3973 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3974 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3975 ;;      Totals:        21       0       0       0       0       0       0       0       0
  3976 ;;Total ram usage:       21 bytes
  3977 ;; Hardware stack levels used:    1
  3978 ;; Hardware stack levels required when called:    3
  3979 ;; This function calls:
  3980 ;;		___awdiv
  3981 ;;		___wmul
  3982 ;; This function is called by:
  3983 ;;		_buttonsBuildLUTs
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987                           	psect	text19
  3988  0028D8                     __ptext19:
  3989                           	opt callstack 0
  3990  0028D8                     _buttonsBuildLUT:
  3991                           	opt callstack 26
  3992                           
  3993                           ;buttons.c: 289: int16_t i;;buttons.c: 290: int16_t range = ((int16_t)maxVal - (int16_t)
      +                          minVal) / 2;
  3994                           
  3995                           ;incstack = 0
  3996  0028D8  503C               	movf	buttonsBuildLUT@minVal,w,c
  3997  0028DA  5C3D               	subwf	buttonsBuildLUT@maxVal,w,c
  3998  0028DC  6E32               	movwf	___awdiv@dividend,c
  3999  0028DE  6A33               	clrf	___awdiv@dividend+1,c
  4000  0028E0  A0D8               	btfss	status,0,c
  4001  0028E2  0633               	decf	___awdiv@dividend+1,f,c
  4002  0028E4  0E00               	movlw	0
  4003  0028E6  6E35               	movwf	___awdiv@divisor+1,c
  4004  0028E8  0E02               	movlw	2
  4005  0028EA  6E34               	movwf	___awdiv@divisor,c
  4006  0028EC  ECED  F017         	call	___awdiv	;wreg free
  4007  0028F0  0060  F0C8  F047   	movff	?___awdiv,buttonsBuildLUT@range
  4008  0028F6  0060  F0CC  F048   	movff	?___awdiv+1,buttonsBuildLUT@range+1
  4009                           
  4010                           ;buttons.c: 292: for (i = 0; i < 256; i++) {
  4011  0028FC  0E00               	movlw	0
  4012  0028FE  6E4C               	movwf	buttonsBuildLUT@i+1,c
  4013  002900  0E00               	movlw	0
  4014  002902  6E4B               	movwf	buttonsBuildLUT@i,c
  4015  002904                     l2842:
  4016                           
  4017                           ;buttons.c: 293: int16_t radius = i - origin;
  4018  002904  503E               	movf	buttonsBuildLUT@origin,w,c
  4019  002906  5C4B               	subwf	buttonsBuildLUT@i,w,c
  4020  002908  6E4D               	movwf	buttonsBuildLUT@radius,c
  4021  00290A  504C               	movf	buttonsBuildLUT@i+1,w,c
  4022  00290C  A0D8               	btfss	status,0,c
  4023  00290E  044C               	decf	buttonsBuildLUT@i+1,w,c
  4024  002910  6E4E               	movwf	buttonsBuildLUT@radius+1,c
  4025                           
  4026                           ;buttons.c: 294: if (invert) radius = -radius;
  4027  002912  5041               	movf	buttonsBuildLUT@invert,w,c
  4028  002914  B4D8               	btfsc	status,2,c
  4029  002916  D004               	goto	l2848
  4030  002918  6C4D               	negf	buttonsBuildLUT@radius,c
  4031  00291A  1E4E               	comf	buttonsBuildLUT@radius+1,f,c
  4032  00291C  B0D8               	btfsc	status,0,c
  4033  00291E  2A4E               	incf	buttonsBuildLUT@radius+1,f,c
  4034  002920                     l2848:
  4035                           
  4036                           ;buttons.c: 295: if (((radius >= 0) ? (radius) : (-radius)) < (int16_t)dz) {
  4037  002920  AE4E               	btfss	buttonsBuildLUT@radius+1,7,c
  4038  002922  D011               	goto	l719
  4039  002924  0060  F134  F042   	movff	buttonsBuildLUT@radius,??_buttonsBuildLUT
  4040  00292A  0060  F138  F043   	movff	buttonsBuildLUT@radius+1,??_buttonsBuildLUT+1
  4041  002930  1E42               	comf	??_buttonsBuildLUT,f,c
  4042  002932  1E43               	comf	??_buttonsBuildLUT+1,f,c
  4043  002934  4A42               	infsnz	??_buttonsBuildLUT,f,c
  4044  002936  2A43               	incf	??_buttonsBuildLUT+1,f,c
  4045  002938  0060  F108  F045   	movff	??_buttonsBuildLUT,_buttonsBuildLUT$1521
  4046  00293E  0060  F10C  F046   	movff	??_buttonsBuildLUT+1,_buttonsBuildLUT$1521+1
  4047  002944  D006               	goto	l2852
  4048  002946                     l719:
  4049  002946  0060  F134  F045   	movff	buttonsBuildLUT@radius,_buttonsBuildLUT$1521
  4050  00294C  0060  F138  F046   	movff	buttonsBuildLUT@radius+1,_buttonsBuildLUT$1521+1
  4051  002952                     l2852:
  4052  002952  503F               	movf	buttonsBuildLUT@dz,w,c
  4053  002954  6E42               	movwf	??_buttonsBuildLUT& (0+255),c
  4054  002956  6A43               	clrf	(??_buttonsBuildLUT+1)& (0+255),c
  4055  002958  5042               	movf	??_buttonsBuildLUT,w,c
  4056  00295A  5C45               	subwf	_buttonsBuildLUT$1521,w,c
  4057  00295C  5046               	movf	_buttonsBuildLUT$1521+1,w,c
  4058  00295E  0A80               	xorlw	128
  4059  002960  6E44               	movwf	(??_buttonsBuildLUT+2)& (0+255),c
  4060  002962  5043               	movf	??_buttonsBuildLUT+1,w,c
  4061  002964  0A80               	xorlw	128
  4062  002966  5844               	subwfb	(??_buttonsBuildLUT+2)& (0+255),w,c
  4063  002968  B0D8               	btfsc	status,0,c
  4064  00296A  D009               	goto	l2856
  4065                           
  4066                           ;buttons.c: 296: LUT[i] = 0x80;
  4067  00296C  504B               	movf	buttonsBuildLUT@i,w,c
  4068  00296E  243A               	addwf	buttonsBuildLUT@LUT,w,c
  4069  002970  6ED9               	movwf	fsr2l,c
  4070  002972  504C               	movf	buttonsBuildLUT@i+1,w,c
  4071  002974  203B               	addwfc	buttonsBuildLUT@LUT+1,w,c
  4072  002976  6EDA               	movwf	fsr2h,c
  4073  002978  0E80               	movlw	128
  4074  00297A  6EDF               	movwf	indf2,c
  4075                           
  4076                           ;buttons.c: 297: } else {
  4077  00297C  D07E               	goto	l2878
  4078  00297E                     l2856:
  4079                           
  4080                           ;buttons.c: 298: int16_t tempVal;;buttons.c: 299: if (dzMode == 0) {
  4081  00297E  5040               	movf	buttonsBuildLUT@dzMode,w,c
  4082  002980  A4D8               	btfss	status,2,c
  4083  002982  D01B               	goto	l2860
  4084                           
  4085                           ;buttons.c: 300: tempVal = radius * 127 / range;
  4086  002984  0060  F134  F02C   	movff	buttonsBuildLUT@radius,___wmul@multiplier
  4087  00298A  0060  F138  F02D   	movff	buttonsBuildLUT@radius+1,___wmul@multiplier+1
  4088  002990  0E00               	movlw	0
  4089  002992  6E2F               	movwf	___wmul@multiplicand+1,c
  4090  002994  0E7F               	movlw	127
  4091  002996  6E2E               	movwf	___wmul@multiplicand,c
  4092  002998  EC20  F01A         	call	___wmul	;wreg free
  4093  00299C  0060  F0B0  F032   	movff	?___wmul,___awdiv@dividend
  4094  0029A2  0060  F0B4  F033   	movff	?___wmul+1,___awdiv@dividend+1
  4095  0029A8  0060  F11C  F034   	movff	buttonsBuildLUT@range,___awdiv@divisor
  4096  0029AE  0060  F120  F035   	movff	buttonsBuildLUT@range+1,___awdiv@divisor+1
  4097  0029B4  ECED  F017         	call	___awdiv	;wreg free
  4098  0029B8  D03F               	goto	L5
  4099  0029BA                     l2860:
  4100                           
  4101                           ;buttons.c: 302: if (radius > 0)
  4102  0029BA  BE4E               	btfsc	buttonsBuildLUT@radius+1,7,c
  4103  0029BC  D022               	goto	l2864
  4104  0029BE  504E               	movf	buttonsBuildLUT@radius+1,w,c
  4105  0029C0  E103               	bnz	u1690
  4106  0029C2  044D               	decf	buttonsBuildLUT@radius,w,c
  4107  0029C4  A0D8               	btfss	status,0,c
  4108  0029C6  D01D               	goto	l2864
  4109  0029C8                     u1690:
  4110                           
  4111                           ;buttons.c: 303: tempVal = (radius - dz) * 127 / (range - dz);
  4112  0029C8  503F               	movf	buttonsBuildLUT@dz,w,c
  4113  0029CA  5C4D               	subwf	buttonsBuildLUT@radius,w,c
  4114  0029CC  6E2C               	movwf	___wmul@multiplier,c
  4115  0029CE  504E               	movf	buttonsBuildLUT@radius+1,w,c
  4116  0029D0  A0D8               	btfss	status,0,c
  4117  0029D2  044E               	decf	buttonsBuildLUT@radius+1,w,c
  4118  0029D4  6E2D               	movwf	___wmul@multiplier+1,c
  4119  0029D6  0E00               	movlw	0
  4120  0029D8  6E2F               	movwf	___wmul@multiplicand+1,c
  4121  0029DA  0E7F               	movlw	127
  4122  0029DC  6E2E               	movwf	___wmul@multiplicand,c
  4123  0029DE  EC20  F01A         	call	___wmul	;wreg free
  4124  0029E2  0060  F0B0  F032   	movff	?___wmul,___awdiv@dividend
  4125  0029E8  0060  F0B4  F033   	movff	?___wmul+1,___awdiv@dividend+1
  4126  0029EE  503F               	movf	buttonsBuildLUT@dz,w,c
  4127  0029F0  5C47               	subwf	buttonsBuildLUT@range,w,c
  4128  0029F2  6E34               	movwf	___awdiv@divisor,c
  4129  0029F4  5048               	movf	buttonsBuildLUT@range+1,w,c
  4130  0029F6  A0D8               	btfss	status,0,c
  4131  0029F8  0448               	decf	buttonsBuildLUT@range+1,w,c
  4132  0029FA  6E35               	movwf	___awdiv@divisor+1,c
  4133  0029FC  ECED  F017         	call	___awdiv	;wreg free
  4134  002A00  D01B               	goto	L5
  4135  002A02                     l2864:
  4136                           
  4137                           ;buttons.c: 304: else;buttons.c: 305: tempVal = (radius + dz) * 127 / (range - dz);
  4138  002A02  503F               	movf	buttonsBuildLUT@dz,w,c
  4139  002A04  244D               	addwf	buttonsBuildLUT@radius,w,c
  4140  002A06  6E2C               	movwf	___wmul@multiplier,c
  4141  002A08  0E00               	movlw	0
  4142  002A0A  204E               	addwfc	buttonsBuildLUT@radius+1,w,c
  4143  002A0C  6E2D               	movwf	___wmul@multiplier+1,c
  4144  002A0E  0E00               	movlw	0
  4145  002A10  6E2F               	movwf	___wmul@multiplicand+1,c
  4146  002A12  0E7F               	movlw	127
  4147  002A14  6E2E               	movwf	___wmul@multiplicand,c
  4148  002A16  EC20  F01A         	call	___wmul	;wreg free
  4149  002A1A  0060  F0B0  F032   	movff	?___wmul,___awdiv@dividend
  4150  002A20  0060  F0B4  F033   	movff	?___wmul+1,___awdiv@dividend+1
  4151  002A26  503F               	movf	buttonsBuildLUT@dz,w,c
  4152  002A28  5C47               	subwf	buttonsBuildLUT@range,w,c
  4153  002A2A  6E34               	movwf	___awdiv@divisor,c
  4154  002A2C  5048               	movf	buttonsBuildLUT@range+1,w,c
  4155  002A2E  A0D8               	btfss	status,0,c
  4156  002A30  0448               	decf	buttonsBuildLUT@range+1,w,c
  4157  002A32  6E35               	movwf	___awdiv@divisor+1,c
  4158  002A34  ECED  F017         	call	___awdiv	;wreg free
  4159  002A38                     L5:
  4160  002A38  0060  F0C8  F049   	movff	?___awdiv,buttonsBuildLUT@tempVal
  4161  002A3E  0060  F0CC  F04A   	movff	?___awdiv+1,buttonsBuildLUT@tempVal+1
  4162                           
  4163                           ;buttons.c: 306: };buttons.c: 307: tempVal += 128;
  4164  002A44  0E80               	movlw	128
  4165  002A46  2649               	addwf	buttonsBuildLUT@tempVal,f,c
  4166  002A48  0E00               	movlw	0
  4167  002A4A  224A               	addwfc	buttonsBuildLUT@tempVal+1,f,c
  4168                           
  4169                           ;buttons.c: 308: if (tempVal < 0) tempVal = 0;
  4170  002A4C  AE4A               	btfss	buttonsBuildLUT@tempVal+1,7,c
  4171  002A4E  D004               	goto	l2872
  4172  002A50  0E00               	movlw	0
  4173  002A52  6E4A               	movwf	buttonsBuildLUT@tempVal+1,c
  4174  002A54  0E00               	movlw	0
  4175  002A56  6E49               	movwf	buttonsBuildLUT@tempVal,c
  4176  002A58                     l2872:
  4177                           
  4178                           ;buttons.c: 309: if (tempVal > 0xFF) tempVal = 0xFF;
  4179  002A58  BE4A               	btfsc	buttonsBuildLUT@tempVal+1,7,c
  4180  002A5A  D006               	goto	l2876
  4181  002A5C  044A               	decf	buttonsBuildLUT@tempVal+1,w,c
  4182  002A5E  A0D8               	btfss	status,0,c
  4183  002A60  D003               	goto	l2876
  4184  002A62  0E00               	movlw	0
  4185  002A64  6E4A               	movwf	buttonsBuildLUT@tempVal+1,c
  4186  002A66  6849               	setf	buttonsBuildLUT@tempVal,c
  4187  002A68                     l2876:
  4188                           
  4189                           ;buttons.c: 310: LUT[i] = (uint8_t)tempVal & 0xFFU;
  4190  002A68  504B               	movf	buttonsBuildLUT@i,w,c
  4191  002A6A  243A               	addwf	buttonsBuildLUT@LUT,w,c
  4192  002A6C  6ED9               	movwf	fsr2l,c
  4193  002A6E  504C               	movf	buttonsBuildLUT@i+1,w,c
  4194  002A70  203B               	addwfc	buttonsBuildLUT@LUT+1,w,c
  4195  002A72  6EDA               	movwf	fsr2h,c
  4196  002A74  0060  F127  FFDF   	movff	buttonsBuildLUT@tempVal,indf2
  4197  002A7A                     l2878:
  4198  002A7A  4A4B               	infsnz	buttonsBuildLUT@i,f,c
  4199  002A7C  2A4C               	incf	buttonsBuildLUT@i+1,f,c
  4200  002A7E  BE4C               	btfsc	buttonsBuildLUT@i+1,7,c
  4201  002A80  D741               	goto	l2842
  4202  002A82  044C               	decf	buttonsBuildLUT@i+1,w,c
  4203  002A84  B0D8               	btfsc	status,0,c
  4204  002A86  0012               	return	
  4205  002A88  D73D               	goto	l2842
  4206  002A8A                     __end_of_buttonsBuildLUT:
  4207                           	opt callstack 0
  4208                           
  4209 ;; *************** function ___wmul *****************
  4210 ;; Defined at:
  4211 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;  multiplier      2    0[COMRAM] unsigned int 
  4214 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;  product         2    4[COMRAM] unsigned int 
  4217 ;; Return value:  Size  Location     Type
  4218 ;;                  2    0[COMRAM] unsigned int 
  4219 ;; Registers used:
  4220 ;;		wreg, status,2, status,0, prodl, prodh
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4226 ;;      Params:         4       0       0       0       0       0       0       0       0
  4227 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4228 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4229 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4230 ;;Total ram usage:        6 bytes
  4231 ;; Hardware stack levels used:    1
  4232 ;; Hardware stack levels required when called:    2
  4233 ;; This function calls:
  4234 ;;		Nothing
  4235 ;; This function is called by:
  4236 ;;		_buttonsBuildLUT
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239                           
  4240                           	psect	text20
  4241  003440                     __ptext20:
  4242                           	opt callstack 0
  4243  003440                     ___wmul:
  4244                           	opt callstack 26
  4245                           
  4246                           ;incstack = 0
  4247  003440  502C               	movf	___wmul@multiplier,w,c
  4248  003442  022E               	mulwf	___wmul@multiplicand,c
  4249  003444  006F FFCC  F030    	movff	prodl,___wmul@product
  4250  00344A  006F FFD0  F031    	movff	prodh,___wmul@product+1
  4251  003450  502C               	movf	___wmul@multiplier,w,c
  4252  003452  022F               	mulwf	___wmul@multiplicand+1,c
  4253  003454  50F3               	movf	prodl,w,c
  4254  003456  2631               	addwf	___wmul@product+1,f,c
  4255  003458  502D               	movf	___wmul@multiplier+1,w,c
  4256  00345A  022E               	mulwf	___wmul@multiplicand,c
  4257  00345C  50F3               	movf	prodl,w,c
  4258  00345E  2631               	addwf	___wmul@product+1,f,c
  4259  003460  0060  F0C0  F02C   	movff	___wmul@product,?___wmul
  4260  003466  0060  F0C4  F02D   	movff	___wmul@product+1,?___wmul+1
  4261  00346C  0012               	return		;funcret
  4262  00346E                     __end_of___wmul:
  4263                           	opt callstack 0
  4264                           
  4265 ;; *************** function ___awdiv *****************
  4266 ;; Defined at:
  4267 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  4268 ;; Parameters:    Size  Location     Type
  4269 ;;  dividend        2    6[COMRAM] int 
  4270 ;;  divisor         2    8[COMRAM] int 
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;  quotient        2   12[COMRAM] int 
  4273 ;;  sign            1   11[COMRAM] unsigned char 
  4274 ;;  counter         1   10[COMRAM] unsigned char 
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  2    6[COMRAM] int 
  4277 ;; Registers used:
  4278 ;;		wreg, status,2, status,0
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4284 ;;      Params:         4       0       0       0       0       0       0       0       0
  4285 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4286 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4287 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4288 ;;Total ram usage:        8 bytes
  4289 ;; Hardware stack levels used:    1
  4290 ;; Hardware stack levels required when called:    2
  4291 ;; This function calls:
  4292 ;;		Nothing
  4293 ;; This function is called by:
  4294 ;;		_buttonsBuildLUT
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298                           	psect	text21
  4299  002FDA                     __ptext21:
  4300                           	opt callstack 0
  4301  002FDA                     ___awdiv:
  4302                           	opt callstack 26
  4303                           
  4304                           ;incstack = 0
  4305  002FDA  0E00               	movlw	0
  4306  002FDC  6E37               	movwf	___awdiv@sign,c
  4307  002FDE  AE35               	btfss	___awdiv@divisor+1,7,c
  4308  002FE0  D006               	goto	l2730
  4309  002FE2  6C34               	negf	___awdiv@divisor,c
  4310  002FE4  1E35               	comf	___awdiv@divisor+1,f,c
  4311  002FE6  B0D8               	btfsc	status,0,c
  4312  002FE8  2A35               	incf	___awdiv@divisor+1,f,c
  4313  002FEA  0E01               	movlw	1
  4314  002FEC  6E37               	movwf	___awdiv@sign,c
  4315  002FEE                     l2730:
  4316  002FEE  AE33               	btfss	___awdiv@dividend+1,7,c
  4317  002FF0  D006               	goto	l2736
  4318  002FF2  6C32               	negf	___awdiv@dividend,c
  4319  002FF4  1E33               	comf	___awdiv@dividend+1,f,c
  4320  002FF6  B0D8               	btfsc	status,0,c
  4321  002FF8  2A33               	incf	___awdiv@dividend+1,f,c
  4322  002FFA  0E01               	movlw	1
  4323  002FFC  1A37               	xorwf	___awdiv@sign,f,c
  4324  002FFE                     l2736:
  4325  002FFE  0E00               	movlw	0
  4326  003000  6E39               	movwf	___awdiv@quotient+1,c
  4327  003002  0E00               	movlw	0
  4328  003004  6E38               	movwf	___awdiv@quotient,c
  4329  003006  5034               	movf	___awdiv@divisor,w,c
  4330  003008  1035               	iorwf	___awdiv@divisor+1,w,c
  4331  00300A  B4D8               	btfsc	status,2,c
  4332  00300C  D01C               	goto	l2758
  4333  00300E  0E01               	movlw	1
  4334  003010  6E36               	movwf	___awdiv@counter,c
  4335  003012  D004               	goto	l2744
  4336  003014                     l2742:
  4337  003014  90D8               	bcf	status,0,c
  4338  003016  3634               	rlcf	___awdiv@divisor,f,c
  4339  003018  3635               	rlcf	___awdiv@divisor+1,f,c
  4340  00301A  2A36               	incf	___awdiv@counter,f,c
  4341  00301C                     l2744:
  4342  00301C  AE35               	btfss	___awdiv@divisor+1,7,c
  4343  00301E  D7FA               	goto	l2742
  4344  003020                     u1610:
  4345  003020  90D8               	bcf	status,0,c
  4346  003022  3638               	rlcf	___awdiv@quotient,f,c
  4347  003024  3639               	rlcf	___awdiv@quotient+1,f,c
  4348  003026  5034               	movf	___awdiv@divisor,w,c
  4349  003028  5C32               	subwf	___awdiv@dividend,w,c
  4350  00302A  5035               	movf	___awdiv@divisor+1,w,c
  4351  00302C  5833               	subwfb	___awdiv@dividend+1,w,c
  4352  00302E  A0D8               	btfss	status,0,c
  4353  003030  D005               	goto	l2754
  4354  003032  5034               	movf	___awdiv@divisor,w,c
  4355  003034  5E32               	subwf	___awdiv@dividend,f,c
  4356  003036  5035               	movf	___awdiv@divisor+1,w,c
  4357  003038  5A33               	subwfb	___awdiv@dividend+1,f,c
  4358  00303A  8038               	bsf	___awdiv@quotient,0,c
  4359  00303C                     l2754:
  4360  00303C  90D8               	bcf	status,0,c
  4361  00303E  3235               	rrcf	___awdiv@divisor+1,f,c
  4362  003040  3234               	rrcf	___awdiv@divisor,f,c
  4363  003042  2E36               	decfsz	___awdiv@counter,f,c
  4364  003044  D7ED               	goto	u1610
  4365  003046                     l2758:
  4366  003046  5037               	movf	___awdiv@sign,w,c
  4367  003048  B4D8               	btfsc	status,2,c
  4368  00304A  D004               	goto	l2762
  4369  00304C  6C38               	negf	___awdiv@quotient,c
  4370  00304E  1E39               	comf	___awdiv@quotient+1,f,c
  4371  003050  B0D8               	btfsc	status,0,c
  4372  003052  2A39               	incf	___awdiv@quotient+1,f,c
  4373  003054                     l2762:
  4374  003054  0060  F0E0  F032   	movff	___awdiv@quotient,?___awdiv
  4375  00305A  0060  F0E4  F033   	movff	___awdiv@quotient+1,?___awdiv+1
  4376  003060  0012               	return		;funcret
  4377  003062                     __end_of___awdiv:
  4378                           	opt callstack 0
  4379                           
  4380 ;; *************** function _bootBootloader *****************
  4381 ;; Defined at:
  4382 ;;		line 385 in file "main.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;		None
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;		None
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  1    wreg      void 
  4389 ;; Registers used:
  4390 ;;		wreg, status,2
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4396 ;;      Params:         0       0       0       0       0       0       0       0       0
  4397 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4398 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4399 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4400 ;;Total ram usage:        0 bytes
  4401 ;; Hardware stack levels used:    1
  4402 ;; Hardware stack levels required when called:    2
  4403 ;; This function calls:
  4404 ;;		Nothing
  4405 ;; This function is called by:
  4406 ;;		_main
  4407 ;; This function uses a non-reentrant model
  4408 ;;
  4409                           
  4410                           	psect	text22
  4411  0032E4                     __ptext22:
  4412                           	opt callstack 0
  4413  0032E4                     _bootBootloader:
  4414                           	opt callstack 28
  4415                           
  4416                           ;main.c: 386: INTCON0 = 0x00;
  4417                           
  4418                           ;incstack = 0
  4419  0032E4  0E00               	movlw	0
  4420  0032E6  6ED2               	movwf	16338,c	;volatile
  4421                           
  4422                           ;main.c: 387: NCO1ACCL = 0x01;
  4423  0032E8  0E01               	movlw	1
  4424  0032EA  013F               	movlb	63	; () banked
  4425  0032EC  6F38               	movwf	56,b	;volatile
  4426                           
  4427                           ;main.c: 388: STKPTR = 0x00;
  4428  0032EE  0E00               	movlw	0
  4429  0032F0  6EFC               	movwf	stkptr,c	;volatile
  4430                           
  4431                           ;main.c: 389: IVTLOCK = 0x55;
  4432  0032F2  0E55               	movlw	85
  4433  0032F4  6ED4               	movwf	16340,c	;volatile
  4434                           
  4435                           ;main.c: 390: IVTLOCK = 0xAA;
  4436  0032F6  0EAA               	movlw	170
  4437  0032F8  6ED4               	movwf	16340,c	;volatile
  4438                           
  4439                           ;main.c: 391: IVTLOCK = 0;
  4440  0032FA  0E00               	movlw	0
  4441  0032FC  6ED4               	movwf	16340,c	;volatile
  4442                           
  4443                           ; BSR set to: 63
  4444                           ;main.c: 392: IVTLOCKED = 0;
  4445  0032FE  90D4               	bcf	16340,0,c	;volatile
  4446                           
  4447                           ;main.c: 393: IVTBASE = 8;
  4448  003300  0E08               	movlw	8
  4449  003302  6ED5               	movwf	16341,c	;volatile
  4450  003304  0E00               	movlw	0
  4451  003306  6ED6               	movwf	16342,c	;volatile
  4452  003308  0E00               	movlw	0
  4453  00330A  6ED7               	movwf	16343,c	;volatile
  4454                           
  4455                           ;main.c: 394: IVTLOCK = 0x55;
  4456  00330C  0E55               	movlw	85
  4457  00330E  6ED4               	movwf	16340,c	;volatile
  4458                           
  4459                           ;main.c: 395: IVTLOCK = 0xAA;
  4460  003310  0EAA               	movlw	170
  4461  003312  6ED4               	movwf	16340,c	;volatile
  4462                           
  4463                           ;main.c: 396: IVTLOCK = 1;
  4464  003314  0E01               	movlw	1
  4465  003316  6ED4               	movwf	16340,c	;volatile
  4466                           
  4467                           ; BSR set to: 63
  4468                           ;main.c: 397: IVTLOCKED = 1;
  4469  003318  80D4               	bsf	16340,0,c	;volatile
  4470                           
  4471                           ;main.c: 399: PCLATU = 0x00;
  4472  00331A  0E00               	movlw	0
  4473  00331C  6EFB               	movwf	pclatu,c	;volatile
  4474                           
  4475                           ;main.c: 400: PCLATH = 0x00;
  4476  00331E  0E00               	movlw	0
  4477  003320  6EFA               	movwf	pclath,c	;volatile
  4478                           
  4479                           ;main.c: 401: PCL = 0x00;
  4480  003322  0E00               	movlw	0
  4481  003324  6EF9               	movwf	pcl,c	;volatile
  4482                           
  4483                           ; BSR set to: 63
  4484  003326  0012               	return		;funcret
  4485  003328                     __end_of_bootBootloader:
  4486                           	opt callstack 0
  4487                           
  4488 ;; *************** function _SISendMessage *****************
  4489 ;; Defined at:
  4490 ;;		line 194 in file "si.c"
  4491 ;; Parameters:    Size  Location     Type
  4492 ;;  msg             2    6[COMRAM] PTR unsigned char 
  4493 ;;		 -> buttonsMessage(10), main@msgAnswer(36), 
  4494 ;;  len             1    8[COMRAM] unsigned char 
  4495 ;; Auto vars:     Size  Location     Type
  4496 ;;  leftToSend      1   15[COMRAM] char 
  4497 ;;  idx             1   14[COMRAM] unsigned char 
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  1    wreg      void 
  4500 ;; Registers used:
  4501 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4507 ;;      Params:         3       0       0       0       0       0       0       0       0
  4508 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4509 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4510 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4511 ;;Total ram usage:       10 bytes
  4512 ;; Hardware stack levels used:    1
  4513 ;; Hardware stack levels required when called:    2
  4514 ;; This function calls:
  4515 ;;		Nothing
  4516 ;; This function is called by:
  4517 ;;		_main
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           
  4521                           	psect	text23
  4522  002CFA                     __ptext23:
  4523                           	opt callstack 0
  4524  002CFA                     _SISendMessage:
  4525                           	opt callstack 28
  4526                           
  4527                           ;si.c: 195: int8_t leftToSend;;si.c: 196: uint8_t idx;;si.c: 203: SMT1CON1bits.GO = 0;
  4528                           
  4529                           ; BSR set to: 63
  4530                           ;incstack = 0
  4531  002CFA  013F               	movlb	63	; () banked
  4532  002CFC  9F1F               	bcf	31,7,b	;volatile
  4533  002CFE                     l441:
  4534  002CFE  013D               	movlb	61	; () banked
  4535  002D00  AB17               	btfss	23,5,b	;volatile
  4536  002D02  D7FD               	goto	l441
  4537                           
  4538                           ; BSR set to: 61
  4539                           ;si.c: 208: TRISBbits.TRISB4 = 0;
  4540  002D04  98C3               	bcf	16323,4,c	;volatile
  4541                           
  4542                           ; BSR set to: 61
  4543                           ;si.c: 211: SIBitCounter = 0;
  4544  002D06  0E00               	movlw	0
  4545  002D08  6E20               	movwf	_SIBitCounter,c
  4546                           
  4547                           ;si.c: 212: SIByteCounter = 0;
  4548  002D0A  0E00               	movlw	0
  4549  002D0C  6E1F               	movwf	_SIByteCounter,c
  4550                           
  4551                           ;si.c: 213: SICMDReceived = 0;
  4552  002D0E  0E00               	movlw	0
  4553  002D10  6E1E               	movwf	_SICMDReceived,c
  4554                           
  4555                           ;si.c: 214: SITempByte = 0x00;
  4556  002D12  0E00               	movlw	0
  4557  002D14  6E1D               	movwf	_SITempByte,c
  4558                           
  4559                           ;si.c: 216: T2TMR = 0x01;
  4560  002D16  0E01               	movlw	1
  4561  002D18  6EAA               	movwf	16298,c	;volatile
  4562                           
  4563                           ;si.c: 218: SPI1TWIDTH = 0x01;
  4564  002D1A  0E01               	movlw	1
  4565  002D1C  6F18               	movwf	24,b	;volatile
  4566                           
  4567                           ; BSR set to: 61
  4568                           ;si.c: 219: SPI1INTFbits.SRMTIF = 0;
  4569  002D1E  9F1A               	bcf	26,7,b	;volatile
  4570                           
  4571                           ; BSR set to: 61
  4572                           ;si.c: 220: SPI1TCNTL = len;
  4573  002D20  0060  F0D3  FD12   	movff	SISendMessage@len,15634	;volatile
  4574                           
  4575                           ; BSR set to: 61
  4576                           ;si.c: 222: if (len == 1) {
  4577  002D26  0434               	decf	SISendMessage@len,w,c
  4578  002D28  A4D8               	btfss	status,2,c
  4579  002D2A  D00B               	goto	l3400
  4580                           
  4581                           ; BSR set to: 61
  4582                           ;si.c: 223: SPI1TXB = msg[0];
  4583  002D2C  0060  F0CB  FFD9   	movff	SISendMessage@msg,fsr2l
  4584  002D32  0060  F0CF  FFDA   	movff	SISendMessage@msg+1,fsr2h
  4585  002D38  50DF               	movf	indf2,w,c
  4586  002D3A  6F11               	movwf	17,b	;volatile
  4587                           
  4588                           ; BSR set to: 61
  4589                           ;si.c: 224: SPI1TXB = 0x80;
  4590  002D3C  0E80               	movlw	128
  4591  002D3E  6F11               	movwf	17,b	;volatile
  4592                           
  4593                           ;si.c: 225: } else {
  4594  002D40  D03F               	goto	u2640
  4595  002D42                     l3400:
  4596                           
  4597                           ; BSR set to: 61
  4598                           ;si.c: 226: SPI1TXB = msg[0];
  4599  002D42  0060  F0CB  FFD9   	movff	SISendMessage@msg,fsr2l
  4600  002D48  0060  F0CF  FFDA   	movff	SISendMessage@msg+1,fsr2h
  4601  002D4E  50DF               	movf	indf2,w,c
  4602  002D50  6F11               	movwf	17,b	;volatile
  4603                           
  4604                           ; BSR set to: 61
  4605                           ;si.c: 227: SPI1TXB = msg[1];
  4606  002D52  EE20 F001          	lfsr	2,1
  4607  002D56  5032               	movf	SISendMessage@msg,w,c
  4608  002D58  26D9               	addwf	fsr2l,f,c
  4609  002D5A  5033               	movf	SISendMessage@msg+1,w,c
  4610  002D5C  22DA               	addwfc	fsr2h,f,c
  4611  002D5E  50DF               	movf	indf2,w,c
  4612  002D60  6F11               	movwf	17,b	;volatile
  4613                           
  4614                           ; BSR set to: 61
  4615                           ;si.c: 228: leftToSend = len - 2;
  4616  002D62  5034               	movf	SISendMessage@len,w,c
  4617  002D64  0FFE               	addlw	254
  4618  002D66  6E3B               	movwf	SISendMessage@leftToSend,c
  4619                           
  4620                           ;si.c: 229: idx = 2;
  4621  002D68  0E02               	movlw	2
  4622  002D6A  6E3A               	movwf	SISendMessage@idx,c
  4623                           
  4624                           ;si.c: 231: while(leftToSend >= 0) {
  4625  002D6C  D027               	goto	l3418
  4626  002D6E                     l3406:
  4627                           
  4628                           ; BSR set to: 61
  4629                           ;si.c: 232: if (SPI1TCNTL < (leftToSend + 2)) {
  4630  002D6E  0060  F0EC  F035   	movff	SISendMessage@leftToSend,??_SISendMessage
  4631  002D74  6A36               	clrf	(??_SISendMessage+1)& (0+255),c
  4632  002D76  BE35               	btfsc	??_SISendMessage& (0+255),7,c
  4633  002D78  0636               	decf	(??_SISendMessage+1)& (0+255),f,c
  4634  002D7A  0E02               	movlw	2
  4635  002D7C  2635               	addwf	??_SISendMessage,f,c
  4636  002D7E  0E00               	movlw	0
  4637  002D80  2236               	addwfc	??_SISendMessage+1,f,c
  4638  002D82  5112               	movf	18,w,b	;volatile
  4639  002D84  6E37               	movwf	(??_SISendMessage+2)& (0+255),c
  4640  002D86  6A38               	clrf	(??_SISendMessage+3)& (0+255),c
  4641  002D88  5035               	movf	??_SISendMessage,w,c
  4642  002D8A  5C37               	subwf	??_SISendMessage+2,w,c
  4643  002D8C  5038               	movf	??_SISendMessage+3,w,c
  4644  002D8E  0A80               	xorlw	128
  4645  002D90  6E39               	movwf	(??_SISendMessage+4)& (0+255),c
  4646  002D92  5036               	movf	??_SISendMessage+1,w,c
  4647  002D94  0A80               	xorlw	128
  4648  002D96  5839               	subwfb	(??_SISendMessage+4)& (0+255),w,c
  4649  002D98  B0D8               	btfsc	status,0,c
  4650  002D9A  D010               	goto	l3418
  4651                           
  4652                           ; BSR set to: 61
  4653                           ;si.c: 233: if (leftToSend == 0) {
  4654  002D9C  503B               	movf	SISendMessage@leftToSend,w,c
  4655  002D9E  A4D8               	btfss	status,2,c
  4656  002DA0  D003               	goto	l3412
  4657                           
  4658                           ; BSR set to: 61
  4659                           ;si.c: 234: SPI1TXB = 0x80;
  4660  002DA2  0E80               	movlw	128
  4661  002DA4  6F11               	movwf	17,b	;volatile
  4662                           
  4663                           ;si.c: 235: } else {
  4664  002DA6  D009               	goto	l3416
  4665  002DA8                     l3412:
  4666                           
  4667                           ; BSR set to: 61
  4668                           ;si.c: 236: SPI1TXB = msg[idx++];
  4669  002DA8  503A               	movf	SISendMessage@idx,w,c
  4670  002DAA  2432               	addwf	SISendMessage@msg,w,c
  4671  002DAC  6ED9               	movwf	fsr2l,c
  4672  002DAE  0E00               	movlw	0
  4673  002DB0  2033               	addwfc	SISendMessage@msg+1,w,c
  4674  002DB2  6EDA               	movwf	fsr2h,c
  4675  002DB4  50DF               	movf	indf2,w,c
  4676  002DB6  6F11               	movwf	17,b	;volatile
  4677                           
  4678                           ; BSR set to: 61
  4679  002DB8  2A3A               	incf	SISendMessage@idx,f,c
  4680  002DBA                     l3416:
  4681                           
  4682                           ; BSR set to: 61
  4683                           ;si.c: 237: };si.c: 238: leftToSend--;
  4684  002DBA  063B               	decf	SISendMessage@leftToSend,f,c
  4685  002DBC                     l3418:
  4686                           
  4687                           ; BSR set to: 61
  4688  002DBC  AE3B               	btfss	SISendMessage@leftToSend,7,c
  4689  002DBE  D7D7               	goto	l3406
  4690  002DC0                     u2640:
  4691                           
  4692                           ; BSR set to: 61
  4693  002DC0  AF1A               	btfss	26,7,b	;volatile
  4694  002DC2  D7FE               	goto	u2640
  4695  002DC4                     u2650:
  4696                           
  4697                           ; BSR set to: 61
  4698  002DC4  AB17               	btfss	23,5,b	;volatile
  4699  002DC6  D7FE               	goto	u2650
  4700                           
  4701                           ; BSR set to: 61
  4702                           ;si.c: 245: SPI1INTFbits.SRMTIF = 0;
  4703  002DC8  9F1A               	bcf	26,7,b	;volatile
  4704                           
  4705                           ;si.c: 248: SMT1CON1bits.GO = 1;
  4706  002DCA  013F               	movlb	63	; () banked
  4707  002DCC  8F1F               	bsf	31,7,b	;volatile
  4708                           
  4709                           ;si.c: 249: TRISBbits.TRISB4 = 1;
  4710  002DCE  88C3               	bsf	16323,4,c	;volatile
  4711                           
  4712                           ; BSR set to: 63
  4713  002DD0  0012               	return		;funcret
  4714  002DD2                     __end_of_SISendMessage:
  4715                           	opt callstack 0
  4716                           
  4717 ;; *************** function _SIInit *****************
  4718 ;; Defined at:
  4719 ;;		line 75 in file "si.c"
  4720 ;; Parameters:    Size  Location     Type
  4721 ;;		None
  4722 ;; Auto vars:     Size  Location     Type
  4723 ;;		None
  4724 ;; Return value:  Size  Location     Type
  4725 ;;                  1    wreg      void 
  4726 ;; Registers used:
  4727 ;;		wreg, status,2, cstack
  4728 ;; Tracked objects:
  4729 ;;		On entry : 0/0
  4730 ;;		On exit  : 0/0
  4731 ;;		Unchanged: 0/0
  4732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4733 ;;      Params:         0       0       0       0       0       0       0       0       0
  4734 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4735 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4736 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4737 ;;Total ram usage:        0 bytes
  4738 ;; Hardware stack levels used:    1
  4739 ;; Hardware stack levels required when called:    3
  4740 ;; This function calls:
  4741 ;;		_SIConfigureCLC
  4742 ;; This function is called by:
  4743 ;;		_main
  4744 ;; This function uses a non-reentrant model
  4745 ;;
  4746                           
  4747                           	psect	text24
  4748  002F50                     __ptext24:
  4749                           	opt callstack 0
  4750  002F50                     _SIInit:
  4751                           	opt callstack 27
  4752                           
  4753                           ;si.c: 77: T6CON = 0x00;
  4754                           
  4755                           ; BSR set to: 63
  4756                           ;incstack = 0
  4757  002F50  0E00               	movlw	0
  4758  002F52  6E94               	movwf	16276,c	;volatile
  4759                           
  4760                           ;si.c: 78: T6CLK = 0x01;
  4761  002F54  0E01               	movlw	1
  4762  002F56  6E96               	movwf	16278,c	;volatile
  4763                           
  4764                           ;si.c: 79: T6RST = 0x00;
  4765  002F58  0E00               	movlw	0
  4766  002F5A  6E97               	movwf	16279,c	;volatile
  4767                           
  4768                           ;si.c: 80: T6TMR = 0x00;
  4769  002F5C  0E00               	movlw	0
  4770  002F5E  6E92               	movwf	16274,c	;volatile
  4771                           
  4772                           ;si.c: 81: T6PR = 0x50;
  4773  002F60  0E50               	movlw	80
  4774  002F62  6E93               	movwf	16275,c	;volatile
  4775                           
  4776                           ;si.c: 82: T6HLT = 0x05;
  4777  002F64  0E05               	movlw	5
  4778  002F66  6E95               	movwf	16277,c	;volatile
  4779                           
  4780                           ;si.c: 83: PIR9bits.TMR6IF = 0;
  4781  002F68  0139               	movlb	57	; () banked
  4782  002F6A  91A9               	bcf	169,0,b	;volatile
  4783                           
  4784                           ; BSR set to: 57
  4785                           ;si.c: 84: PIE9bits.TMR6IE = 1;
  4786  002F6C  8199               	bsf	153,0,b	;volatile
  4787                           
  4788                           ;si.c: 88: T2CON = 0x00;
  4789  002F6E  0E00               	movlw	0
  4790  002F70  6EAC               	movwf	16300,c	;volatile
  4791                           
  4792                           ;si.c: 89: T2CLK = 0x01;
  4793  002F72  0E01               	movlw	1
  4794  002F74  6EAE               	movwf	16302,c	;volatile
  4795                           
  4796                           ;si.c: 90: T2RST = 0x00;
  4797  002F76  0E00               	movlw	0
  4798  002F78  6EAF               	movwf	16303,c	;volatile
  4799                           
  4800                           ;si.c: 91: T2TMR = 0x00;
  4801  002F7A  0E00               	movlw	0
  4802  002F7C  6EAA               	movwf	16298,c	;volatile
  4803                           
  4804                           ;si.c: 92: T2PR = 125;
  4805  002F7E  0E7D               	movlw	125
  4806  002F80  6EAB               	movwf	16299,c	;volatile
  4807                           
  4808                           ; BSR set to: 57
  4809                           ;si.c: 93: PIR4bits.TMR2IF = 0;
  4810  002F82  95A4               	bcf	164,2,b	;volatile
  4811                           
  4812                           ;si.c: 94: T2CON = 0xF0;
  4813  002F84  0EF0               	movlw	240
  4814  002F86  6EAC               	movwf	16300,c	;volatile
  4815                           
  4816                           ;si.c: 95: while(!PIR4bits.TMR2IF) {
  4817  002F88  D004               	goto	l3010
  4818  002F8A                     l432:
  4819                           
  4820                           ; BSR set to: 57
  4821                           ;si.c: 96: if (PORTBbits.RB4 == 0) {
  4822  002F8A  B8CB               	btfsc	16331,4,c	;volatile
  4823  002F8C  D002               	goto	l3010
  4824                           
  4825                           ; BSR set to: 57
  4826                           ;si.c: 97: T2TMR = 0x00;
  4827  002F8E  0E00               	movlw	0
  4828  002F90  6EAA               	movwf	16298,c	;volatile
  4829  002F92                     l3010:
  4830                           
  4831                           ; BSR set to: 57
  4832  002F92  A5A4               	btfss	164,2,b	;volatile
  4833  002F94  D7FA               	goto	l432
  4834                           
  4835                           ; BSR set to: 57
  4836                           ;si.c: 98: };si.c: 99: };si.c: 101: CCPTMRS1 = 0x55;
  4837  002F96  0E55               	movlw	85
  4838  002F98  013F               	movlb	63	; () banked
  4839  002F9A  6F5F               	movwf	95,b	;volatile
  4840                           
  4841                           ; BSR set to: 63
  4842                           ;si.c: 103: SIConfigureCLC();
  4843  002F9C  EC0C  F016         	call	_SIConfigureCLC	;wreg free
  4844                           
  4845                           ;si.c: 105: T6CON = 0x80;
  4846  002FA0  0E80               	movlw	128
  4847  002FA2  6E94               	movwf	16276,c	;volatile
  4848                           
  4849                           ;si.c: 111: SMT1PRL = 0xFF;
  4850  002FA4  013F               	movlb	63	; () banked
  4851  002FA6  691B               	setf	27,b	;volatile
  4852                           
  4853                           ; BSR set to: 63
  4854                           ;si.c: 112: SMT1PRH = 0xFF;
  4855  002FA8  691C               	setf	28,b	;volatile
  4856                           
  4857                           ; BSR set to: 63
  4858                           ;si.c: 113: SMT1PRU = 0xFF;
  4859  002FAA  691D               	setf	29,b	;volatile
  4860                           
  4861                           ; BSR set to: 63
  4862                           ;si.c: 114: SMT1TMRL = 0x00;
  4863  002FAC  0E00               	movlw	0
  4864  002FAE  6F12               	movwf	18,b	;volatile
  4865                           
  4866                           ; BSR set to: 63
  4867                           ;si.c: 115: SMT1TMRH = 0x00;
  4868  002FB0  0E00               	movlw	0
  4869  002FB2  6F13               	movwf	19,b	;volatile
  4870                           
  4871                           ; BSR set to: 63
  4872                           ;si.c: 116: SMT1TMRU = 0x00;
  4873  002FB4  0E00               	movlw	0
  4874  002FB6  6F14               	movwf	20,b	;volatile
  4875                           
  4876                           ; BSR set to: 63
  4877                           ;si.c: 117: SMT1CON0 = 0x88;
  4878  002FB8  0E88               	movlw	136
  4879  002FBA  6F1E               	movwf	30,b	;volatile
  4880                           
  4881                           ; BSR set to: 63
  4882                           ;si.c: 118: SMT1CON1 = 0x43;
  4883  002FBC  0E43               	movlw	67
  4884  002FBE  6F1F               	movwf	31,b	;volatile
  4885                           
  4886                           ; BSR set to: 63
  4887                           ;si.c: 119: SMT1CLK = 0x01;
  4888  002FC0  0E01               	movlw	1
  4889  002FC2  6F21               	movwf	33,b	;volatile
  4890                           
  4891                           ; BSR set to: 63
  4892                           ;si.c: 120: SMT1WIN = 0x00;
  4893  002FC4  0E00               	movlw	0
  4894  002FC6  6F23               	movwf	35,b	;volatile
  4895                           
  4896                           ; BSR set to: 63
  4897                           ;si.c: 121: SMT1SIG = 0x00;
  4898  002FC8  0E00               	movlw	0
  4899  002FCA  6F22               	movwf	34,b	;volatile
  4900                           
  4901                           ; BSR set to: 63
  4902                           ;si.c: 123: PIR1bits.SMT1PWAIF = 0;
  4903  002FCC  0139               	movlb	57	; () banked
  4904  002FCE  9FA1               	bcf	161,7,b	;volatile
  4905                           
  4906                           ; BSR set to: 57
  4907                           ;si.c: 124: IPR1bits.SMT1PWAIP = 1;
  4908  002FD0  8F81               	bsf	129,7,b	;volatile
  4909                           
  4910                           ; BSR set to: 57
  4911                           ;si.c: 125: PIE1bits.SMT1PWAIE = 1;
  4912  002FD2  8F91               	bsf	145,7,b	;volatile
  4913                           
  4914                           ; BSR set to: 57
  4915                           ;si.c: 126: SMT1CON1bits.GO = 1;
  4916  002FD4  013F               	movlb	63	; () banked
  4917  002FD6  8F1F               	bsf	31,7,b	;volatile
  4918                           
  4919                           ; BSR set to: 63
  4920  002FD8  0012               	return		;funcret
  4921  002FDA                     __end_of_SIInit:
  4922                           	opt callstack 0
  4923                           
  4924 ;; *************** function _SIConfigureCLC *****************
  4925 ;; Defined at:
  4926 ;;		line 129 in file "si.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;		None
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;		None
  4931 ;; Return value:  Size  Location     Type
  4932 ;;                  1    wreg      void 
  4933 ;; Registers used:
  4934 ;;		wreg, status,2
  4935 ;; Tracked objects:
  4936 ;;		On entry : 0/0
  4937 ;;		On exit  : 0/0
  4938 ;;		Unchanged: 0/0
  4939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4940 ;;      Params:         0       0       0       0       0       0       0       0       0
  4941 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4942 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4943 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4944 ;;Total ram usage:        0 bytes
  4945 ;; Hardware stack levels used:    1
  4946 ;; Hardware stack levels required when called:    2
  4947 ;; This function calls:
  4948 ;;		Nothing
  4949 ;; This function is called by:
  4950 ;;		_SIInit
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954                           	psect	text25
  4955  002C18                     __ptext25:
  4956                           	opt callstack 0
  4957  002C18                     _SIConfigureCLC:
  4958                           	opt callstack 27
  4959                           
  4960                           ;si.c: 130: T2CON = 0x00;
  4961                           
  4962                           ; BSR set to: 63
  4963                           ;incstack = 0
  4964  002C18  0E00               	movlw	0
  4965  002C1A  6EAC               	movwf	16300,c	;volatile
  4966                           
  4967                           ;si.c: 131: T2CLKCON = 0x01;
  4968  002C1C  0E01               	movlw	1
  4969  002C1E  6EAE               	movwf	16302,c	;volatile
  4970                           
  4971                           ;si.c: 132: T2HLT = 0x04;
  4972  002C20  0E04               	movlw	4
  4973  002C22  6EAD               	movwf	16301,c	;volatile
  4974                           
  4975                           ;si.c: 133: T2RST = 0x12;
  4976  002C24  0E12               	movlw	18
  4977  002C26  6EAF               	movwf	16303,c	;volatile
  4978                           
  4979                           ;si.c: 134: T2PR = 0x1F;
  4980  002C28  0E1F               	movlw	31
  4981  002C2A  6EAB               	movwf	16299,c	;volatile
  4982                           
  4983                           ;si.c: 135: T2TMR = 0x00;
  4984  002C2C  0E00               	movlw	0
  4985  002C2E  6EAA               	movwf	16298,c	;volatile
  4986                           
  4987                           ;si.c: 136: T2CON = 0x80;
  4988  002C30  0E80               	movlw	128
  4989  002C32  6EAC               	movwf	16300,c	;volatile
  4990                           
  4991                           ;si.c: 139: PWM5DCH = 0x0F;
  4992  002C34  0E0F               	movlw	15
  4993  002C36  6E6D               	movwf	16237,c	;volatile
  4994                           
  4995                           ;si.c: 140: PWM5DCL = 0x00;
  4996  002C38  0E00               	movlw	0
  4997  002C3A  6E6C               	movwf	16236,c	;volatile
  4998                           
  4999                           ;si.c: 141: PWM5CON = 0x80;
  5000  002C3C  0E80               	movlw	128
  5001  002C3E  6E6E               	movwf	16238,c	;volatile
  5002                           
  5003                           ;si.c: 143: CLC1POL = 0x00;
  5004  002C40  0E00               	movlw	0
  5005  002C42  013C               	movlb	60	; () banked
  5006  002C44  6F75               	movwf	117,b	;volatile
  5007                           
  5008                           ;si.c: 144: CLC1SEL0 = 0x18;
  5009  002C46  0E18               	movlw	24
  5010  002C48  6F76               	movwf	118,b	;volatile
  5011                           
  5012                           ;si.c: 145: CLC1SEL1 = 0x05;
  5013  002C4A  0E05               	movlw	5
  5014  002C4C  6F77               	movwf	119,b	;volatile
  5015                           
  5016                           ;si.c: 146: CLC1SEL2 = 0x00;
  5017  002C4E  0E00               	movlw	0
  5018  002C50  6F78               	movwf	120,b	;volatile
  5019                           
  5020                           ;si.c: 147: CLC1SEL3 = 0x00;
  5021  002C52  0E00               	movlw	0
  5022  002C54  6F79               	movwf	121,b	;volatile
  5023                           
  5024                           ;si.c: 148: CLC1GLS0 = 0x08;
  5025  002C56  0E08               	movlw	8
  5026  002C58  6F7A               	movwf	122,b	;volatile
  5027                           
  5028                           ;si.c: 149: CLC1GLS1 = 0x02;
  5029  002C5A  0E02               	movlw	2
  5030  002C5C  6F7B               	movwf	123,b	;volatile
  5031                           
  5032                           ;si.c: 150: CLC1GLS2 = 0x00;
  5033  002C5E  0E00               	movlw	0
  5034  002C60  6F7C               	movwf	124,b	;volatile
  5035                           
  5036                           ;si.c: 151: CLC1GLS3 = 0x00;
  5037  002C62  0E00               	movlw	0
  5038  002C64  6F7D               	movwf	125,b	;volatile
  5039                           
  5040                           ;si.c: 152: CLC1CON = 0x84;
  5041  002C66  0E84               	movlw	132
  5042  002C68  6F74               	movwf	116,b	;volatile
  5043                           
  5044                           ;si.c: 154: CLC2POL = 0x00;
  5045  002C6A  0E00               	movlw	0
  5046  002C6C  6F6B               	movwf	107,b	;volatile
  5047                           
  5048                           ;si.c: 155: CLC2SEL0 = 0x2C;
  5049  002C6E  0E2C               	movlw	44
  5050  002C70  6F6C               	movwf	108,b	;volatile
  5051                           
  5052                           ;si.c: 156: CLC2SEL1 = 0x05;
  5053  002C72  0E05               	movlw	5
  5054  002C74  6F6D               	movwf	109,b	;volatile
  5055                           
  5056                           ;si.c: 157: CLC2SEL2 = 0x00;
  5057  002C76  0E00               	movlw	0
  5058  002C78  6F6E               	movwf	110,b	;volatile
  5059                           
  5060                           ;si.c: 158: CLC2SEL3 = 0x00;
  5061  002C7A  0E00               	movlw	0
  5062  002C7C  6F6F               	movwf	111,b	;volatile
  5063                           
  5064                           ;si.c: 159: CLC2GLS0 = 0x08;
  5065  002C7E  0E08               	movlw	8
  5066  002C80  6F70               	movwf	112,b	;volatile
  5067                           
  5068                           ;si.c: 160: CLC2GLS1 = 0x01;
  5069  002C82  0E01               	movlw	1
  5070  002C84  6F71               	movwf	113,b	;volatile
  5071                           
  5072                           ;si.c: 161: CLC2GLS2 = 0x00;
  5073  002C86  0E00               	movlw	0
  5074  002C88  6F72               	movwf	114,b	;volatile
  5075                           
  5076                           ;si.c: 162: CLC2GLS3 = 0x00;
  5077  002C8A  0E00               	movlw	0
  5078  002C8C  6F73               	movwf	115,b	;volatile
  5079                           
  5080                           ;si.c: 163: CLC2CON = 0x84;
  5081  002C8E  0E84               	movlw	132
  5082  002C90  6F6A               	movwf	106,b	;volatile
  5083                           
  5084                           ;si.c: 165: CLC3POL = 0x00;
  5085  002C92  0E00               	movlw	0
  5086  002C94  6F61               	movwf	97,b	;volatile
  5087                           
  5088                           ;si.c: 166: CLC3SEL0 = 0x24;
  5089  002C96  0E24               	movlw	36
  5090  002C98  6F62               	movwf	98,b	;volatile
  5091                           
  5092                           ;si.c: 167: CLC3SEL1 = 0x18;
  5093  002C9A  0E18               	movlw	24
  5094  002C9C  6F63               	movwf	99,b	;volatile
  5095                           
  5096                           ;si.c: 168: CLC3SEL2 = 0x2B;
  5097  002C9E  0E2B               	movlw	43
  5098  002CA0  6F64               	movwf	100,b	;volatile
  5099                           
  5100                           ;si.c: 169: CLC3SEL3 = 0x2C;
  5101  002CA2  0E2C               	movlw	44
  5102  002CA4  6F65               	movwf	101,b	;volatile
  5103                           
  5104                           ;si.c: 170: CLC3GLS0 = 0x02;
  5105  002CA6  0E02               	movlw	2
  5106  002CA8  6F66               	movwf	102,b	;volatile
  5107                           
  5108                           ;si.c: 171: CLC3GLS1 = 0x04;
  5109  002CAA  0E04               	movlw	4
  5110  002CAC  6F67               	movwf	103,b	;volatile
  5111                           
  5112                           ;si.c: 172: CLC3GLS2 = 0x90;
  5113  002CAE  0E90               	movlw	144
  5114  002CB0  6F68               	movwf	104,b	;volatile
  5115                           
  5116                           ;si.c: 173: CLC3GLS3 = 0x60;
  5117  002CB2  0E60               	movlw	96
  5118  002CB4  6F69               	movwf	105,b	;volatile
  5119                           
  5120                           ;si.c: 174: CLC3CON = 0x82;
  5121  002CB6  0E82               	movlw	130
  5122  002CB8  6F60               	movwf	96,b	;volatile
  5123                           
  5124                           ;si.c: 176: CLC4POL = 0x04;
  5125  002CBA  0E04               	movlw	4
  5126  002CBC  6F57               	movwf	87,b	;volatile
  5127                           
  5128                           ;si.c: 177: CLC4SEL0 = 0x26;
  5129  002CBE  0E26               	movlw	38
  5130  002CC0  6F58               	movwf	88,b	;volatile
  5131                           
  5132                           ;si.c: 178: CLC4SEL1 = 0x2C;
  5133  002CC2  0E2C               	movlw	44
  5134  002CC4  6F59               	movwf	89,b	;volatile
  5135                           
  5136                           ;si.c: 179: CLC4SEL2 = 0x25;
  5137  002CC6  0E25               	movlw	37
  5138  002CC8  6F5A               	movwf	90,b	;volatile
  5139                           
  5140                           ;si.c: 180: CLC4SEL3 = 0x00;
  5141  002CCA  0E00               	movlw	0
  5142  002CCC  6F5B               	movwf	91,b	;volatile
  5143                           
  5144                           ;si.c: 181: CLC4GLS0 = 0x02;
  5145  002CCE  0E02               	movlw	2
  5146  002CD0  6F5C               	movwf	92,b	;volatile
  5147                           
  5148                           ;si.c: 182: CLC4GLS1 = 0x00;
  5149  002CD2  0E00               	movlw	0
  5150  002CD4  6F5D               	movwf	93,b	;volatile
  5151                           
  5152                           ;si.c: 183: CLC4GLS2 = 0x14;
  5153  002CD6  0E14               	movlw	20
  5154  002CD8  6F5E               	movwf	94,b	;volatile
  5155                           
  5156                           ;si.c: 184: CLC4GLS3 = 0x00;
  5157  002CDA  0E00               	movlw	0
  5158  002CDC  6F5F               	movwf	95,b	;volatile
  5159                           
  5160                           ;si.c: 185: CLC4CON = 0x83;
  5161  002CDE  0E83               	movlw	131
  5162  002CE0  6F56               	movwf	86,b	;volatile
  5163                           
  5164                           ;si.c: 187: SPI1CLK = 0x05;
  5165  002CE2  0E05               	movlw	5
  5166  002CE4  013D               	movlb	61	; () banked
  5167  002CE6  6F1C               	movwf	28,b	;volatile
  5168                           
  5169                           ;si.c: 188: SPI1BAUD = 0x00;
  5170  002CE8  0E00               	movlw	0
  5171  002CEA  6F19               	movwf	25,b	;volatile
  5172                           
  5173                           ;si.c: 189: SPI1CON1 = 0x00;
  5174  002CEC  0E00               	movlw	0
  5175  002CEE  6F15               	movwf	21,b	;volatile
  5176                           
  5177                           ;si.c: 190: SPI1CON2 = 0x02;
  5178  002CF0  0E02               	movlw	2
  5179  002CF2  6F16               	movwf	22,b	;volatile
  5180                           
  5181                           ;si.c: 191: SPI1CON0 = 0x82;
  5182  002CF4  0E82               	movlw	130
  5183  002CF6  6F14               	movwf	20,b	;volatile
  5184                           
  5185                           ; BSR set to: 61
  5186  002CF8  0012               	return		;funcret
  5187  002CFA                     __end_of_SIConfigureCLC:
  5188                           	opt callstack 0
  5189                           
  5190 ;; *************** function _SIGetCommand *****************
  5191 ;; Defined at:
  5192 ;;		line 257 in file "si.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;  msg             2    0[COMRAM] PTR unsigned char 
  5195 ;;		 -> main@cmd(36), 
  5196 ;; Auto vars:     Size  Location     Type
  5197 ;;  i               1    2[COMRAM] unsigned char 
  5198 ;; Return value:  Size  Location     Type
  5199 ;;                  1    wreg      unsigned char 
  5200 ;; Registers used:
  5201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5202 ;; Tracked objects:
  5203 ;;		On entry : 0/0
  5204 ;;		On exit  : 0/0
  5205 ;;		Unchanged: 0/0
  5206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5207 ;;      Params:         2       0       0       0       0       0       0       0       0
  5208 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5209 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5210 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5211 ;;Total ram usage:        3 bytes
  5212 ;; Hardware stack levels used:    1
  5213 ;; Hardware stack levels required when called:    2
  5214 ;; This function calls:
  5215 ;;		Nothing
  5216 ;; This function is called by:
  5217 ;;		_main
  5218 ;; This function uses a non-reentrant model
  5219 ;;
  5220                           
  5221                           	psect	text26
  5222  003366                     __ptext26:
  5223                           	opt callstack 0
  5224  003366                     _SIGetCommand:
  5225                           	opt callstack 28
  5226                           
  5227                           ;si.c: 258: uint8_t i;;si.c: 259: if (!SICMDReceived) {
  5228                           
  5229                           ; BSR set to: 61
  5230                           ;incstack = 0
  5231  003366  501E               	movf	_SICMDReceived,w,c
  5232  003368  A4D8               	btfss	status,2,c
  5233  00336A  D002               	goto	l3374
  5234                           
  5235                           ;si.c: 260: return 0;
  5236  00336C  0E00               	movlw	0
  5237  00336E  0012               	return	
  5238  003370                     l3374:
  5239                           
  5240                           ;si.c: 261: };si.c: 262: for (i = 0; i < SIByteCounter; i++) {
  5241  003370  0E00               	movlw	0
  5242  003372  6E2E               	movwf	SIGetCommand@i,c
  5243  003374  D010               	goto	l3380
  5244  003376                     l3376:
  5245                           
  5246                           ;si.c: 263: msg[i] = SIInputMessage[i];
  5247  003376  0E00               	movlw	low _SIInputMessage
  5248  003378  242E               	addwf	SIGetCommand@i,w,c
  5249  00337A  6ED9               	movwf	fsr2l,c
  5250  00337C  6ADA               	clrf	fsr2h,c
  5251  00337E  0E01               	movlw	high _SIInputMessage
  5252  003380  22DA               	addwfc	fsr2h,f,c
  5253  003382  502E               	movf	SIGetCommand@i,w,c
  5254  003384  242C               	addwf	SIGetCommand@msg,w,c
  5255  003386  6EE1               	movwf	fsr1l,c
  5256  003388  0E00               	movlw	0
  5257  00338A  202D               	addwfc	SIGetCommand@msg+1,w,c
  5258  00338C  6EE2               	movwf	fsr1h,c
  5259  00338E  006F FF7F FFE7     	movff	indf2,indf1
  5260  003394  2A2E               	incf	SIGetCommand@i,f,c
  5261  003396                     l3380:
  5262  003396  501F               	movf	_SIByteCounter,w,c
  5263  003398  5C2E               	subwf	SIGetCommand@i,w,c
  5264  00339A  A0D8               	btfss	status,0,c
  5265  00339C  D7EC               	goto	l3376
  5266                           
  5267                           ;si.c: 264: };si.c: 266: return SIByteCounter;
  5268  00339E  501F               	movf	_SIByteCounter,w,c
  5269  0033A0  0012               	return		;funcret
  5270  0033A2                     __end_of_SIGetCommand:
  5271                           	opt callstack 0
  5272                           
  5273 ;; *************** function _SIClear *****************
  5274 ;; Defined at:
  5275 ;;		line 283 in file "si.c"
  5276 ;; Parameters:    Size  Location     Type
  5277 ;;		None
  5278 ;; Auto vars:     Size  Location     Type
  5279 ;;		None
  5280 ;; Return value:  Size  Location     Type
  5281 ;;                  1    wreg      void 
  5282 ;; Registers used:
  5283 ;;		wreg, status,2
  5284 ;; Tracked objects:
  5285 ;;		On entry : 0/0
  5286 ;;		On exit  : 0/0
  5287 ;;		Unchanged: 0/0
  5288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5289 ;;      Params:         0       0       0       0       0       0       0       0       0
  5290 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5291 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5292 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5293 ;;Total ram usage:        0 bytes
  5294 ;; Hardware stack levels used:    1
  5295 ;; Hardware stack levels required when called:    2
  5296 ;; This function calls:
  5297 ;;		Nothing
  5298 ;; This function is called by:
  5299 ;;		_main
  5300 ;; This function uses a non-reentrant model
  5301 ;;
  5302                           
  5303                           	psect	text27
  5304  00353C                     __ptext27:
  5305                           	opt callstack 0
  5306  00353C                     _SIClear:
  5307                           	opt callstack 28
  5308                           
  5309                           ;si.c: 285: SIBitCounter = 0;
  5310                           
  5311                           ;incstack = 0
  5312  00353C  0E00               	movlw	0
  5313  00353E  6E20               	movwf	_SIBitCounter,c
  5314                           
  5315                           ;si.c: 286: SIByteCounter = 0;
  5316  003540  0E00               	movlw	0
  5317  003542  6E1F               	movwf	_SIByteCounter,c
  5318                           
  5319                           ;si.c: 287: SICMDReceived = 0;
  5320  003544  0E00               	movlw	0
  5321  003546  6E1E               	movwf	_SICMDReceived,c
  5322                           
  5323                           ;si.c: 288: SITempByte = 0x00;
  5324  003548  0E00               	movlw	0
  5325  00354A  6E1D               	movwf	_SITempByte,c
  5326  00354C  0012               	return		;funcret
  5327  00354E                     __end_of_SIClear:
  5328                           	opt callstack 0
  5329                           
  5330 ;; *************** function _ADCInit *****************
  5331 ;; Defined at:
  5332 ;;		line 41 in file "adc.c"
  5333 ;; Parameters:    Size  Location     Type
  5334 ;;  sxCh            1    wreg     unsigned char 
  5335 ;;  syCh            1    0[COMRAM] unsigned char 
  5336 ;;  cxCh            1    1[COMRAM] unsigned char 
  5337 ;;  cyCh            1    2[COMRAM] unsigned char 
  5338 ;; Auto vars:     Size  Location     Type
  5339 ;;  sxCh            1    7[COMRAM] unsigned char 
  5340 ;;  i               1    8[COMRAM] unsigned char 
  5341 ;; Return value:  Size  Location     Type
  5342 ;;                  1    wreg      void 
  5343 ;; Registers used:
  5344 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 0/0
  5348 ;;		Unchanged: 0/0
  5349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5350 ;;      Params:         3       0       0       0       0       0       0       0       0
  5351 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5352 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5353 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5354 ;;Total ram usage:        9 bytes
  5355 ;; Hardware stack levels used:    1
  5356 ;; Hardware stack levels required when called:    2
  5357 ;; This function calls:
  5358 ;;		Nothing
  5359 ;; This function is called by:
  5360 ;;		_main
  5361 ;; This function uses a non-reentrant model
  5362 ;;
  5363                           
  5364                           	psect	text28
  5365  002720                     __ptext28:
  5366                           	opt callstack 0
  5367  002720                     _ADCInit:
  5368                           	opt callstack 28
  5369                           
  5370                           ;incstack = 0
  5371                           ;ADCInit@sxCh stored from wreg
  5372  002720  6E33               	movwf	ADCInit@sxCh,c
  5373                           
  5374                           ;adc.c: 42: uint8_t i;;adc.c: 45: ADCON0 = 0x80;
  5375  002722  0E80               	movlw	128
  5376  002724  013E               	movlb	62	; () banked
  5377  002726  6FF8               	movwf	248,b	;volatile
  5378                           
  5379                           ;adc.c: 47: ADCON1 = 0x00;
  5380  002728  0E00               	movlw	0
  5381  00272A  6FF9               	movwf	249,b	;volatile
  5382                           
  5383                           ;adc.c: 48: ADCON2 = 0x03;
  5384  00272C  0E03               	movlw	3
  5385  00272E  6FFA               	movwf	250,b	;volatile
  5386                           
  5387                           ; BSR set to: 62
  5388                           ;adc.c: 49: ADCON2bits.CRS = 6;
  5389  002730  51FA               	movf	250,w,b	;volatile
  5390  002732  0B8F               	andlw	-113
  5391  002734  0960               	iorlw	96
  5392  002736  6FFA               	movwf	250,b	;volatile
  5393                           
  5394                           ; BSR set to: 62
  5395                           ;adc.c: 50: ADCON3 = 0x07;
  5396  002738  0E07               	movlw	7
  5397  00273A  6FFB               	movwf	251,b	;volatile
  5398                           
  5399                           ; BSR set to: 62
  5400                           ;adc.c: 51: ADCLK = 0x3F;
  5401  00273C  0E3F               	movlw	63
  5402  00273E  6FFF               	movwf	255,b	;volatile
  5403                           
  5404                           ; BSR set to: 62
  5405                           ;adc.c: 52: ADREF = 0x00;
  5406  002740  0E00               	movlw	0
  5407  002742  6FFD               	movwf	253,b	;volatile
  5408                           
  5409                           ; BSR set to: 62
  5410                           ;adc.c: 53: ADACQL = 0xFF;
  5411  002744  69F3               	setf	243,b	;volatile
  5412                           
  5413                           ; BSR set to: 62
  5414                           ;adc.c: 55: ADRPT = 4;
  5415  002746  0E04               	movlw	4
  5416  002748  6FEC               	movwf	236,b	;volatile
  5417                           
  5418                           ; BSR set to: 62
  5419                           ;adc.c: 56: ADACT = 0x1D;
  5420  00274A  0E1D               	movlw	29
  5421  00274C  6FFE               	movwf	254,b	;volatile
  5422                           
  5423                           ; BSR set to: 62
  5424                           ;adc.c: 59: ADCPbits.CPON = 1;
  5425  00274E  8FD7               	bsf	215,7,b	;volatile
  5426  002750                     l560:
  5427                           
  5428                           ; BSR set to: 62
  5429  002750  A1D7               	btfss	215,0,b	;volatile
  5430  002752  D7FE               	goto	l560
  5431                           
  5432                           ; BSR set to: 62
  5433                           ;adc.c: 62: ADCChannels[0] = sxCh;
  5434  002754  0060  F0CC  F057   	movff	ADCInit@sxCh,_ADCChannels
  5435                           
  5436                           ;adc.c: 63: ADCChannels[1] = syCh;
  5437  00275A  0060  F0B0  F058   	movff	ADCInit@syCh,_ADCChannels+1
  5438                           
  5439                           ;adc.c: 64: ADCChannels[2] = cxCh;
  5440  002760  0060  F0B4  F059   	movff	ADCInit@cxCh,_ADCChannels+2
  5441                           
  5442                           ;adc.c: 65: ADCChannels[3] = cyCh;
  5443  002766  0060  F0B8  F05A   	movff	ADCInit@cyCh,_ADCChannels+3
  5444                           
  5445                           ;adc.c: 68: ADTIF = 0;
  5446  00276C  0139               	movlb	57	; () banked
  5447  00276E  97A1               	bcf	161,3,b	;volatile
  5448                           
  5449                           ; BSR set to: 57
  5450                           ;adc.c: 69: for (i = 0; i < 6; i++) {
  5451  002770  0E00               	movlw	0
  5452  002772  6E34               	movwf	ADCInit@i,c
  5453  002774                     l2944:
  5454                           
  5455                           ; BSR set to: 57
  5456                           ;adc.c: 70: ADPCH = ADCChannels[i];
  5457  002774  0E57               	movlw	low _ADCChannels
  5458  002776  2434               	addwf	ADCInit@i,w,c
  5459  002778  6ED9               	movwf	fsr2l,c
  5460  00277A  6ADA               	clrf	fsr2h,c
  5461  00277C  0E00               	movlw	high _ADCChannels
  5462  00277E  22DA               	addwfc	fsr2h,f,c
  5463  002780  50DF               	movf	indf2,w,c
  5464  002782  013E               	movlb	62	; () banked
  5465  002784  6FF1               	movwf	241,b	;volatile
  5466  002786                     l565:
  5467  002786  0139               	movlb	57	; () banked
  5468  002788  A7A1               	btfss	161,3,b	;volatile
  5469  00278A  D7FD               	goto	l565
  5470                           
  5471                           ; BSR set to: 57
  5472                           ;adc.c: 72: ADTIF = 0;
  5473  00278C  97A1               	bcf	161,3,b	;volatile
  5474                           
  5475                           ; BSR set to: 57
  5476                           ;adc.c: 73: ADCValues[i] = ADFLTRL;
  5477  00278E  0E51               	movlw	low _ADCValues
  5478  002790  2434               	addwf	ADCInit@i,w,c
  5479  002792  6ED9               	movwf	fsr2l,c
  5480  002794  6ADA               	clrf	fsr2h,c
  5481  002796  0E00               	movlw	high _ADCValues
  5482  002798  22DA               	addwfc	fsr2h,f,c
  5483  00279A  006F FB9B FFDF     	movff	16102,indf2	;volatile
  5484                           
  5485                           ; BSR set to: 57
  5486  0027A0  2A34               	incf	ADCInit@i,f,c
  5487                           
  5488                           ; BSR set to: 57
  5489  0027A2  0E05               	movlw	5
  5490  0027A4  6434               	cpfsgt	ADCInit@i,c
  5491  0027A6  D7E6               	goto	l2944
  5492                           
  5493                           ; BSR set to: 57
  5494  0027A8  0139               	banksel	14831	;# 
  5495  0027AA  0E55               	movlw	85	;# 
  5496  0027AC  6FEF               	movwf	14831,b	;# 
  5497  0027AE  0EAA               	movlw	170	;# 
  5498  0027B0  6FEF               	movwf	14831,b	;# 
  5499  0027B2  81EF               	bsf	14831,0,b	;# 
  5500                           
  5501                           ;adc.c: 85: DMA1SSAU = ((uint32_t)ADCChannels >> 16) & 0xFF;
  5502  0027B4  0E57               	movlw	low _ADCChannels
  5503  0027B6  6E2F               	movwf	??_ADCInit& (0+255),c
  5504  0027B8  0E00               	movlw	high _ADCChannels
  5505  0027BA  6E30               	movwf	(??_ADCInit+1)& (0+255),c
  5506  0027BC  6A31               	clrf	(??_ADCInit+2)& (0+255),c
  5507  0027BE  6A32               	clrf	(??_ADCInit+3)& (0+255),c
  5508  0027C0  0E11               	movlw	17
  5509  0027C2  D005               	goto	u1810
  5510  0027C4                     u1815:
  5511  0027C4  90D8               	bcf	status,0,c
  5512  0027C6  3232               	rrcf	??_ADCInit+3,f,c
  5513  0027C8  3231               	rrcf	??_ADCInit+2,f,c
  5514  0027CA  3230               	rrcf	??_ADCInit+1,f,c
  5515  0027CC  322F               	rrcf	??_ADCInit,f,c
  5516  0027CE                     u1810:
  5517  0027CE  2EE8               	decfsz	wreg,f,c
  5518  0027D0  D7F9               	goto	u1815
  5519  0027D2  502F               	movf	??_ADCInit,w,c
  5520  0027D4  013B               	movlb	59	; () banked
  5521  0027D6  6FFB               	movwf	251,b	;volatile
  5522                           
  5523                           ;adc.c: 86: DMA1SSAH = ((uint32_t)ADCChannels >> 8) & 0xFF;
  5524  0027D8  0E57               	movlw	low _ADCChannels
  5525  0027DA  6E2F               	movwf	??_ADCInit& (0+255),c
  5526  0027DC  0E00               	movlw	high _ADCChannels
  5527  0027DE  6E30               	movwf	(??_ADCInit+1)& (0+255),c
  5528  0027E0  6A31               	clrf	(??_ADCInit+2)& (0+255),c
  5529  0027E2  6A32               	clrf	(??_ADCInit+3)& (0+255),c
  5530  0027E4  0060  F0C0  F02F   	movff	??_ADCInit+1,??_ADCInit
  5531  0027EA  0060  F0C4  F030   	movff	??_ADCInit+2,??_ADCInit+1
  5532  0027F0  0060  F0C8  F031   	movff	??_ADCInit+3,??_ADCInit+2
  5533  0027F6  6A32               	clrf	??_ADCInit+3,c
  5534  0027F8  502F               	movf	??_ADCInit,w,c
  5535  0027FA  6FFA               	movwf	250,b	;volatile
  5536                           
  5537                           ; BSR set to: 59
  5538                           ;adc.c: 87: DMA1SSAL = ((uint32_t)ADCChannels) & 0xFF;
  5539  0027FC  0E57               	movlw	low (low _ADCChannels)
  5540  0027FE  6FF9               	movwf	249,b	;volatile
  5541                           
  5542                           ; BSR set to: 59
  5543                           ;adc.c: 88: DMA1DSAH = ((uint32_t)&ADPCH >> 8) & 0xFF;
  5544  002800  0EF1               	movlw	241
  5545  002802  6E2F               	movwf	??_ADCInit& (0+255),c
  5546  002804  0E3E               	movlw	62
  5547  002806  6E30               	movwf	(??_ADCInit+1)& (0+255),c
  5548  002808  6A31               	clrf	(??_ADCInit+2)& (0+255),c
  5549  00280A  6A32               	clrf	(??_ADCInit+3)& (0+255),c
  5550  00280C  0060  F0C0  F02F   	movff	??_ADCInit+1,??_ADCInit
  5551  002812  0060  F0C4  F030   	movff	??_ADCInit+2,??_ADCInit+1
  5552  002818  0060  F0C8  F031   	movff	??_ADCInit+3,??_ADCInit+2
  5553  00281E  6A32               	clrf	??_ADCInit+3,c
  5554  002820  502F               	movf	??_ADCInit,w,c
  5555  002822  6FF1               	movwf	241,b	;volatile
  5556                           
  5557                           ;adc.c: 89: DMA1DSAL = ((uint32_t)&ADPCH) & 0xFF;
  5558  002824  0EF1               	movlw	241
  5559  002826  6FF0               	movwf	240,b	;volatile
  5560                           
  5561                           ;adc.c: 90: DMA1SSZH = 0x00;
  5562  002828  0E00               	movlw	0
  5563  00282A  6FF8               	movwf	248,b	;volatile
  5564                           
  5565                           ;adc.c: 91: DMA1SSZL = 6;
  5566  00282C  0E06               	movlw	6
  5567  00282E  6FF7               	movwf	247,b	;volatile
  5568                           
  5569                           ;adc.c: 92: DMA1DSZH = 0x00;
  5570  002830  0E00               	movlw	0
  5571  002832  6FEF               	movwf	239,b	;volatile
  5572                           
  5573                           ;adc.c: 93: DMA1DSZL = 0x01;
  5574  002834  0E01               	movlw	1
  5575  002836  6FEE               	movwf	238,b	;volatile
  5576                           
  5577                           ;adc.c: 94: DMA1SIRQ = 42;
  5578  002838  0E2A               	movlw	42
  5579  00283A  6FFF               	movwf	255,b	;volatile
  5580                           
  5581                           ;adc.c: 95: DMA1CON1bits.DMODE = 0b00;
  5582  00283C  0E3F               	movlw	-193
  5583  00283E  17FD               	andwf	253,f,b	;volatile
  5584                           
  5585                           ; BSR set to: 59
  5586                           ;adc.c: 96: DMA1CON1bits.DSTP = 0;
  5587  002840  9BFD               	bcf	253,5,b	;volatile
  5588                           
  5589                           ;adc.c: 97: DMA1CON1bits.SMR = 0b00;
  5590  002842  0EE7               	movlw	-25
  5591  002844  17FD               	andwf	253,f,b	;volatile
  5592                           
  5593                           ;adc.c: 98: DMA1CON1bits.SMODE = 0b01;
  5594  002846  51FD               	movf	253,w,b	;volatile
  5595  002848  0BF9               	andlw	-7
  5596  00284A  0902               	iorlw	2
  5597  00284C  6FFD               	movwf	253,b	;volatile
  5598                           
  5599                           ; BSR set to: 59
  5600                           ;adc.c: 99: DMA1CON1bits.SSTP = 0;
  5601  00284E  91FD               	bcf	253,0,b	;volatile
  5602                           
  5603                           ;adc.c: 100: DMA1CON0 = 0xC0;
  5604  002850  0EC0               	movlw	192
  5605  002852  6FFC               	movwf	252,b	;volatile
  5606                           
  5607                           ;adc.c: 103: DMA2SSAU = 0;
  5608  002854  0E00               	movlw	0
  5609  002856  6FDB               	movwf	219,b	;volatile
  5610                           
  5611                           ; BSR set to: 59
  5612                           ;adc.c: 104: DMA2SSAH = ((uint32_t)&ADFLTRL >> 8) & 0xFF;
  5613  002858  0EE6               	movlw	230
  5614  00285A  6E2F               	movwf	??_ADCInit& (0+255),c
  5615  00285C  0E3E               	movlw	62
  5616  00285E  6E30               	movwf	(??_ADCInit+1)& (0+255),c
  5617  002860  6A31               	clrf	(??_ADCInit+2)& (0+255),c
  5618  002862  6A32               	clrf	(??_ADCInit+3)& (0+255),c
  5619  002864  0060  F0C0  F02F   	movff	??_ADCInit+1,??_ADCInit
  5620  00286A  0060  F0C4  F030   	movff	??_ADCInit+2,??_ADCInit+1
  5621  002870  0060  F0C8  F031   	movff	??_ADCInit+3,??_ADCInit+2
  5622  002876  6A32               	clrf	??_ADCInit+3,c
  5623  002878  502F               	movf	??_ADCInit,w,c
  5624  00287A  6FDA               	movwf	218,b	;volatile
  5625                           
  5626                           ; BSR set to: 59
  5627                           ;adc.c: 105: DMA2SSAL = ((uint32_t)&ADFLTRL) & 0xFF;
  5628  00287C  0EE6               	movlw	230
  5629  00287E  6FD9               	movwf	217,b	;volatile
  5630                           
  5631                           ;adc.c: 106: DMA2DSAH = ((uint32_t)ADCValues >> 8) & 0xFF;
  5632  002880  0E51               	movlw	low _ADCValues
  5633  002882  6E2F               	movwf	??_ADCInit& (0+255),c
  5634  002884  0E00               	movlw	high _ADCValues
  5635  002886  6E30               	movwf	(??_ADCInit+1)& (0+255),c
  5636  002888  6A31               	clrf	(??_ADCInit+2)& (0+255),c
  5637  00288A  6A32               	clrf	(??_ADCInit+3)& (0+255),c
  5638  00288C  0060  F0C0  F02F   	movff	??_ADCInit+1,??_ADCInit
  5639  002892  0060  F0C4  F030   	movff	??_ADCInit+2,??_ADCInit+1
  5640  002898  0060  F0C8  F031   	movff	??_ADCInit+3,??_ADCInit+2
  5641  00289E  6A32               	clrf	??_ADCInit+3,c
  5642  0028A0  502F               	movf	??_ADCInit,w,c
  5643  0028A2  6FD1               	movwf	209,b	;volatile
  5644                           
  5645                           ; BSR set to: 59
  5646                           ;adc.c: 107: DMA2DSAL = ((uint32_t)ADCValues) & 0xFF;
  5647  0028A4  0E51               	movlw	low (low _ADCValues)
  5648  0028A6  6FD0               	movwf	208,b	;volatile
  5649                           
  5650                           ; BSR set to: 59
  5651                           ;adc.c: 108: DMA2SSZH = 0x00;
  5652  0028A8  0E00               	movlw	0
  5653  0028AA  6FD8               	movwf	216,b	;volatile
  5654                           
  5655                           ; BSR set to: 59
  5656                           ;adc.c: 109: DMA2SSZL = 0x01;
  5657  0028AC  0E01               	movlw	1
  5658  0028AE  6FD7               	movwf	215,b	;volatile
  5659                           
  5660                           ; BSR set to: 59
  5661                           ;adc.c: 110: DMA2DSZH = 0x00;
  5662  0028B0  0E00               	movlw	0
  5663  0028B2  6FCF               	movwf	207,b	;volatile
  5664                           
  5665                           ; BSR set to: 59
  5666                           ;adc.c: 111: DMA2DSZL = 6;
  5667  0028B4  0E06               	movlw	6
  5668  0028B6  6FCE               	movwf	206,b	;volatile
  5669                           
  5670                           ; BSR set to: 59
  5671                           ;adc.c: 112: DMA2SIRQ = 11;
  5672  0028B8  0E0B               	movlw	11
  5673  0028BA  6FDF               	movwf	223,b	;volatile
  5674                           
  5675                           ; BSR set to: 59
  5676                           ;adc.c: 113: DMA2CON1bits.DMODE = 0b01;
  5677  0028BC  51DD               	movf	221,w,b	;volatile
  5678  0028BE  0B3F               	andlw	-193
  5679  0028C0  0940               	iorlw	64
  5680  0028C2  6FDD               	movwf	221,b	;volatile
  5681                           
  5682                           ; BSR set to: 59
  5683                           ;adc.c: 114: DMA2CON1bits.DSTP = 0;
  5684  0028C4  9BDD               	bcf	221,5,b	;volatile
  5685                           
  5686                           ; BSR set to: 59
  5687                           ;adc.c: 115: DMA2CON1bits.SMR = 0b00;
  5688  0028C6  0EE7               	movlw	-25
  5689  0028C8  17DD               	andwf	221,f,b	;volatile
  5690                           
  5691                           ; BSR set to: 59
  5692                           ;adc.c: 116: DMA2CON1bits.SMODE = 0b00;
  5693  0028CA  0EF9               	movlw	-7
  5694  0028CC  17DD               	andwf	221,f,b	;volatile
  5695                           
  5696                           ; BSR set to: 59
  5697                           ;adc.c: 117: DMA2CON1bits.SSTP = 0;
  5698  0028CE  91DD               	bcf	221,0,b	;volatile
  5699                           
  5700                           ; BSR set to: 59
  5701                           ;adc.c: 118: DMA2CON0 = 0xC0;
  5702  0028D0  0EC0               	movlw	192
  5703  0028D2  6FDC               	movwf	220,b	;volatile
  5704                           
  5705                           ; BSR set to: 59
  5706                           ;adc.c: 120: DMA1CON0bits.DGO = 1;
  5707  0028D4  8BFC               	bsf	252,5,b	;volatile
  5708                           
  5709                           ; BSR set to: 59
  5710  0028D6  0012               	return		;funcret
  5711  0028D8                     __end_of_ADCInit:
  5712                           	opt callstack 0
  5713                           
  5714 ;; *************** function _hi_int *****************
  5715 ;; Defined at:
  5716 ;;		line 38 in file "si.c"
  5717 ;; Parameters:    Size  Location     Type
  5718 ;;		None
  5719 ;; Auto vars:     Size  Location     Type
  5720 ;;		None
  5721 ;; Return value:  Size  Location     Type
  5722 ;;                  1    wreg      void 
  5723 ;; Registers used:
  5724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5725 ;; Tracked objects:
  5726 ;;		On entry : 0/0
  5727 ;;		On exit  : 0/0
  5728 ;;		Unchanged: 0/0
  5729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5730 ;;      Params:         0       0       0       0       0       0       0       0       0
  5731 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5732 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5733 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5734 ;;Total ram usage:        0 bytes
  5735 ;; Hardware stack levels used:    1
  5736 ;; Hardware stack levels required when called:    1
  5737 ;; This function calls:
  5738 ;;		i2_SIClear
  5739 ;; This function is called by:
  5740 ;;		Interrupt level 2
  5741 ;; This function uses a non-reentrant model
  5742 ;;
  5743                           
  5744                           	psect	text29
  5745  003158                     __ptext29:
  5746                           	opt callstack 0
  5747  003158                     _hi_int:
  5748                           	opt callstack 25
  5749                           
  5750                           ;si.c: 40: if (SMT1PWAIE && SMT1PWAIF)
  5751                           
  5752                           ; BSR set to: 59
  5753                           ;incstack = 0
  5754  003158  0139               	movlb	57	; () banked
  5755  00315A  BF91               	btfsc	145,7,b	;volatile
  5756                           
  5757                           ; BSR set to: 57
  5758  00315C  AFA1               	btfss	161,7,b	;volatile
  5759  00315E  D023               	goto	i2l3840
  5760                           
  5761                           ; BSR set to: 57
  5762                           ;si.c: 41: {;si.c: 42: SMT1PWAIF = 0;
  5763  003160  9FA1               	bcf	161,7,b	;volatile
  5764                           
  5765                           ; BSR set to: 57
  5766                           ;si.c: 44: SITempByte <<= 1;
  5767  003162  90D8               	bcf	status,0,c
  5768  003164  361D               	rlcf	_SITempByte,f,c
  5769                           
  5770                           ;si.c: 45: SITempByte |= (SMT1CPWL < 128) ? 1U : 0U;
  5771  003166  0E7F               	movlw	127
  5772  003168  013F               	movlb	63	; () banked
  5773  00316A  6518               	cpfsgt	24,b	;volatile
  5774  00316C  D001               	goto	i2u306_41
  5775  00316E  D002               	goto	i2u306_40
  5776  003170                     i2u306_41:
  5777  003170  0E01               	movlw	1
  5778  003172  D001               	goto	i2u307_40
  5779  003174                     i2u306_40:
  5780  003174  0E00               	movlw	0
  5781  003176                     i2u307_40:
  5782  003176  121D               	iorwf	_SITempByte,f,c
  5783                           
  5784                           ; BSR set to: 63
  5785                           ;si.c: 48: SICMDReceived = 0;
  5786  003178  0E00               	movlw	0
  5787  00317A  6E1E               	movwf	_SICMDReceived,c
  5788                           
  5789                           ; BSR set to: 63
  5790                           ;si.c: 49: T6TMR = 0;
  5791  00317C  0E00               	movlw	0
  5792  00317E  6E92               	movwf	16274,c	;volatile
  5793                           
  5794                           ; BSR set to: 63
  5795                           ;si.c: 52: ++SIBitCounter;
  5796  003180  2A20               	incf	_SIBitCounter,f,c
  5797                           
  5798                           ; BSR set to: 63
  5799                           ;si.c: 53: if (SIBitCounter == 8) {
  5800  003182  0E08               	movlw	8
  5801  003184  1820               	xorwf	_SIBitCounter,w,c
  5802  003186  A4D8               	btfss	status,2,c
  5803  003188  D00E               	goto	i2l3840
  5804                           
  5805                           ; BSR set to: 63
  5806                           ;si.c: 54: SIInputMessage[SIByteCounter] = SITempByte;
  5807  00318A  0E00               	movlw	low _SIInputMessage
  5808  00318C  241F               	addwf	_SIByteCounter,w,c
  5809  00318E  6ED9               	movwf	fsr2l,c
  5810  003190  6ADA               	clrf	fsr2h,c
  5811  003192  0E01               	movlw	high _SIInputMessage
  5812  003194  22DA               	addwfc	fsr2h,f,c
  5813  003196  0060  F077  FFDF   	movff	_SITempByte,indf2
  5814                           
  5815                           ; BSR set to: 63
  5816                           ;si.c: 55: SITempByte = 0x00;
  5817  00319C  0E00               	movlw	0
  5818  00319E  6E1D               	movwf	_SITempByte,c
  5819                           
  5820                           ; BSR set to: 63
  5821                           ;si.c: 56: SIBitCounter = 0;
  5822  0031A0  0E00               	movlw	0
  5823  0031A2  6E20               	movwf	_SIBitCounter,c
  5824                           
  5825                           ; BSR set to: 63
  5826                           ;si.c: 57: ++SIByteCounter;
  5827  0031A4  2A1F               	incf	_SIByteCounter,f,c
  5828  0031A6                     i2l3840:
  5829                           
  5830                           ;si.c: 58: };si.c: 63: };si.c: 65: if (PIR9bits.TMR6IF) {
  5831  0031A6  0139               	movlb	57	; () banked
  5832  0031A8  A1A9               	btfss	169,0,b	;volatile
  5833  0031AA  0011               	retfie		f
  5834                           
  5835                           ; BSR set to: 57
  5836                           ;si.c: 66: if (SIByteCounter) {
  5837  0031AC  501F               	movf	_SIByteCounter,w,c
  5838  0031AE  B4D8               	btfsc	status,2,c
  5839  0031B0  D003               	goto	i2l3846
  5840                           
  5841                           ; BSR set to: 57
  5842                           ;si.c: 67: SICMDReceived = 1;
  5843  0031B2  0E01               	movlw	1
  5844  0031B4  6E1E               	movwf	_SICMDReceived,c
  5845                           
  5846                           ;si.c: 68: } else {
  5847  0031B6  D002               	goto	i2l3848
  5848  0031B8                     i2l3846:
  5849                           
  5850                           ; BSR set to: 57
  5851                           ;si.c: 69: SIClear();
  5852  0031B8  ECA7  F01A         	call	i2_SIClear	;wreg free
  5853  0031BC                     i2l3848:
  5854                           
  5855                           ;si.c: 70: };si.c: 71: PIR9bits.TMR6IF = 0;
  5856  0031BC  0139               	movlb	57	; () banked
  5857  0031BE  91A9               	bcf	169,0,b	;volatile
  5858                           
  5859                           ; BSR set to: 57
  5860  0031C0  0011               	retfie		f
  5861  0031C2                     __end_of_hi_int:
  5862                           	opt callstack 0
  5863                           
  5864 ;; *************** function i2_SIClear *****************
  5865 ;; Defined at:
  5866 ;;		line 283 in file "si.c"
  5867 ;; Parameters:    Size  Location     Type
  5868 ;;		None
  5869 ;; Auto vars:     Size  Location     Type
  5870 ;;		None
  5871 ;; Return value:  Size  Location     Type
  5872 ;;                  1    wreg      void 
  5873 ;; Registers used:
  5874 ;;		wreg, status,2
  5875 ;; Tracked objects:
  5876 ;;		On entry : 0/0
  5877 ;;		On exit  : 0/0
  5878 ;;		Unchanged: 0/0
  5879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5880 ;;      Params:         0       0       0       0       0       0       0       0       0
  5881 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5882 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5883 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5884 ;;Total ram usage:        0 bytes
  5885 ;; Hardware stack levels used:    1
  5886 ;; This function calls:
  5887 ;;		Nothing
  5888 ;; This function is called by:
  5889 ;;		_hi_int
  5890 ;; This function uses a non-reentrant model
  5891 ;;
  5892                           
  5893                           	psect	text30
  5894  00354E                     __ptext30:
  5895                           	opt callstack 0
  5896  00354E                     i2_SIClear:
  5897                           	opt callstack 25
  5898                           
  5899                           ;si.c: 285: SIBitCounter = 0;
  5900                           
  5901                           ; BSR set to: 57
  5902                           ;incstack = 0
  5903  00354E  0E00               	movlw	0
  5904  003550  6E20               	movwf	_SIBitCounter,c
  5905                           
  5906                           ;si.c: 286: SIByteCounter = 0;
  5907  003552  0E00               	movlw	0
  5908  003554  6E1F               	movwf	_SIByteCounter,c
  5909                           
  5910                           ;si.c: 287: SICMDReceived = 0;
  5911  003556  0E00               	movlw	0
  5912  003558  6E1E               	movwf	_SICMDReceived,c
  5913                           
  5914                           ;si.c: 288: SITempByte = 0x00;
  5915  00355A  0E00               	movlw	0
  5916  00355C  6E1D               	movwf	_SITempByte,c
  5917  00355E  0012               	return		;funcret
  5918  003560                     __end_ofi2_SIClear:
  5919                           	opt callstack 0
  5920                           
  5921                           ;
  5922                           ; Interrupt Vector Table @ 0x200C
  5923                           ;
  5924                           
  5925                           	psect	ivt0x200C
  5926  00200C                     __pivt0x200C:
  5927                           	opt callstack 0
  5928  00200C                     ivt0x200C_base:
  5929                           	opt callstack 0
  5930                           
  5931                           ; high-priority vector
  5932  00200C  EFAC  F018         	goto	_hi_int
  5933  00201C                     	org	16
  5934                           
  5935                           ; low-priority vector
  5936  00201C  00FF               	reset	
  5937  0000                     
  5938                           	psect	rparam
  5939  0000                     tosu	equ	0x3FFF
  5940                           tosh	equ	0x3FFE
  5941                           tosl	equ	0x3FFD
  5942                           stkptr	equ	0x3FFC
  5943                           pclatu	equ	0x3FFB
  5944                           pclath	equ	0x3FFA
  5945                           pcl	equ	0x3FF9
  5946                           tblptru	equ	0x3FF8
  5947                           tblptrh	equ	0x3FF7
  5948                           tblptrl	equ	0x3FF6
  5949                           tablat	equ	0x3FF5
  5950                           prodh	equ	0x3FF4
  5951                           prodl	equ	0x3FF3
  5952                           indf0	equ	0x3FEF
  5953                           postinc0	equ	0x3FEE
  5954                           postdec0	equ	0x3FED
  5955                           preinc0	equ	0x3FEC
  5956                           plusw0	equ	0x3FEB
  5957                           fsr0h	equ	0x3FEA
  5958                           fsr0l	equ	0x3FE9
  5959                           wreg	equ	0x3FE8
  5960                           indf1	equ	0x3FE7
  5961                           postinc1	equ	0x3FE6
  5962                           postdec1	equ	0x3FE5
  5963                           preinc1	equ	0x3FE4
  5964                           plusw1	equ	0x3FE3
  5965                           fsr1h	equ	0x3FE2
  5966                           fsr1l	equ	0x3FE1
  5967                           bsr	equ	0x3FE0
  5968                           indf2	equ	0x3FDF
  5969                           postinc2	equ	0x3FDE
  5970                           postdec2	equ	0x3FDD
  5971                           preinc2	equ	0x3FDC
  5972                           plusw2	equ	0x3FDB
  5973                           fsr2h	equ	0x3FDA
  5974                           fsr2l	equ	0x3FD9
  5975                           status	equ	0x3FD8


Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         1157
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     37      92
    BANK0           160     86     140
    BANK1           256      0      36
    BANK2           256      0     256
    BANK3           256      0     256
    BANK4           256      0     256
    BANK5           256      0     256
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(2) Largest target is 24
		 -> buttonsMapByte1(BANK0[15]), buttonsMapByte0(BANK0[15]), config(BANK0[24]), 

    memset@p	PTR unsigned char  size(2) Largest target is 24
		 -> buttonsMapByte1(BANK0[15]), buttonsMapByte0(BANK0[15]), config(BANK0[24]), 

    buttonsBuildLUT@LUT	PTR unsigned char  size(2) Largest target is 256
		 -> LUT_CY(BANK3[256]), LUT_CX(BANK2[256]), LUT_SY(BANK5[256]), LUT_SX(BANK4[256]), 

    buttonsSetMapByte1@map	PTR unsigned char  size(2) Largest target is 36
		 -> main@cmd(BANK0[36]), 

    buttonsSetMapByte0@map	PTR unsigned char  size(2) Largest target is 36
		 -> main@cmd(BANK0[36]), 

    SIGetCommand@msg	PTR unsigned char  size(2) Largest target is 36
		 -> main@cmd(BANK0[36]), 

    SISendMessage@msg	PTR unsigned char  size(2) Largest target is 36
		 -> buttonsMessage(COMRAM[10]), main@msgAnswer(BANK0[36]), 

    configFlashAll@data	PTR unsigned char  size(2) Largest target is 24
		 -> config(BANK0[24]), 

    sp__memset	PTR void  size(2) Largest target is 24
		 -> buttonsMapByte1(BANK0[15]), buttonsMapByte0(BANK0[15]), config(BANK0[24]), 

    configInit@data	PTR unsigned char  size(2) Largest target is 24
		 -> config(BANK0[24]), 

    sp__buttonsGetMapByte1	PTR unsigned char  size(2) Largest target is 10
		 -> buttonsMessage(COMRAM[10]), 

    main@btnMsg_329	PTR unsigned char  size(2) Largest target is 10
		 -> buttonsMessage(COMRAM[10]), 

    sp__buttonsGetMapByte0	PTR unsigned char  size(2) Largest target is 10
		 -> buttonsMessage(COMRAM[10]), 

    main@btnMsg	PTR unsigned char  size(2) Largest target is 10
		 -> buttonsMessage(COMRAM[10]), 

    sp__buttonsGetOrigins	PTR unsigned char  size(2) Largest target is 10
		 -> buttonsMessage(COMRAM[10]), 

    sp__buttonsGetMessage	PTR unsigned char  size(2) Largest target is 10
		 -> buttonsMessage(COMRAM[10]), 


Critical Paths under _main in COMRAM

    _configSetDefault->_memset
    _configFlashAll->_EEPROMWriteByte
    _buttonsInit->_memset
    _buttonsBuildLUTs->_buttonsBuildLUT
    _buttonsBuildLUT->___awdiv
    ___awdiv->___wmul
    _SISendMessage->_buttonsGetMessage

Critical Paths under _hi_int in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _hi_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _hi_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _hi_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _hi_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _hi_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _hi_int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _hi_int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _hi_int in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               152   152      0   18143
                                             35 COMRAM     2     2      0
                                              0 BANK0     86    86      0
                            _ADCInit
                     _EEPROMReadByte
                    _EEPROMWriteByte
                            _SIClear
                       _SIGetCommand
                             _SIInit
                      _SISendMessage
                     _bootBootloader
                   _buttonsBuildLUTs
                 _buttonsGetMapByte0
                 _buttonsGetMapByte1
                  _buttonsGetMessage
                  _buttonsGetOrigins
                        _buttonsInit
                 _buttonsSetMapByte0
                 _buttonsSetMapByte1
                  _buttonsSetOrigins
                      _buttonsUpdate
                     _configFlashAll
                         _configInit
                   _configSetDefault
                          _portsInit
 ---------------------------------------------------------------------------------
 (1) _portsInit                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configInit                                           3     3      0    1389
                                              8 COMRAM     3     3      0
                     _EEPROMReadByte
                     _configFlashAll
                   _configSetDefault
 ---------------------------------------------------------------------------------
 (1) _configSetDefault                                     0     0      0     897
                             _memset
 ---------------------------------------------------------------------------------
 (2) _configFlashAll                                       3     3      0     335
                                              2 COMRAM     3     3      0
                    _EEPROMWriteByte
 ---------------------------------------------------------------------------------
 (3) _EEPROMWriteByte                                      2     1      1     222
                                              0 COMRAM     2     1      1
                          _NVMUnlock
 ---------------------------------------------------------------------------------
 (4) _NVMUnlock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EEPROMReadByte                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _buttonsUpdate                                        7     7      0     591
                                              0 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 (1) _buttonsSetOrigins                                    1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _buttonsSetMapByte1                                   3     1      2     201
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _buttonsSetMapByte0                                   3     1      2     201
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _buttonsInit                                          0     0      0     897
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     897
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _buttonsGetOrigins                                    2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _buttonsGetMessage                                    6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _buttonsGetMapByte1                                   3     1      2      90
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _buttonsGetMapByte0                                   3     1      2      90
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _buttonsBuildLUTs                                     0     0      0    4914
                    _buttonsBuildLUT
 ---------------------------------------------------------------------------------
 (2) _buttonsBuildLUT                                     21    13      8    4914
                                             14 COMRAM    21    13      8
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     693
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1012
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _bootBootloader                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SISendMessage                                       10     7      3    5052
                                              6 COMRAM    10     7      3
                  _buttonsGetMessage (ARG)
                  _buttonsGetOrigins (ARG)
 ---------------------------------------------------------------------------------
 (1) _SIInit                                               0     0      0       0
                     _SIConfigureCLC
 ---------------------------------------------------------------------------------
 (2) _SIConfigureCLC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SIGetCommand                                         3     1      2     179
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _SIClear                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCInit                                              9     6      3     445
                                              0 COMRAM     9     6      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _hi_int                                               0     0      0       0
                          i2_SIClear
 ---------------------------------------------------------------------------------
 (6) i2_SIClear                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCInit
   _EEPROMReadByte
   _EEPROMWriteByte
     _NVMUnlock
   _SIClear
   _SIGetCommand
   _SIInit
     _SIConfigureCLC
   _SISendMessage
     _buttonsGetMessage (ARG)
     _buttonsGetOrigins (ARG)
   _bootBootloader
   _buttonsBuildLUTs
     _buttonsBuildLUT
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _buttonsGetMapByte0
   _buttonsGetMapByte1
   _buttonsGetMessage
   _buttonsGetOrigins
   _buttonsInit
     _memset
   _buttonsSetMapByte0
   _buttonsSetMapByte1
   _buttonsSetOrigins
   _buttonsUpdate
   _configFlashAll
     _EEPROMWriteByte
       _NVMUnlock
   _configInit
     _EEPROMReadByte
     _configFlashAll
       _EEPROMWriteByte
         _NVMUnlock
     _configSetDefault
       _memset
   _configSetDefault
     _memset
   _portsInit

 _hi_int (ROOT)
   i2_SIClear

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      20        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      17        0.0%
BANK7              100      0       0      18        0.0%
BITBANK6           100      0       0      15        0.0%
BANK6              100      0       0      16        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0     100      14      100.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0     100      12      100.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0     100      10      100.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0     100       8      100.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      24       6       14.1%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     56      8C       4       87.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     25      5C       1       96.8%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     50C      19        0.0%
DATA                 0      0     50C      21        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Mar 27 20:39:31 2020

                  __CFG_CP$OFF 000000                   ___awdiv@sign 0037            ___wmul@multiplicand 002E  
                   _SITempByte 001D                   __CFG_BBEN$ON 000000                    configInit@i 0036  
                  __CFG_LVP$ON 000000        __size_of_EEPROMReadByte 0014                  SIGetCommand@i 002E  
                          l213 3298                            l160 227E                            l136 2166  
                          l138 21AA                            l432 2F8A                            l441 2CFE  
                          l560 2750                            l565 2786                            l719 2946  
                          l671 2ACC                            l664 2706                            l667 271C  
                          l755 350C                            l676 2ADA                            l686 327E  
                          _GIE 01FE97                            _PCL 003FF9     __end_of_buttonsGetMapByte0 3440  
   __end_of_buttonsGetMapByte1 340C                __end_of_ADCInit 28D8                            wreg 003FE8  
                 __CFG_ZCD$OFF 000000                           l3010 2F92                           l3110 24A0  
                         l3102 2490                           l3200 2576                           l3122 24B8  
                         l3114 24A8                           l3106 2498                           l3126 24C0  
                         l3118 24B0                           l3070 2450                           l3400 2D42  
                         l3320 26A2                           l3312 268E                           l3304 267A  
                         l3240 25DA                           l3232 25C6                           l3224 25B2  
                         l3216 259E                           l3208 258A                           l3160 2512  
                         l3152 24FE                           l3136 24CC                           l3090 2478  
                         l3082 2468                           l3074 2458                           l3412 2DA8  
                         l3500 34CA                           l3406 2D6E                           l2710 33B0  
                         l3094 2480                           l3086 2470                           l3078 2460  
                         l3416 2DBA                           l3432 2B0E                           l3512 349E  
                         l3360 2708                           l3352 26F2                           l3344 26DE  
                         l3336 26CA                           l3328 26B6                           l3280 263E  
                         l3272 262A                           l3264 2616                           l3256 2602  
                         l3248 25EE                           l3192 2562                           l3184 254E  
                         l3176 253A                           l3168 2526                           l3418 2DBC  
                         l2730 2FEE                           l3450 2B8E                           l3442 2B4C  
                         l3434 2B14                           l2714 33C6                           l3098 2488  
                         l3610 20D4          buttonsBuildLUT@dzMode 0040                           l3380 3396  
                         l3524 3410                           l3540 33DC                           l3620 211C  
                         l3374 3370                           l2742 3014                           l3702 225E  
                         l3622 2136                           l3376 3376                           l2744 301C  
                         l2736 2FFE                           l3456 2BBC                           l3464 2BDC  
                         l3296 2666                           l3288 2652                           l2816 347A  
                         l3800 239C                           l3616 20F2                           l2762 3054  
                         l2754 303C                           l2842 2904                           l3466 2C0E  
                         l3810 23A8                           l3714 2282                           l3634 2162  
                         l3570 2054                           l2860 29BA                           l2852 2952  
                         l2916 32DA                           l3740 22BE                           l3724 22A2  
                         l3636 216C                           l2758 3046                           l3670 21FA  
                         l3646 21AE                           l3638 217E                           l3814 23AE  
                         l3590 209A                           l2944 2774                           l2872 2A58  
                         l2864 2A02                           l2856 297E                           l2848 2920  
                         l3664 21F0                           l3584 208A                           l3658 21D2  
                         l2876 2A68                           l3764 22FA                           l3756 22DA  
                         l3676 21FE                           l2878 2A7A                           l3790 236C  
                         l3774 2332                           l3768 2302                           l3696 2234  
                         l3786 2364                           l3778 2344                   __CFG_WDTE$ON 000000  
                         _LATB 003FBB                           u1610 3020          buttonsBuildLUT@maxVal 003D  
                         u1810 27CE                           u1730 31F6                           _T2PR 003FAB  
                         u1815 27C4                           u2640 2DC0                           u1760 32D2  
                         u1745 31F8                           u2650 2DC4                           u1690 29C8  
                         u2930 226C                           _T6PR 003F93                           u2780 20B6  
        buttonsBuildLUT@minVal 003C          buttonsBuildLUT@radius 004D                           _WPUA 003A41  
                         _WPUB 003A51                           _WPUC 003A61          buttonsBuildLUT@invert 0041  
                __CFG_FCMEN$ON 000000          buttonsBuildLUT@origin 003E                   __CFG_WRTB$ON 000000  
            ??_buttonsBuildLUT 0042                           _main 2022                __end_of_SIClear 354E  
                         fsr1h 003FE2                           fsr2h 003FDA                           indf1 003FE7  
                         indf2 003FDF                           fsr1l 003FE1                           fsr2l 003FD9  
                         prodh 003FF4                           prodl 003FF3                           start 201E  
                __CFG_CSWEN$ON 000000                 _SPI1STATUSbits 003D17      __size_of_configSetDefault 0076  
                 ___param_bank 000000  buttonsSetOrigins@triggersMode 002C                  __CFG_SAFEN$ON 000000  
      SISendMessage@leftToSend 003B                          PRLOCK 0039EF                          _ADACT 003EFE  
                        ?_main 002C                          _ADCLK 003EFF                          _ADPCH 003EF1  
                _SISendMessage 2CFA                          _ADREF 003EFD                __end_of___awdiv 3062  
                        _ADTIF 01CD0B                SIGetCommand@msg 002C                          _ADRPT 003EEC  
              ___awdiv@divisor 0034                          _T2CLK 003FAE                          _T2CON 003FAC  
                        _T2HLT 003FAD                          _T6CLK 003F96                          _T6CON 003F94  
               __CFG_DEBUG$OFF 000000                          _T6HLT 003F95                          _T2TMR 003FAA  
                        _T2RST 003FAF                          _T6TMR 003F92                          _T6RST 003F97  
              ___awdiv@counter 0036             __size_ofi2_SIClear 0012                          _TMR0H 003FB7  
                        _PORTA 003FCA                          _PORTB 003FCB                          _PORTC 003FCC  
                        _TRISA 003FC2                          _TRISB 003FC3                          _TRISC 003FC4  
            ?_buttonsBuildLUTs 002C                   ?_buttonsInit 002C         buttonsBuildLUT@tempVal 0049  
                __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000                   _DMA1CON0bits 003BFC  
                 _DMA1CON1bits 003BFD             ??_buttonsBuildLUTs 004F                   _DMA2CON1bits 003BDD  
           __CFG_MCLRE$EXTMCLR 000000                          main@i 00B5          EEPROMReadByte@address 002C  
     __size_of_EEPROMWriteByte 0024                          tablat 003FF5               ??_bootBootloader 002C  
           __size_of_NVMUnlock 0012                          status 003FD8                 _SIInputMessage 0100  
           configFlashAll@data 002E                __initialization 2EA4                   __end_of_main 2412  
                    ??_ADCInit 002F                  main@gcpLocked 00B1                 ?_SISendMessage 0032  
                       ??_main 004F                 configInit@data 0034                  __activetblptr 000002  
            _buttonsGetMessage 2A8A             main@flashBufferIdx 0084                         _ADACQL 003EF3  
                       _ADCON0 003EF8                         _ADCON1 003EF9                         _ADCON2 003EFA  
                       _ADCON3 003EFB              _buttonsGetOrigins 3328                      ??_SIClear 002C  
           ?_buttonsGetMessage 002C               ??_configFlashAll 002E               ___awdiv@dividend 0032  
                       _ANSELA 003A40                         _ANSELB 003A50                         _ANSELC 003A60  
                       _T0CON0 003FB8                         _T0CON1 003FB9                         _RB4PPS 003A0C  
                       _ODCONA 003A42                         _ODCONB 003A52                         _ODCONC 003A62  
           ?_buttonsGetOrigins 002C                         _PCLATH 003FFA                         i2l3840 31A6  
                       _PCLATU 003FFB                         i2l3846 31B8                         i2l3848 31BC  
                       _NVMDAT 0039E3                         _TMR0IF 01CD1F                         _LUT_CX 0200  
                       _LUT_CY 0300                         _LUT_SX 0400                         _LUT_SY 0500  
                       _STKPTR 003FFC                         _SIInit 2F50            ??_buttonsGetMessage 002E  
            __end_ofi2_SIClear 3560                  main@msgAnswer 0085            ??_buttonsGetOrigins 002E  
               __CFG_XINST$OFF 000000                         ___wmul 3440                      ??___awdiv 0036  
               __CFG_STVREN$ON 000000                         _hi_int 3158                         _config 00B6  
                       _memset 33A2                         clear_0 2ECE                         clear_1 2EE2  
                       clear_2 2EF6                         clear_3 2F0A                         clear_4 2F1C  
                       clear_5 2F28                         clear_6 2F34               ___awdiv@quotient 0038  
               _EEPROMReadByte 3516              __end_of_NVMUnlock 353C      __end_of_buttonsGetMessage 2C18  
                 __pdataCOMRAM 0051     __end_of_buttonsSetMapByte0 34F2     __end_of_buttonsSetMapByte1 34C6  
    __end_of_buttonsGetOrigins 3366                         tblptrh 003FF7                         tblptrl 003FF6  
                       tblptru 003FF8         __size_of_buttonsUpdate 030E               ??_SIConfigureCLC 002C  
                   __accesstop 0060        __end_of__initialization 2F46                  ___rparam_used 000001  
            ??_EEPROMWriteByte 002D               _configSetDefault 30E2                configFlashAll@i 0030  
               __pcstackCOMRAM 002C              _buttonsSetOrigins 3228                ??_SISendMessage 0035  
       __end_of_EEPROMReadByte 352A             ?_buttonsSetOrigins 002C                _buttonsBuildLUT 28D8  
              _buttonsMapByte0 00DD                _buttonsMapByte1 00CE            ??_buttonsSetOrigins 002C  
         __size_of_buttonsInit 0080                __CFG_PR1WAY$OFF 000000                     __pbssBANK0 00B6  
                   __pbssBANK1 0100                     __pbssBANK2 0200                     __pbssBANK3 0300  
                   __pbssBANK4 0400                     __pbssBANK5 0500             _buttonsGetMapByte0 340C  
           _buttonsGetMapByte1 33D8                 main@btnMsg_329 00AB                __CFG_MVECEN$OFF 000000  
                      ?_SIInit 002C                        IVTBASEH 003FD6                        IVTBASEL 003FD5  
                      IVTBASEU 003FD7                  _buttonsTimers 0001      __end_of_buttonsSetOrigins 328C  
                _buttonsUpdate 2412            ?_buttonsGetMapByte0 002C            ?_buttonsGetMapByte1 002C  
                      ?___wmul 002C                        ?_hi_int 002C                ?_EEPROMReadByte 002C  
             buttonsBuildLUT@i 004B                        _ADFLTRL 003EE6                        _CLC1CON 003C74  
                      _CLC2CON 003C6A                        _CLC3CON 003C60                        _CLC4CON 003C56  
                      ?_memset 002C                        _CLC1POL 003C75                        _CLC2POL 003C6B  
                      _CLC3POL 003C61                        _ADCInit 2720                        _CLC4POL 003C57  
   __size_of_buttonsGetMessage 018E                        _T6INPPS 003ACC            __CFG_PWRTS$PWRT_OFF 000000  
                      _INTCON0 003FD2                     _configInit 328C     __size_of_buttonsGetOrigins 003E  
                      _IVTBASE 003FD5           ??_buttonsGetMapByte0 002E           ??_buttonsGetMapByte1 002E  
          buttonsSetMapByte0@i 002E            buttonsSetMapByte1@i 002E                        _IVTLOCK 003FD4  
                      _SPI1CLK 003D1C             __size_of_portsInit 0066                        _SMT1CLK 003F21  
                      _NVMADRL 0039E0                        _SPI1TXB 003D11                        _NVMCON1 0039E5  
                      _NVMCON2 0039E6                        _PWM5DCH 003F6D                        _PWM5DCL 003F6C  
                      _SMT1SIG 003F22                        _PWM5CON 003F6E                        _SMT1PRH 003F1C  
                      _SMT1PRL 003F1B                        _SMT1PRU 003F1D                        _SMT1WIN 003F23  
                      _PPSLOCK 003ABF                        _SIClear 353C             buttonsBuildLUT@LUT 003A  
      __CFG_BBSIZE$BBSIZE_4096 000000                __size_of_SIInit 008A      __size_of_buttonsBuildLUTs 00D2  
                    _ADCValues 0051                 ?_buttonsUpdate 002C                        __Hparam 0000  
                      __Lparam 0000     __CFG_RSTOSC$HFINTOSC_64MHZ 000000                        ___awdiv 2FDA  
              __size_of___wmul 002E                __size_of_hi_int 006A        __end_of_buttonsBuildLUT 2A8A  
                      __pcinit 2EA4                  ivt0x200C_base 200C                __size_of_memset 0036  
                      __ramtop 0800                  _SICMDReceived 001E                        __ptext0 2022  
                      __ptext1 31C2                        __ptext2 328C                        __ptext3 30E2  
                      __ptext4 346E                        __ptext5 34F2                        __ptext6 352A  
                      __ptext7 3516                        __ptext8 2412                        __ptext9 3228  
              __CFG_WRTAPP$OFF 000000                __CFG_WRTSAF$OFF 000000                        _origins 0010  
                      main@cmd 0060                        main@len 00AD           end_of_initialization 2F46  
                      memset@c 002E                        memset@n 0030                        memset@p 0032  
                __Lmediumconst 0000           _buttonsBuildLUT$1521 0045          buttonsSetMapByte0@map 002C  
        buttonsSetMapByte1@map 002C                      _IVTLOCKED 01FEA0     __size_of_buttonsSetOrigins 0064  
                    _SPI1TCNTL 003D12                  ?_SIGetCommand 002C              __end_of_portsInit 3228  
                      postdec1 003FE5                        postinc0 003FEE                      i2_SIClear 354E  
                    _SMT1PWAIE 01CC8F                      _SMT1PWAIF 01CD0F            EEPROMWriteByte@data 002C  
               portsInit@state 002C          __CFG_WDTCPS$WDTCPS_12 000000                     _outButtons 0016  
  buttonsUpdate@toggledButtons 0030                      _PORTBbits 003FCB                    ?_configInit 002C  
         __CFG_WDTCCS$LFINTOSC 000000                      _TRISBbits 003FC3                      _NVMUnlock 352A  
     __end_of_configSetDefault 3158                _EEPROMWriteByte 34F2               __CFG_FEXTOSC$OFF 000000  
                   main@cmdLen 00B0                     main@btnMsg 00A9             _buttonsSetMapByte0 34C6  
           _buttonsSetMapByte1 349A                ??_buttonsUpdate 002C           buttonsBuildLUT@range 0047  
               __end_of_SIInit 2FDA                 ??_SIGetCommand 002E                    _ADCChannels 0057  
          ?_buttonsSetMapByte0 002C            ?_buttonsSetMapByte1 002C                     ?i2_SIClear 002C  
      __size_of_bootBootloader 0044                 __end_of___wmul 346E               SISendMessage@idx 003A  
             SISendMessage@len 0034               SISendMessage@msg 0032               ?_buttonsBuildLUT 003A  
                __pidataCOMRAM 3560                 __end_of_hi_int 31C2            buttonsGetMapByte0@i 002E  
          buttonsGetMapByte1@i 002E                 __end_of_memset 33D8            start_initialization 2EA4  
                   ?_NVMUnlock 002C           ??_buttonsSetMapByte0 002E           ??_buttonsSetMapByte1 002E  
                    _ButtonsID 0021                       ADCInit@i 0034                       ??_SIInit 002C  
             _buttonsBuildLUTs 2DD2               ??_EEPROMReadByte 002C               __CFG_LPBOREN$OFF 000000  
      __size_of_configFlashAll 002C            __size_of_configInit 0058                       ??___wmul 0030  
                     ??_hi_int 002C                       ??_memset 0032                       ?_ADCInit 002C  
          buttonsGetMessage@la 0031            buttonsGetMessage@ra 0030          __end_of_SISendMessage 2DD2  
             __CFG_IVT1WAY$OFF 000000        __end_of_EEPROMWriteByte 3516                  ??_buttonsInit 0034  
                  __pbssCOMRAM 0001                  __pcstackBANK0 0060                       ?_SIClear 002C  
               _buttonsMessage 0022                    __pivt0x200C 200C        __size_of_SIConfigureCLC 00E2  
                  ??i2_SIClear 002C                       ?___awdiv 0032                    ADCInit@cxCh 002D  
                  ADCInit@cyCh 002E                    ADCInit@sxCh 0033                    ADCInit@syCh 002C  
             __CFG_PPS1WAY$OFF 000000              buttonsBuildLUT@dz 003F                       _CLC1GLS0 003C7A  
                     _CLC1GLS1 003C7B                       _CLC1GLS2 003C7C                       _CLC1GLS3 003C7D  
                     _CLC2GLS0 003C70                       _CLC2GLS1 003C71                       _CLC2GLS2 003C72  
                     _CLC2GLS3 003C73                       _CLC3GLS0 003C66                       _CLC3GLS1 003C67  
                     _CLC3GLS2 003C68                       _CLC3GLS3 003C69                       _CLC4GLS0 003C5C  
                     _CLC4GLS1 003C5D                       _CLC4GLS2 003C5E                       _CLC4GLS3 003C5F  
                     _CLC1SEL0 003C76                       _CLC1SEL1 003C77                       _CLC1SEL2 003C78  
                     _CLC1SEL3 003C79                       _CLC2SEL0 003C6C                       _CLC2SEL1 003C6D  
                     _CLC2SEL2 003C6E                       _CLC2SEL3 003C6F                       _CLC3SEL0 003C62  
                     _CLC3SEL1 003C63                       _CLC3SEL2 003C64                       _CLC3SEL3 003C65  
                     _DMA1CON0 003BFC                       _CLC4SEL0 003C58                       _CLC4SEL1 003C59  
                     _CLC4SEL2 003C5A                       _CLC4SEL3 003C5B                       _DMA2CON0 003BDC  
                     _DMA1DSAH 003BF1                       _DMA1DSAL 003BF0                       _DMA2DSAH 003BD1  
                     _DMA2DSAL 003BD0                       _DMA1DSZH 003BEF                       _DMA1DSZL 003BEE  
                     _DMA2DSZH 003BCF                       _DMA2DSZL 003BCE                       _ADCPbits 003ED7  
                     _DMA1SSAH 003BFA                       _DMA1SIRQ 003BFF                       _DMA1SSAL 003BF9  
                     _DMA1SSAU 003BFB                       _DMA2SSAH 003BDA                       _DMA2SIRQ 003BDF  
                     _DMA2SSAL 003BD9                       _DMA2SSAU 003BDB                       _DMA1SSZH 003BF8  
                     _DMA1SSZL 003BF7                       _DMA2SSZH 003BD8                       _DMA2SSZL 003BD7  
                  ??_NVMUnlock 002C                       _CCPTMRS1 003F5F    __size_of_buttonsGetMapByte0 0034  
  __size_of_buttonsGetMapByte1 0034           __end_of_SIGetCommand 33A2                       _T2CLKCON 003FAE  
                     _NCO1ACCL 003F38            __end_of_buttonsInit 30E2                 ___wmul@product 0030  
                     _IPR1bits 003981                       _PIE1bits 003991            __CFG_BORV$VBOR_2P85 000000  
                     _PIE9bits 003999                       i2u306_40 3174                       i2u306_41 3170  
                     i2u307_40 3176                       _PIR1bits 0039A1                       _SPI1BAUD 003D19  
                     _PIR4bits 0039A4                       _SPI1CON0 003D14                       _SPI1CON1 003D15  
                     _SPI1CON2 003D16                       _PIR9bits 0039A9                       _SMT1CON0 003F1E  
                     _SMT1CON1 003F1F                       _SMT1CPWL 003F18                buttonsUpdate@PA 002C  
              buttonsUpdate@PB 002D                 _bootBootloader 32E4                buttonsUpdate@PC 002E  
                     _SMT1TMRH 003F13                       _SMT1TMRL 003F12                       _SMT1TMRU 003F14  
  buttonsGetMessage@analogMode 002F                   _SPI1INTFbits 003D1A                      _portsInit 31C2  
             __size_of_ADCInit 01B8                     _ADCON2bits 003EFA              ___wmul@multiplier 002C  
             ?_EEPROMWriteByte 002C                      main@inBut 00B2                   ??_configInit 0034  
            ?_configSetDefault 002C                   _SMT1CON1bits 003F1F                    _INTCON0bits 003FD2  
                    copy_data0 2EB8               __size_of_SIClear 0012             ??_configSetDefault 0034  
       __end_of_bootBootloader 3328                       __Hrparam 0000                 _configFlashAll 346E  
                     __Lrparam 0000             __CFG_BOREN$SBORDIS 000000             __end_of_configInit 32E4  
             __size_of___awdiv 0088         EEPROMWriteByte@address 002D                     ?_portsInit 002C  
     __end_of_buttonsBuildLUTs 2EA4                    _buttonsInit 3062                       __ptext10 349A  
                     __ptext11 34C6                       __ptext20 3440                       __ptext12 3062  
                     __ptext21 2FDA                       __ptext13 33A2                       __ptext30 354E  
                     __ptext22 32E4                       __ptext14 3328                       __ptext23 2CFA  
                     __ptext15 2A8A                       __ptext24 2F50                       __ptext16 33D8  
                     __ptext25 2C18                       __ptext17 340C                       __ptext26 3366  
                     __ptext18 2DD2                       __ptext27 353C                       __ptext19 28D8  
                     __ptext28 2720                       __ptext29 3158                  __size_of_main 03F0  
       __end_of_configFlashAll 349A           __CFG_WDTCWS$WDTCWS_7 000000          __end_of_buttonsUpdate 2720  
              ?_bootBootloader 002C                 _SIConfigureCLC 2C18                 buttonsUpdate@i 002F  
                     main@addr 00AE          __size_of_SIGetCommand 003C                    _NVMCON1bits 0039E5  
     __size_of_buttonsBuildLUT 01B2    __size_of_buttonsSetMapByte0 002C    __size_of_buttonsSetMapByte1 002C  
                     memset@p1 002C                       intlevel2 0000                   _SIBitCounter 0020  
buttonsGetMessage@triggersMode 002C                ?_configFlashAll 002C              __CFG_CLKOUTEN$OFF 000000  
                  _PPSLOCKbits 003ABF         __end_of_SIConfigureCLC 2CFA                   _SIGetCommand 3366  
                   _SPI1TWIDTH 003D18                    _prevButtons 001A                    ??_portsInit 002C  
                   _SMT1SIGPPS 003AD2         __size_of_SISendMessage 00D8                  _SIByteCounter 001F  
              ?_SIConfigureCLC 002C  
