

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Mar 26 22:31:49 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F25K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	ivt0x200C,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49  0000                     
    50                           ; Version 2.05
    51                           ; Generated 20/12/2018 GMT
    52                           ; 
    53                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F25K42 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     
    85                           	psect	idataCOMRAM
    86  0034D6                     __pidataCOMRAM:
    87                           	opt callstack 0
    88                           
    89                           ;initializer for _ADCValues
    90  0034D6  80                 	db	128
    91  0034D7  80                 	db	128
    92  0034D8  80                 	db	128
    93  0034D9  80                 	db	128
    94  0034DA  00                 	db	0
    95  0034DB  00                 	db	0
    96                           
    97                           ;initializer for _ADCChannels
    98  0034DC  02                 	db	2
    99  0034DD  03                 	db	3
   100  0034DE  00                 	db	0
   101  0034DF  01                 	db	1
   102  0034E0  13                 	db	19
   103  0034E1  14                 	db	20
   104  0000                     _NVMDAT	set	14819
   105  0000                     _NVMADRL	set	14816
   106  0000                     _NVMCON1	set	14821
   107  0000                     _NVMCON1bits	set	14821
   108  0000                     _NVMCON2	set	14822
   109  0000                     _PIE1bits	set	14737
   110  0000                     _IPR1bits	set	14721
   111  0000                     _PIR1bits	set	14753
   112  0000                     _PIR4bits	set	14756
   113  0000                     _PIE9bits	set	14745
   114  0000                     _PIR9bits	set	14761
   115  0000                     _TMR0IF	set	118047
   116  0000                     _ADTIF	set	118027
   117  0000                     _SMT1PWAIF	set	118031
   118  0000                     _SMT1PWAIE	set	117903
   119  0000                     _ODCONC	set	14946
   120  0000                     _ODCONB	set	14930
   121  0000                     _ODCONA	set	14914
   122  0000                     _WPUC	set	14945
   123  0000                     _WPUB	set	14929
   124  0000                     _WPUA	set	14913
   125  0000                     _ANSELB	set	14928
   126  0000                     _ANSELA	set	14912
   127  0000                     _RB4PPS	set	14860
   128  0000                     _SMT1SIGPPS	set	15058
   129  0000                     _T6INPPS	set	15052
   130  0000                     _PPSLOCKbits	set	15039
   131  0000                     _PPSLOCK	set	15039
   132  0000                     _ANSELC	set	14944
   133  0000                     _DMA1CON0bits	set	15356
   134  0000                     _DMA2CON0	set	15324
   135  0000                     _DMA2CON1bits	set	15325
   136  0000                     _DMA2SIRQ	set	15327
   137  0000                     _DMA2DSZL	set	15310
   138  0000                     _DMA2DSZH	set	15311
   139  0000                     _DMA2SSZL	set	15319
   140  0000                     _DMA2SSZH	set	15320
   141  0000                     _DMA2DSAL	set	15312
   142  0000                     _DMA2DSAH	set	15313
   143  0000                     _DMA2SSAL	set	15321
   144  0000                     _DMA2SSAH	set	15322
   145  0000                     _DMA2SSAU	set	15323
   146  0000                     _DMA1CON0	set	15356
   147  0000                     _DMA1CON1bits	set	15357
   148  0000                     _DMA1SIRQ	set	15359
   149  0000                     _DMA1DSZL	set	15342
   150  0000                     _DMA1DSZH	set	15343
   151  0000                     _DMA1SSZL	set	15351
   152  0000                     _DMA1SSZH	set	15352
   153  0000                     _DMA1DSAL	set	15344
   154  0000                     _DMA1DSAH	set	15345
   155  0000                     _DMA1SSAL	set	15353
   156  0000                     _DMA1SSAH	set	15354
   157  0000                     _DMA1SSAU	set	15355
   158  0000                     _CLC4CON	set	15446
   159  0000                     _CLC4GLS3	set	15455
   160  0000                     _CLC4GLS2	set	15454
   161  0000                     _CLC4GLS1	set	15453
   162  0000                     _CLC4GLS0	set	15452
   163  0000                     _CLC4SEL3	set	15451
   164  0000                     _CLC4SEL2	set	15450
   165  0000                     _CLC4SEL1	set	15449
   166  0000                     _CLC4SEL0	set	15448
   167  0000                     _CLC4POL	set	15447
   168  0000                     _CLC3CON	set	15456
   169  0000                     _CLC3GLS3	set	15465
   170  0000                     _CLC3GLS2	set	15464
   171  0000                     _CLC3GLS1	set	15463
   172  0000                     _CLC3GLS0	set	15462
   173  0000                     _CLC3SEL3	set	15461
   174  0000                     _CLC3SEL2	set	15460
   175  0000                     _CLC3SEL1	set	15459
   176  0000                     _CLC3SEL0	set	15458
   177  0000                     _CLC3POL	set	15457
   178  0000                     _CLC2CON	set	15466
   179  0000                     _CLC2GLS3	set	15475
   180  0000                     _CLC2GLS2	set	15474
   181  0000                     _CLC2GLS1	set	15473
   182  0000                     _CLC2GLS0	set	15472
   183  0000                     _CLC2SEL3	set	15471
   184  0000                     _CLC2SEL2	set	15470
   185  0000                     _CLC2SEL1	set	15469
   186  0000                     _CLC2SEL0	set	15468
   187  0000                     _CLC2POL	set	15467
   188  0000                     _CLC1CON	set	15476
   189  0000                     _CLC1GLS3	set	15485
   190  0000                     _CLC1GLS2	set	15484
   191  0000                     _CLC1GLS1	set	15483
   192  0000                     _CLC1GLS0	set	15482
   193  0000                     _CLC1SEL3	set	15481
   194  0000                     _CLC1SEL2	set	15480
   195  0000                     _CLC1SEL1	set	15479
   196  0000                     _CLC1SEL0	set	15478
   197  0000                     _CLC1POL	set	15477
   198  0000                     _SPI1TXB	set	15633
   199  0000                     _SPI1TCNTL	set	15634
   200  0000                     _SPI1INTFbits	set	15642
   201  0000                     _SPI1TWIDTH	set	15640
   202  0000                     _SPI1STATUSbits	set	15639
   203  0000                     _SPI1CON0	set	15636
   204  0000                     _SPI1CON2	set	15638
   205  0000                     _SPI1CON1	set	15637
   206  0000                     _SPI1BAUD	set	15641
   207  0000                     _SPI1CLK	set	15644
   208  0000                     _ADCPbits	set	16087
   209  0000                     _ADACT	set	16126
   210  0000                     _ADRPT	set	16108
   211  0000                     _ADACQL	set	16115
   212  0000                     _ADREF	set	16125
   213  0000                     _ADCLK	set	16127
   214  0000                     _ADCON3	set	16123
   215  0000                     _ADCON2bits	set	16122
   216  0000                     _ADCON2	set	16122
   217  0000                     _ADCON1	set	16121
   218  0000                     _ADCON0	set	16120
   219  0000                     _ADFLTRL	set	16102
   220  0000                     _ADPCH	set	16113
   221  0000                     _SMT1CON1bits	set	16159
   222  0000                     _SMT1SIG	set	16162
   223  0000                     _SMT1WIN	set	16163
   224  0000                     _SMT1CLK	set	16161
   225  0000                     _SMT1CON1	set	16159
   226  0000                     _SMT1CON0	set	16158
   227  0000                     _SMT1TMRU	set	16148
   228  0000                     _SMT1TMRH	set	16147
   229  0000                     _SMT1TMRL	set	16146
   230  0000                     _SMT1PRU	set	16157
   231  0000                     _SMT1PRH	set	16156
   232  0000                     _SMT1PRL	set	16155
   233  0000                     _CCPTMRS1	set	16223
   234  0000                     _SMT1CPWL	set	16152
   235  0000                     _NCO1ACCL	set	16184
   236  0000                     _IVTBASE	set	16341
   237  0000                     _INTCON0bits	set	16338
   238  0000                     _TMR0H	set	16311
   239  0000                     _T0CON1	set	16313
   240  0000                     _T0CON0	set	16312
   241  0000                     _TRISBbits	set	16323
   242  0000                     _PWM5CON	set	16238
   243  0000                     _PWM5DCL	set	16236
   244  0000                     _PWM5DCH	set	16237
   245  0000                     _T2HLT	set	16301
   246  0000                     _T2CLKCON	set	16302
   247  0000                     _PORTBbits	set	16331
   248  0000                     _T2PR	set	16299
   249  0000                     _T2TMR	set	16298
   250  0000                     _T2RST	set	16303
   251  0000                     _T2CLK	set	16302
   252  0000                     _T2CON	set	16300
   253  0000                     _T6HLT	set	16277
   254  0000                     _T6PR	set	16275
   255  0000                     _T6RST	set	16279
   256  0000                     _T6CLK	set	16278
   257  0000                     _T6CON	set	16276
   258  0000                     _T6TMR	set	16274
   259  0000                     _PCL	set	16377
   260  0000                     _PCLATH	set	16378
   261  0000                     _PCLATU	set	16379
   262  0000                     _IVTLOCK	set	16340
   263  0000                     _STKPTR	set	16380
   264  0000                     _TRISC	set	16324
   265  0000                     _TRISB	set	16323
   266  0000                     _TRISA	set	16322
   267  0000                     _LATB	set	16315
   268  0000                     _INTCON0	set	16338
   269  0000                     _PORTC	set	16332
   270  0000                     _PORTB	set	16331
   271  0000                     _PORTA	set	16330
   272  0000                     _IVTLOCKED	set	130720
   273  0000                     _GIE	set	130711
   274                           
   275                           ; #config settings
   276  0000                     
   277                           	psect	cinit
   278  002EBC                     __pcinit:
   279                           	opt callstack 0
   280  002EBC                     start_initialization:
   281                           	opt callstack 0
   282  002EBC                     __initialization:
   283                           	opt callstack 0
   284                           
   285                           ; Initialize objects allocated to COMRAM (12 bytes)
   286                           ; load TBLPTR registers with __pidataCOMRAM
   287  002EBC  0ED6               	movlw	low __pidataCOMRAM
   288  002EBE  6EF6               	movwf	tblptrl,c
   289  002EC0  0E34               	movlw	high __pidataCOMRAM
   290  002EC2  6EF7               	movwf	tblptrh,c
   291  002EC4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   292  002EC6  6EF8               	movwf	tblptru,c
   293  002EC8  EE00  F049         	lfsr	0,__pdataCOMRAM
   294  002ECC  EE10 F00C          	lfsr	1,12
   295  002ED0                     copy_data0:
   296  002ED0  0009               	tblrd		*+
   297  002ED2  006F FFD7 FFEE     	movff	tablat,postinc0
   298  002ED8  50E5               	movf	postdec1,w,c
   299  002EDA  50E1               	movf	fsr1l,w,c
   300  002EDC  E1F9               	bnz	copy_data0
   301                           
   302                           ; Clear objects allocated to BANK5 (256 bytes)
   303  002EDE  EE01  F100         	lfsr	0,__pbssBANK5
   304  002EE2  EE10 F100          	lfsr	1,256
   305  002EE6                     clear_0:
   306  002EE6  6AEE               	clrf	postinc0,c
   307  002EE8  50E5               	movf	postdec1,w,c
   308  002EEA  50E1               	movf	fsr1l,w,c
   309  002EEC  E1FC               	bnz	clear_0
   310  002EEE  50E2               	movf	fsr1h,w,c
   311  002EF0  E1FA               	bnz	clear_0
   312                           
   313                           ; Clear objects allocated to BANK4 (256 bytes)
   314  002EF2  EE01  F000         	lfsr	0,__pbssBANK4
   315  002EF6  EE10 F100          	lfsr	1,256
   316  002EFA                     clear_1:
   317  002EFA  6AEE               	clrf	postinc0,c
   318  002EFC  50E5               	movf	postdec1,w,c
   319  002EFE  50E1               	movf	fsr1l,w,c
   320  002F00  E1FC               	bnz	clear_1
   321  002F02  50E2               	movf	fsr1h,w,c
   322  002F04  E1FA               	bnz	clear_1
   323                           
   324                           ; Clear objects allocated to BANK3 (256 bytes)
   325  002F06  EE00  F300         	lfsr	0,__pbssBANK3
   326  002F0A  EE10 F100          	lfsr	1,256
   327  002F0E                     clear_2:
   328  002F0E  6AEE               	clrf	postinc0,c
   329  002F10  50E5               	movf	postdec1,w,c
   330  002F12  50E1               	movf	fsr1l,w,c
   331  002F14  E1FC               	bnz	clear_2
   332  002F16  50E2               	movf	fsr1h,w,c
   333  002F18  E1FA               	bnz	clear_2
   334                           
   335                           ; Clear objects allocated to BANK2 (256 bytes)
   336  002F1A  EE00  F200         	lfsr	0,__pbssBANK2
   337  002F1E  EE10 F100          	lfsr	1,256
   338  002F22                     clear_3:
   339  002F22  6AEE               	clrf	postinc0,c
   340  002F24  50E5               	movf	postdec1,w,c
   341  002F26  50E1               	movf	fsr1l,w,c
   342  002F28  E1FC               	bnz	clear_3
   343  002F2A  50E2               	movf	fsr1h,w,c
   344  002F2C  E1FA               	bnz	clear_3
   345                           
   346                           ; Clear objects allocated to BANK1 (36 bytes)
   347  002F2E  EE00  F100         	lfsr	0,__pbssBANK1
   348  002F32  0E24               	movlw	36
   349  002F34                     clear_4:
   350  002F34  6AEE               	clrf	postinc0,c
   351  002F36  06E8               	decf	wreg,f,c
   352  002F38  E1FD               	bnz	clear_4
   353                           
   354                           ; Clear objects allocated to BANK0 (54 bytes)
   355  002F3A  EE00  F0B6         	lfsr	0,__pbssBANK0
   356  002F3E  0E36               	movlw	54
   357  002F40                     clear_5:
   358  002F40  6AEE               	clrf	postinc0,c
   359  002F42  06E8               	decf	wreg,f,c
   360  002F44  E1FD               	bnz	clear_5
   361                           
   362                           ; Clear objects allocated to COMRAM (35 bytes)
   363  002F46  EE00  F026         	lfsr	0,__pbssCOMRAM
   364  002F4A  0E23               	movlw	35
   365  002F4C                     clear_6:
   366  002F4C  6AEE               	clrf	postinc0,c
   367  002F4E  06E8               	decf	wreg,f,c
   368  002F50  E1FD               	bnz	clear_6
   369                           
   370                           ;
   371                           ; Setup IVTBASE
   372                           ;
   373  002F52  0E0C               	movlw	(ivt0x200C_base shr 0)& (0+255)
   374  002F54  6ED5               	movwf	213,c
   375  002F56  0E20               	movlw	(ivt0x200C_base shr (0+8))& (0+255)
   376  002F58  6ED6               	movwf	214,c
   377  002F5A  0E00               	movlw	(ivt0x200C_base shr (0+16))& (0+255)
   378  002F5C  6ED7               	movwf	215,c
   379  002F5E                     end_of_initialization:
   380                           	opt callstack 0
   381  002F5E                     __end_of__initialization:
   382                           	opt callstack 0
   383  002F5E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   384  002F60  6EF8               	movwf	tblptru,c
   385  002F62  0100               	movlb	0
   386  002F64  EF11  F010         	goto	_main	;jump to C main() function
   387                           
   388                           	psect	bssCOMRAM
   389  000026                     __pbssCOMRAM:
   390                           	opt callstack 0
   391  000026                     _buttonsTimers:
   392                           	opt callstack 0
   393  000026                     	ds	15
   394  000035                     _outButtons:
   395                           	opt callstack 0
   396  000035                     	ds	4
   397  000039                     _prevButtons:
   398                           	opt callstack 0
   399  000039                     	ds	3
   400  00003C                     _SITempByte:
   401                           	opt callstack 0
   402  00003C                     	ds	1
   403  00003D                     _SICMDReceived:
   404                           	opt callstack 0
   405  00003D                     	ds	1
   406  00003E                     _SIByteCounter:
   407                           	opt callstack 0
   408  00003E                     	ds	1
   409  00003F                     _SIBitCounter:
   410                           	opt callstack 0
   411  00003F                     	ds	1
   412  000040                     _ButtonsID:
   413                           	opt callstack 0
   414  000040                     	ds	1
   415  000041                     _buttonsMessage:
   416                           	opt callstack 0
   417  000041                     	ds	8
   418                           
   419                           	psect	dataCOMRAM
   420  000049                     __pdataCOMRAM:
   421                           	opt callstack 0
   422  000049                     _ADCValues:
   423                           	opt callstack 0
   424  000049                     	ds	6
   425  00004F                     _ADCChannels:
   426                           	opt callstack 0
   427  00004F                     	ds	6
   428                           
   429                           	psect	bssBANK0
   430  0000B6                     __pbssBANK0:
   431                           	opt callstack 0
   432  0000B6                     _config:
   433                           	opt callstack 0
   434  0000B6                     	ds	24
   435  0000CE                     _buttonsMapByte1:
   436                           	opt callstack 0
   437  0000CE                     	ds	15
   438  0000DD                     _buttonsMapByte0:
   439                           	opt callstack 0
   440  0000DD                     	ds	15
   441                           
   442                           	psect	bssBANK1
   443  000100                     __pbssBANK1:
   444                           	opt callstack 0
   445  000100                     _SIInputMessage:
   446                           	opt callstack 0
   447  000100                     	ds	36
   448                           
   449                           	psect	bssBANK2
   450  000200                     __pbssBANK2:
   451                           	opt callstack 0
   452  000200                     _LUT_CX:
   453                           	opt callstack 0
   454  000200                     	ds	256
   455                           
   456                           	psect	bssBANK3
   457  000300                     __pbssBANK3:
   458                           	opt callstack 0
   459  000300                     _LUT_CY:
   460                           	opt callstack 0
   461  000300                     	ds	256
   462                           
   463                           	psect	bssBANK4
   464  000400                     __pbssBANK4:
   465                           	opt callstack 0
   466  000400                     _LUT_SX:
   467                           	opt callstack 0
   468  000400                     	ds	256
   469                           
   470                           	psect	bssBANK5
   471  000500                     __pbssBANK5:
   472                           	opt callstack 0
   473  000500                     _LUT_SY:
   474                           	opt callstack 0
   475  000500                     	ds	256
   476                           
   477                           	psect	cstackBANK0
   478  000060                     __pcstackBANK0:
   479                           	opt callstack 0
   480  000060                     main@cmd:
   481                           	opt callstack 0
   482                           
   483                           ; 36 bytes @ 0x0
   484  000060                     	ds	36
   485  000084                     main@flashBufferIdx:
   486                           	opt callstack 0
   487                           
   488                           ; 1 bytes @ 0x24
   489  000084                     	ds	1
   490  000085                     main@btnMsg:
   491                           	opt callstack 0
   492                           
   493                           ; 2 bytes @ 0x25
   494  000085                     	ds	2
   495  000087                     main@btnMsg_320:
   496                           	opt callstack 0
   497                           
   498                           ; 2 bytes @ 0x27
   499  000087                     	ds	2
   500  000089                     main@msgAnswer:
   501                           	opt callstack 0
   502                           
   503                           ; 36 bytes @ 0x29
   504  000089                     	ds	36
   505  0000AD                     main@len:
   506                           	opt callstack 0
   507                           
   508                           ; 1 bytes @ 0x4D
   509  0000AD                     	ds	1
   510  0000AE                     main@addr:
   511                           	opt callstack 0
   512                           
   513                           ; 2 bytes @ 0x4E
   514  0000AE                     	ds	2
   515  0000B0                     main@cmdLen:
   516                           	opt callstack 0
   517                           
   518                           ; 1 bytes @ 0x50
   519  0000B0                     	ds	1
   520  0000B1                     main@gcpLocked:
   521                           	opt callstack 0
   522                           
   523                           ; 1 bytes @ 0x51
   524  0000B1                     	ds	1
   525  0000B2                     main@inBut:
   526                           	opt callstack 0
   527                           
   528                           ; 3 bytes @ 0x52
   529  0000B2                     	ds	3
   530  0000B5                     main@i:
   531                           	opt callstack 0
   532                           
   533                           ; 1 bytes @ 0x55
   534  0000B5                     	ds	1
   535                           
   536                           	psect	cstackCOMRAM
   537  000001                     __pcstackCOMRAM:
   538                           	opt callstack 0
   539  000001                     ?_buttonsGetMessage:
   540                           	opt callstack 0
   541  000001                     ?_buttonsGetMapByte0:
   542                           	opt callstack 0
   543  000001                     ?_buttonsGetMapByte1:
   544                           	opt callstack 0
   545  000001                     ?___wmul:
   546                           	opt callstack 0
   547  000001                     portsInit@state:
   548                           	opt callstack 0
   549  000001                     ADCInit@syCh:
   550                           	opt callstack 0
   551  000001                     buttonsUpdate@PA:
   552                           	opt callstack 0
   553  000001                     buttonsGetMessage@triggersMode:
   554                           	opt callstack 0
   555  000001                     EEPROMReadByte@address:
   556                           	opt callstack 0
   557  000001                     EEPROMWriteByte@data:
   558                           	opt callstack 0
   559  000001                     SIGetCommand@msg:
   560                           	opt callstack 0
   561  000001                     buttonsSetMapByte0@map:
   562                           	opt callstack 0
   563  000001                     buttonsSetMapByte1@map:
   564                           	opt callstack 0
   565  000001                     ___wmul@multiplier:
   566                           	opt callstack 0
   567  000001                     memset@p1:
   568                           	opt callstack 0
   569                           
   570                           ; 2 bytes @ 0x0
   571  000001                     	ds	1
   572  000002                     ADCInit@cxCh:
   573                           	opt callstack 0
   574  000002                     buttonsUpdate@PB:
   575                           	opt callstack 0
   576  000002                     EEPROMWriteByte@address:
   577                           	opt callstack 0
   578                           
   579                           ; 1 bytes @ 0x1
   580  000002                     	ds	1
   581  000003                     ??_buttonsGetMessage:
   582  000003                     SIGetCommand@i:
   583                           	opt callstack 0
   584  000003                     ADCInit@cyCh:
   585                           	opt callstack 0
   586  000003                     buttonsUpdate@PC:
   587                           	opt callstack 0
   588  000003                     buttonsSetMapByte0@i:
   589                           	opt callstack 0
   590  000003                     buttonsSetMapByte1@i:
   591                           	opt callstack 0
   592  000003                     buttonsGetMapByte0@i:
   593                           	opt callstack 0
   594  000003                     buttonsGetMapByte1@i:
   595                           	opt callstack 0
   596  000003                     configFlashAll@data:
   597                           	opt callstack 0
   598  000003                     ___wmul@multiplicand:
   599                           	opt callstack 0
   600  000003                     memset@c:
   601                           	opt callstack 0
   602                           
   603                           ; 2 bytes @ 0x2
   604  000003                     	ds	1
   605  000004                     ??_ADCInit:
   606  000004                     buttonsUpdate@i:
   607                           	opt callstack 0
   608  000004                     buttonsGetMessage@analogMode:
   609                           	opt callstack 0
   610                           
   611                           ; 1 bytes @ 0x3
   612  000004                     	ds	1
   613  000005                     configFlashAll@i:
   614                           	opt callstack 0
   615  000005                     buttonsGetMessage@ra:
   616                           	opt callstack 0
   617  000005                     ___wmul@product:
   618                           	opt callstack 0
   619  000005                     memset@n:
   620                           	opt callstack 0
   621  000005                     buttonsUpdate@toggledButtons:
   622                           	opt callstack 0
   623                           
   624                           ; 3 bytes @ 0x4
   625  000005                     	ds	1
   626  000006                     buttonsGetMessage@la:
   627                           	opt callstack 0
   628                           
   629                           ; 1 bytes @ 0x5
   630  000006                     	ds	1
   631  000007                     ?___awdiv:
   632                           	opt callstack 0
   633  000007                     SISendMessage@msg:
   634                           	opt callstack 0
   635  000007                     ___awdiv@dividend:
   636                           	opt callstack 0
   637  000007                     memset@p:
   638                           	opt callstack 0
   639                           
   640                           ; 2 bytes @ 0x6
   641  000007                     	ds	1
   642  000008                     ADCInit@sxCh:
   643                           	opt callstack 0
   644                           
   645                           ; 1 bytes @ 0x7
   646  000008                     	ds	1
   647  000009                     SISendMessage@len:
   648                           	opt callstack 0
   649  000009                     ADCInit@i:
   650                           	opt callstack 0
   651  000009                     configInit@data:
   652                           	opt callstack 0
   653  000009                     ___awdiv@divisor:
   654                           	opt callstack 0
   655                           
   656                           ; 2 bytes @ 0x8
   657  000009                     	ds	1
   658  00000A                     ??_SISendMessage:
   659                           
   660                           ; 1 bytes @ 0x9
   661  00000A                     	ds	1
   662  00000B                     configInit@i:
   663                           	opt callstack 0
   664  00000B                     ___awdiv@counter:
   665                           	opt callstack 0
   666                           
   667                           ; 1 bytes @ 0xA
   668  00000B                     	ds	1
   669  00000C                     ___awdiv@sign:
   670                           	opt callstack 0
   671                           
   672                           ; 1 bytes @ 0xB
   673  00000C                     	ds	1
   674  00000D                     ___awdiv@quotient:
   675                           	opt callstack 0
   676                           
   677                           ; 2 bytes @ 0xC
   678  00000D                     	ds	2
   679  00000F                     SISendMessage@idx:
   680                           	opt callstack 0
   681  00000F                     buttonsBuildLUT@LUT:
   682                           	opt callstack 0
   683                           
   684                           ; 2 bytes @ 0xE
   685  00000F                     	ds	1
   686  000010                     SISendMessage@leftToSend:
   687                           	opt callstack 0
   688                           
   689                           ; 1 bytes @ 0xF
   690  000010                     	ds	1
   691  000011                     buttonsBuildLUT@minVal:
   692                           	opt callstack 0
   693                           
   694                           ; 1 bytes @ 0x10
   695  000011                     	ds	1
   696  000012                     buttonsBuildLUT@maxVal:
   697                           	opt callstack 0
   698                           
   699                           ; 1 bytes @ 0x11
   700  000012                     	ds	1
   701  000013                     buttonsBuildLUT@origin:
   702                           	opt callstack 0
   703                           
   704                           ; 1 bytes @ 0x12
   705  000013                     	ds	1
   706  000014                     buttonsBuildLUT@dz:
   707                           	opt callstack 0
   708                           
   709                           ; 1 bytes @ 0x13
   710  000014                     	ds	1
   711  000015                     buttonsBuildLUT@dzMode:
   712                           	opt callstack 0
   713                           
   714                           ; 1 bytes @ 0x14
   715  000015                     	ds	1
   716  000016                     buttonsBuildLUT@invert:
   717                           	opt callstack 0
   718                           
   719                           ; 1 bytes @ 0x15
   720  000016                     	ds	1
   721  000017                     ??_buttonsBuildLUT:
   722                           
   723                           ; 1 bytes @ 0x16
   724  000017                     	ds	3
   725  00001A                     _buttonsBuildLUT$1495:
   726                           	opt callstack 0
   727                           
   728                           ; 2 bytes @ 0x19
   729  00001A                     	ds	2
   730  00001C                     buttonsBuildLUT@range:
   731                           	opt callstack 0
   732                           
   733                           ; 2 bytes @ 0x1B
   734  00001C                     	ds	2
   735  00001E                     buttonsBuildLUT@tempVal:
   736                           	opt callstack 0
   737                           
   738                           ; 2 bytes @ 0x1D
   739  00001E                     	ds	2
   740  000020                     buttonsBuildLUT@i:
   741                           	opt callstack 0
   742                           
   743                           ; 2 bytes @ 0x1F
   744  000020                     	ds	2
   745  000022                     buttonsBuildLUT@radius:
   746                           	opt callstack 0
   747                           
   748                           ; 2 bytes @ 0x21
   749  000022                     	ds	2
   750  000024                     ??_main:
   751                           
   752                           ; 1 bytes @ 0x23
   753  000024                     	ds	2
   754                           
   755 ;;
   756 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   757 ;;
   758 ;; *************** function _main *****************
   759 ;; Defined at:
   760 ;;		line 79 in file "main.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;		None
   763 ;; Auto vars:     Size  Location     Type
   764 ;;  len             1   77[BANK0 ] unsigned char 
   765 ;;  btnMsg          2   39[BANK0 ] PTR unsigned char 
   766 ;;		 -> buttonsMessage(8), 
   767 ;;  btnMsg          2   37[BANK0 ] PTR unsigned char 
   768 ;;		 -> buttonsMessage(8), 
   769 ;;  flashBuffer    64    0        unsigned char [64]
   770 ;;  msgAnswer      36   41[BANK0 ] unsigned char [36]
   771 ;;  cmd            36    0[BANK0 ] unsigned char [36]
   772 ;;  inBut           3   82[BANK0 ] struct .
   773 ;;  addr            2   78[BANK0 ] unsigned int 
   774 ;;  i               1   85[BANK0 ] unsigned char 
   775 ;;  gcpLocked       1   81[BANK0 ] unsigned char 
   776 ;;  cmdLen          1   80[BANK0 ] unsigned char 
   777 ;;  flashBufferI    1   36[BANK0 ] unsigned char 
   778 ;; Return value:  Size  Location     Type
   779 ;;                  1    wreg      void 
   780 ;; Registers used:
   781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   787 ;;      Params:         0       0       0       0       0       0       0       0       0
   788 ;;      Locals:         0      86       0       0       0       0       0       0       0
   789 ;;      Temps:          2       0       0       0       0       0       0       0       0
   790 ;;      Totals:         2      86       0       0       0       0       0       0       0
   791 ;;Total ram usage:       88 bytes
   792 ;; Hardware stack levels required when called:    6
   793 ;; This function calls:
   794 ;;		_ADCInit
   795 ;;		_EEPROMReadByte
   796 ;;		_EEPROMWriteByte
   797 ;;		_SIClear
   798 ;;		_SIGetCommand
   799 ;;		_SIInit
   800 ;;		_SISendMessage
   801 ;;		_bootBootloader
   802 ;;		_buttonsBuildLUTs
   803 ;;		_buttonsGetMapByte0
   804 ;;		_buttonsGetMapByte1
   805 ;;		_buttonsGetMessage
   806 ;;		_buttonsInit
   807 ;;		_buttonsSetMapByte0
   808 ;;		_buttonsSetMapByte1
   809 ;;		_buttonsUpdate
   810 ;;		_configFlashAll
   811 ;;		_configInit
   812 ;;		_configSetDefault
   813 ;;		_portsInit
   814 ;; This function is called by:
   815 ;;		Startup code after reset
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           	psect	text0
   820  002022                     __ptext0:
   821                           	opt callstack 0
   822  002022                     _main:
   823                           	opt callstack 25
   824                           
   825                           ;main.c: 82: char cmd[0x24];;main.c: 83: char msgAnswer[0x24];;main.c: 84: uint8_t gcpLo
      +                          cked = 1;
   826                           
   827                           ;incstack = 0
   828  002022  0E01               	movlw	1
   829  002024  0100               	movlb	0	; () banked
   830  002026  6FB1               	movwf	main@gcpLocked& (0+255),b
   831                           
   832                           ;main.c: 85: uint16_t addr;;main.c: 88: uint8_t flashBuffer[64];;main.c: 89: uint8_t fla
      +                          shBufferIdx = 0;
   833  002028  0E00               	movlw	0
   834  00202A  6F84               	movwf	main@flashBufferIdx& (0+255),b
   835                           
   836                           ; BSR set to: 0
   837                           ;main.c: 103: portsInit();
   838  00202C  ECED  F018         	call	_portsInit	;wreg free
   839                           
   840                           ;main.c: 106: inButtons_t inBut;;main.c: 107: inBut.PORTA = PORTA;
   841  002030  006F FF28  F0B2    	movff	16330,main@inBut	;volatile
   842                           
   843                           ;main.c: 108: inBut.PORTB = PORTB;
   844  002036  006F FF2C  F0B3    	movff	16331,main@inBut+1	;volatile
   845                           
   846                           ;main.c: 109: inBut.PORTC = PORTC;
   847  00203C  006F FF30  F0B4    	movff	16332,main@inBut+2	;volatile
   848                           
   849                           ;main.c: 111: configInit();
   850  002042  EC20  F019         	call	_configInit	;wreg free
   851                           
   852                           ;main.c: 112: if (config.triggersMode == 1) {
   853  002046  0100               	movlb	0	; () banked
   854  002048  05CD               	decf	(_config+23)& (0+255),w,b
   855  00204A  A4D8               	btfss	status,2,c
   856  00204C  D003               	goto	l3508
   857                           
   858                           ; BSR set to: 0
   859                           ;main.c: 113: ANSELC |= 0x18;
   860  00204E  0E18               	movlw	24
   861  002050  013A               	movlb	58	; () banked
   862  002052  1360               	iorwf	96,f,b	;volatile
   863  002054                     l3508:
   864                           
   865                           ;main.c: 114: };main.c: 116: ADCInit(config.SXChan, config.SYChan, config.CXChan, config
      +                          .CYChan);
   866  002054  0060  F314  F001   	movff	_config+15,ADCInit@syCh
   867  00205A  0060  F318  F002   	movff	_config+16,ADCInit@cxCh
   868  002060  0060  F31C  F003   	movff	_config+17,ADCInit@cyCh
   869  002066  0100               	movlb	0	; () banked
   870  002068  51C4               	movf	(_config+14)& (0+255),w,b
   871  00206A  EC9C  F013         	call	_ADCInit
   872                           
   873                           ;main.c: 117: buttonsInit();
   874  00206E  EC3D  F018         	call	_buttonsInit	;wreg free
   875                           
   876                           ;main.c: 118: SIInit();
   877  002072  ECB4  F017         	call	_SIInit	;wreg free
   878                           
   879                           ;main.c: 121: if (!inBut.X && !inBut.Y && !inBut.A) {
   880  002076  0100               	movlb	0	; () banked
   881  002078  A7B3               	btfss	(main@inBut+1)& (0+255),3,b
   882                           
   883                           ; BSR set to: 0
   884  00207A  B5B3               	btfsc	(main@inBut+1)& (0+255),2,b
   885  00207C  D006               	goto	l3522
   886                           
   887                           ; BSR set to: 0
   888  00207E  BFB4               	btfsc	(main@inBut+2)& (0+255),7,b
   889  002080  D004               	goto	l3522
   890                           
   891                           ; BSR set to: 0
   892                           ;main.c: 122: configSetDefault();
   893  002082  EC7D  F018         	call	_configSetDefault	;wreg free
   894                           
   895                           ;main.c: 123: configFlashAll();
   896  002086  ECF2  F019         	call	_configFlashAll	;wreg free
   897  00208A                     l3522:
   898                           
   899                           ;main.c: 124: };main.c: 126: buttonsBuildLUTs();
   900  00208A  ECF5  F016         	call	_buttonsBuildLUTs	;wreg free
   901                           
   902                           ;main.c: 128: INTCON0 = 0x80;
   903  00208E  0E80               	movlw	128
   904  002090  6ED2               	movwf	16338,c	;volatile
   905  002092                     l3526:
   906                           
   907                           ;main.c: 131: inBut.PORTA = PORTA;
   908  002092  006F FF28  F0B2    	movff	16330,main@inBut	;volatile
   909                           
   910                           ;main.c: 132: inBut.PORTB = PORTB;
   911  002098  006F FF2C  F0B3    	movff	16331,main@inBut+1	;volatile
   912                           
   913                           ;main.c: 133: inBut.PORTC = PORTC;
   914  00209E  006F FF30  F0B4    	movff	16332,main@inBut+2	;volatile
   915                           
   916                           ;main.c: 135: if (inBut.X || inBut.Y || inBut.ST) {
   917  0020A4  0100               	movlb	0	; () banked
   918  0020A6  A7B3               	btfss	(main@inBut+1)& (0+255),3,b
   919                           
   920                           ; BSR set to: 0
   921  0020A8  B5B3               	btfsc	(main@inBut+1)& (0+255),2,b
   922  0020AA  D001               	goto	u2760
   923                           
   924                           ; BSR set to: 0
   925  0020AC  BDB2               	btfsc	main@inBut& (0+255),6,b
   926  0020AE                     u2760:
   927                           
   928                           ; BSR set to: 0
   929  0020AE  0004               	clrwdt		;# 
   930                           
   931                           ;main.c: 137: };main.c: 138: buttonsUpdate();
   932  0020B0  EC15  F012         	call	_buttonsUpdate	;wreg free
   933                           
   934                           ;main.c: 139: cmdLen = SIGetCommand(cmd);
   935  0020B4  0E60               	movlw	low main@cmd
   936  0020B6  6E01               	movwf	SIGetCommand@msg,c
   937  0020B8  0E00               	movlw	high main@cmd
   938  0020BA  6E02               	movwf	SIGetCommand@msg+1,c
   939  0020BC  EC6E  F019         	call	_SIGetCommand	;wreg free
   940  0020C0  0100               	movlb	0	; () banked
   941  0020C2  6FB0               	movwf	main@cmdLen& (0+255),b
   942                           
   943                           ; BSR set to: 0
   944                           ;main.c: 141: if (cmdLen > 0) {
   945  0020C4  51B0               	movf	main@cmdLen& (0+255),w,b
   946  0020C6  A4D8               	btfss	status,2,c
   947  0020C8  D17E               	goto	l3752
   948  0020CA  D7E3               	goto	l3526
   949  0020CC                     l3546:
   950                           
   951                           ; BSR set to: 0
   952                           ;main.c: 144: case 0xFF:;main.c: 145: msgAnswer[0] = 0x09;
   953  0020CC  0E09               	movlw	9
   954  0020CE  6F89               	movwf	main@msgAnswer& (0+255),b
   955                           
   956                           ;main.c: 146: msgAnswer[1] = 0x00;
   957  0020D0  0E00               	movlw	0
   958  0020D2  6F8A               	movwf	(main@msgAnswer+1)& (0+255),b
   959                           
   960                           ;main.c: 147: msgAnswer[2] = 0x03;
   961  0020D4  0E03               	movlw	3
   962  0020D6  6F8B               	movwf	(main@msgAnswer+2)& (0+255),b
   963                           
   964                           ; BSR set to: 0
   965                           ;main.c: 148: SISendMessage(msgAnswer, 3);
   966  0020D8  0E89               	movlw	low main@msgAnswer
   967  0020DA  6E07               	movwf	SISendMessage@msg,c
   968  0020DC  0E00               	movlw	high main@msgAnswer
   969  0020DE  6E08               	movwf	SISendMessage@msg+1,c
   970  0020E0  0E03               	movlw	3
   971  0020E2  6E09               	movwf	SISendMessage@len,c
   972  0020E4  EC89  F016         	call	_SISendMessage	;wreg free
   973                           
   974                           ;main.c: 149: break;
   975  0020E8  D7D4               	goto	l3526
   976  0020EA                     l3552:
   977                           
   978                           ; BSR set to: 0
   979  0020EA  5162               	movf	(main@cmd+2)& (0+255),w,b
   980                           
   981                           ; Switch size 1, requested type "simple"
   982                           ; Number of cases is 2, Range of values is 1 to 2
   983                           ; switch strategies available:
   984                           ; Name         Instructions Cycles
   985                           ; simple_byte            7     4 (average)
   986                           ;	Chosen strategy is simple_byte
   987  0020EC  0A01               	xorlw	1	; case 1
   988  0020EE  A4D8               	btfss	status,2,c
   989  0020F0  0A03               	xorlw	3	; case 2
   990                           
   991                           ; BSR set to: 0
   992                           ;main.c: 167: SISendMessage(buttonsGetMessage(cmd[1], config.triggersMode), 8);
   993  0020F2  0060  F334  F001   	movff	_config+23,buttonsGetMessage@triggersMode
   994  0020F8  5161               	movf	(main@cmd+1)& (0+255),w,b
   995  0020FA  EC51  F015         	call	_buttonsGetMessage
   996  0020FE  0060  F004  F007   	movff	?_buttonsGetMessage,SISendMessage@msg
   997  002104  0060  F008  F008   	movff	?_buttonsGetMessage+1,SISendMessage@msg+1
   998  00210A  0E08               	movlw	8
   999  00210C  6E09               	movwf	SISendMessage@len,c
  1000  00210E  EC89  F016         	call	_SISendMessage	;wreg free
  1001                           
  1002                           ;main.c: 168: break;
  1003  002112  D7BF               	goto	l3526
  1004  002114                     l3556:
  1005                           
  1006                           ; BSR set to: 0
  1007                           ;main.c: 171: case 0x42:;main.c: 172: msgAnswer[0] = 0x00;
  1008  002114  0E00               	movlw	0
  1009  002116  6F89               	movwf	main@msgAnswer& (0+255),b
  1010                           
  1011                           ;main.c: 173: msgAnswer[1] = 0x80;
  1012  002118  0E80               	movlw	128
  1013  00211A  6F8A               	movwf	(main@msgAnswer+1)& (0+255),b
  1014                           
  1015                           ;main.c: 174: msgAnswer[2] = 0x80;
  1016  00211C  0E80               	movlw	128
  1017  00211E  6F8B               	movwf	(main@msgAnswer+2)& (0+255),b
  1018                           
  1019                           ;main.c: 175: msgAnswer[3] = 0x80;
  1020  002120  0E80               	movlw	128
  1021  002122  6F8C               	movwf	(main@msgAnswer+3)& (0+255),b
  1022                           
  1023                           ;main.c: 176: msgAnswer[4] = 0x80;
  1024  002124  0E80               	movlw	128
  1025  002126  6F8D               	movwf	(main@msgAnswer+4)& (0+255),b
  1026                           
  1027                           ;main.c: 177: msgAnswer[5] = 0x80;
  1028  002128  0E80               	movlw	128
  1029  00212A  6F8E               	movwf	(main@msgAnswer+5)& (0+255),b
  1030                           
  1031                           ;main.c: 178: msgAnswer[6] = 0x00;
  1032  00212C  0E00               	movlw	0
  1033  00212E  6F8F               	movwf	(main@msgAnswer+6)& (0+255),b
  1034                           
  1035                           ;main.c: 179: msgAnswer[7] = 0x00;
  1036  002130  0E00               	movlw	0
  1037  002132  6F90               	movwf	(main@msgAnswer+7)& (0+255),b
  1038                           
  1039                           ;main.c: 180: msgAnswer[8] = 0x00;
  1040  002134  0E00               	movlw	0
  1041  002136  6F91               	movwf	(main@msgAnswer+8)& (0+255),b
  1042                           
  1043                           ;main.c: 181: msgAnswer[9] = 0x00;
  1044  002138  0E00               	movlw	0
  1045  00213A  6F92               	movwf	(main@msgAnswer+9)& (0+255),b
  1046                           
  1047                           ; BSR set to: 0
  1048                           ;main.c: 182: SISendMessage(msgAnswer, 10);
  1049  00213C  0E89               	movlw	low main@msgAnswer
  1050  00213E  6E07               	movwf	SISendMessage@msg,c
  1051  002140  0E00               	movlw	high main@msgAnswer
  1052  002142  6E08               	movwf	SISendMessage@msg+1,c
  1053  002144  0E0A               	movlw	10
  1054  002146  6E09               	movwf	SISendMessage@len,c
  1055  002148  EC89  F016         	call	_SISendMessage	;wreg free
  1056                           
  1057                           ;main.c: 183: break;
  1058  00214C  D7A2               	goto	l3526
  1059  00214E                     l3560:
  1060                           
  1061                           ; BSR set to: 0
  1062                           ;main.c: 186: if ((cmd[1] == 0x47) && (cmd[2] == 0x43) && (cmd[3] == 0x2B) && (cmd[4] ==
      +                           0x32) && cmdLen == 5) {
  1063  00214E  0E47               	movlw	71
  1064  002150  1961               	xorwf	(main@cmd+1)& (0+255),w,b
  1065  002152  A4D8               	btfss	status,2,c
  1066  002154  D012               	goto	l3572
  1067                           
  1068                           ; BSR set to: 0
  1069  002156  0E43               	movlw	67
  1070  002158  1962               	xorwf	(main@cmd+2)& (0+255),w,b
  1071  00215A  A4D8               	btfss	status,2,c
  1072  00215C  D00E               	goto	l3572
  1073                           
  1074                           ; BSR set to: 0
  1075  00215E  0E2B               	movlw	43
  1076  002160  1963               	xorwf	(main@cmd+3)& (0+255),w,b
  1077  002162  A4D8               	btfss	status,2,c
  1078  002164  D00A               	goto	l3572
  1079                           
  1080                           ; BSR set to: 0
  1081  002166  0E32               	movlw	50
  1082  002168  1964               	xorwf	(main@cmd+4)& (0+255),w,b
  1083  00216A  A4D8               	btfss	status,2,c
  1084  00216C  D006               	goto	l3572
  1085                           
  1086                           ; BSR set to: 0
  1087  00216E  0E05               	movlw	5
  1088  002170  19B0               	xorwf	main@cmdLen& (0+255),w,b
  1089  002172  A4D8               	btfss	status,2,c
  1090  002174  D002               	goto	l3572
  1091                           
  1092                           ; BSR set to: 0
  1093                           ;main.c: 187: gcpLocked = 0;
  1094  002176  0E00               	movlw	0
  1095  002178  D001               	goto	L1
  1096  00217A                     l3572:
  1097                           
  1098                           ; BSR set to: 0
  1099                           ;main.c: 189: gcpLocked = 1;
  1100  00217A  0E01               	movlw	1
  1101  00217C                     L1:
  1102  00217C  6FB1               	movwf	main@gcpLocked& (0+255),b
  1103  00217E                     l132:
  1104                           
  1105                           ;main.c: 190: };main.c: 191: msgAnswer[0] = 0x00;
  1106  00217E  0E00               	movlw	0
  1107  002180  0100               	movlb	0	; () banked
  1108  002182  6F89               	movwf	main@msgAnswer& (0+255),b
  1109  002184                     l3574:
  1110                           
  1111                           ; BSR set to: 0
  1112                           ;main.c: 192: SISendMessage(msgAnswer, 1);
  1113  002184  0E89               	movlw	low main@msgAnswer
  1114  002186  6E07               	movwf	SISendMessage@msg,c
  1115  002188  0E00               	movlw	high main@msgAnswer
  1116  00218A  6E08               	movwf	SISendMessage@msg+1,c
  1117  00218C  0E01               	movlw	1
  1118  00218E  6E09               	movwf	SISendMessage@len,c
  1119  002190  EC89  F016         	call	_SISendMessage	;wreg free
  1120                           
  1121                           ;main.c: 193: break;
  1122  002194  D77E               	goto	l3526
  1123  002196                     l3576:
  1124                           
  1125                           ; BSR set to: 0
  1126                           ;main.c: 196: if (!gcpLocked) {
  1127  002196  51B1               	movf	main@gcpLocked& (0+255),w,b
  1128  002198  A4D8               	btfss	status,2,c
  1129  00219A  D013               	goto	l134
  1130                           
  1131                           ; BSR set to: 0
  1132                           ;main.c: 197: msgAnswer[0] = 0x02;
  1133  00219C  0E02               	movlw	2
  1134  00219E  6F89               	movwf	main@msgAnswer& (0+255),b
  1135                           
  1136                           ;main.c: 198: msgAnswer[1] = (((2U & 0x1FFF) << 3) | (0U & 0x0007)) & 0xFFUL;
  1137  0021A0  0E10               	movlw	16
  1138  0021A2  6F8A               	movwf	(main@msgAnswer+1)& (0+255),b
  1139                           
  1140                           ;main.c: 199: msgAnswer[2] = ((((2U & 0x1FFF) << 3) | (0U & 0x0007)) >> 8) & 0xFF;
  1141  0021A4  0E00               	movlw	0
  1142  0021A6  6F8B               	movwf	(main@msgAnswer+2)& (0+255),b
  1143                           
  1144                           ;main.c: 200: msgAnswer[3] = (((2U & 0x1FFF) << 3) | (0U & 0x0007)) & 0xFFUL;
  1145  0021A8  0E10               	movlw	16
  1146  0021AA  6F8C               	movwf	(main@msgAnswer+3)& (0+255),b
  1147                           
  1148                           ;main.c: 201: msgAnswer[4] = ((((2U & 0x1FFF) << 3) | (0U & 0x0007)) >> 8) & 0xFF;
  1149  0021AC  0E00               	movlw	0
  1150  0021AE  6F8D               	movwf	(main@msgAnswer+4)& (0+255),b
  1151                           
  1152                           ; BSR set to: 0
  1153                           ;main.c: 202: SISendMessage(msgAnswer, 5);
  1154  0021B0  0E89               	movlw	low main@msgAnswer
  1155  0021B2  6E07               	movwf	SISendMessage@msg,c
  1156  0021B4  0E00               	movlw	high main@msgAnswer
  1157  0021B6  6E08               	movwf	SISendMessage@msg+1,c
  1158  0021B8  0E05               	movlw	5
  1159  0021BA  6E09               	movwf	SISendMessage@len,c
  1160  0021BC  EC89  F016         	call	_SISendMessage	;wreg free
  1161                           
  1162                           ;main.c: 203: } else {
  1163  0021C0  D768               	goto	l3526
  1164  0021C2                     l134:
  1165                           
  1166                           ; BSR set to: 0
  1167                           ;main.c: 204: msgAnswer[0] = 0xFF;
  1168  0021C2  6989               	setf	main@msgAnswer& (0+255),b
  1169  0021C4  D7DF               	goto	l3574
  1170  0021C6                     l3584:
  1171                           
  1172                           ; BSR set to: 0
  1173                           ;main.c: 210: if (!gcpLocked) {
  1174  0021C6  51B1               	movf	main@gcpLocked& (0+255),w,b
  1175  0021C8  A4D8               	btfss	status,2,c
  1176  0021CA  D7FB               	goto	l134
  1177                           
  1178                           ; BSR set to: 0
  1179                           ;main.c: 211: if (cmdLen > 3) {
  1180  0021CC  0E03               	movlw	3
  1181  0021CE  65B0               	cpfsgt	main@cmdLen& (0+255),b
  1182  0021D0  D020               	goto	l3608
  1183                           
  1184                           ; BSR set to: 0
  1185                           ;main.c: 212: addr = cmd[2];
  1186  0021D2  0060  F188  F0AE   	movff	main@cmd+2,main@addr
  1187  0021D8  6BAF               	clrf	(main@addr+1)& (0+255),b
  1188                           
  1189                           ; BSR set to: 0
  1190                           ;main.c: 213: addr = addr << 8;
  1191  0021DA  51AE               	movf	main@addr& (0+255),w,b
  1192  0021DC  6FAF               	movwf	(main@addr+1)& (0+255),b
  1193  0021DE  6BAE               	clrf	main@addr& (0+255),b
  1194                           
  1195                           ; BSR set to: 0
  1196                           ;main.c: 214: addr |= cmd[1];
  1197  0021E0  5161               	movf	(main@cmd+1)& (0+255),w,b
  1198  0021E2  13AE               	iorwf	main@addr& (0+255),f,b
  1199                           
  1200                           ; BSR set to: 0
  1201                           ;main.c: 215: for (i = 3; i < cmdLen; i++) {
  1202  0021E4  0E03               	movlw	3
  1203  0021E6  6FB5               	movwf	main@i& (0+255),b
  1204  0021E8  D00F               	goto	l3602
  1205  0021EA                     l3596:
  1206                           
  1207                           ; BSR set to: 0
  1208                           ;main.c: 216: EEPROMWriteByte(addr++, cmd[i]);
  1209  0021EA  0E60               	movlw	low main@cmd
  1210  0021EC  25B5               	addwf	main@i& (0+255),w,b
  1211  0021EE  6ED9               	movwf	fsr2l,c
  1212  0021F0  6ADA               	clrf	fsr2h,c
  1213  0021F2  0E00               	movlw	high main@cmd
  1214  0021F4  22DA               	addwfc	fsr2h,f,c
  1215  0021F6  50DF               	movf	indf2,w,c
  1216  0021F8  6E01               	movwf	EEPROMWriteByte@data,c
  1217  0021FA  51AE               	movf	main@addr& (0+255),w,b
  1218  0021FC  EC34  F01A         	call	_EEPROMWriteByte
  1219  002200  0100               	movlb	0	; () banked
  1220  002202  4BAE               	infsnz	main@addr& (0+255),f,b
  1221  002204  2BAF               	incf	(main@addr+1)& (0+255),f,b
  1222                           
  1223                           ; BSR set to: 0
  1224  002206  2BB5               	incf	main@i& (0+255),f,b
  1225  002208                     l3602:
  1226                           
  1227                           ; BSR set to: 0
  1228  002208  51B0               	movf	main@cmdLen& (0+255),w,b
  1229  00220A  5DB5               	subwf	main@i& (0+255),w,b
  1230  00220C  B0D8               	btfsc	status,0,c
  1231  00220E  D7B7               	goto	l132
  1232  002210  D7EC               	goto	l3596
  1233  002212                     l3608:
  1234                           
  1235                           ; BSR set to: 0
  1236                           ;main.c: 221: msgAnswer[0] = 0xFE;
  1237  002212  0EFE               	movlw	254
  1238  002214  D7B6               	goto	L2
  1239  002216                     l3614:
  1240                           
  1241                           ; BSR set to: 0
  1242                           ;main.c: 231: if (!gcpLocked) {
  1243  002216  51B1               	movf	main@gcpLocked& (0+255),w,b
  1244  002218  A4D8               	btfss	status,2,c
  1245  00221A  D7D3               	goto	l134
  1246                           
  1247                           ; BSR set to: 0
  1248                           ;main.c: 232: if (cmdLen == 4) {
  1249  00221C  0E04               	movlw	4
  1250  00221E  19B0               	xorwf	main@cmdLen& (0+255),w,b
  1251  002220  A4D8               	btfss	status,2,c
  1252  002222  D7F7               	goto	l3608
  1253                           
  1254                           ; BSR set to: 0
  1255                           ;main.c: 233: addr = cmd[2];
  1256  002224  0060  F188  F0AE   	movff	main@cmd+2,main@addr
  1257  00222A  6BAF               	clrf	(main@addr+1)& (0+255),b
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;main.c: 234: addr = addr << 8;
  1261  00222C  51AE               	movf	main@addr& (0+255),w,b
  1262  00222E  6FAF               	movwf	(main@addr+1)& (0+255),b
  1263  002230  6BAE               	clrf	main@addr& (0+255),b
  1264                           
  1265                           ; BSR set to: 0
  1266                           ;main.c: 235: addr |= cmd[1];
  1267  002232  5161               	movf	(main@cmd+1)& (0+255),w,b
  1268  002234  13AE               	iorwf	main@addr& (0+255),f,b
  1269                           
  1270                           ; BSR set to: 0
  1271                           ;main.c: 236: uint8_t len = cmd[3];
  1272  002236  0060  F18C  F0AD   	movff	main@cmd+3,main@len
  1273                           
  1274                           ; BSR set to: 0
  1275                           ;main.c: 237: if (len == 0) {
  1276  00223C  51AD               	movf	main@len& (0+255),w,b
  1277  00223E  B4D8               	btfsc	status,2,c
  1278  002240  D7E8               	goto	l3608
  1279                           
  1280                           ; BSR set to: 0
  1281                           ;main.c: 241: msgAnswer[0] = 0x00;
  1282  002242  0E00               	movlw	0
  1283  002244  6F89               	movwf	main@msgAnswer& (0+255),b
  1284                           
  1285                           ;main.c: 242: for (i = 0; i < len && i < 0x20; i++) {
  1286  002246  0E00               	movlw	0
  1287  002248  6FB5               	movwf	main@i& (0+255),b
  1288  00224A  D015               	goto	l3640
  1289  00224C                     l3634:
  1290                           
  1291                           ; BSR set to: 0
  1292                           ;main.c: 243: msgAnswer[i + 1] = EEPROMReadByte(addr++);
  1293  00224C  51B5               	movf	main@i& (0+255),w,b
  1294  00224E  6E24               	movwf	??_main& (0+255),c
  1295  002250  6A25               	clrf	(??_main+1)& (0+255),c
  1296  002252  0E01               	movlw	1
  1297  002254  2624               	addwf	??_main,f,c
  1298  002256  0E00               	movlw	0
  1299  002258  2225               	addwfc	??_main+1,f,c
  1300  00225A  0E89               	movlw	low main@msgAnswer
  1301  00225C  2424               	addwf	??_main,w,c
  1302  00225E  6ED9               	movwf	fsr2l,c
  1303  002260  0E00               	movlw	high main@msgAnswer
  1304  002262  2025               	addwfc	??_main+1,w,c
  1305  002264  6EDA               	movwf	fsr2h,c
  1306  002266  51AE               	movf	main@addr& (0+255),w,b
  1307  002268  EC46  F01A         	call	_EEPROMReadByte
  1308  00226C  6EDF               	movwf	indf2,c
  1309  00226E  0100               	movlb	0	; () banked
  1310  002270  4BAE               	infsnz	main@addr& (0+255),f,b
  1311  002272  2BAF               	incf	(main@addr+1)& (0+255),f,b
  1312                           
  1313                           ; BSR set to: 0
  1314  002274  2BB5               	incf	main@i& (0+255),f,b
  1315  002276                     l3640:
  1316                           
  1317                           ; BSR set to: 0
  1318  002276  51AD               	movf	main@len& (0+255),w,b
  1319  002278  5DB5               	subwf	main@i& (0+255),w,b
  1320  00227A  B0D8               	btfsc	status,0,c
  1321  00227C  D003               	goto	u2910
  1322                           
  1323                           ; BSR set to: 0
  1324  00227E  0E1F               	movlw	31
  1325  002280  65B5               	cpfsgt	main@i& (0+255),b
  1326  002282  D7E4               	goto	l3634
  1327  002284                     u2910:
  1328                           
  1329                           ; BSR set to: 0
  1330                           ;main.c: 244: };main.c: 245: SISendMessage(msgAnswer, len + 1);
  1331  002284  0E89               	movlw	low main@msgAnswer
  1332  002286  6E07               	movwf	SISendMessage@msg,c
  1333  002288  0E00               	movlw	high main@msgAnswer
  1334  00228A  6E08               	movwf	SISendMessage@msg+1,c
  1335  00228C  29AD               	incf	main@len& (0+255),w,b
  1336  00228E  6E09               	movwf	SISendMessage@len,c
  1337  002290  EC89  F016         	call	_SISendMessage	;wreg free
  1338  002294  D6FE               	goto	l3526
  1339  002296                     l156:
  1340                           
  1341                           ; BSR set to: 0
  1342  002296  00FF               	reset		;# 
  1343                           
  1344                           ;main.c: 259: break;
  1345  002298  D6FC               	goto	l3526
  1346  00229A                     l3652:
  1347                           
  1348                           ; BSR set to: 0
  1349                           ;main.c: 262: if (!gcpLocked) {
  1350  00229A  51B1               	movf	main@gcpLocked& (0+255),w,b
  1351  00229C  A4D8               	btfss	status,2,c
  1352  00229E  D791               	goto	l134
  1353                           
  1354                           ; BSR set to: 0
  1355                           ;main.c: 263: msgAnswer[0] = 0x00;
  1356  0022A0  0E00               	movlw	0
  1357  0022A2  6F89               	movwf	main@msgAnswer& (0+255),b
  1358                           
  1359                           ; BSR set to: 0
  1360                           ;main.c: 264: SISendMessage(msgAnswer, 1);
  1361  0022A4  0E89               	movlw	low main@msgAnswer
  1362  0022A6  6E07               	movwf	SISendMessage@msg,c
  1363  0022A8  0E00               	movlw	high main@msgAnswer
  1364  0022AA  6E08               	movwf	SISendMessage@msg+1,c
  1365  0022AC  0E01               	movlw	1
  1366  0022AE  6E09               	movwf	SISendMessage@len,c
  1367  0022B0  EC89  F016         	call	_SISendMessage	;wreg free
  1368                           
  1369                           ;main.c: 265: bootBootloader();
  1370  0022B4  EC4C  F019         	call	_bootBootloader	;wreg free
  1371                           
  1372                           ;main.c: 266: } else {
  1373  0022B8  D6EC               	goto	l3526
  1374  0022BA                     l3662:
  1375                           
  1376                           ; BSR set to: 0
  1377                           ;main.c: 273: if (!gcpLocked) {
  1378  0022BA  51B1               	movf	main@gcpLocked& (0+255),w,b
  1379  0022BC  A4D8               	btfss	status,2,c
  1380  0022BE  D781               	goto	l134
  1381                           
  1382                           ; BSR set to: 0
  1383                           ;main.c: 274: if (cmdLen == (N_BUTTONS + 1)) {
  1384  0022C0  0E10               	movlw	16
  1385  0022C2  19B0               	xorwf	main@cmdLen& (0+255),w,b
  1386  0022C4  A4D8               	btfss	status,2,c
  1387  0022C6  D7A5               	goto	l3608
  1388                           
  1389                           ; BSR set to: 0
  1390                           ;main.c: 275: buttonsSetMapByte0(&cmd[1]);
  1391  0022C8  0E61               	movlw	low (main@cmd+1)
  1392  0022CA  6E01               	movwf	buttonsSetMapByte0@map,c
  1393  0022CC  0E00               	movlw	high (main@cmd+1)
  1394  0022CE  6E02               	movwf	buttonsSetMapByte0@map+1,c
  1395  0022D0  EC1E  F01A         	call	_buttonsSetMapByte0	;wreg free
  1396  0022D4  D754               	goto	l132
  1397  0022D6                     l3678:
  1398                           
  1399                           ; BSR set to: 0
  1400                           ;main.c: 289: if (!gcpLocked) {
  1401  0022D6  51B1               	movf	main@gcpLocked& (0+255),w,b
  1402  0022D8  A4D8               	btfss	status,2,c
  1403  0022DA  D773               	goto	l134
  1404                           
  1405                           ; BSR set to: 0
  1406                           ;main.c: 290: if (cmdLen == (N_BUTTONS + 1)) {
  1407  0022DC  0E10               	movlw	16
  1408  0022DE  19B0               	xorwf	main@cmdLen& (0+255),w,b
  1409  0022E0  A4D8               	btfss	status,2,c
  1410  0022E2  D797               	goto	l3608
  1411                           
  1412                           ; BSR set to: 0
  1413                           ;main.c: 291: buttonsSetMapByte1(&cmd[1]);
  1414  0022E4  0E61               	movlw	low (main@cmd+1)
  1415  0022E6  6E01               	movwf	buttonsSetMapByte1@map,c
  1416  0022E8  0E00               	movlw	high (main@cmd+1)
  1417  0022EA  6E02               	movwf	buttonsSetMapByte1@map+1,c
  1418  0022EC  EC08  F01A         	call	_buttonsSetMapByte1	;wreg free
  1419  0022F0  D746               	goto	l132
  1420  0022F2                     l3694:
  1421                           
  1422                           ; BSR set to: 0
  1423                           ;main.c: 305: if (!gcpLocked) {
  1424  0022F2  51B1               	movf	main@gcpLocked& (0+255),w,b
  1425  0022F4  A4D8               	btfss	status,2,c
  1426  0022F6  D765               	goto	l134
  1427                           
  1428                           ; BSR set to: 0
  1429                           ;main.c: 306: uint8_t* btnMsg = buttonsGetMapByte0();
  1430  0022F8  ECC1  F019         	call	_buttonsGetMapByte0	;wreg free
  1431  0022FC  0060  F004  F085   	movff	?_buttonsGetMapByte0,main@btnMsg
  1432  002302  0060  F008  F086   	movff	?_buttonsGetMapByte0+1,main@btnMsg+1
  1433                           
  1434                           ;main.c: 307: msgAnswer[0] = 0x00;
  1435  002308  0E00               	movlw	0
  1436  00230A  0100               	movlb	0	; () banked
  1437  00230C  6F89               	movwf	main@msgAnswer& (0+255),b
  1438                           
  1439                           ; BSR set to: 0
  1440                           ;main.c: 308: for (i = 0; i < N_BUTTONS; i++) {
  1441  00230E  0E00               	movlw	0
  1442  002310  6FB5               	movwf	main@i& (0+255),b
  1443  002312                     l3702:
  1444                           
  1445                           ; BSR set to: 0
  1446  002312  0E0E               	movlw	14
  1447  002314  65B5               	cpfsgt	main@i& (0+255),b
  1448  002316  D001               	goto	l3706
  1449  002318  D018               	goto	l3712
  1450  00231A                     l3706:
  1451                           
  1452                           ; BSR set to: 0
  1453                           ;main.c: 309: msgAnswer[i + 1] = btnMsg[i];
  1454  00231A  51B5               	movf	main@i& (0+255),w,b
  1455  00231C  2585               	addwf	main@btnMsg& (0+255),w,b
  1456  00231E  6ED9               	movwf	fsr2l,c
  1457  002320  0E00               	movlw	0
  1458  002322  2186               	addwfc	(main@btnMsg+1)& (0+255),w,b
  1459  002324  6EDA               	movwf	fsr2h,c
  1460  002326  51B5               	movf	main@i& (0+255),w,b
  1461  002328  6E24               	movwf	??_main& (0+255),c
  1462  00232A  6A25               	clrf	(??_main+1)& (0+255),c
  1463  00232C  0E01               	movlw	1
  1464  00232E  2624               	addwf	??_main,f,c
  1465  002330  0E00               	movlw	0
  1466  002332  2225               	addwfc	??_main+1,f,c
  1467  002334  0E89               	movlw	low main@msgAnswer
  1468  002336  2424               	addwf	??_main,w,c
  1469  002338  6EE1               	movwf	fsr1l,c
  1470  00233A  0E00               	movlw	high main@msgAnswer
  1471  00233C  2025               	addwfc	??_main+1,w,c
  1472  00233E  6EE2               	movwf	fsr1h,c
  1473  002340  006F FF7F FFE7     	movff	indf2,indf1
  1474                           
  1475                           ; BSR set to: 0
  1476  002346  2BB5               	incf	main@i& (0+255),f,b
  1477  002348  D7E4               	goto	l3702
  1478  00234A                     l3712:
  1479                           
  1480                           ; BSR set to: 0
  1481                           ;main.c: 310: };main.c: 311: SISendMessage(msgAnswer, N_BUTTONS + 1);
  1482  00234A  0E89               	movlw	low main@msgAnswer
  1483  00234C  6E07               	movwf	SISendMessage@msg,c
  1484  00234E  0E00               	movlw	high main@msgAnswer
  1485  002350  6E08               	movwf	SISendMessage@msg+1,c
  1486  002352  0E10               	movlw	16
  1487  002354  6E09               	movwf	SISendMessage@len,c
  1488  002356  EC89  F016         	call	_SISendMessage	;wreg free
  1489                           
  1490                           ;main.c: 312: } else {
  1491  00235A  D69B               	goto	l3526
  1492  00235C                     l3716:
  1493                           
  1494                           ; BSR set to: 0
  1495                           ;main.c: 319: if (!gcpLocked) {
  1496  00235C  51B1               	movf	main@gcpLocked& (0+255),w,b
  1497  00235E  A4D8               	btfss	status,2,c
  1498  002360  D730               	goto	l134
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;main.c: 320: uint8_t* btnMsg = buttonsGetMapByte1();
  1502  002362  ECA7  F019         	call	_buttonsGetMapByte1	;wreg free
  1503  002366  0060  F004  F087   	movff	?_buttonsGetMapByte1,main@btnMsg_320
  1504  00236C  0060  F008  F088   	movff	?_buttonsGetMapByte1+1,main@btnMsg_320+1
  1505                           
  1506                           ;main.c: 321: msgAnswer[0] = 0x00;
  1507  002372  0E00               	movlw	0
  1508  002374  0100               	movlb	0	; () banked
  1509  002376  6F89               	movwf	main@msgAnswer& (0+255),b
  1510                           
  1511                           ; BSR set to: 0
  1512                           ;main.c: 322: for (i = 0; i < N_BUTTONS; i++) {
  1513  002378  0E00               	movlw	0
  1514  00237A  6FB5               	movwf	main@i& (0+255),b
  1515  00237C                     l3724:
  1516                           
  1517                           ; BSR set to: 0
  1518  00237C  0E0E               	movlw	14
  1519  00237E  65B5               	cpfsgt	main@i& (0+255),b
  1520  002380  D001               	goto	l3728
  1521  002382  D7E3               	goto	l3712
  1522  002384                     l3728:
  1523                           
  1524                           ; BSR set to: 0
  1525                           ;main.c: 323: msgAnswer[i + 1] = btnMsg[i];
  1526  002384  51B5               	movf	main@i& (0+255),w,b
  1527  002386  2587               	addwf	main@btnMsg_320& (0+255),w,b
  1528  002388  6ED9               	movwf	fsr2l,c
  1529  00238A  0E00               	movlw	0
  1530  00238C  2188               	addwfc	(main@btnMsg_320+1)& (0+255),w,b
  1531  00238E  6EDA               	movwf	fsr2h,c
  1532  002390  51B5               	movf	main@i& (0+255),w,b
  1533  002392  6E24               	movwf	??_main& (0+255),c
  1534  002394  6A25               	clrf	(??_main+1)& (0+255),c
  1535  002396  0E01               	movlw	1
  1536  002398  2624               	addwf	??_main,f,c
  1537  00239A  0E00               	movlw	0
  1538  00239C  2225               	addwfc	??_main+1,f,c
  1539  00239E  0E89               	movlw	low main@msgAnswer
  1540  0023A0  2424               	addwf	??_main,w,c
  1541  0023A2  6EE1               	movwf	fsr1l,c
  1542  0023A4  0E00               	movlw	high main@msgAnswer
  1543  0023A6  2025               	addwfc	??_main+1,w,c
  1544  0023A8  6EE2               	movwf	fsr1h,c
  1545  0023AA  006F FF7F FFE7     	movff	indf2,indf1
  1546                           
  1547                           ; BSR set to: 0
  1548  0023B0  2BB5               	incf	main@i& (0+255),f,b
  1549  0023B2  D7E4               	goto	l3724
  1550  0023B4                     l3738:
  1551                           
  1552                           ; BSR set to: 0
  1553                           ;main.c: 333: if (!gcpLocked) {
  1554  0023B4  51B1               	movf	main@gcpLocked& (0+255),w,b
  1555  0023B6  A4D8               	btfss	status,2,c
  1556  0023B8  D704               	goto	l134
  1557                           
  1558                           ; BSR set to: 0
  1559                           ;main.c: 334: buttonsBuildLUTs();
  1560  0023BA  ECF5  F016         	call	_buttonsBuildLUTs	;wreg free
  1561  0023BE  D6DF               	goto	l132
  1562  0023C0                     l3748:
  1563                           
  1564                           ; BSR set to: 0
  1565                           ;main.c: 344: SIClear();
  1566  0023C0  EC59  F01A         	call	_SIClear	;wreg free
  1567                           
  1568                           ;main.c: 345: break;
  1569  0023C4  D666               	goto	l3526
  1570  0023C6                     l3752:
  1571                           
  1572                           ; BSR set to: 0
  1573  0023C6  5160               	movf	main@cmd& (0+255),w,b
  1574                           
  1575                           ; Switch size 1, requested type "simple"
  1576                           ; Number of cases is 16, Range of values is 0 to 255
  1577                           ; switch strategies available:
  1578                           ; Name         Instructions Cycles
  1579                           ; simple_byte           49    25 (average)
  1580                           ;	Chosen strategy is simple_byte
  1581  0023C8  0A00               	xorlw	0	; case 0
  1582  0023CA  B4D8               	btfsc	status,2,c
  1583  0023CC  D67F               	goto	l3546
  1584  0023CE  0A10               	xorlw	16	; case 16
  1585  0023D0  B4D8               	btfsc	status,2,c
  1586  0023D2  D6BD               	goto	l3560
  1587  0023D4  0A01               	xorlw	1	; case 17
  1588  0023D6  B4D8               	btfsc	status,2,c
  1589  0023D8  D6DE               	goto	l3576
  1590  0023DA  0A03               	xorlw	3	; case 18
  1591  0023DC  B4D8               	btfsc	status,2,c
  1592  0023DE  D6F3               	goto	l3584
  1593  0023E0  0A01               	xorlw	1	; case 19
  1594  0023E2  B4D8               	btfsc	status,2,c
  1595  0023E4  D718               	goto	l3614
  1596  0023E6  0A07               	xorlw	7	; case 20
  1597  0023E8  B4D8               	btfsc	status,2,c
  1598  0023EA  D755               	goto	l156
  1599  0023EC  0A01               	xorlw	1	; case 21
  1600  0023EE  B4D8               	btfsc	status,2,c
  1601  0023F0  D754               	goto	l3652
  1602  0023F2  0A03               	xorlw	3	; case 22
  1603  0023F4  B4D8               	btfsc	status,2,c
  1604  0023F6  D761               	goto	l3662
  1605  0023F8  0A01               	xorlw	1	; case 23
  1606  0023FA  B4D8               	btfsc	status,2,c
  1607  0023FC  D76C               	goto	l3678
  1608  0023FE  0A0F               	xorlw	15	; case 24
  1609  002400  B4D8               	btfsc	status,2,c
  1610  002402  D777               	goto	l3694
  1611  002404  0A01               	xorlw	1	; case 25
  1612  002406  B4D8               	btfsc	status,2,c
  1613  002408  D7A9               	goto	l3716
  1614  00240A  0A39               	xorlw	57	; case 32
  1615  00240C  B4D8               	btfsc	status,2,c
  1616  00240E  D7D2               	goto	l3738
  1617  002410  0A60               	xorlw	96	; case 64
  1618  002412  B4D8               	btfsc	status,2,c
  1619  002414  D66A               	goto	l3552
  1620  002416  0A01               	xorlw	1	; case 65
  1621  002418  B4D8               	btfsc	status,2,c
  1622  00241A  D67C               	goto	l3556
  1623  00241C  0A03               	xorlw	3	; case 66
  1624  00241E  B4D8               	btfsc	status,2,c
  1625  002420  D679               	goto	l3556
  1626  002422  0ABD               	xorlw	189	; case 255
  1627  002424  B4D8               	btfsc	status,2,c
  1628  002426  D652               	goto	l3546
  1629  002428  D7CB               	goto	l3748
  1630  00242A                     __end_of_main:
  1631                           	opt callstack 0
  1632                           
  1633 ;; *************** function _portsInit *****************
  1634 ;; Defined at:
  1635 ;;		line 353 in file "main.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;		None
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;  state           1    0[COMRAM] unsigned char 
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  1    wreg      void 
  1642 ;; Registers used:
  1643 ;;		wreg, status,2
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1649 ;;      Params:         0       0       0       0       0       0       0       0       0
  1650 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1651 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1652 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1653 ;;Total ram usage:        1 bytes
  1654 ;; Hardware stack levels used:    1
  1655 ;; Hardware stack levels required when called:    2
  1656 ;; This function calls:
  1657 ;;		Nothing
  1658 ;; This function is called by:
  1659 ;;		_main
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text1
  1664  0031DA                     __ptext1:
  1665                           	opt callstack 0
  1666  0031DA                     _portsInit:
  1667                           	opt callstack 28
  1668                           
  1669                           ;main.c: 355: bool state = (unsigned char)GIE;
  1670                           
  1671                           ; BSR set to: 0
  1672                           ;incstack = 0
  1673  0031DA  0E00               	movlw	0
  1674  0031DC  BED2               	btfsc	16338,7,c	;volatile
  1675  0031DE  0E01               	movlw	1
  1676  0031E0  6E01               	movwf	portsInit@state,c
  1677                           
  1678                           ;main.c: 356: GIE = 0;
  1679  0031E2  9ED2               	bcf	16338,7,c	;volatile
  1680                           
  1681                           ;main.c: 357: PPSLOCK = 0x55;
  1682  0031E4  0E55               	movlw	85
  1683  0031E6  013A               	movlb	58	; () banked
  1684  0031E8  6FBF               	movwf	191,b	;volsfr
  1685                           
  1686                           ;main.c: 358: PPSLOCK = 0xAA;
  1687  0031EA  0EAA               	movlw	170
  1688  0031EC  6FBF               	movwf	191,b	;volsfr
  1689                           
  1690                           ; BSR set to: 58
  1691                           ;main.c: 359: PPSLOCKbits.PPSLOCKED = 0x00;
  1692  0031EE  91BF               	bcf	191,0,b	;volsfr
  1693                           
  1694                           ;main.c: 363: T6INPPS = 0x0C;
  1695  0031F0  0E0C               	movlw	12
  1696  0031F2  6FCC               	movwf	204,b	;volatile
  1697                           
  1698                           ;main.c: 364: SMT1SIGPPS = 0x0C;
  1699  0031F4  0E0C               	movlw	12
  1700  0031F6  6FD2               	movwf	210,b	;volatile
  1701                           
  1702                           ;main.c: 367: RB4PPS = 0x04;
  1703  0031F8  0E04               	movlw	4
  1704  0031FA  6F0C               	movwf	12,b	;volatile
  1705                           
  1706                           ;main.c: 372: PPSLOCK = 0x55;
  1707  0031FC  0E55               	movlw	85
  1708  0031FE  6FBF               	movwf	191,b	;volsfr
  1709                           
  1710                           ;main.c: 373: PPSLOCK = 0xAA;
  1711  003200  0EAA               	movlw	170
  1712  003202  6FBF               	movwf	191,b	;volsfr
  1713                           
  1714                           ; BSR set to: 58
  1715                           ;main.c: 374: PPSLOCKbits.PPSLOCKED = 0x01;
  1716  003204  81BF               	bsf	191,0,b	;volsfr
  1717                           
  1718                           ; BSR set to: 58
  1719                           ;main.c: 375: GIE = state;
  1720  003206  A001               	btfss	portsInit@state,0,c
  1721  003208  D002               	goto	u1720
  1722  00320A  8ED2               	bsf	16338,7,c	;volatile
  1723  00320C  D001               	goto	u1735
  1724  00320E                     u1720:
  1725  00320E  9ED2               	bcf	16338,7,c	;volatile
  1726  003210                     u1735:
  1727                           
  1728                           ;main.c: 377: LATB = 0xFF;
  1729  003210  68BB               	setf	16315,c	;volatile
  1730                           
  1731                           ;main.c: 380: TRISA = 0xFF;
  1732  003212  68C2               	setf	16322,c	;volatile
  1733                           
  1734                           ;main.c: 381: TRISB = 0xFF;
  1735  003214  68C3               	setf	16323,c	;volatile
  1736                           
  1737                           ;main.c: 382: TRISC = 0xFF;
  1738  003216  68C4               	setf	16324,c	;volatile
  1739                           
  1740                           ;main.c: 383: ANSELA = 0x03;
  1741  003218  0E03               	movlw	3
  1742  00321A  013A               	movlb	58	; () banked
  1743  00321C  6F40               	movwf	64,b	;volatile
  1744                           
  1745                           ;main.c: 384: ANSELB = 0x00;
  1746  00321E  0E00               	movlw	0
  1747  003220  6F50               	movwf	80,b	;volatile
  1748                           
  1749                           ;main.c: 385: ANSELC = 0x1E;
  1750  003222  0E1E               	movlw	30
  1751  003224  6F60               	movwf	96,b	;volatile
  1752                           
  1753                           ;main.c: 386: WPUA = 0xFC;
  1754  003226  0EFC               	movlw	252
  1755  003228  6F41               	movwf	65,b	;volatile
  1756                           
  1757                           ;main.c: 387: WPUB = 0x3F;
  1758  00322A  0E3F               	movlw	63
  1759  00322C  6F51               	movwf	81,b	;volatile
  1760                           
  1761                           ;main.c: 388: WPUC = 0xE1;
  1762  00322E  0EE1               	movlw	225
  1763  003230  6F61               	movwf	97,b	;volatile
  1764                           
  1765                           ;main.c: 389: ODCONA = 0x00;
  1766  003232  0E00               	movlw	0
  1767  003234  6F42               	movwf	66,b	;volatile
  1768                           
  1769                           ;main.c: 390: ODCONB = 0x10;
  1770  003236  0E10               	movlw	16
  1771  003238  6F52               	movwf	82,b	;volatile
  1772                           
  1773                           ;main.c: 391: ODCONC = 0x00;
  1774  00323A  0E00               	movlw	0
  1775  00323C  6F62               	movwf	98,b	;volatile
  1776                           
  1777                           ; BSR set to: 58
  1778  00323E  0012               	return		;funcret
  1779  003240                     __end_of_portsInit:
  1780                           	opt callstack 0
  1781                           
  1782 ;; *************** function _configInit *****************
  1783 ;; Defined at:
  1784 ;;		line 31 in file "config.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;		None
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;  data            2    8[COMRAM] PTR unsigned char 
  1789 ;;		 -> config(24), 
  1790 ;;  i               1   10[COMRAM] unsigned char 
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  1    wreg      void 
  1793 ;; Registers used:
  1794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1800 ;;      Params:         0       0       0       0       0       0       0       0       0
  1801 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1802 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1803 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1804 ;;Total ram usage:        3 bytes
  1805 ;; Hardware stack levels used:    1
  1806 ;; Hardware stack levels required when called:    5
  1807 ;; This function calls:
  1808 ;;		_EEPROMReadByte
  1809 ;;		_configFlashAll
  1810 ;;		_configSetDefault
  1811 ;; This function is called by:
  1812 ;;		_main
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text2
  1817  003240                     __ptext2:
  1818                           	opt callstack 0
  1819  003240                     _configInit:
  1820                           	opt callstack 25
  1821                           
  1822                           ;config.c: 32: uint8_t* data = (uint8_t*)&config;
  1823                           
  1824                           ; BSR set to: 58
  1825                           ;incstack = 0
  1826  003240  0EB6               	movlw	low _config
  1827  003242  6E09               	movwf	configInit@data,c
  1828  003244  0E00               	movlw	high _config
  1829  003246  6E0A               	movwf	configInit@data+1,c
  1830                           
  1831                           ;config.c: 33: uint8_t i;;config.c: 34: for (i = 0; i < sizeof(config_t); i++) {
  1832  003248  0E00               	movlw	0
  1833  00324A  6E0B               	movwf	configInit@i,c
  1834  00324C                     l209:
  1835  00324C  0004               	clrwdt		;# 
  1836                           
  1837                           ;config.c: 36: data[i] = EEPROMReadByte(i);
  1838  00324E  500B               	movf	configInit@i,w,c
  1839  003250  2409               	addwf	configInit@data,w,c
  1840  003252  6ED9               	movwf	fsr2l,c
  1841  003254  0E00               	movlw	0
  1842  003256  200A               	addwfc	configInit@data+1,w,c
  1843  003258  6EDA               	movwf	fsr2h,c
  1844  00325A  500B               	movf	configInit@i,w,c
  1845  00325C  EC46  F01A         	call	_EEPROMReadByte
  1846  003260  6EDF               	movwf	indf2,c
  1847                           
  1848                           ;config.c: 39: if (i == 3U && config.magicCode != 0x322B4347UL) {
  1849  003262  0E03               	movlw	3
  1850  003264  180B               	xorwf	configInit@i,w,c
  1851  003266  A4D8               	btfss	status,2,c
  1852  003268  D012               	goto	l2878
  1853  00326A  0E47               	movlw	71
  1854  00326C  0100               	movlb	0	; () banked
  1855  00326E  19B6               	xorwf	_config& (0+255),w,b
  1856  003270  E10A               	bnz	u1750
  1857  003272  0E43               	movlw	67
  1858  003274  19B7               	xorwf	(_config+1)& (0+255),w,b
  1859  003276  E107               	bnz	u1750
  1860  003278  0E2B               	movlw	43
  1861  00327A  19B8               	xorwf	(_config+2)& (0+255),w,b
  1862  00327C  E104               	bnz	u1750
  1863  00327E  0E32               	movlw	50
  1864  003280  19B9               	xorwf	(_config+3)& (0+255),w,b
  1865  003282  B4D8               	btfsc	status,2,c
  1866  003284  D004               	goto	l2878
  1867  003286                     u1750:
  1868                           
  1869                           ; BSR set to: 0
  1870                           ;config.c: 41: configSetDefault();
  1871  003286  EC7D  F018         	call	_configSetDefault	;wreg free
  1872                           
  1873                           ;config.c: 42: configFlashAll();
  1874  00328A  ECF2  F019         	call	_configFlashAll	;wreg free
  1875  00328E                     l2878:
  1876  00328E  2A0B               	incf	configInit@i,f,c
  1877  003290  0E17               	movlw	23
  1878  003292  640B               	cpfsgt	configInit@i,c
  1879  003294  D7DB               	goto	l209
  1880  003296  0012               	return	
  1881  003298                     __end_of_configInit:
  1882                           	opt callstack 0
  1883                           
  1884 ;; *************** function _configSetDefault *****************
  1885 ;; Defined at:
  1886 ;;		line 47 in file "config.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;		None
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;		None
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  1    wreg      void 
  1893 ;; Registers used:
  1894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1900 ;;      Params:         0       0       0       0       0       0       0       0       0
  1901 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1902 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1903 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1904 ;;Total ram usage:        0 bytes
  1905 ;; Hardware stack levels used:    1
  1906 ;; Hardware stack levels required when called:    3
  1907 ;; This function calls:
  1908 ;;		_memset
  1909 ;; This function is called by:
  1910 ;;		_main
  1911 ;;		_configInit
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           	psect	text3
  1916  0030FA                     __ptext3:
  1917                           	opt callstack 0
  1918  0030FA                     _configSetDefault:
  1919                           	opt callstack 27
  1920                           
  1921                           ;config.c: 49: memset((void*)&config, 0, sizeof(config_t));
  1922                           
  1923                           ;incstack = 0
  1924  0030FA  0EB6               	movlw	low _config
  1925  0030FC  6E01               	movwf	memset@p1,c
  1926  0030FE  0E00               	movlw	high _config
  1927  003100  6E02               	movwf	memset@p1+1,c
  1928  003102  0E00               	movlw	0
  1929  003104  6E04               	movwf	memset@c+1,c
  1930  003106  0E00               	movlw	0
  1931  003108  6E03               	movwf	memset@c,c
  1932  00310A  0E00               	movlw	0
  1933  00310C  6E06               	movwf	memset@n+1,c
  1934  00310E  0E18               	movlw	24
  1935  003110  6E05               	movwf	memset@n,c
  1936  003112  EC8C  F019         	call	_memset	;wreg free
  1937                           
  1938                           ;config.c: 52: config.magicCode = 0x322B4347UL;
  1939  003116  0E47               	movlw	71
  1940  003118  0100               	movlb	0	; () banked
  1941  00311A  6FB6               	movwf	_config& (0+255),b
  1942  00311C  0E43               	movlw	67
  1943  00311E  6FB7               	movwf	(_config+1)& (0+255),b
  1944  003120  0E2B               	movlw	43
  1945  003122  6FB8               	movwf	(_config+2)& (0+255),b
  1946  003124  0E32               	movlw	50
  1947  003126  6FB9               	movwf	(_config+3)& (0+255),b
  1948                           
  1949                           ; BSR set to: 0
  1950                           ;config.c: 53: config.version = (((2U & 0x1FFF) << 3) | (0U & 0x0007));
  1951  003128  0E00               	movlw	0
  1952  00312A  6FBB               	movwf	(_config+5)& (0+255),b
  1953  00312C  0E10               	movlw	16
  1954  00312E  6FBA               	movwf	(_config+4)& (0+255),b
  1955                           
  1956                           ; BSR set to: 0
  1957                           ;config.c: 56: config.SXMin = 0x00;
  1958  003130  0E00               	movlw	0
  1959  003132  6FBC               	movwf	(_config+6)& (0+255),b
  1960                           
  1961                           ; BSR set to: 0
  1962                           ;config.c: 57: config.SXMax = 0xFF;
  1963  003134  69BD               	setf	(_config+7)& (0+255),b
  1964                           
  1965                           ; BSR set to: 0
  1966                           ;config.c: 58: config.SYMin = 0x00;
  1967  003136  0E00               	movlw	0
  1968  003138  6FBE               	movwf	(_config+8)& (0+255),b
  1969                           
  1970                           ; BSR set to: 0
  1971                           ;config.c: 59: config.SYMax = 0xFF;
  1972  00313A  69BF               	setf	(_config+9)& (0+255),b
  1973                           
  1974                           ; BSR set to: 0
  1975                           ;config.c: 60: config.CXMin = 0x00;
  1976  00313C  0E00               	movlw	0
  1977  00313E  6FC0               	movwf	(_config+10)& (0+255),b
  1978                           
  1979                           ; BSR set to: 0
  1980                           ;config.c: 61: config.CXMax = 0xFF;
  1981  003140  69C1               	setf	(_config+11)& (0+255),b
  1982                           
  1983                           ; BSR set to: 0
  1984                           ;config.c: 62: config.CYMin = 0x00;
  1985  003142  0E00               	movlw	0
  1986  003144  6FC2               	movwf	(_config+12)& (0+255),b
  1987                           
  1988                           ; BSR set to: 0
  1989                           ;config.c: 63: config.CYMax = 0xFF;
  1990  003146  69C3               	setf	(_config+13)& (0+255),b
  1991                           
  1992                           ; BSR set to: 0
  1993                           ;config.c: 64: config.SXChan = 0x02;
  1994  003148  0E02               	movlw	2
  1995  00314A  6FC4               	movwf	(_config+14)& (0+255),b
  1996                           
  1997                           ; BSR set to: 0
  1998                           ;config.c: 65: config.SYChan = 0x03;
  1999  00314C  0E03               	movlw	3
  2000  00314E  6FC5               	movwf	(_config+15)& (0+255),b
  2001                           
  2002                           ; BSR set to: 0
  2003                           ;config.c: 66: config.CXChan = 0x00;
  2004  003150  0E00               	movlw	0
  2005  003152  6FC6               	movwf	(_config+16)& (0+255),b
  2006                           
  2007                           ; BSR set to: 0
  2008                           ;config.c: 67: config.CYChan = 0x01;
  2009  003154  0E01               	movlw	1
  2010  003156  6FC7               	movwf	(_config+17)& (0+255),b
  2011                           
  2012                           ; BSR set to: 0
  2013                           ;config.c: 68: config.axInvert = 0x00;
  2014  003158  0E00               	movlw	0
  2015  00315A  6FC8               	movwf	(_config+18)& (0+255),b
  2016                           
  2017                           ; BSR set to: 0
  2018                           ;config.c: 69: config.SDeadzone = 0x18;
  2019  00315C  0E18               	movlw	24
  2020  00315E  6FC9               	movwf	(_config+19)& (0+255),b
  2021                           
  2022                           ; BSR set to: 0
  2023                           ;config.c: 70: config.CDeadzone = 0x18;
  2024  003160  0E18               	movlw	24
  2025  003162  6FCA               	movwf	(_config+20)& (0+255),b
  2026                           
  2027                           ; BSR set to: 0
  2028                           ;config.c: 71: config.deadzoneMode = 1;
  2029  003164  0E01               	movlw	1
  2030  003166  6FCB               	movwf	(_config+21)& (0+255),b
  2031                           
  2032                           ; BSR set to: 0
  2033                           ;config.c: 74: config.rumbleIntensity = 0xFF;
  2034  003168  69CC               	setf	(_config+22)& (0+255),b
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;config.c: 77: config.triggersMode = 0;
  2038  00316A  0E00               	movlw	0
  2039  00316C  6FCD               	movwf	(_config+23)& (0+255),b
  2040                           
  2041                           ; BSR set to: 0
  2042  00316E  0012               	return		;funcret
  2043  003170                     __end_of_configSetDefault:
  2044                           	opt callstack 0
  2045                           
  2046 ;; *************** function _configFlashAll *****************
  2047 ;; Defined at:
  2048 ;;		line 80 in file "config.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;		None
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;  data            2    2[COMRAM] PTR unsigned char 
  2053 ;;		 -> config(24), 
  2054 ;;  i               1    4[COMRAM] unsigned char 
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  1    wreg      void 
  2057 ;; Registers used:
  2058 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2064 ;;      Params:         0       0       0       0       0       0       0       0       0
  2065 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2066 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2067 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2068 ;;Total ram usage:        3 bytes
  2069 ;; Hardware stack levels used:    1
  2070 ;; Hardware stack levels required when called:    4
  2071 ;; This function calls:
  2072 ;;		_EEPROMWriteByte
  2073 ;; This function is called by:
  2074 ;;		_main
  2075 ;;		_configInit
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           	psect	text4
  2080  0033E4                     __ptext4:
  2081                           	opt callstack 0
  2082  0033E4                     _configFlashAll:
  2083                           	opt callstack 25
  2084                           
  2085                           ;config.c: 81: uint8_t i;;config.c: 82: uint8_t* data = (uint8_t*)&config;
  2086                           
  2087                           ; BSR set to: 0
  2088                           ;incstack = 0
  2089  0033E4  0EB6               	movlw	low _config
  2090  0033E6  6E03               	movwf	configFlashAll@data,c
  2091  0033E8  0E00               	movlw	high _config
  2092  0033EA  6E04               	movwf	configFlashAll@data+1,c
  2093                           
  2094                           ;config.c: 83: for (i = 0; i < sizeof(config_t); i++) {
  2095  0033EC  0E00               	movlw	0
  2096  0033EE  6E05               	movwf	configFlashAll@i,c
  2097  0033F0                     l2778:
  2098                           
  2099                           ;config.c: 84: EEPROMWriteByte(i, data[i]);
  2100  0033F0  5005               	movf	configFlashAll@i,w,c
  2101  0033F2  2403               	addwf	configFlashAll@data,w,c
  2102  0033F4  6ED9               	movwf	fsr2l,c
  2103  0033F6  0E00               	movlw	0
  2104  0033F8  2004               	addwfc	configFlashAll@data+1,w,c
  2105  0033FA  6EDA               	movwf	fsr2h,c
  2106  0033FC  50DF               	movf	indf2,w,c
  2107  0033FE  6E01               	movwf	EEPROMWriteByte@data,c
  2108  003400  5005               	movf	configFlashAll@i,w,c
  2109  003402  EC34  F01A         	call	_EEPROMWriteByte
  2110  003406  2A05               	incf	configFlashAll@i,f,c
  2111  003408  0E17               	movlw	23
  2112  00340A  6405               	cpfsgt	configFlashAll@i,c
  2113  00340C  D7F1               	goto	l2778
  2114  00340E  0012               	return	
  2115  003410                     __end_of_configFlashAll:
  2116                           	opt callstack 0
  2117                           
  2118 ;; *************** function _EEPROMWriteByte *****************
  2119 ;; Defined at:
  2120 ;;		line 44 in file "nvm.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;  address         1    wreg     unsigned char 
  2123 ;;  data            1    0[COMRAM] unsigned char 
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;  address         1    1[COMRAM] unsigned char 
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  1    wreg      void 
  2128 ;; Registers used:
  2129 ;;		wreg, status,2, cstack
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2135 ;;      Params:         1       0       0       0       0       0       0       0       0
  2136 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2137 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2138 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2139 ;;Total ram usage:        2 bytes
  2140 ;; Hardware stack levels used:    1
  2141 ;; Hardware stack levels required when called:    3
  2142 ;; This function calls:
  2143 ;;		_NVMUnlock
  2144 ;; This function is called by:
  2145 ;;		_main
  2146 ;;		_configFlashAll
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           	psect	text5
  2151  003468                     __ptext5:
  2152                           	opt callstack 0
  2153  003468                     _EEPROMWriteByte:
  2154                           	opt callstack 25
  2155                           
  2156                           ;incstack = 0
  2157                           ;EEPROMWriteByte@address stored from wreg
  2158  003468  6E02               	movwf	EEPROMWriteByte@address,c
  2159                           
  2160                           ;nvm.c: 45: NVMCON1 = 0;
  2161  00346A  0E00               	movlw	0
  2162  00346C  0139               	movlb	57	; () banked
  2163  00346E  6FE5               	movwf	229,b	;volsfr
  2164                           
  2165                           ; BSR set to: 57
  2166                           ;nvm.c: 46: NVMADRL = address;
  2167  003470  0060  F00B  F9E0   	movff	EEPROMWriteByte@address,14816	;volatile
  2168                           
  2169                           ; BSR set to: 57
  2170                           ;nvm.c: 47: NVMDAT = data;
  2171  003476  0060  F007  F9E3   	movff	EEPROMWriteByte@data,14819	;volatile
  2172                           
  2173                           ; BSR set to: 57
  2174                           ;nvm.c: 48: NVMCON1bits.WREN = 1;
  2175  00347C  85E5               	bsf	229,2,b	;volsfr
  2176                           
  2177                           ; BSR set to: 57
  2178                           ;nvm.c: 49: NVMUnlock();
  2179  00347E  EC50  F01A         	call	_NVMUnlock	;wreg free
  2180  003482                     l741:
  2181  003482  0139               	movlb	57	; () banked
  2182  003484  B3E5               	btfsc	229,1,b	;volsfr
  2183  003486  D7FD               	goto	l741
  2184                           
  2185                           ; BSR set to: 57
  2186                           ;nvm.c: 51: NVMCON1bits.WREN = 0;
  2187  003488  95E5               	bcf	229,2,b	;volsfr
  2188                           
  2189                           ; BSR set to: 57
  2190  00348A  0012               	return		;funcret
  2191  00348C                     __end_of_EEPROMWriteByte:
  2192                           	opt callstack 0
  2193                           
  2194 ;; *************** function _NVMUnlock *****************
  2195 ;; Defined at:
  2196 ;;		line 29 in file "nvm.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;		None
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;		None
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  1    wreg      void 
  2203 ;; Registers used:
  2204 ;;		wreg, status,2
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2210 ;;      Params:         0       0       0       0       0       0       0       0       0
  2211 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2212 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2213 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2214 ;;Total ram usage:        0 bytes
  2215 ;; Hardware stack levels used:    1
  2216 ;; Hardware stack levels required when called:    2
  2217 ;; This function calls:
  2218 ;;		Nothing
  2219 ;; This function is called by:
  2220 ;;		_EEPROMWriteByte
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224                           	psect	text6
  2225  0034A0                     __ptext6:
  2226                           	opt callstack 0
  2227  0034A0                     _NVMUnlock:
  2228                           	opt callstack 25
  2229                           
  2230                           ;nvm.c: 30: INTCON0bits.GIE = 0;
  2231                           
  2232                           ; BSR set to: 57
  2233                           ;incstack = 0
  2234  0034A0  9ED2               	bcf	16338,7,c	;volatile
  2235                           
  2236                           ;nvm.c: 31: NVMCON2 = 0x55;
  2237  0034A2  0E55               	movlw	85
  2238  0034A4  0139               	movlb	57	; () banked
  2239  0034A6  6FE6               	movwf	230,b	;volsfr
  2240                           
  2241                           ;nvm.c: 32: NVMCON2 = 0xAA;
  2242  0034A8  0EAA               	movlw	170
  2243  0034AA  6FE6               	movwf	230,b	;volsfr
  2244                           
  2245                           ; BSR set to: 57
  2246                           ;nvm.c: 33: NVMCON1bits.WR = 1;
  2247  0034AC  83E5               	bsf	229,1,b	;volsfr
  2248                           
  2249                           ; BSR set to: 57
  2250                           ;nvm.c: 34: INTCON0bits.GIE = 1;
  2251  0034AE  8ED2               	bsf	16338,7,c	;volatile
  2252                           
  2253                           ; BSR set to: 57
  2254  0034B0  0012               	return		;funcret
  2255  0034B2                     __end_of_NVMUnlock:
  2256                           	opt callstack 0
  2257                           
  2258 ;; *************** function _EEPROMReadByte *****************
  2259 ;; Defined at:
  2260 ;;		line 37 in file "nvm.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;  address         1    wreg     unsigned char 
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;  address         1    0[COMRAM] unsigned char 
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      unsigned char 
  2267 ;; Registers used:
  2268 ;;		wreg, status,2
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2274 ;;      Params:         0       0       0       0       0       0       0       0       0
  2275 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2276 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2277 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2278 ;;Total ram usage:        1 bytes
  2279 ;; Hardware stack levels used:    1
  2280 ;; Hardware stack levels required when called:    2
  2281 ;; This function calls:
  2282 ;;		Nothing
  2283 ;; This function is called by:
  2284 ;;		_main
  2285 ;;		_configInit
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text7
  2290  00348C                     __ptext7:
  2291                           	opt callstack 0
  2292  00348C                     _EEPROMReadByte:
  2293                           	opt callstack 27
  2294                           
  2295                           ; BSR set to: 57
  2296                           ;incstack = 0
  2297                           ;EEPROMReadByte@address stored from wreg
  2298  00348C  6E01               	movwf	EEPROMReadByte@address,c
  2299                           
  2300                           ;nvm.c: 38: NVMCON1 = 0;
  2301  00348E  0E00               	movlw	0
  2302  003490  0139               	movlb	57	; () banked
  2303  003492  6FE5               	movwf	229,b	;volsfr
  2304                           
  2305                           ; BSR set to: 57
  2306                           ;nvm.c: 39: NVMADRL = address;
  2307  003494  0060  F007  F9E0   	movff	EEPROMReadByte@address,14816	;volatile
  2308                           
  2309                           ; BSR set to: 57
  2310                           ;nvm.c: 40: NVMCON1bits.RD = 1;
  2311  00349A  81E5               	bsf	229,0,b	;volsfr
  2312                           
  2313                           ; BSR set to: 57
  2314                           ;nvm.c: 41: return NVMDAT;
  2315  00349C  51E3               	movf	227,w,b	;volatile
  2316                           
  2317                           ; BSR set to: 57
  2318  00349E  0012               	return		;funcret
  2319  0034A0                     __end_of_EEPROMReadByte:
  2320                           	opt callstack 0
  2321                           
  2322 ;; *************** function _buttonsUpdate *****************
  2323 ;; Defined at:
  2324 ;;		line 86 in file "buttons.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;		None
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;  toggledButto    3    4[COMRAM] struct .
  2329 ;;  i               1    3[COMRAM] unsigned char 
  2330 ;;  PC              1    2[COMRAM] unsigned char 
  2331 ;;  PB              1    1[COMRAM] unsigned char 
  2332 ;;  PA              1    0[COMRAM] unsigned char 
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  1    wreg      void 
  2335 ;; Registers used:
  2336 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2342 ;;      Params:         0       0       0       0       0       0       0       0       0
  2343 ;;      Locals:         7       0       0       0       0       0       0       0       0
  2344 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2345 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2346 ;;Total ram usage:        7 bytes
  2347 ;; Hardware stack levels used:    1
  2348 ;; Hardware stack levels required when called:    2
  2349 ;; This function calls:
  2350 ;;		Nothing
  2351 ;; This function is called by:
  2352 ;;		_main
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           	psect	text8
  2357  00242A                     __ptext8:
  2358                           	opt callstack 0
  2359  00242A                     _buttonsUpdate:
  2360                           	opt callstack 28
  2361                           
  2362                           ;buttons.c: 87: uint8_t i;;buttons.c: 88: uint8_t PA, PB, PC;;buttons.c: 89: inButtons_t
      +                           toggledButtons;;buttons.c: 92: PA = PORTA;
  2363                           
  2364                           ; BSR set to: 57
  2365                           ;incstack = 0
  2366  00242A  006F FF28  F001    	movff	16330,buttonsUpdate@PA	;volatile
  2367                           
  2368                           ;buttons.c: 93: PB = PORTB;
  2369  002430  006F FF2C  F002    	movff	16331,buttonsUpdate@PB	;volatile
  2370                           
  2371                           ;buttons.c: 94: PC = PORTC;
  2372  002436  006F FF30  F003    	movff	16332,buttonsUpdate@PC	;volatile
  2373                           
  2374                           ;buttons.c: 95: toggledButtons.PORTA = (uint8_t)(PA ^ prevButtons.PORTA);
  2375  00243C  5039               	movf	_prevButtons,w,c
  2376  00243E  1801               	xorwf	buttonsUpdate@PA,w,c
  2377  002440  6E05               	movwf	buttonsUpdate@toggledButtons,c
  2378                           
  2379                           ;buttons.c: 96: toggledButtons.PORTB = (uint8_t)(PB ^ prevButtons.PORTB);
  2380  002442  503A               	movf	_prevButtons+1,w,c
  2381  002444  1802               	xorwf	buttonsUpdate@PB,w,c
  2382  002446  6E06               	movwf	buttonsUpdate@toggledButtons+1,c
  2383                           
  2384                           ;buttons.c: 97: toggledButtons.PORTC = (uint8_t)(PC ^ prevButtons.PORTC);
  2385  002448  503B               	movf	_prevButtons+2,w,c
  2386  00244A  1803               	xorwf	buttonsUpdate@PC,w,c
  2387  00244C  6E07               	movwf	buttonsUpdate@toggledButtons+2,c
  2388                           
  2389                           ;buttons.c: 99: prevButtons.PORTA = PA;
  2390  00244E  0060  F004  F039   	movff	buttonsUpdate@PA,_prevButtons
  2391                           
  2392                           ;buttons.c: 100: prevButtons.PORTB = PB;
  2393  002454  0060  F008  F03A   	movff	buttonsUpdate@PB,_prevButtons+1
  2394                           
  2395                           ;buttons.c: 101: prevButtons.PORTC = PC;
  2396  00245A  0060  F00C  F03B   	movff	buttonsUpdate@PC,_prevButtons+2
  2397                           
  2398                           ;buttons.c: 104: if (toggledButtons.A) buttonsTimers[BUTTON_A_ID] = 0;
  2399  002460  AE07               	btfss	buttonsUpdate@toggledButtons+2,7,c
  2400  002462  D002               	goto	l3026
  2401  002464  0E00               	movlw	0
  2402  002466  6E26               	movwf	_buttonsTimers,c
  2403  002468                     l3026:
  2404                           
  2405                           ;buttons.c: 105: if (toggledButtons.B) buttonsTimers[BUTTON_B_ID] = 0;
  2406  002468  AC07               	btfss	buttonsUpdate@toggledButtons+2,6,c
  2407  00246A  D002               	goto	l3030
  2408  00246C  0E00               	movlw	0
  2409  00246E  6E27               	movwf	_buttonsTimers+1,c
  2410  002470                     l3030:
  2411                           
  2412                           ;buttons.c: 106: if (toggledButtons.X) buttonsTimers[BUTTON_X_ID] = 0;
  2413  002470  A606               	btfss	buttonsUpdate@toggledButtons+1,3,c
  2414  002472  D002               	goto	l3034
  2415  002474  0E00               	movlw	0
  2416  002476  6E28               	movwf	_buttonsTimers+2,c
  2417  002478                     l3034:
  2418                           
  2419                           ;buttons.c: 107: if (toggledButtons.Y) buttonsTimers[BUTTON_Y_ID] = 0;
  2420  002478  A406               	btfss	buttonsUpdate@toggledButtons+1,2,c
  2421  00247A  D002               	goto	l3038
  2422  00247C  0E00               	movlw	0
  2423  00247E  6E29               	movwf	_buttonsTimers+3,c
  2424  002480                     l3038:
  2425                           
  2426                           ;buttons.c: 108: if (toggledButtons.ST) buttonsTimers[BUTTON_ST_ID] = 0;
  2427  002480  AC05               	btfss	buttonsUpdate@toggledButtons,6,c
  2428  002482  D002               	goto	l3042
  2429  002484  0E00               	movlw	0
  2430  002486  6E2A               	movwf	_buttonsTimers+4,c
  2431  002488                     l3042:
  2432                           
  2433                           ;buttons.c: 109: if (toggledButtons.DL) buttonsTimers[BUTTON_DL_ID] = 0;
  2434  002488  A605               	btfss	buttonsUpdate@toggledButtons,3,c
  2435  00248A  D002               	goto	l3046
  2436  00248C  0E00               	movlw	0
  2437  00248E  6E2B               	movwf	_buttonsTimers+5,c
  2438  002490                     l3046:
  2439                           
  2440                           ;buttons.c: 110: if (toggledButtons.DR) buttonsTimers[BUTTON_DR_ID] = 0;
  2441  002490  AA05               	btfss	buttonsUpdate@toggledButtons,5,c
  2442  002492  D002               	goto	l3050
  2443  002494  0E00               	movlw	0
  2444  002496  6E2C               	movwf	_buttonsTimers+6,c
  2445  002498                     l3050:
  2446                           
  2447                           ;buttons.c: 111: if (toggledButtons.DD) buttonsTimers[BUTTON_DD_ID] = 0;
  2448  002498  AE05               	btfss	buttonsUpdate@toggledButtons,7,c
  2449  00249A  D002               	goto	l3054
  2450  00249C  0E00               	movlw	0
  2451  00249E  6E2D               	movwf	_buttonsTimers+7,c
  2452  0024A0                     l3054:
  2453                           
  2454                           ;buttons.c: 112: if (toggledButtons.DU) buttonsTimers[BUTTON_DU_ID] = 0;
  2455  0024A0  A805               	btfss	buttonsUpdate@toggledButtons,4,c
  2456  0024A2  D002               	goto	l3058
  2457  0024A4  0E00               	movlw	0
  2458  0024A6  6E2E               	movwf	_buttonsTimers+8,c
  2459  0024A8                     l3058:
  2460                           
  2461                           ;buttons.c: 113: if (toggledButtons.Z) buttonsTimers[BUTTON_Z_ID] = 0;
  2462  0024A8  A006               	btfss	buttonsUpdate@toggledButtons+1,0,c
  2463  0024AA  D002               	goto	l3062
  2464  0024AC  0E00               	movlw	0
  2465  0024AE  6E2F               	movwf	_buttonsTimers+9,c
  2466  0024B0                     l3062:
  2467                           
  2468                           ;buttons.c: 114: if (toggledButtons.RD) buttonsTimers[BUTTON_RD_ID] = 0;
  2469  0024B0  A206               	btfss	buttonsUpdate@toggledButtons+1,1,c
  2470  0024B2  D002               	goto	l3066
  2471  0024B4  0E00               	movlw	0
  2472  0024B6  6E30               	movwf	_buttonsTimers+10,c
  2473  0024B8                     l3066:
  2474                           
  2475                           ;buttons.c: 115: if (toggledButtons.LD) buttonsTimers[BUTTON_LD_ID] = 0;
  2476  0024B8  A405               	btfss	buttonsUpdate@toggledButtons,2,c
  2477  0024BA  D002               	goto	l3070
  2478  0024BC  0E00               	movlw	0
  2479  0024BE  6E31               	movwf	_buttonsTimers+11,c
  2480  0024C0                     l3070:
  2481                           
  2482                           ;buttons.c: 116: if (toggledButtons.LA) buttonsTimers[BUTTON_LA_ID] = 0;
  2483  0024C0  A007               	btfss	buttonsUpdate@toggledButtons+2,0,c
  2484  0024C2  D002               	goto	l3074
  2485  0024C4  0E00               	movlw	0
  2486  0024C6  6E32               	movwf	_buttonsTimers+12,c
  2487  0024C8                     l3074:
  2488                           
  2489                           ;buttons.c: 117: if (toggledButtons.RA) buttonsTimers[BUTTON_RA_ID] = 0;
  2490  0024C8  AA07               	btfss	buttonsUpdate@toggledButtons+2,5,c
  2491  0024CA  D002               	goto	l3078
  2492  0024CC  0E00               	movlw	0
  2493  0024CE  6E33               	movwf	_buttonsTimers+13,c
  2494  0024D0                     l3078:
  2495                           
  2496                           ;buttons.c: 118: if (toggledButtons.Z2) buttonsTimers[BUTTON_Z2_ID] = 0;
  2497  0024D0  AA06               	btfss	buttonsUpdate@toggledButtons+1,5,c
  2498  0024D2  D002               	goto	l3082
  2499  0024D4  0E00               	movlw	0
  2500  0024D6  6E34               	movwf	_buttonsTimers+14,c
  2501  0024D8                     l3082:
  2502                           
  2503                           ;buttons.c: 120: if (!TMR0IF) return;
  2504  0024D8  0139               	movlb	57	; () banked
  2505  0024DA  AFA3               	btfss	163,7,b	;volatile
  2506  0024DC  0012               	return	
  2507                           
  2508                           ; BSR set to: 57
  2509                           ;buttons.c: 121: TMR0IF = 0;
  2510  0024DE  9FA3               	bcf	163,7,b	;volatile
  2511                           
  2512                           ; BSR set to: 57
  2513                           ;buttons.c: 124: for (i = 0; i < N_BUTTONS; i++) {
  2514  0024E0  0E00               	movlw	0
  2515  0024E2  6E04               	movwf	buttonsUpdate@i,c
  2516  0024E4                     l3092:
  2517                           
  2518                           ;buttons.c: 125: buttonsTimers[i]++;
  2519  0024E4  0E26               	movlw	low _buttonsTimers
  2520  0024E6  2404               	addwf	buttonsUpdate@i,w,c
  2521  0024E8  6ED9               	movwf	fsr2l,c
  2522  0024EA  6ADA               	clrf	fsr2h,c
  2523  0024EC  0E00               	movlw	high _buttonsTimers
  2524  0024EE  22DA               	addwfc	fsr2h,f,c
  2525  0024F0  2ADF               	incf	indf2,f,c
  2526  0024F2  2A04               	incf	buttonsUpdate@i,f,c
  2527  0024F4  0E0E               	movlw	14
  2528  0024F6  6404               	cpfsgt	buttonsUpdate@i,c
  2529  0024F8  D7F5               	goto	l3092
  2530                           
  2531                           ;buttons.c: 126: };buttons.c: 128: outButtons.byte0 = 0x00;
  2532  0024FA  0E00               	movlw	0
  2533  0024FC  6E35               	movwf	_outButtons,c
  2534                           
  2535                           ;buttons.c: 129: outButtons.byte1 = 0x80;
  2536  0024FE  0E80               	movlw	128
  2537  002500  6E36               	movwf	_outButtons+1,c
  2538                           
  2539                           ;buttons.c: 131: if (buttonsTimers[BUTTON_A_ID] >= 10 && !prevButtons.A) { buttonsTimers
      +                          [BUTTON_A_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_A_ID]; } if (buttonsTimer
      +                          s[BUTTON_A_ID] >= 10 && !prevButtons.A) { buttonsTimers[BUTTON_A_ID] = 10; outButtons.by
      +                          te1
  2540  002502  0E09               	movlw	9
  2541  002504  6426               	cpfsgt	_buttonsTimers,c
  2542  002506  D007               	goto	l3108
  2543  002508  BE3B               	btfsc	_prevButtons+2,7,c
  2544  00250A  D005               	goto	l3108
  2545  00250C  0E0A               	movlw	10
  2546  00250E  6E26               	movwf	_buttonsTimers,c
  2547  002510  0100               	movlb	0	; () banked
  2548  002512  51DD               	movf	_buttonsMapByte0& (0+255),w,b
  2549  002514  1235               	iorwf	_outButtons,f,c
  2550  002516                     l3108:
  2551  002516  0E09               	movlw	9
  2552  002518  6426               	cpfsgt	_buttonsTimers,c
  2553  00251A  D007               	goto	l3116
  2554  00251C  BE3B               	btfsc	_prevButtons+2,7,c
  2555  00251E  D005               	goto	l3116
  2556  002520  0E0A               	movlw	10
  2557  002522  6E26               	movwf	_buttonsTimers,c
  2558  002524  0100               	movlb	0	; () banked
  2559  002526  51CE               	movf	_buttonsMapByte1& (0+255),w,b
  2560  002528  1236               	iorwf	_outButtons+1,f,c
  2561  00252A                     l3116:
  2562                           
  2563                           ;buttons.c: 132: if (buttonsTimers[BUTTON_B_ID] >= 10 && !prevButtons.B) { buttonsTimers
      +                          [BUTTON_B_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_B_ID]; } if (buttonsTimer
      +                          s[BUTTON_B_ID] >= 10 && !prevButtons.B) { buttonsTimers[BUTTON_B_ID] = 10; outButtons.by
      +                          te1
  2564  00252A  0E09               	movlw	9
  2565  00252C  6427               	cpfsgt	_buttonsTimers+1,c
  2566  00252E  D007               	goto	l3124
  2567  002530  BC3B               	btfsc	_prevButtons+2,6,c
  2568  002532  D005               	goto	l3124
  2569  002534  0E0A               	movlw	10
  2570  002536  6E27               	movwf	_buttonsTimers+1,c
  2571  002538  0100               	movlb	0	; () banked
  2572  00253A  51DE               	movf	(_buttonsMapByte0+1)& (0+255),w,b
  2573  00253C  1235               	iorwf	_outButtons,f,c
  2574  00253E                     l3124:
  2575  00253E  0E09               	movlw	9
  2576  002540  6427               	cpfsgt	_buttonsTimers+1,c
  2577  002542  D007               	goto	l3132
  2578  002544  BC3B               	btfsc	_prevButtons+2,6,c
  2579  002546  D005               	goto	l3132
  2580  002548  0E0A               	movlw	10
  2581  00254A  6E27               	movwf	_buttonsTimers+1,c
  2582  00254C  0100               	movlb	0	; () banked
  2583  00254E  51CF               	movf	(_buttonsMapByte1+1)& (0+255),w,b
  2584  002550  1236               	iorwf	_outButtons+1,f,c
  2585  002552                     l3132:
  2586                           
  2587                           ;buttons.c: 133: if (buttonsTimers[BUTTON_X_ID] >= 10 && !prevButtons.X) { buttonsTimers
      +                          [BUTTON_X_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_X_ID]; } if (buttonsTimer
      +                          s[BUTTON_X_ID] >= 10 && !prevButtons.X) { buttonsTimers[BUTTON_X_ID] = 10; outButtons.by
      +                          te1
  2588  002552  0E09               	movlw	9
  2589  002554  6428               	cpfsgt	_buttonsTimers+2,c
  2590  002556  D007               	goto	l3140
  2591  002558  B63A               	btfsc	_prevButtons+1,3,c
  2592  00255A  D005               	goto	l3140
  2593  00255C  0E0A               	movlw	10
  2594  00255E  6E28               	movwf	_buttonsTimers+2,c
  2595  002560  0100               	movlb	0	; () banked
  2596  002562  51DF               	movf	(_buttonsMapByte0+2)& (0+255),w,b
  2597  002564  1235               	iorwf	_outButtons,f,c
  2598  002566                     l3140:
  2599  002566  0E09               	movlw	9
  2600  002568  6428               	cpfsgt	_buttonsTimers+2,c
  2601  00256A  D007               	goto	l3148
  2602  00256C  B63A               	btfsc	_prevButtons+1,3,c
  2603  00256E  D005               	goto	l3148
  2604  002570  0E0A               	movlw	10
  2605  002572  6E28               	movwf	_buttonsTimers+2,c
  2606  002574  0100               	movlb	0	; () banked
  2607  002576  51D0               	movf	(_buttonsMapByte1+2)& (0+255),w,b
  2608  002578  1236               	iorwf	_outButtons+1,f,c
  2609  00257A                     l3148:
  2610                           
  2611                           ;buttons.c: 134: if (buttonsTimers[BUTTON_Y_ID] >= 10 && !prevButtons.Y) { buttonsTimers
      +                          [BUTTON_Y_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_Y_ID]; } if (buttonsTimer
      +                          s[BUTTON_Y_ID] >= 10 && !prevButtons.Y) { buttonsTimers[BUTTON_Y_ID] = 10; outButtons.by
      +                          te1
  2612  00257A  0E09               	movlw	9
  2613  00257C  6429               	cpfsgt	_buttonsTimers+3,c
  2614  00257E  D007               	goto	l3156
  2615  002580  B43A               	btfsc	_prevButtons+1,2,c
  2616  002582  D005               	goto	l3156
  2617  002584  0E0A               	movlw	10
  2618  002586  6E29               	movwf	_buttonsTimers+3,c
  2619  002588  0100               	movlb	0	; () banked
  2620  00258A  51E0               	movf	(_buttonsMapByte0+3)& (0+255),w,b
  2621  00258C  1235               	iorwf	_outButtons,f,c
  2622  00258E                     l3156:
  2623  00258E  0E09               	movlw	9
  2624  002590  6429               	cpfsgt	_buttonsTimers+3,c
  2625  002592  D007               	goto	l3164
  2626  002594  B43A               	btfsc	_prevButtons+1,2,c
  2627  002596  D005               	goto	l3164
  2628  002598  0E0A               	movlw	10
  2629  00259A  6E29               	movwf	_buttonsTimers+3,c
  2630  00259C  0100               	movlb	0	; () banked
  2631  00259E  51D1               	movf	(_buttonsMapByte1+3)& (0+255),w,b
  2632  0025A0  1236               	iorwf	_outButtons+1,f,c
  2633  0025A2                     l3164:
  2634                           
  2635                           ;buttons.c: 135: if (buttonsTimers[BUTTON_ST_ID] >= 10 && !prevButtons.ST) { buttonsTime
      +                          rs[BUTTON_ST_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_ST_ID]; } if (buttonsT
      +                          imers[BUTTON_ST_ID] >= 10 && !prevButtons.ST) { buttonsTimers[BUTTON_ST_ID] = 10; outBut
      +                          ton
  2636  0025A2  0E09               	movlw	9
  2637  0025A4  642A               	cpfsgt	_buttonsTimers+4,c
  2638  0025A6  D007               	goto	l3172
  2639  0025A8  BC39               	btfsc	_prevButtons,6,c
  2640  0025AA  D005               	goto	l3172
  2641  0025AC  0E0A               	movlw	10
  2642  0025AE  6E2A               	movwf	_buttonsTimers+4,c
  2643  0025B0  0100               	movlb	0	; () banked
  2644  0025B2  51E1               	movf	(_buttonsMapByte0+4)& (0+255),w,b
  2645  0025B4  1235               	iorwf	_outButtons,f,c
  2646  0025B6                     l3172:
  2647  0025B6  0E09               	movlw	9
  2648  0025B8  642A               	cpfsgt	_buttonsTimers+4,c
  2649  0025BA  D007               	goto	l3180
  2650  0025BC  BC39               	btfsc	_prevButtons,6,c
  2651  0025BE  D005               	goto	l3180
  2652  0025C0  0E0A               	movlw	10
  2653  0025C2  6E2A               	movwf	_buttonsTimers+4,c
  2654  0025C4  0100               	movlb	0	; () banked
  2655  0025C6  51D2               	movf	(_buttonsMapByte1+4)& (0+255),w,b
  2656  0025C8  1236               	iorwf	_outButtons+1,f,c
  2657  0025CA                     l3180:
  2658                           
  2659                           ;buttons.c: 136: if (buttonsTimers[BUTTON_DL_ID] >= 10 && !prevButtons.DL) { buttonsTime
      +                          rs[BUTTON_DL_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_DL_ID]; } if (buttonsT
      +                          imers[BUTTON_DL_ID] >= 10 && !prevButtons.DL) { buttonsTimers[BUTTON_DL_ID] = 10; outBut
      +                          ton
  2660  0025CA  0E09               	movlw	9
  2661  0025CC  642B               	cpfsgt	_buttonsTimers+5,c
  2662  0025CE  D007               	goto	l3188
  2663  0025D0  B639               	btfsc	_prevButtons,3,c
  2664  0025D2  D005               	goto	l3188
  2665  0025D4  0E0A               	movlw	10
  2666  0025D6  6E2B               	movwf	_buttonsTimers+5,c
  2667  0025D8  0100               	movlb	0	; () banked
  2668  0025DA  51E2               	movf	(_buttonsMapByte0+5)& (0+255),w,b
  2669  0025DC  1235               	iorwf	_outButtons,f,c
  2670  0025DE                     l3188:
  2671  0025DE  0E09               	movlw	9
  2672  0025E0  642B               	cpfsgt	_buttonsTimers+5,c
  2673  0025E2  D007               	goto	l3196
  2674  0025E4  B639               	btfsc	_prevButtons,3,c
  2675  0025E6  D005               	goto	l3196
  2676  0025E8  0E0A               	movlw	10
  2677  0025EA  6E2B               	movwf	_buttonsTimers+5,c
  2678  0025EC  0100               	movlb	0	; () banked
  2679  0025EE  51D3               	movf	(_buttonsMapByte1+5)& (0+255),w,b
  2680  0025F0  1236               	iorwf	_outButtons+1,f,c
  2681  0025F2                     l3196:
  2682                           
  2683                           ;buttons.c: 137: if (buttonsTimers[BUTTON_DR_ID] >= 10 && !prevButtons.DR) { buttonsTime
      +                          rs[BUTTON_DR_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_DR_ID]; } if (buttonsT
      +                          imers[BUTTON_DR_ID] >= 10 && !prevButtons.DR) { buttonsTimers[BUTTON_DR_ID] = 10; outBut
      +                          ton
  2684  0025F2  0E09               	movlw	9
  2685  0025F4  642C               	cpfsgt	_buttonsTimers+6,c
  2686  0025F6  D007               	goto	l3204
  2687  0025F8  BA39               	btfsc	_prevButtons,5,c
  2688  0025FA  D005               	goto	l3204
  2689  0025FC  0E0A               	movlw	10
  2690  0025FE  6E2C               	movwf	_buttonsTimers+6,c
  2691  002600  0100               	movlb	0	; () banked
  2692  002602  51E3               	movf	(_buttonsMapByte0+6)& (0+255),w,b
  2693  002604  1235               	iorwf	_outButtons,f,c
  2694  002606                     l3204:
  2695  002606  0E09               	movlw	9
  2696  002608  642C               	cpfsgt	_buttonsTimers+6,c
  2697  00260A  D007               	goto	l3212
  2698  00260C  BA39               	btfsc	_prevButtons,5,c
  2699  00260E  D005               	goto	l3212
  2700  002610  0E0A               	movlw	10
  2701  002612  6E2C               	movwf	_buttonsTimers+6,c
  2702  002614  0100               	movlb	0	; () banked
  2703  002616  51D4               	movf	(_buttonsMapByte1+6)& (0+255),w,b
  2704  002618  1236               	iorwf	_outButtons+1,f,c
  2705  00261A                     l3212:
  2706                           
  2707                           ;buttons.c: 138: if (buttonsTimers[BUTTON_DD_ID] >= 10 && !prevButtons.DD) { buttonsTime
      +                          rs[BUTTON_DD_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_DD_ID]; } if (buttonsT
      +                          imers[BUTTON_DD_ID] >= 10 && !prevButtons.DD) { buttonsTimers[BUTTON_DD_ID] = 10; outBut
      +                          ton
  2708  00261A  0E09               	movlw	9
  2709  00261C  642D               	cpfsgt	_buttonsTimers+7,c
  2710  00261E  D007               	goto	l3220
  2711  002620  BE39               	btfsc	_prevButtons,7,c
  2712  002622  D005               	goto	l3220
  2713  002624  0E0A               	movlw	10
  2714  002626  6E2D               	movwf	_buttonsTimers+7,c
  2715  002628  0100               	movlb	0	; () banked
  2716  00262A  51E4               	movf	(_buttonsMapByte0+7)& (0+255),w,b
  2717  00262C  1235               	iorwf	_outButtons,f,c
  2718  00262E                     l3220:
  2719  00262E  0E09               	movlw	9
  2720  002630  642D               	cpfsgt	_buttonsTimers+7,c
  2721  002632  D007               	goto	l3228
  2722  002634  BE39               	btfsc	_prevButtons,7,c
  2723  002636  D005               	goto	l3228
  2724  002638  0E0A               	movlw	10
  2725  00263A  6E2D               	movwf	_buttonsTimers+7,c
  2726  00263C  0100               	movlb	0	; () banked
  2727  00263E  51D5               	movf	(_buttonsMapByte1+7)& (0+255),w,b
  2728  002640  1236               	iorwf	_outButtons+1,f,c
  2729  002642                     l3228:
  2730                           
  2731                           ;buttons.c: 139: if (buttonsTimers[BUTTON_DU_ID] >= 10 && !prevButtons.DU) { buttonsTime
      +                          rs[BUTTON_DU_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_DU_ID]; } if (buttonsT
      +                          imers[BUTTON_DU_ID] >= 10 && !prevButtons.DU) { buttonsTimers[BUTTON_DU_ID] = 10; outBut
      +                          ton
  2732  002642  0E09               	movlw	9
  2733  002644  642E               	cpfsgt	_buttonsTimers+8,c
  2734  002646  D007               	goto	l3236
  2735  002648  B839               	btfsc	_prevButtons,4,c
  2736  00264A  D005               	goto	l3236
  2737  00264C  0E0A               	movlw	10
  2738  00264E  6E2E               	movwf	_buttonsTimers+8,c
  2739  002650  0100               	movlb	0	; () banked
  2740  002652  51E5               	movf	(_buttonsMapByte0+8)& (0+255),w,b
  2741  002654  1235               	iorwf	_outButtons,f,c
  2742  002656                     l3236:
  2743  002656  0E09               	movlw	9
  2744  002658  642E               	cpfsgt	_buttonsTimers+8,c
  2745  00265A  D007               	goto	l3244
  2746  00265C  B839               	btfsc	_prevButtons,4,c
  2747  00265E  D005               	goto	l3244
  2748  002660  0E0A               	movlw	10
  2749  002662  6E2E               	movwf	_buttonsTimers+8,c
  2750  002664  0100               	movlb	0	; () banked
  2751  002666  51D6               	movf	(_buttonsMapByte1+8)& (0+255),w,b
  2752  002668  1236               	iorwf	_outButtons+1,f,c
  2753  00266A                     l3244:
  2754                           
  2755                           ;buttons.c: 140: if (buttonsTimers[BUTTON_Z_ID] >= 10 && !prevButtons.Z) { buttonsTimers
      +                          [BUTTON_Z_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_Z_ID]; } if (buttonsTimer
      +                          s[BUTTON_Z_ID] >= 10 && !prevButtons.Z) { buttonsTimers[BUTTON_Z_ID] = 10; outButtons.by
      +                          te1
  2756  00266A  0E09               	movlw	9
  2757  00266C  642F               	cpfsgt	_buttonsTimers+9,c
  2758  00266E  D007               	goto	l3252
  2759  002670  B03A               	btfsc	_prevButtons+1,0,c
  2760  002672  D005               	goto	l3252
  2761  002674  0E0A               	movlw	10
  2762  002676  6E2F               	movwf	_buttonsTimers+9,c
  2763  002678  0100               	movlb	0	; () banked
  2764  00267A  51E6               	movf	(_buttonsMapByte0+9)& (0+255),w,b
  2765  00267C  1235               	iorwf	_outButtons,f,c
  2766  00267E                     l3252:
  2767  00267E  0E09               	movlw	9
  2768  002680  642F               	cpfsgt	_buttonsTimers+9,c
  2769  002682  D007               	goto	l3260
  2770  002684  B03A               	btfsc	_prevButtons+1,0,c
  2771  002686  D005               	goto	l3260
  2772  002688  0E0A               	movlw	10
  2773  00268A  6E2F               	movwf	_buttonsTimers+9,c
  2774  00268C  0100               	movlb	0	; () banked
  2775  00268E  51D7               	movf	(_buttonsMapByte1+9)& (0+255),w,b
  2776  002690  1236               	iorwf	_outButtons+1,f,c
  2777  002692                     l3260:
  2778                           
  2779                           ;buttons.c: 141: if (buttonsTimers[BUTTON_RD_ID] >= 10 && !prevButtons.RD) { buttonsTime
      +                          rs[BUTTON_RD_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_RD_ID]; } if (buttonsT
      +                          imers[BUTTON_RD_ID] >= 10 && !prevButtons.RD) { buttonsTimers[BUTTON_RD_ID] = 10; outBut
      +                          ton
  2780  002692  0E09               	movlw	9
  2781  002694  6430               	cpfsgt	_buttonsTimers+10,c
  2782  002696  D007               	goto	l3268
  2783  002698  B23A               	btfsc	_prevButtons+1,1,c
  2784  00269A  D005               	goto	l3268
  2785  00269C  0E0A               	movlw	10
  2786  00269E  6E30               	movwf	_buttonsTimers+10,c
  2787  0026A0  0100               	movlb	0	; () banked
  2788  0026A2  51E7               	movf	(_buttonsMapByte0+10)& (0+255),w,b
  2789  0026A4  1235               	iorwf	_outButtons,f,c
  2790  0026A6                     l3268:
  2791  0026A6  0E09               	movlw	9
  2792  0026A8  6430               	cpfsgt	_buttonsTimers+10,c
  2793  0026AA  D007               	goto	l3276
  2794  0026AC  B23A               	btfsc	_prevButtons+1,1,c
  2795  0026AE  D005               	goto	l3276
  2796  0026B0  0E0A               	movlw	10
  2797  0026B2  6E30               	movwf	_buttonsTimers+10,c
  2798  0026B4  0100               	movlb	0	; () banked
  2799  0026B6  51D8               	movf	(_buttonsMapByte1+10)& (0+255),w,b
  2800  0026B8  1236               	iorwf	_outButtons+1,f,c
  2801  0026BA                     l3276:
  2802                           
  2803                           ;buttons.c: 142: if (buttonsTimers[BUTTON_LD_ID] >= 10 && !prevButtons.LD) { buttonsTime
      +                          rs[BUTTON_LD_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_LD_ID]; } if (buttonsT
      +                          imers[BUTTON_LD_ID] >= 10 && !prevButtons.LD) { buttonsTimers[BUTTON_LD_ID] = 10; outBut
      +                          ton
  2804  0026BA  0E09               	movlw	9
  2805  0026BC  6431               	cpfsgt	_buttonsTimers+11,c
  2806  0026BE  D007               	goto	l3284
  2807  0026C0  B439               	btfsc	_prevButtons,2,c
  2808  0026C2  D005               	goto	l3284
  2809  0026C4  0E0A               	movlw	10
  2810  0026C6  6E31               	movwf	_buttonsTimers+11,c
  2811  0026C8  0100               	movlb	0	; () banked
  2812  0026CA  51E8               	movf	(_buttonsMapByte0+11)& (0+255),w,b
  2813  0026CC  1235               	iorwf	_outButtons,f,c
  2814  0026CE                     l3284:
  2815  0026CE  0E09               	movlw	9
  2816  0026D0  6431               	cpfsgt	_buttonsTimers+11,c
  2817  0026D2  D007               	goto	l3292
  2818  0026D4  B439               	btfsc	_prevButtons,2,c
  2819  0026D6  D005               	goto	l3292
  2820  0026D8  0E0A               	movlw	10
  2821  0026DA  6E31               	movwf	_buttonsTimers+11,c
  2822  0026DC  0100               	movlb	0	; () banked
  2823  0026DE  51D9               	movf	(_buttonsMapByte1+11)& (0+255),w,b
  2824  0026E0  1236               	iorwf	_outButtons+1,f,c
  2825  0026E2                     l3292:
  2826                           
  2827                           ;buttons.c: 143: if (buttonsTimers[BUTTON_Z2_ID] >= 10 && !prevButtons.Z2) { buttonsTime
      +                          rs[BUTTON_Z2_ID] = 10; outButtons.byte0 |= buttonsMapByte0[BUTTON_Z2_ID]; } if (buttonsT
      +                          imers[BUTTON_Z2_ID] >= 10 && !prevButtons.Z2) { buttonsTimers[BUTTON_Z2_ID] = 10; outBut
      +                          ton
  2828  0026E2  0E09               	movlw	9
  2829  0026E4  6434               	cpfsgt	_buttonsTimers+14,c
  2830  0026E6  D007               	goto	l3300
  2831  0026E8  BA3A               	btfsc	_prevButtons+1,5,c
  2832  0026EA  D005               	goto	l3300
  2833  0026EC  0E0A               	movlw	10
  2834  0026EE  6E34               	movwf	_buttonsTimers+14,c
  2835  0026F0  0100               	movlb	0	; () banked
  2836  0026F2  51EB               	movf	(_buttonsMapByte0+14)& (0+255),w,b
  2837  0026F4  1235               	iorwf	_outButtons,f,c
  2838  0026F6                     l3300:
  2839  0026F6  0E09               	movlw	9
  2840  0026F8  6434               	cpfsgt	_buttonsTimers+14,c
  2841  0026FA  D007               	goto	l3308
  2842  0026FC  BA3A               	btfsc	_prevButtons+1,5,c
  2843  0026FE  D005               	goto	l3308
  2844  002700  0E0A               	movlw	10
  2845  002702  6E34               	movwf	_buttonsTimers+14,c
  2846  002704  0100               	movlb	0	; () banked
  2847  002706  51DC               	movf	(_buttonsMapByte1+14)& (0+255),w,b
  2848  002708  1236               	iorwf	_outButtons+1,f,c
  2849  00270A                     l3308:
  2850                           
  2851                           ;buttons.c: 145: if (buttonsTimers[BUTTON_LA_ID] >= 10) {
  2852  00270A  0E09               	movlw	9
  2853  00270C  6432               	cpfsgt	_buttonsTimers+12,c
  2854  00270E  D008               	goto	l3316
  2855                           
  2856                           ;buttons.c: 146: buttonsTimers[BUTTON_LA_ID] = 10;
  2857  002710  0E0A               	movlw	10
  2858  002712  6E32               	movwf	_buttonsTimers+12,c
  2859                           
  2860                           ;buttons.c: 147: if (prevButtons.LA) {
  2861  002714  A03B               	btfss	_prevButtons+2,0,c
  2862  002716  D003               	goto	l658
  2863                           
  2864                           ;buttons.c: 148: outButtons.LA = 0;
  2865  002718  0E00               	movlw	0
  2866  00271A  6E37               	movwf	_outButtons+2,c
  2867                           
  2868                           ;buttons.c: 149: } else {
  2869  00271C  D001               	goto	l3316
  2870  00271E                     l658:
  2871                           
  2872                           ;buttons.c: 150: outButtons.LA = 0xFF;
  2873  00271E  6837               	setf	_outButtons+2,c
  2874  002720                     l3316:
  2875                           
  2876                           ;buttons.c: 151: };buttons.c: 152: };buttons.c: 153: if (buttonsTimers[BUTTON_RA_ID] >= 
      +                          10) {
  2877  002720  0E09               	movlw	9
  2878  002722  6433               	cpfsgt	_buttonsTimers+13,c
  2879  002724  0012               	return	
  2880                           
  2881                           ;buttons.c: 154: buttonsTimers[BUTTON_RA_ID] = 10;
  2882  002726  0E0A               	movlw	10
  2883  002728  6E33               	movwf	_buttonsTimers+13,c
  2884                           
  2885                           ;buttons.c: 155: if (prevButtons.RA) {
  2886  00272A  AA3B               	btfss	_prevButtons+2,5,c
  2887  00272C  D003               	goto	l661
  2888                           
  2889                           ;buttons.c: 156: outButtons.RA = 0;
  2890  00272E  0E00               	movlw	0
  2891  002730  6E38               	movwf	_outButtons+3,c
  2892                           
  2893                           ;buttons.c: 157: } else {
  2894  002732  0012               	return	
  2895  002734                     l661:
  2896                           
  2897                           ;buttons.c: 158: outButtons.RA = 0xFF;
  2898  002734  6838               	setf	_outButtons+3,c
  2899  002736  0012               	return		;funcret
  2900  002738                     __end_of_buttonsUpdate:
  2901                           	opt callstack 0
  2902                           
  2903 ;; *************** function _buttonsSetMapByte1 *****************
  2904 ;; Defined at:
  2905 ;;		line 230 in file "buttons.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;  map             2    0[COMRAM] PTR unsigned char 
  2908 ;;		 -> main@cmd(36), 
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;  i               1    2[COMRAM] unsigned char 
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  1    wreg      void 
  2913 ;; Registers used:
  2914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2920 ;;      Params:         2       0       0       0       0       0       0       0       0
  2921 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2922 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2923 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2924 ;;Total ram usage:        3 bytes
  2925 ;; Hardware stack levels used:    1
  2926 ;; Hardware stack levels required when called:    2
  2927 ;; This function calls:
  2928 ;;		Nothing
  2929 ;; This function is called by:
  2930 ;;		_main
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934                           	psect	text9
  2935  003410                     __ptext9:
  2936                           	opt callstack 0
  2937  003410                     _buttonsSetMapByte1:
  2938                           	opt callstack 28
  2939                           
  2940                           ;buttons.c: 231: uint8_t i;;buttons.c: 233: for (i = 0; i < N_BUTTONS; i++) {
  2941                           
  2942                           ;incstack = 0
  2943  003410  0E00               	movlw	0
  2944  003412  6E03               	movwf	buttonsSetMapByte1@i,c
  2945  003414                     l3450:
  2946                           
  2947                           ;buttons.c: 234: buttonsMapByte1[i] = map[i];
  2948  003414  5003               	movf	buttonsSetMapByte1@i,w,c
  2949  003416  2401               	addwf	buttonsSetMapByte1@map,w,c
  2950  003418  6ED9               	movwf	fsr2l,c
  2951  00341A  0E00               	movlw	0
  2952  00341C  2002               	addwfc	buttonsSetMapByte1@map+1,w,c
  2953  00341E  6EDA               	movwf	fsr2h,c
  2954  003420  0ECE               	movlw	low _buttonsMapByte1
  2955  003422  2403               	addwf	buttonsSetMapByte1@i,w,c
  2956  003424  6EE1               	movwf	fsr1l,c
  2957  003426  6AE2               	clrf	fsr1h,c
  2958  003428  0E00               	movlw	high _buttonsMapByte1
  2959  00342A  22E2               	addwfc	fsr1h,f,c
  2960  00342C  006F FF7F FFE7     	movff	indf2,indf1
  2961  003432  2A03               	incf	buttonsSetMapByte1@i,f,c
  2962  003434  0E0E               	movlw	14
  2963  003436  6403               	cpfsgt	buttonsSetMapByte1@i,c
  2964  003438  D7ED               	goto	l3450
  2965  00343A  0012               	return	
  2966  00343C                     __end_of_buttonsSetMapByte1:
  2967                           	opt callstack 0
  2968                           
  2969 ;; *************** function _buttonsSetMapByte0 *****************
  2970 ;; Defined at:
  2971 ;;		line 222 in file "buttons.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;  map             2    0[COMRAM] PTR unsigned char 
  2974 ;;		 -> main@cmd(36), 
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;  i               1    2[COMRAM] unsigned char 
  2977 ;; Return value:  Size  Location     Type
  2978 ;;                  1    wreg      void 
  2979 ;; Registers used:
  2980 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2981 ;; Tracked objects:
  2982 ;;		On entry : 0/0
  2983 ;;		On exit  : 0/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2986 ;;      Params:         2       0       0       0       0       0       0       0       0
  2987 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2988 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2989 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2990 ;;Total ram usage:        3 bytes
  2991 ;; Hardware stack levels used:    1
  2992 ;; Hardware stack levels required when called:    2
  2993 ;; This function calls:
  2994 ;;		Nothing
  2995 ;; This function is called by:
  2996 ;;		_main
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000                           	psect	text10
  3001  00343C                     __ptext10:
  3002                           	opt callstack 0
  3003  00343C                     _buttonsSetMapByte0:
  3004                           	opt callstack 28
  3005                           
  3006                           ;buttons.c: 223: uint8_t i;;buttons.c: 225: for (i = 0; i < N_BUTTONS; i++) {
  3007                           
  3008                           ;incstack = 0
  3009  00343C  0E00               	movlw	0
  3010  00343E  6E03               	movwf	buttonsSetMapByte0@i,c
  3011  003440                     l3438:
  3012                           
  3013                           ;buttons.c: 226: buttonsMapByte0[i] = map[i];
  3014  003440  5003               	movf	buttonsSetMapByte0@i,w,c
  3015  003442  2401               	addwf	buttonsSetMapByte0@map,w,c
  3016  003444  6ED9               	movwf	fsr2l,c
  3017  003446  0E00               	movlw	0
  3018  003448  2002               	addwfc	buttonsSetMapByte0@map+1,w,c
  3019  00344A  6EDA               	movwf	fsr2h,c
  3020  00344C  0EDD               	movlw	low _buttonsMapByte0
  3021  00344E  2403               	addwf	buttonsSetMapByte0@i,w,c
  3022  003450  6EE1               	movwf	fsr1l,c
  3023  003452  6AE2               	clrf	fsr1h,c
  3024  003454  0E00               	movlw	high _buttonsMapByte0
  3025  003456  22E2               	addwfc	fsr1h,f,c
  3026  003458  006F FF7F FFE7     	movff	indf2,indf1
  3027  00345E  2A03               	incf	buttonsSetMapByte0@i,f,c
  3028  003460  0E0E               	movlw	14
  3029  003462  6403               	cpfsgt	buttonsSetMapByte0@i,c
  3030  003464  D7ED               	goto	l3438
  3031  003466  0012               	return	
  3032  003468                     __end_of_buttonsSetMapByte0:
  3033                           	opt callstack 0
  3034                           
  3035 ;; *************** function _buttonsInit *****************
  3036 ;; Defined at:
  3037 ;;		line 59 in file "buttons.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;		None
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;		None
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  1    wreg      void 
  3044 ;; Registers used:
  3045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3051 ;;      Params:         0       0       0       0       0       0       0       0       0
  3052 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3053 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3054 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3055 ;;Total ram usage:        0 bytes
  3056 ;; Hardware stack levels used:    1
  3057 ;; Hardware stack levels required when called:    3
  3058 ;; This function calls:
  3059 ;;		_memset
  3060 ;; This function is called by:
  3061 ;;		_main
  3062 ;; This function uses a non-reentrant model
  3063 ;;
  3064                           
  3065                           	psect	text11
  3066  00307A                     __ptext11:
  3067                           	opt callstack 0
  3068  00307A                     _buttonsInit:
  3069                           	opt callstack 27
  3070                           
  3071                           ;buttons.c: 61: T0CON0 = 0x00;
  3072                           
  3073                           ;incstack = 0
  3074  00307A  0E00               	movlw	0
  3075  00307C  6EB8               	movwf	16312,c	;volatile
  3076                           
  3077                           ;buttons.c: 62: T0CON1 = 0x47;
  3078  00307E  0E47               	movlw	71
  3079  003080  6EB9               	movwf	16313,c	;volatile
  3080                           
  3081                           ;buttons.c: 63: TMR0H = 124;
  3082  003082  0E7C               	movlw	124
  3083  003084  6EB7               	movwf	16311,c	;volatile
  3084                           
  3085                           ;buttons.c: 64: TMR0IF = 0;
  3086  003086  0139               	movlb	57	; () banked
  3087  003088  9FA3               	bcf	163,7,b	;volatile
  3088                           
  3089                           ;buttons.c: 65: T0CON0 = 0x80;
  3090  00308A  0E80               	movlw	128
  3091  00308C  6EB8               	movwf	16312,c	;volatile
  3092                           
  3093                           ; BSR set to: 57
  3094                           ;buttons.c: 68: memset(buttonsMapByte0, 0, N_BUTTONS);
  3095  00308E  0EDD               	movlw	low _buttonsMapByte0
  3096  003090  6E01               	movwf	memset@p1,c
  3097  003092  0E00               	movlw	high _buttonsMapByte0
  3098  003094  6E02               	movwf	memset@p1+1,c
  3099  003096  0E00               	movlw	0
  3100  003098  6E04               	movwf	memset@c+1,c
  3101  00309A  0E00               	movlw	0
  3102  00309C  6E03               	movwf	memset@c,c
  3103  00309E  0E00               	movlw	0
  3104  0030A0  6E06               	movwf	memset@n+1,c
  3105  0030A2  0E0F               	movlw	15
  3106  0030A4  6E05               	movwf	memset@n,c
  3107  0030A6  EC8C  F019         	call	_memset	;wreg free
  3108                           
  3109                           ;buttons.c: 69: memset(buttonsMapByte1, 0, N_BUTTONS);
  3110  0030AA  0ECE               	movlw	low _buttonsMapByte1
  3111  0030AC  6E01               	movwf	memset@p1,c
  3112  0030AE  0E00               	movlw	high _buttonsMapByte1
  3113  0030B0  6E02               	movwf	memset@p1+1,c
  3114  0030B2  0E00               	movlw	0
  3115  0030B4  6E04               	movwf	memset@c+1,c
  3116  0030B6  0E00               	movlw	0
  3117  0030B8  6E03               	movwf	memset@c,c
  3118  0030BA  0E00               	movlw	0
  3119  0030BC  6E06               	movwf	memset@n+1,c
  3120  0030BE  0E0F               	movlw	15
  3121  0030C0  6E05               	movwf	memset@n,c
  3122  0030C2  EC8C  F019         	call	_memset	;wreg free
  3123                           
  3124                           ;buttons.c: 71: buttonsMapByte0[BUTTON_A_ID] = 0x01;
  3125  0030C6  0E01               	movlw	1
  3126  0030C8  0100               	movlb	0	; () banked
  3127  0030CA  6FDD               	movwf	_buttonsMapByte0& (0+255),b
  3128                           
  3129                           ;buttons.c: 72: buttonsMapByte0[BUTTON_B_ID] = 0x02;
  3130  0030CC  0E02               	movlw	2
  3131  0030CE  6FDE               	movwf	(_buttonsMapByte0+1)& (0+255),b
  3132                           
  3133                           ;buttons.c: 73: buttonsMapByte0[BUTTON_X_ID] = 0x04;
  3134  0030D0  0E04               	movlw	4
  3135  0030D2  6FDF               	movwf	(_buttonsMapByte0+2)& (0+255),b
  3136                           
  3137                           ;buttons.c: 74: buttonsMapByte0[BUTTON_Y_ID] = 0x08;
  3138  0030D4  0E08               	movlw	8
  3139  0030D6  6FE0               	movwf	(_buttonsMapByte0+3)& (0+255),b
  3140                           
  3141                           ;buttons.c: 75: buttonsMapByte0[BUTTON_ST_ID] = 0x10;
  3142  0030D8  0E10               	movlw	16
  3143  0030DA  6FE1               	movwf	(_buttonsMapByte0+4)& (0+255),b
  3144                           
  3145                           ;buttons.c: 77: buttonsMapByte1[BUTTON_DL_ID] = 0x01;
  3146  0030DC  0E01               	movlw	1
  3147  0030DE  6FD3               	movwf	(_buttonsMapByte1+5)& (0+255),b
  3148                           
  3149                           ;buttons.c: 78: buttonsMapByte1[BUTTON_DR_ID] = 0x02;
  3150  0030E0  0E02               	movlw	2
  3151  0030E2  6FD4               	movwf	(_buttonsMapByte1+6)& (0+255),b
  3152                           
  3153                           ;buttons.c: 79: buttonsMapByte1[BUTTON_DD_ID] = 0x04;
  3154  0030E4  0E04               	movlw	4
  3155  0030E6  6FD5               	movwf	(_buttonsMapByte1+7)& (0+255),b
  3156                           
  3157                           ;buttons.c: 80: buttonsMapByte1[BUTTON_DU_ID] = 0x08;
  3158  0030E8  0E08               	movlw	8
  3159  0030EA  6FD6               	movwf	(_buttonsMapByte1+8)& (0+255),b
  3160                           
  3161                           ;buttons.c: 81: buttonsMapByte1[BUTTON_Z_ID] = 0x10;
  3162  0030EC  0E10               	movlw	16
  3163  0030EE  6FD7               	movwf	(_buttonsMapByte1+9)& (0+255),b
  3164                           
  3165                           ;buttons.c: 82: buttonsMapByte1[BUTTON_RD_ID] = 0x20;
  3166  0030F0  0E20               	movlw	32
  3167  0030F2  6FD8               	movwf	(_buttonsMapByte1+10)& (0+255),b
  3168                           
  3169                           ;buttons.c: 83: buttonsMapByte1[BUTTON_LD_ID] = 0x40;
  3170  0030F4  0E40               	movlw	64
  3171  0030F6  6FD9               	movwf	(_buttonsMapByte1+11)& (0+255),b
  3172                           
  3173                           ; BSR set to: 0
  3174  0030F8  0012               	return		;funcret
  3175  0030FA                     __end_of_buttonsInit:
  3176                           	opt callstack 0
  3177                           
  3178 ;; *************** function _memset *****************
  3179 ;; Defined at:
  3180 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memset.c"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;  p1              2    0[COMRAM] PTR void 
  3183 ;;		 -> buttonsMapByte1(15), buttonsMapByte0(15), config(24), 
  3184 ;;  c               2    2[COMRAM] int 
  3185 ;;  n               2    4[COMRAM] unsigned int 
  3186 ;; Auto vars:     Size  Location     Type
  3187 ;;  p               2    6[COMRAM] PTR unsigned char 
  3188 ;;		 -> buttonsMapByte1(15), buttonsMapByte0(15), config(24), 
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  2    0[COMRAM] PTR void 
  3191 ;; Registers used:
  3192 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3198 ;;      Params:         6       0       0       0       0       0       0       0       0
  3199 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3200 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3201 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3202 ;;Total ram usage:        8 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; Hardware stack levels required when called:    2
  3205 ;; This function calls:
  3206 ;;		Nothing
  3207 ;; This function is called by:
  3208 ;;		_configSetDefault
  3209 ;;		_buttonsInit
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           	psect	text12
  3214  003318                     __ptext12:
  3215                           	opt callstack 0
  3216  003318                     _memset:
  3217                           	opt callstack 27
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;incstack = 0
  3221  003318  0060  F004  F007   	movff	memset@p1,memset@p
  3222  00331E  0060  F008  F008   	movff	memset@p1+1,memset@p+1
  3223  003324  D00B               	goto	l2676
  3224  003326                     l2672:
  3225  003326  0060  F01F  FFD9   	movff	memset@p,fsr2l
  3226  00332C  0060  F023  FFDA   	movff	memset@p+1,fsr2h
  3227  003332  0060  F00F  FFDF   	movff	memset@c,indf2
  3228  003338  4A07               	infsnz	memset@p,f,c
  3229  00333A  2A08               	incf	memset@p+1,f,c
  3230  00333C                     l2676:
  3231  00333C  0605               	decf	memset@n,f,c
  3232  00333E  A0D8               	btfss	status,0,c
  3233  003340  0606               	decf	memset@n+1,f,c
  3234  003342  2805               	incf	memset@n,w,c
  3235  003344  E1F0               	bnz	l2672
  3236  003346  2806               	incf	memset@n+1,w,c
  3237  003348  B4D8               	btfsc	status,2,c
  3238  00334A  0012               	return	
  3239  00334C  D7EC               	goto	l2672
  3240  00334E                     __end_of_memset:
  3241                           	opt callstack 0
  3242                           
  3243 ;; *************** function _buttonsGetMessage *****************
  3244 ;; Defined at:
  3245 ;;		line 163 in file "buttons.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;  analogMode      1    wreg     unsigned char 
  3248 ;;  triggersMode    1    0[COMRAM] unsigned char 
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;  analogMode      1    3[COMRAM] unsigned char 
  3251 ;;  la              1    5[COMRAM] unsigned char 
  3252 ;;  ra              1    4[COMRAM] unsigned char 
  3253 ;; Return value:  Size  Location     Type
  3254 ;;                  2    0[COMRAM] PTR unsigned char 
  3255 ;; Registers used:
  3256 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3257 ;; Tracked objects:
  3258 ;;		On entry : 0/0
  3259 ;;		On exit  : 0/0
  3260 ;;		Unchanged: 0/0
  3261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3262 ;;      Params:         2       0       0       0       0       0       0       0       0
  3263 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3264 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3265 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3266 ;;Total ram usage:        6 bytes
  3267 ;; Hardware stack levels used:    1
  3268 ;; Hardware stack levels required when called:    2
  3269 ;; This function calls:
  3270 ;;		Nothing
  3271 ;; This function is called by:
  3272 ;;		_main
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276                           	psect	text13
  3277  002AA2                     __ptext13:
  3278                           	opt callstack 0
  3279  002AA2                     _buttonsGetMessage:
  3280                           	opt callstack 28
  3281                           
  3282                           ;incstack = 0
  3283                           ;buttonsGetMessage@analogMode stored from wreg
  3284  002AA2  6E04               	movwf	buttonsGetMessage@analogMode,c
  3285                           
  3286                           ;buttons.c: 164: buttonsMessage[0] = outButtons.byte0;
  3287  002AA4  0060  F0D4  F041   	movff	_outButtons,_buttonsMessage
  3288                           
  3289                           ;buttons.c: 165: buttonsMessage[1] = outButtons.byte1;
  3290  002AAA  0060  F0D8  F042   	movff	_outButtons+1,_buttonsMessage+1
  3291                           
  3292                           ;buttons.c: 166: buttonsMessage[2] = LUT_SX[ADCValues[0]];
  3293  002AB0  0E00               	movlw	low _LUT_SX
  3294  002AB2  2449               	addwf	_ADCValues,w,c
  3295  002AB4  6ED9               	movwf	fsr2l,c
  3296  002AB6  6ADA               	clrf	fsr2h,c
  3297  002AB8  0E04               	movlw	high _LUT_SX
  3298  002ABA  22DA               	addwfc	fsr2h,f,c
  3299  002ABC  50DF               	movf	indf2,w,c
  3300  002ABE  6E43               	movwf	_buttonsMessage+2,c
  3301                           
  3302                           ;buttons.c: 167: buttonsMessage[3] = LUT_SY[ADCValues[1]];
  3303  002AC0  0E00               	movlw	low _LUT_SY
  3304  002AC2  244A               	addwf	_ADCValues+1,w,c
  3305  002AC4  6ED9               	movwf	fsr2l,c
  3306  002AC6  6ADA               	clrf	fsr2h,c
  3307  002AC8  0E05               	movlw	high _LUT_SY
  3308  002ACA  22DA               	addwfc	fsr2h,f,c
  3309  002ACC  50DF               	movf	indf2,w,c
  3310  002ACE  6E44               	movwf	_buttonsMessage+3,c
  3311                           
  3312                           ;buttons.c: 169: uint8_t ra, la;;buttons.c: 170: if (triggersMode == 0) {
  3313  002AD0  5001               	movf	buttonsGetMessage@triggersMode,w,c
  3314  002AD2  A4D8               	btfss	status,2,c
  3315  002AD4  D007               	goto	l665
  3316                           
  3317                           ;buttons.c: 171: ra = outButtons.RA;
  3318  002AD6  0060  F0E0  F005   	movff	_outButtons+3,buttonsGetMessage@ra
  3319                           
  3320                           ;buttons.c: 172: la = outButtons.LA;
  3321  002ADC  0060  F0DC  F006   	movff	_outButtons+2,buttonsGetMessage@la
  3322                           
  3323                           ;buttons.c: 173: } else {
  3324  002AE2  D088               	goto	l3420
  3325  002AE4                     l665:
  3326                           
  3327                           ;buttons.c: 174: ra = ADCValues[4];
  3328  002AE4  0060  F134  F005   	movff	_ADCValues+4,buttonsGetMessage@ra
  3329                           
  3330                           ;buttons.c: 175: la = ADCValues[5];
  3331  002AEA  0060  F138  F006   	movff	_ADCValues+5,buttonsGetMessage@la
  3332  002AF0  D081               	goto	l3420
  3333  002AF2                     l670:
  3334                           
  3335                           ;buttons.c: 180: case 5:;buttons.c: 181: case 6:;buttons.c: 182: case 7:;buttons.c: 183:
      +                           buttonsMessage[4] = LUT_CX[ADCValues[2]];
  3336  002AF2  0E00               	movlw	low _LUT_CX
  3337  002AF4  244B               	addwf	_ADCValues+2,w,c
  3338  002AF6  6ED9               	movwf	fsr2l,c
  3339  002AF8  6ADA               	clrf	fsr2h,c
  3340  002AFA  0E02               	movlw	high _LUT_CX
  3341  002AFC  22DA               	addwfc	fsr2h,f,c
  3342  002AFE  50DF               	movf	indf2,w,c
  3343  002B00  6E45               	movwf	_buttonsMessage+4,c
  3344                           
  3345                           ;buttons.c: 184: buttonsMessage[5] = LUT_CY[ADCValues[3]];
  3346  002B02  0E00               	movlw	low _LUT_CY
  3347  002B04  244C               	addwf	_ADCValues+3,w,c
  3348  002B06  6ED9               	movwf	fsr2l,c
  3349  002B08  6ADA               	clrf	fsr2h,c
  3350  002B0A  0E03               	movlw	high _LUT_CY
  3351  002B0C  22DA               	addwfc	fsr2h,f,c
  3352  002B0E  50DF               	movf	indf2,w,c
  3353  002B10  6E46               	movwf	_buttonsMessage+5,c
  3354                           
  3355                           ;buttons.c: 186: buttonsMessage[6] = (uint8_t)((uint8_t)(la & 0xF0U) | (uint8_t)(ra >> 4
      +                          U));
  3356  002B12  0060  F014  F003   	movff	buttonsGetMessage@ra,??_buttonsGetMessage
  3357  002B18  3A03               	swapf	??_buttonsGetMessage,f,c
  3358  002B1A  0E0F               	movlw	15
  3359  002B1C  1603               	andwf	??_buttonsGetMessage,f,c
  3360  002B1E  5006               	movf	buttonsGetMessage@la,w,c
  3361  002B20  0BF0               	andlw	240
  3362  002B22  1003               	iorwf	??_buttonsGetMessage,w,c
  3363  002B24  6E47               	movwf	_buttonsMessage+6,c
  3364  002B26                     l3388:
  3365                           
  3366                           ;buttons.c: 187: buttonsMessage[7] = 0x00;
  3367  002B26  0E00               	movlw	0
  3368  002B28  6E48               	movwf	_buttonsMessage+7,c
  3369                           
  3370                           ;buttons.c: 188: break;
  3371  002B2A  D07D               	goto	l3422
  3372  002B2C                     l3390:
  3373                           
  3374                           ;buttons.c: 191: buttonsMessage[4] = (uint8_t)((uint8_t)(LUT_CX[ADCValues[2]] & 0xF0U) |
      +                           (uint8_t)(LUT_CY[ADCValues[3]] >> 4U));
  3375  002B2C  0E00               	movlw	low _LUT_CY
  3376  002B2E  244C               	addwf	_ADCValues+3,w,c
  3377  002B30  6ED9               	movwf	fsr2l,c
  3378  002B32  6ADA               	clrf	fsr2h,c
  3379  002B34  0E03               	movlw	high _LUT_CY
  3380  002B36  22DA               	addwfc	fsr2h,f,c
  3381  002B38  50DF               	movf	indf2,w,c
  3382  002B3A  6E03               	movwf	??_buttonsGetMessage& (0+255),c
  3383  002B3C  3A03               	swapf	??_buttonsGetMessage,f,c
  3384  002B3E  0E0F               	movlw	15
  3385  002B40  1603               	andwf	??_buttonsGetMessage,f,c
  3386  002B42  0E00               	movlw	low _LUT_CX
  3387  002B44  244B               	addwf	_ADCValues+2,w,c
  3388  002B46  6ED9               	movwf	fsr2l,c
  3389  002B48  6ADA               	clrf	fsr2h,c
  3390  002B4A  0E02               	movlw	high _LUT_CX
  3391  002B4C  22DA               	addwfc	fsr2h,f,c
  3392  002B4E  50DF               	movf	indf2,w,c
  3393  002B50  0BF0               	andlw	240
  3394  002B52  1003               	iorwf	??_buttonsGetMessage,w,c
  3395  002B54  6E45               	movwf	_buttonsMessage+4,c
  3396                           
  3397                           ;buttons.c: 192: buttonsMessage[5] = la;
  3398  002B56  0060  F018  F046   	movff	buttonsGetMessage@la,_buttonsMessage+5
  3399                           
  3400                           ;buttons.c: 193: buttonsMessage[6] = ra;
  3401  002B5C  0060  F014  F047   	movff	buttonsGetMessage@ra,_buttonsMessage+6
  3402  002B62  D7E1               	goto	l3388
  3403  002B64                     l3398:
  3404                           
  3405                           ;buttons.c: 198: buttonsMessage[4] = (uint8_t)((uint8_t)(LUT_CX[ADCValues[2]] & 0xF0U) |
      +                           (uint8_t)(LUT_CY[ADCValues[3]] >> 4U));
  3406  002B64  0E00               	movlw	low _LUT_CY
  3407  002B66  244C               	addwf	_ADCValues+3,w,c
  3408  002B68  6ED9               	movwf	fsr2l,c
  3409  002B6A  6ADA               	clrf	fsr2h,c
  3410  002B6C  0E03               	movlw	high _LUT_CY
  3411  002B6E  22DA               	addwfc	fsr2h,f,c
  3412  002B70  50DF               	movf	indf2,w,c
  3413  002B72  6E03               	movwf	??_buttonsGetMessage& (0+255),c
  3414  002B74  3A03               	swapf	??_buttonsGetMessage,f,c
  3415  002B76  0E0F               	movlw	15
  3416  002B78  1603               	andwf	??_buttonsGetMessage,f,c
  3417  002B7A  0E00               	movlw	low _LUT_CX
  3418  002B7C  244B               	addwf	_ADCValues+2,w,c
  3419  002B7E  6ED9               	movwf	fsr2l,c
  3420  002B80  6ADA               	clrf	fsr2h,c
  3421  002B82  0E02               	movlw	high _LUT_CX
  3422  002B84  22DA               	addwfc	fsr2h,f,c
  3423  002B86  50DF               	movf	indf2,w,c
  3424  002B88  0BF0               	andlw	240
  3425  002B8A  1003               	iorwf	??_buttonsGetMessage,w,c
  3426  002B8C  6E45               	movwf	_buttonsMessage+4,c
  3427                           
  3428                           ;buttons.c: 199: buttonsMessage[5] = (uint8_t)((uint8_t)(la & 0xF0U) | (uint8_t)(ra >> 4
      +                          U));
  3429  002B8E  0060  F014  F003   	movff	buttonsGetMessage@ra,??_buttonsGetMessage
  3430  002B94  3A03               	swapf	??_buttonsGetMessage,f,c
  3431  002B96  0E0F               	movlw	15
  3432  002B98  1603               	andwf	??_buttonsGetMessage,f,c
  3433  002B9A  5006               	movf	buttonsGetMessage@la,w,c
  3434  002B9C  0BF0               	andlw	240
  3435  002B9E  1003               	iorwf	??_buttonsGetMessage,w,c
  3436  002BA0  6E46               	movwf	_buttonsMessage+5,c
  3437                           
  3438                           ;buttons.c: 200: buttonsMessage[6] = 0x00;
  3439  002BA2  0E00               	movlw	0
  3440  002BA4  D7BF               	goto	L3
  3441  002BA6                     l3406:
  3442                           
  3443                           ;buttons.c: 205: buttonsMessage[4] = LUT_CX[ADCValues[2]];
  3444  002BA6  0E00               	movlw	low _LUT_CX
  3445  002BA8  244B               	addwf	_ADCValues+2,w,c
  3446  002BAA  6ED9               	movwf	fsr2l,c
  3447  002BAC  6ADA               	clrf	fsr2h,c
  3448  002BAE  0E02               	movlw	high _LUT_CX
  3449  002BB0  22DA               	addwfc	fsr2h,f,c
  3450  002BB2  50DF               	movf	indf2,w,c
  3451  002BB4  6E45               	movwf	_buttonsMessage+4,c
  3452                           
  3453                           ;buttons.c: 206: buttonsMessage[5] = LUT_CY[ADCValues[3]];
  3454  002BB6  0E00               	movlw	low _LUT_CY
  3455  002BB8  244C               	addwf	_ADCValues+3,w,c
  3456  002BBA  6ED9               	movwf	fsr2l,c
  3457  002BBC  6ADA               	clrf	fsr2h,c
  3458  002BBE  0E03               	movlw	high _LUT_CY
  3459  002BC0  22DA               	addwfc	fsr2h,f,c
  3460  002BC2  50DF               	movf	indf2,w,c
  3461  002BC4  6E46               	movwf	_buttonsMessage+5,c
  3462                           
  3463                           ;buttons.c: 207: buttonsMessage[6] = la;
  3464  002BC6  0060  F018  F047   	movff	buttonsGetMessage@la,_buttonsMessage+6
  3465                           
  3466                           ;buttons.c: 208: buttonsMessage[7] = ra;
  3467  002BCC  0060  F014  F048   	movff	buttonsGetMessage@ra,_buttonsMessage+7
  3468                           
  3469                           ;buttons.c: 209: break;
  3470  002BD2  D029               	goto	l3422
  3471  002BD4                     l3412:
  3472                           
  3473                           ;buttons.c: 212: buttonsMessage[4] = LUT_CX[ADCValues[2]];
  3474  002BD4  0E00               	movlw	low _LUT_CX
  3475  002BD6  244B               	addwf	_ADCValues+2,w,c
  3476  002BD8  6ED9               	movwf	fsr2l,c
  3477  002BDA  6ADA               	clrf	fsr2h,c
  3478  002BDC  0E02               	movlw	high _LUT_CX
  3479  002BDE  22DA               	addwfc	fsr2h,f,c
  3480  002BE0  50DF               	movf	indf2,w,c
  3481  002BE2  6E45               	movwf	_buttonsMessage+4,c
  3482                           
  3483                           ;buttons.c: 213: buttonsMessage[5] = LUT_CY[ADCValues[3]];
  3484  002BE4  0E00               	movlw	low _LUT_CY
  3485  002BE6  244C               	addwf	_ADCValues+3,w,c
  3486  002BE8  6ED9               	movwf	fsr2l,c
  3487  002BEA  6ADA               	clrf	fsr2h,c
  3488  002BEC  0E03               	movlw	high _LUT_CY
  3489  002BEE  22DA               	addwfc	fsr2h,f,c
  3490  002BF0  50DF               	movf	indf2,w,c
  3491  002BF2  D7D6               	goto	L4
  3492  002BF4                     l3420:
  3493  002BF4  5004               	movf	buttonsGetMessage@analogMode,w,c
  3494                           
  3495                           ; Switch size 1, requested type "simple"
  3496                           ; Number of cases is 8, Range of values is 0 to 7
  3497                           ; switch strategies available:
  3498                           ; Name         Instructions Cycles
  3499                           ; simple_byte           25    13 (average)
  3500                           ;	Chosen strategy is simple_byte
  3501  002BF6  0A00               	xorlw	0	; case 0
  3502  002BF8  B4D8               	btfsc	status,2,c
  3503  002BFA  D77B               	goto	l670
  3504  002BFC  0A01               	xorlw	1	; case 1
  3505  002BFE  B4D8               	btfsc	status,2,c
  3506  002C00  D795               	goto	l3390
  3507  002C02  0A03               	xorlw	3	; case 2
  3508  002C04  B4D8               	btfsc	status,2,c
  3509  002C06  D7AE               	goto	l3398
  3510  002C08  0A01               	xorlw	1	; case 3
  3511  002C0A  B4D8               	btfsc	status,2,c
  3512  002C0C  D7CC               	goto	l3406
  3513  002C0E  0A07               	xorlw	7	; case 4
  3514  002C10  B4D8               	btfsc	status,2,c
  3515  002C12  D7E0               	goto	l3412
  3516  002C14  0A01               	xorlw	1	; case 5
  3517  002C16  B4D8               	btfsc	status,2,c
  3518  002C18  D76C               	goto	l670
  3519  002C1A  0A03               	xorlw	3	; case 6
  3520  002C1C  B4D8               	btfsc	status,2,c
  3521  002C1E  D769               	goto	l670
  3522  002C20  0A01               	xorlw	1	; case 7
  3523  002C22  B4D8               	btfsc	status,2,c
  3524  002C24  D766               	goto	l670
  3525  002C26                     l3422:
  3526                           
  3527                           ;buttons.c: 219: return buttonsMessage;
  3528  002C26  0E41               	movlw	low _buttonsMessage
  3529  002C28  6E01               	movwf	?_buttonsGetMessage,c
  3530  002C2A  0E00               	movlw	high _buttonsMessage
  3531  002C2C  6E02               	movwf	?_buttonsGetMessage+1,c
  3532  002C2E  0012               	return		;funcret
  3533  002C30                     __end_of_buttonsGetMessage:
  3534                           	opt callstack 0
  3535                           
  3536 ;; *************** function _buttonsGetMapByte1 *****************
  3537 ;; Defined at:
  3538 ;;		line 248 in file "buttons.c"
  3539 ;; Parameters:    Size  Location     Type
  3540 ;;		None
  3541 ;; Auto vars:     Size  Location     Type
  3542 ;;  i               1    2[COMRAM] unsigned char 
  3543 ;; Return value:  Size  Location     Type
  3544 ;;                  2    0[COMRAM] PTR unsigned char 
  3545 ;; Registers used:
  3546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3547 ;; Tracked objects:
  3548 ;;		On entry : 0/0
  3549 ;;		On exit  : 0/0
  3550 ;;		Unchanged: 0/0
  3551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3552 ;;      Params:         2       0       0       0       0       0       0       0       0
  3553 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3554 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3555 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3556 ;;Total ram usage:        3 bytes
  3557 ;; Hardware stack levels used:    1
  3558 ;; Hardware stack levels required when called:    2
  3559 ;; This function calls:
  3560 ;;		Nothing
  3561 ;; This function is called by:
  3562 ;;		_main
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           
  3566                           	psect	text14
  3567  00334E                     __ptext14:
  3568                           	opt callstack 0
  3569  00334E                     _buttonsGetMapByte1:
  3570                           	opt callstack 28
  3571                           
  3572                           ;buttons.c: 249: uint8_t i;;buttons.c: 251: for (i = 0; i < N_BUTTONS; i++) {
  3573                           
  3574                           ;incstack = 0
  3575  00334E  0E00               	movlw	0
  3576  003350  6E03               	movwf	buttonsGetMapByte1@i,c
  3577  003352                     l3478:
  3578                           
  3579                           ;buttons.c: 252: buttonsMessage[i] = buttonsMapByte1[i];
  3580  003352  0ECE               	movlw	low _buttonsMapByte1
  3581  003354  2403               	addwf	buttonsGetMapByte1@i,w,c
  3582  003356  6ED9               	movwf	fsr2l,c
  3583  003358  6ADA               	clrf	fsr2h,c
  3584  00335A  0E00               	movlw	high _buttonsMapByte1
  3585  00335C  22DA               	addwfc	fsr2h,f,c
  3586  00335E  0E41               	movlw	low _buttonsMessage
  3587  003360  2403               	addwf	buttonsGetMapByte1@i,w,c
  3588  003362  6EE1               	movwf	fsr1l,c
  3589  003364  6AE2               	clrf	fsr1h,c
  3590  003366  0E00               	movlw	high _buttonsMessage
  3591  003368  22E2               	addwfc	fsr1h,f,c
  3592  00336A  006F FF7F FFE7     	movff	indf2,indf1
  3593  003370  2A03               	incf	buttonsGetMapByte1@i,f,c
  3594  003372  0E0E               	movlw	14
  3595  003374  6403               	cpfsgt	buttonsGetMapByte1@i,c
  3596  003376  D7ED               	goto	l3478
  3597                           
  3598                           ;buttons.c: 253: };buttons.c: 255: return buttonsMessage;
  3599  003378  0E41               	movlw	low _buttonsMessage
  3600  00337A  6E01               	movwf	?_buttonsGetMapByte1,c
  3601  00337C  0E00               	movlw	high _buttonsMessage
  3602  00337E  6E02               	movwf	?_buttonsGetMapByte1+1,c
  3603  003380  0012               	return		;funcret
  3604  003382                     __end_of_buttonsGetMapByte1:
  3605                           	opt callstack 0
  3606                           
  3607 ;; *************** function _buttonsGetMapByte0 *****************
  3608 ;; Defined at:
  3609 ;;		line 238 in file "buttons.c"
  3610 ;; Parameters:    Size  Location     Type
  3611 ;;		None
  3612 ;; Auto vars:     Size  Location     Type
  3613 ;;  i               1    2[COMRAM] unsigned char 
  3614 ;; Return value:  Size  Location     Type
  3615 ;;                  2    0[COMRAM] PTR unsigned char 
  3616 ;; Registers used:
  3617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3618 ;; Tracked objects:
  3619 ;;		On entry : 0/0
  3620 ;;		On exit  : 0/0
  3621 ;;		Unchanged: 0/0
  3622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3623 ;;      Params:         2       0       0       0       0       0       0       0       0
  3624 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3625 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3626 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3627 ;;Total ram usage:        3 bytes
  3628 ;; Hardware stack levels used:    1
  3629 ;; Hardware stack levels required when called:    2
  3630 ;; This function calls:
  3631 ;;		Nothing
  3632 ;; This function is called by:
  3633 ;;		_main
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           	psect	text15
  3638  003382                     __ptext15:
  3639                           	opt callstack 0
  3640  003382                     _buttonsGetMapByte0:
  3641                           	opt callstack 28
  3642                           
  3643                           ;buttons.c: 239: uint8_t i;;buttons.c: 241: for (i = 0; i < N_BUTTONS; i++) {
  3644                           
  3645                           ;incstack = 0
  3646  003382  0E00               	movlw	0
  3647  003384  6E03               	movwf	buttonsGetMapByte0@i,c
  3648  003386                     l3462:
  3649                           
  3650                           ;buttons.c: 242: buttonsMessage[i] = buttonsMapByte0[i];
  3651  003386  0EDD               	movlw	low _buttonsMapByte0
  3652  003388  2403               	addwf	buttonsGetMapByte0@i,w,c
  3653  00338A  6ED9               	movwf	fsr2l,c
  3654  00338C  6ADA               	clrf	fsr2h,c
  3655  00338E  0E00               	movlw	high _buttonsMapByte0
  3656  003390  22DA               	addwfc	fsr2h,f,c
  3657  003392  0E41               	movlw	low _buttonsMessage
  3658  003394  2403               	addwf	buttonsGetMapByte0@i,w,c
  3659  003396  6EE1               	movwf	fsr1l,c
  3660  003398  6AE2               	clrf	fsr1h,c
  3661  00339A  0E00               	movlw	high _buttonsMessage
  3662  00339C  22E2               	addwfc	fsr1h,f,c
  3663  00339E  006F FF7F FFE7     	movff	indf2,indf1
  3664  0033A4  2A03               	incf	buttonsGetMapByte0@i,f,c
  3665  0033A6  0E0E               	movlw	14
  3666  0033A8  6403               	cpfsgt	buttonsGetMapByte0@i,c
  3667  0033AA  D7ED               	goto	l3462
  3668                           
  3669                           ;buttons.c: 243: };buttons.c: 245: return buttonsMessage;
  3670  0033AC  0E41               	movlw	low _buttonsMessage
  3671  0033AE  6E01               	movwf	?_buttonsGetMapByte0,c
  3672  0033B0  0E00               	movlw	high _buttonsMessage
  3673  0033B2  6E02               	movwf	?_buttonsGetMapByte0+1,c
  3674  0033B4  0012               	return		;funcret
  3675  0033B6                     __end_of_buttonsGetMapByte0:
  3676                           	opt callstack 0
  3677                           
  3678 ;; *************** function _buttonsBuildLUTs *****************
  3679 ;; Defined at:
  3680 ;;		line 285 in file "buttons.c"
  3681 ;; Parameters:    Size  Location     Type
  3682 ;;		None
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;		None
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  1    wreg      void 
  3687 ;; Registers used:
  3688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3694 ;;      Params:         0       0       0       0       0       0       0       0       0
  3695 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3696 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3697 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3698 ;;Total ram usage:        0 bytes
  3699 ;; Hardware stack levels used:    1
  3700 ;; Hardware stack levels required when called:    4
  3701 ;; This function calls:
  3702 ;;		_buttonsBuildLUT
  3703 ;; This function is called by:
  3704 ;;		_main
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708                           	psect	text16
  3709  002DEA                     __ptext16:
  3710                           	opt callstack 0
  3711  002DEA                     _buttonsBuildLUTs:
  3712                           	opt callstack 26
  3713                           
  3714                           ;buttons.c: 286: buttonsBuildLUT(LUT_SX, config.SXMin, config.SXMax, ADCValues[0], confi
      +                          g.SDeadzone, config.deadzoneMode, config.SXInvert);
  3715                           
  3716                           ;incstack = 0
  3717  002DEA  0E00               	movlw	low _LUT_SX
  3718  002DEC  6E0F               	movwf	buttonsBuildLUT@LUT,c
  3719  002DEE  0E04               	movlw	high _LUT_SX
  3720  002DF0  6E10               	movwf	buttonsBuildLUT@LUT+1,c
  3721  002DF2  0060  F2F0  F011   	movff	_config+6,buttonsBuildLUT@minVal
  3722  002DF8  0060  F2F4  F012   	movff	_config+7,buttonsBuildLUT@maxVal
  3723  002DFE  0060  F124  F013   	movff	_ADCValues,buttonsBuildLUT@origin
  3724  002E04  0060  F324  F014   	movff	_config+19,buttonsBuildLUT@dz
  3725  002E0A  0060  F32C  F015   	movff	_config+21,buttonsBuildLUT@dzMode
  3726  002E10  0100               	movlb	0	; () banked
  3727  002E12  0E00               	movlw	0
  3728  002E14  B1C8               	btfsc	(_config+18)& (0+255),0,b
  3729  002E16  0E01               	movlw	1
  3730  002E18  6E16               	movwf	buttonsBuildLUT@invert,c
  3731  002E1A  EC78  F014         	call	_buttonsBuildLUT	;wreg free
  3732                           
  3733                           ;buttons.c: 287: buttonsBuildLUT(LUT_SY, config.SYMin, config.SYMax, ADCValues[1], confi
      +                          g.SDeadzone, config.deadzoneMode, config.SYInvert);
  3734  002E1E  0E00               	movlw	low _LUT_SY
  3735  002E20  6E0F               	movwf	buttonsBuildLUT@LUT,c
  3736  002E22  0E05               	movlw	high _LUT_SY
  3737  002E24  6E10               	movwf	buttonsBuildLUT@LUT+1,c
  3738  002E26  0060  F2F8  F011   	movff	_config+8,buttonsBuildLUT@minVal
  3739  002E2C  0060  F2FC  F012   	movff	_config+9,buttonsBuildLUT@maxVal
  3740  002E32  0060  F128  F013   	movff	_ADCValues+1,buttonsBuildLUT@origin
  3741  002E38  0060  F324  F014   	movff	_config+19,buttonsBuildLUT@dz
  3742  002E3E  0060  F32C  F015   	movff	_config+21,buttonsBuildLUT@dzMode
  3743  002E44  0100               	movlb	0	; () banked
  3744  002E46  0E00               	movlw	0
  3745  002E48  B3C8               	btfsc	(_config+18)& (0+255),1,b
  3746  002E4A  0E01               	movlw	1
  3747  002E4C  6E16               	movwf	buttonsBuildLUT@invert,c
  3748  002E4E  EC78  F014         	call	_buttonsBuildLUT	;wreg free
  3749                           
  3750                           ;buttons.c: 288: buttonsBuildLUT(LUT_CX, config.CXMin, config.CXMax, ADCValues[2], confi
      +                          g.CDeadzone, config.deadzoneMode, config.CXInvert);
  3751  002E52  0E00               	movlw	low _LUT_CX
  3752  002E54  6E0F               	movwf	buttonsBuildLUT@LUT,c
  3753  002E56  0E02               	movlw	high _LUT_CX
  3754  002E58  6E10               	movwf	buttonsBuildLUT@LUT+1,c
  3755  002E5A  0060  F300  F011   	movff	_config+10,buttonsBuildLUT@minVal
  3756  002E60  0060  F304  F012   	movff	_config+11,buttonsBuildLUT@maxVal
  3757  002E66  0060  F12C  F013   	movff	_ADCValues+2,buttonsBuildLUT@origin
  3758  002E6C  0060  F328  F014   	movff	_config+20,buttonsBuildLUT@dz
  3759  002E72  0060  F32C  F015   	movff	_config+21,buttonsBuildLUT@dzMode
  3760  002E78  0100               	movlb	0	; () banked
  3761  002E7A  0E00               	movlw	0
  3762  002E7C  B5C8               	btfsc	(_config+18)& (0+255),2,b
  3763  002E7E  0E01               	movlw	1
  3764  002E80  6E16               	movwf	buttonsBuildLUT@invert,c
  3765  002E82  EC78  F014         	call	_buttonsBuildLUT	;wreg free
  3766                           
  3767                           ;buttons.c: 289: buttonsBuildLUT(LUT_CY, config.CYMin, config.CYMax, ADCValues[3], confi
      +                          g.CDeadzone, config.deadzoneMode, config.CYInvert);
  3768  002E86  0E00               	movlw	low _LUT_CY
  3769  002E88  6E0F               	movwf	buttonsBuildLUT@LUT,c
  3770  002E8A  0E03               	movlw	high _LUT_CY
  3771  002E8C  6E10               	movwf	buttonsBuildLUT@LUT+1,c
  3772  002E8E  0060  F308  F011   	movff	_config+12,buttonsBuildLUT@minVal
  3773  002E94  0060  F30C  F012   	movff	_config+13,buttonsBuildLUT@maxVal
  3774  002E9A  0060  F130  F013   	movff	_ADCValues+3,buttonsBuildLUT@origin
  3775  002EA0  0060  F328  F014   	movff	_config+20,buttonsBuildLUT@dz
  3776  002EA6  0060  F32C  F015   	movff	_config+21,buttonsBuildLUT@dzMode
  3777  002EAC  0100               	movlb	0	; () banked
  3778  002EAE  0E00               	movlw	0
  3779  002EB0  B7C8               	btfsc	(_config+18)& (0+255),3,b
  3780  002EB2  0E01               	movlw	1
  3781  002EB4  6E16               	movwf	buttonsBuildLUT@invert,c
  3782  002EB6  EC78  F014         	call	_buttonsBuildLUT	;wreg free
  3783  002EBA  0012               	return		;funcret
  3784  002EBC                     __end_of_buttonsBuildLUTs:
  3785                           	opt callstack 0
  3786                           
  3787 ;; *************** function _buttonsBuildLUT *****************
  3788 ;; Defined at:
  3789 ;;		line 258 in file "buttons.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;  LUT             2   14[COMRAM] PTR unsigned char 
  3792 ;;		 -> LUT_CY(256), LUT_CX(256), LUT_SY(256), LUT_SX(256), 
  3793 ;;  minVal          1   16[COMRAM] unsigned char 
  3794 ;;  maxVal          1   17[COMRAM] unsigned char 
  3795 ;;  origin          1   18[COMRAM] unsigned char 
  3796 ;;  dz              1   19[COMRAM] unsigned char 
  3797 ;;  dzMode          1   20[COMRAM] unsigned char 
  3798 ;;  invert          1   21[COMRAM] unsigned char 
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;  tempVal         2   29[COMRAM] int 
  3801 ;;  radius          2   33[COMRAM] int 
  3802 ;;  i               2   31[COMRAM] int 
  3803 ;;  range           2   27[COMRAM] int 
  3804 ;; Return value:  Size  Location     Type
  3805 ;;                  1    wreg      void 
  3806 ;; Registers used:
  3807 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3813 ;;      Params:         8       0       0       0       0       0       0       0       0
  3814 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3815 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3816 ;;      Totals:        21       0       0       0       0       0       0       0       0
  3817 ;;Total ram usage:       21 bytes
  3818 ;; Hardware stack levels used:    1
  3819 ;; Hardware stack levels required when called:    3
  3820 ;; This function calls:
  3821 ;;		___awdiv
  3822 ;;		___wmul
  3823 ;; This function is called by:
  3824 ;;		_buttonsBuildLUTs
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828                           	psect	text17
  3829  0028F0                     __ptext17:
  3830                           	opt callstack 0
  3831  0028F0                     _buttonsBuildLUT:
  3832                           	opt callstack 26
  3833                           
  3834                           ;buttons.c: 259: int16_t i;;buttons.c: 260: int16_t range = ((int16_t)maxVal - (int16_t)
      +                          minVal) / 2;
  3835                           
  3836                           ;incstack = 0
  3837  0028F0  5011               	movf	buttonsBuildLUT@minVal,w,c
  3838  0028F2  5C12               	subwf	buttonsBuildLUT@maxVal,w,c
  3839  0028F4  6E07               	movwf	___awdiv@dividend,c
  3840  0028F6  6A08               	clrf	___awdiv@dividend+1,c
  3841  0028F8  A0D8               	btfss	status,0,c
  3842  0028FA  0608               	decf	___awdiv@dividend+1,f,c
  3843  0028FC  0E00               	movlw	0
  3844  0028FE  6E0A               	movwf	___awdiv@divisor+1,c
  3845  002900  0E02               	movlw	2
  3846  002902  6E09               	movwf	___awdiv@divisor,c
  3847  002904  ECF9  F017         	call	___awdiv	;wreg free
  3848  002908  0060  F01C  F01C   	movff	?___awdiv,buttonsBuildLUT@range
  3849  00290E  0060  F020  F01D   	movff	?___awdiv+1,buttonsBuildLUT@range+1
  3850                           
  3851                           ;buttons.c: 262: for (i = 0; i < 256; i++) {
  3852  002914  0E00               	movlw	0
  3853  002916  6E21               	movwf	buttonsBuildLUT@i+1,c
  3854  002918  0E00               	movlw	0
  3855  00291A  6E20               	movwf	buttonsBuildLUT@i,c
  3856  00291C                     l2804:
  3857                           
  3858                           ;buttons.c: 263: int16_t radius = i - origin;
  3859  00291C  5013               	movf	buttonsBuildLUT@origin,w,c
  3860  00291E  5C20               	subwf	buttonsBuildLUT@i,w,c
  3861  002920  6E22               	movwf	buttonsBuildLUT@radius,c
  3862  002922  5021               	movf	buttonsBuildLUT@i+1,w,c
  3863  002924  A0D8               	btfss	status,0,c
  3864  002926  0421               	decf	buttonsBuildLUT@i+1,w,c
  3865  002928  6E23               	movwf	buttonsBuildLUT@radius+1,c
  3866                           
  3867                           ;buttons.c: 264: if (invert) radius = -radius;
  3868  00292A  5016               	movf	buttonsBuildLUT@invert,w,c
  3869  00292C  B4D8               	btfsc	status,2,c
  3870  00292E  D004               	goto	l2810
  3871  002930  6C22               	negf	buttonsBuildLUT@radius,c
  3872  002932  1E23               	comf	buttonsBuildLUT@radius+1,f,c
  3873  002934  B0D8               	btfsc	status,0,c
  3874  002936  2A23               	incf	buttonsBuildLUT@radius+1,f,c
  3875  002938                     l2810:
  3876                           
  3877                           ;buttons.c: 265: if (((radius >= 0) ? (radius) : (-radius)) < (int16_t)dz) {
  3878  002938  AE23               	btfss	buttonsBuildLUT@radius+1,7,c
  3879  00293A  D011               	goto	l705
  3880  00293C  0060  F088  F017   	movff	buttonsBuildLUT@radius,??_buttonsBuildLUT
  3881  002942  0060  F08C  F018   	movff	buttonsBuildLUT@radius+1,??_buttonsBuildLUT+1
  3882  002948  1E17               	comf	??_buttonsBuildLUT,f,c
  3883  00294A  1E18               	comf	??_buttonsBuildLUT+1,f,c
  3884  00294C  4A17               	infsnz	??_buttonsBuildLUT,f,c
  3885  00294E  2A18               	incf	??_buttonsBuildLUT+1,f,c
  3886  002950  0060  F05C  F01A   	movff	??_buttonsBuildLUT,_buttonsBuildLUT$1495
  3887  002956  0060  F060  F01B   	movff	??_buttonsBuildLUT+1,_buttonsBuildLUT$1495+1
  3888  00295C  D006               	goto	l2814
  3889  00295E                     l705:
  3890  00295E  0060  F088  F01A   	movff	buttonsBuildLUT@radius,_buttonsBuildLUT$1495
  3891  002964  0060  F08C  F01B   	movff	buttonsBuildLUT@radius+1,_buttonsBuildLUT$1495+1
  3892  00296A                     l2814:
  3893  00296A  5014               	movf	buttonsBuildLUT@dz,w,c
  3894  00296C  6E17               	movwf	??_buttonsBuildLUT& (0+255),c
  3895  00296E  6A18               	clrf	(??_buttonsBuildLUT+1)& (0+255),c
  3896  002970  5017               	movf	??_buttonsBuildLUT,w,c
  3897  002972  5C1A               	subwf	_buttonsBuildLUT$1495,w,c
  3898  002974  501B               	movf	_buttonsBuildLUT$1495+1,w,c
  3899  002976  0A80               	xorlw	128
  3900  002978  6E19               	movwf	(??_buttonsBuildLUT+2)& (0+255),c
  3901  00297A  5018               	movf	??_buttonsBuildLUT+1,w,c
  3902  00297C  0A80               	xorlw	128
  3903  00297E  5819               	subwfb	(??_buttonsBuildLUT+2)& (0+255),w,c
  3904  002980  B0D8               	btfsc	status,0,c
  3905  002982  D009               	goto	l2818
  3906                           
  3907                           ;buttons.c: 266: LUT[i] = 0x80;
  3908  002984  5020               	movf	buttonsBuildLUT@i,w,c
  3909  002986  240F               	addwf	buttonsBuildLUT@LUT,w,c
  3910  002988  6ED9               	movwf	fsr2l,c
  3911  00298A  5021               	movf	buttonsBuildLUT@i+1,w,c
  3912  00298C  2010               	addwfc	buttonsBuildLUT@LUT+1,w,c
  3913  00298E  6EDA               	movwf	fsr2h,c
  3914  002990  0E80               	movlw	128
  3915  002992  6EDF               	movwf	indf2,c
  3916                           
  3917                           ;buttons.c: 267: } else {
  3918  002994  D07E               	goto	l2840
  3919  002996                     l2818:
  3920                           
  3921                           ;buttons.c: 268: int16_t tempVal;;buttons.c: 269: if (dzMode == 0) {
  3922  002996  5015               	movf	buttonsBuildLUT@dzMode,w,c
  3923  002998  A4D8               	btfss	status,2,c
  3924  00299A  D01B               	goto	l2822
  3925                           
  3926                           ;buttons.c: 270: tempVal = radius * 127 / range;
  3927  00299C  0060  F088  F001   	movff	buttonsBuildLUT@radius,___wmul@multiplier
  3928  0029A2  0060  F08C  F002   	movff	buttonsBuildLUT@radius+1,___wmul@multiplier+1
  3929  0029A8  0E00               	movlw	0
  3930  0029AA  6E04               	movwf	___wmul@multiplicand+1,c
  3931  0029AC  0E7F               	movlw	127
  3932  0029AE  6E03               	movwf	___wmul@multiplicand,c
  3933  0029B0  ECDB  F019         	call	___wmul	;wreg free
  3934  0029B4  0060  F004  F007   	movff	?___wmul,___awdiv@dividend
  3935  0029BA  0060  F008  F008   	movff	?___wmul+1,___awdiv@dividend+1
  3936  0029C0  0060  F070  F009   	movff	buttonsBuildLUT@range,___awdiv@divisor
  3937  0029C6  0060  F074  F00A   	movff	buttonsBuildLUT@range+1,___awdiv@divisor+1
  3938  0029CC  ECF9  F017         	call	___awdiv	;wreg free
  3939  0029D0  D03F               	goto	L5
  3940  0029D2                     l2822:
  3941                           
  3942                           ;buttons.c: 272: if (radius > 0)
  3943  0029D2  BE23               	btfsc	buttonsBuildLUT@radius+1,7,c
  3944  0029D4  D022               	goto	l2826
  3945  0029D6  5023               	movf	buttonsBuildLUT@radius+1,w,c
  3946  0029D8  E103               	bnz	u1680
  3947  0029DA  0422               	decf	buttonsBuildLUT@radius,w,c
  3948  0029DC  A0D8               	btfss	status,0,c
  3949  0029DE  D01D               	goto	l2826
  3950  0029E0                     u1680:
  3951                           
  3952                           ;buttons.c: 273: tempVal = (radius - dz) * 127 / (range - dz);
  3953  0029E0  5014               	movf	buttonsBuildLUT@dz,w,c
  3954  0029E2  5C22               	subwf	buttonsBuildLUT@radius,w,c
  3955  0029E4  6E01               	movwf	___wmul@multiplier,c
  3956  0029E6  5023               	movf	buttonsBuildLUT@radius+1,w,c
  3957  0029E8  A0D8               	btfss	status,0,c
  3958  0029EA  0423               	decf	buttonsBuildLUT@radius+1,w,c
  3959  0029EC  6E02               	movwf	___wmul@multiplier+1,c
  3960  0029EE  0E00               	movlw	0
  3961  0029F0  6E04               	movwf	___wmul@multiplicand+1,c
  3962  0029F2  0E7F               	movlw	127
  3963  0029F4  6E03               	movwf	___wmul@multiplicand,c
  3964  0029F6  ECDB  F019         	call	___wmul	;wreg free
  3965  0029FA  0060  F004  F007   	movff	?___wmul,___awdiv@dividend
  3966  002A00  0060  F008  F008   	movff	?___wmul+1,___awdiv@dividend+1
  3967  002A06  5014               	movf	buttonsBuildLUT@dz,w,c
  3968  002A08  5C1C               	subwf	buttonsBuildLUT@range,w,c
  3969  002A0A  6E09               	movwf	___awdiv@divisor,c
  3970  002A0C  501D               	movf	buttonsBuildLUT@range+1,w,c
  3971  002A0E  A0D8               	btfss	status,0,c
  3972  002A10  041D               	decf	buttonsBuildLUT@range+1,w,c
  3973  002A12  6E0A               	movwf	___awdiv@divisor+1,c
  3974  002A14  ECF9  F017         	call	___awdiv	;wreg free
  3975  002A18  D01B               	goto	L5
  3976  002A1A                     l2826:
  3977                           
  3978                           ;buttons.c: 274: else;buttons.c: 275: tempVal = (radius + dz) * 127 / (range - dz);
  3979  002A1A  5014               	movf	buttonsBuildLUT@dz,w,c
  3980  002A1C  2422               	addwf	buttonsBuildLUT@radius,w,c
  3981  002A1E  6E01               	movwf	___wmul@multiplier,c
  3982  002A20  0E00               	movlw	0
  3983  002A22  2023               	addwfc	buttonsBuildLUT@radius+1,w,c
  3984  002A24  6E02               	movwf	___wmul@multiplier+1,c
  3985  002A26  0E00               	movlw	0
  3986  002A28  6E04               	movwf	___wmul@multiplicand+1,c
  3987  002A2A  0E7F               	movlw	127
  3988  002A2C  6E03               	movwf	___wmul@multiplicand,c
  3989  002A2E  ECDB  F019         	call	___wmul	;wreg free
  3990  002A32  0060  F004  F007   	movff	?___wmul,___awdiv@dividend
  3991  002A38  0060  F008  F008   	movff	?___wmul+1,___awdiv@dividend+1
  3992  002A3E  5014               	movf	buttonsBuildLUT@dz,w,c
  3993  002A40  5C1C               	subwf	buttonsBuildLUT@range,w,c
  3994  002A42  6E09               	movwf	___awdiv@divisor,c
  3995  002A44  501D               	movf	buttonsBuildLUT@range+1,w,c
  3996  002A46  A0D8               	btfss	status,0,c
  3997  002A48  041D               	decf	buttonsBuildLUT@range+1,w,c
  3998  002A4A  6E0A               	movwf	___awdiv@divisor+1,c
  3999  002A4C  ECF9  F017         	call	___awdiv	;wreg free
  4000  002A50                     L5:
  4001  002A50  0060  F01C  F01E   	movff	?___awdiv,buttonsBuildLUT@tempVal
  4002  002A56  0060  F020  F01F   	movff	?___awdiv+1,buttonsBuildLUT@tempVal+1
  4003                           
  4004                           ;buttons.c: 276: };buttons.c: 277: tempVal += 128;
  4005  002A5C  0E80               	movlw	128
  4006  002A5E  261E               	addwf	buttonsBuildLUT@tempVal,f,c
  4007  002A60  0E00               	movlw	0
  4008  002A62  221F               	addwfc	buttonsBuildLUT@tempVal+1,f,c
  4009                           
  4010                           ;buttons.c: 278: if (tempVal < 0) tempVal = 0;
  4011  002A64  AE1F               	btfss	buttonsBuildLUT@tempVal+1,7,c
  4012  002A66  D004               	goto	l2834
  4013  002A68  0E00               	movlw	0
  4014  002A6A  6E1F               	movwf	buttonsBuildLUT@tempVal+1,c
  4015  002A6C  0E00               	movlw	0
  4016  002A6E  6E1E               	movwf	buttonsBuildLUT@tempVal,c
  4017  002A70                     l2834:
  4018                           
  4019                           ;buttons.c: 279: if (tempVal > 0xFF) tempVal = 0xFF;
  4020  002A70  BE1F               	btfsc	buttonsBuildLUT@tempVal+1,7,c
  4021  002A72  D006               	goto	l2838
  4022  002A74  041F               	decf	buttonsBuildLUT@tempVal+1,w,c
  4023  002A76  A0D8               	btfss	status,0,c
  4024  002A78  D003               	goto	l2838
  4025  002A7A  0E00               	movlw	0
  4026  002A7C  6E1F               	movwf	buttonsBuildLUT@tempVal+1,c
  4027  002A7E  681E               	setf	buttonsBuildLUT@tempVal,c
  4028  002A80                     l2838:
  4029                           
  4030                           ;buttons.c: 280: LUT[i] = (uint8_t)tempVal & 0xFFU;
  4031  002A80  5020               	movf	buttonsBuildLUT@i,w,c
  4032  002A82  240F               	addwf	buttonsBuildLUT@LUT,w,c
  4033  002A84  6ED9               	movwf	fsr2l,c
  4034  002A86  5021               	movf	buttonsBuildLUT@i+1,w,c
  4035  002A88  2010               	addwfc	buttonsBuildLUT@LUT+1,w,c
  4036  002A8A  6EDA               	movwf	fsr2h,c
  4037  002A8C  0060  F07B  FFDF   	movff	buttonsBuildLUT@tempVal,indf2
  4038  002A92                     l2840:
  4039  002A92  4A20               	infsnz	buttonsBuildLUT@i,f,c
  4040  002A94  2A21               	incf	buttonsBuildLUT@i+1,f,c
  4041  002A96  BE21               	btfsc	buttonsBuildLUT@i+1,7,c
  4042  002A98  D741               	goto	l2804
  4043  002A9A  0421               	decf	buttonsBuildLUT@i+1,w,c
  4044  002A9C  B0D8               	btfsc	status,0,c
  4045  002A9E  0012               	return	
  4046  002AA0  D73D               	goto	l2804
  4047  002AA2                     __end_of_buttonsBuildLUT:
  4048                           	opt callstack 0
  4049                           
  4050 ;; *************** function ___wmul *****************
  4051 ;; Defined at:
  4052 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;  multiplier      2    0[COMRAM] unsigned int 
  4055 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;  product         2    4[COMRAM] unsigned int 
  4058 ;; Return value:  Size  Location     Type
  4059 ;;                  2    0[COMRAM] unsigned int 
  4060 ;; Registers used:
  4061 ;;		wreg, status,2, status,0, prodl, prodh
  4062 ;; Tracked objects:
  4063 ;;		On entry : 0/0
  4064 ;;		On exit  : 0/0
  4065 ;;		Unchanged: 0/0
  4066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4067 ;;      Params:         4       0       0       0       0       0       0       0       0
  4068 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4069 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4070 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4071 ;;Total ram usage:        6 bytes
  4072 ;; Hardware stack levels used:    1
  4073 ;; Hardware stack levels required when called:    2
  4074 ;; This function calls:
  4075 ;;		Nothing
  4076 ;; This function is called by:
  4077 ;;		_buttonsBuildLUT
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081                           	psect	text18
  4082  0033B6                     __ptext18:
  4083                           	opt callstack 0
  4084  0033B6                     ___wmul:
  4085                           	opt callstack 26
  4086                           
  4087                           ;incstack = 0
  4088  0033B6  5001               	movf	___wmul@multiplier,w,c
  4089  0033B8  0203               	mulwf	___wmul@multiplicand,c
  4090  0033BA  006F FFCC  F005    	movff	prodl,___wmul@product
  4091  0033C0  006F FFD0  F006    	movff	prodh,___wmul@product+1
  4092  0033C6  5001               	movf	___wmul@multiplier,w,c
  4093  0033C8  0204               	mulwf	___wmul@multiplicand+1,c
  4094  0033CA  50F3               	movf	prodl,w,c
  4095  0033CC  2606               	addwf	___wmul@product+1,f,c
  4096  0033CE  5002               	movf	___wmul@multiplier+1,w,c
  4097  0033D0  0203               	mulwf	___wmul@multiplicand,c
  4098  0033D2  50F3               	movf	prodl,w,c
  4099  0033D4  2606               	addwf	___wmul@product+1,f,c
  4100  0033D6  0060  F014  F001   	movff	___wmul@product,?___wmul
  4101  0033DC  0060  F018  F002   	movff	___wmul@product+1,?___wmul+1
  4102  0033E2  0012               	return		;funcret
  4103  0033E4                     __end_of___wmul:
  4104                           	opt callstack 0
  4105                           
  4106 ;; *************** function ___awdiv *****************
  4107 ;; Defined at:
  4108 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;  dividend        2    6[COMRAM] int 
  4111 ;;  divisor         2    8[COMRAM] int 
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;  quotient        2   12[COMRAM] int 
  4114 ;;  sign            1   11[COMRAM] unsigned char 
  4115 ;;  counter         1   10[COMRAM] unsigned char 
  4116 ;; Return value:  Size  Location     Type
  4117 ;;                  2    6[COMRAM] int 
  4118 ;; Registers used:
  4119 ;;		wreg, status,2, status,0
  4120 ;; Tracked objects:
  4121 ;;		On entry : 0/0
  4122 ;;		On exit  : 0/0
  4123 ;;		Unchanged: 0/0
  4124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4125 ;;      Params:         4       0       0       0       0       0       0       0       0
  4126 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4127 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4128 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4129 ;;Total ram usage:        8 bytes
  4130 ;; Hardware stack levels used:    1
  4131 ;; Hardware stack levels required when called:    2
  4132 ;; This function calls:
  4133 ;;		Nothing
  4134 ;; This function is called by:
  4135 ;;		_buttonsBuildLUT
  4136 ;; This function uses a non-reentrant model
  4137 ;;
  4138                           
  4139                           	psect	text19
  4140  002FF2                     __ptext19:
  4141                           	opt callstack 0
  4142  002FF2                     ___awdiv:
  4143                           	opt callstack 26
  4144                           
  4145                           ;incstack = 0
  4146  002FF2  0E00               	movlw	0
  4147  002FF4  6E0C               	movwf	___awdiv@sign,c
  4148  002FF6  AE0A               	btfss	___awdiv@divisor+1,7,c
  4149  002FF8  D006               	goto	l2692
  4150  002FFA  6C09               	negf	___awdiv@divisor,c
  4151  002FFC  1E0A               	comf	___awdiv@divisor+1,f,c
  4152  002FFE  B0D8               	btfsc	status,0,c
  4153  003000  2A0A               	incf	___awdiv@divisor+1,f,c
  4154  003002  0E01               	movlw	1
  4155  003004  6E0C               	movwf	___awdiv@sign,c
  4156  003006                     l2692:
  4157  003006  AE08               	btfss	___awdiv@dividend+1,7,c
  4158  003008  D006               	goto	l2698
  4159  00300A  6C07               	negf	___awdiv@dividend,c
  4160  00300C  1E08               	comf	___awdiv@dividend+1,f,c
  4161  00300E  B0D8               	btfsc	status,0,c
  4162  003010  2A08               	incf	___awdiv@dividend+1,f,c
  4163  003012  0E01               	movlw	1
  4164  003014  1A0C               	xorwf	___awdiv@sign,f,c
  4165  003016                     l2698:
  4166  003016  0E00               	movlw	0
  4167  003018  6E0E               	movwf	___awdiv@quotient+1,c
  4168  00301A  0E00               	movlw	0
  4169  00301C  6E0D               	movwf	___awdiv@quotient,c
  4170  00301E  5009               	movf	___awdiv@divisor,w,c
  4171  003020  100A               	iorwf	___awdiv@divisor+1,w,c
  4172  003022  B4D8               	btfsc	status,2,c
  4173  003024  D01C               	goto	l2720
  4174  003026  0E01               	movlw	1
  4175  003028  6E0B               	movwf	___awdiv@counter,c
  4176  00302A  D004               	goto	l2706
  4177  00302C                     l2704:
  4178  00302C  90D8               	bcf	status,0,c
  4179  00302E  3609               	rlcf	___awdiv@divisor,f,c
  4180  003030  360A               	rlcf	___awdiv@divisor+1,f,c
  4181  003032  2A0B               	incf	___awdiv@counter,f,c
  4182  003034                     l2706:
  4183  003034  AE0A               	btfss	___awdiv@divisor+1,7,c
  4184  003036  D7FA               	goto	l2704
  4185  003038                     u1600:
  4186  003038  90D8               	bcf	status,0,c
  4187  00303A  360D               	rlcf	___awdiv@quotient,f,c
  4188  00303C  360E               	rlcf	___awdiv@quotient+1,f,c
  4189  00303E  5009               	movf	___awdiv@divisor,w,c
  4190  003040  5C07               	subwf	___awdiv@dividend,w,c
  4191  003042  500A               	movf	___awdiv@divisor+1,w,c
  4192  003044  5808               	subwfb	___awdiv@dividend+1,w,c
  4193  003046  A0D8               	btfss	status,0,c
  4194  003048  D005               	goto	l2716
  4195  00304A  5009               	movf	___awdiv@divisor,w,c
  4196  00304C  5E07               	subwf	___awdiv@dividend,f,c
  4197  00304E  500A               	movf	___awdiv@divisor+1,w,c
  4198  003050  5A08               	subwfb	___awdiv@dividend+1,f,c
  4199  003052  800D               	bsf	___awdiv@quotient,0,c
  4200  003054                     l2716:
  4201  003054  90D8               	bcf	status,0,c
  4202  003056  320A               	rrcf	___awdiv@divisor+1,f,c
  4203  003058  3209               	rrcf	___awdiv@divisor,f,c
  4204  00305A  2E0B               	decfsz	___awdiv@counter,f,c
  4205  00305C  D7ED               	goto	u1600
  4206  00305E                     l2720:
  4207  00305E  500C               	movf	___awdiv@sign,w,c
  4208  003060  B4D8               	btfsc	status,2,c
  4209  003062  D004               	goto	l2724
  4210  003064  6C0D               	negf	___awdiv@quotient,c
  4211  003066  1E0E               	comf	___awdiv@quotient+1,f,c
  4212  003068  B0D8               	btfsc	status,0,c
  4213  00306A  2A0E               	incf	___awdiv@quotient+1,f,c
  4214  00306C                     l2724:
  4215  00306C  0060  F034  F007   	movff	___awdiv@quotient,?___awdiv
  4216  003072  0060  F038  F008   	movff	___awdiv@quotient+1,?___awdiv+1
  4217  003078  0012               	return		;funcret
  4218  00307A                     __end_of___awdiv:
  4219                           	opt callstack 0
  4220                           
  4221 ;; *************** function _bootBootloader *****************
  4222 ;; Defined at:
  4223 ;;		line 394 in file "main.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;		None
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;		None
  4228 ;; Return value:  Size  Location     Type
  4229 ;;                  1    wreg      void 
  4230 ;; Registers used:
  4231 ;;		wreg, status,2
  4232 ;; Tracked objects:
  4233 ;;		On entry : 0/0
  4234 ;;		On exit  : 0/0
  4235 ;;		Unchanged: 0/0
  4236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4237 ;;      Params:         0       0       0       0       0       0       0       0       0
  4238 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4239 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4240 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4241 ;;Total ram usage:        0 bytes
  4242 ;; Hardware stack levels used:    1
  4243 ;; Hardware stack levels required when called:    2
  4244 ;; This function calls:
  4245 ;;		Nothing
  4246 ;; This function is called by:
  4247 ;;		_main
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251                           	psect	text20
  4252  003298                     __ptext20:
  4253                           	opt callstack 0
  4254  003298                     _bootBootloader:
  4255                           	opt callstack 28
  4256                           
  4257                           ;main.c: 395: INTCON0 = 0x00;
  4258                           
  4259                           ;incstack = 0
  4260  003298  0E00               	movlw	0
  4261  00329A  6ED2               	movwf	16338,c	;volatile
  4262                           
  4263                           ;main.c: 396: NCO1ACCL = 0x01;
  4264  00329C  0E01               	movlw	1
  4265  00329E  013F               	movlb	63	; () banked
  4266  0032A0  6F38               	movwf	56,b	;volatile
  4267                           
  4268                           ;main.c: 397: STKPTR = 0x00;
  4269  0032A2  0E00               	movlw	0
  4270  0032A4  6EFC               	movwf	stkptr,c	;volatile
  4271                           
  4272                           ;main.c: 398: IVTLOCK = 0x55;
  4273  0032A6  0E55               	movlw	85
  4274  0032A8  6ED4               	movwf	16340,c	;volatile
  4275                           
  4276                           ;main.c: 399: IVTLOCK = 0xAA;
  4277  0032AA  0EAA               	movlw	170
  4278  0032AC  6ED4               	movwf	16340,c	;volatile
  4279                           
  4280                           ;main.c: 400: IVTLOCK = 0;
  4281  0032AE  0E00               	movlw	0
  4282  0032B0  6ED4               	movwf	16340,c	;volatile
  4283                           
  4284                           ; BSR set to: 63
  4285                           ;main.c: 401: IVTLOCKED = 0;
  4286  0032B2  90D4               	bcf	16340,0,c	;volatile
  4287                           
  4288                           ;main.c: 402: IVTBASE = 8;
  4289  0032B4  0E08               	movlw	8
  4290  0032B6  6ED5               	movwf	16341,c	;volatile
  4291  0032B8  0E00               	movlw	0
  4292  0032BA  6ED6               	movwf	16342,c	;volatile
  4293  0032BC  0E00               	movlw	0
  4294  0032BE  6ED7               	movwf	16343,c	;volatile
  4295                           
  4296                           ;main.c: 403: IVTLOCK = 0x55;
  4297  0032C0  0E55               	movlw	85
  4298  0032C2  6ED4               	movwf	16340,c	;volatile
  4299                           
  4300                           ;main.c: 404: IVTLOCK = 0xAA;
  4301  0032C4  0EAA               	movlw	170
  4302  0032C6  6ED4               	movwf	16340,c	;volatile
  4303                           
  4304                           ;main.c: 405: IVTLOCK = 1;
  4305  0032C8  0E01               	movlw	1
  4306  0032CA  6ED4               	movwf	16340,c	;volatile
  4307                           
  4308                           ; BSR set to: 63
  4309                           ;main.c: 406: IVTLOCKED = 1;
  4310  0032CC  80D4               	bsf	16340,0,c	;volatile
  4311                           
  4312                           ;main.c: 408: PCLATU = 0x00;
  4313  0032CE  0E00               	movlw	0
  4314  0032D0  6EFB               	movwf	pclatu,c	;volatile
  4315                           
  4316                           ;main.c: 409: PCLATH = 0x00;
  4317  0032D2  0E00               	movlw	0
  4318  0032D4  6EFA               	movwf	pclath,c	;volatile
  4319                           
  4320                           ;main.c: 410: PCL = 0x00;
  4321  0032D6  0E00               	movlw	0
  4322  0032D8  6EF9               	movwf	pcl,c	;volatile
  4323                           
  4324                           ; BSR set to: 63
  4325  0032DA  0012               	return		;funcret
  4326  0032DC                     __end_of_bootBootloader:
  4327                           	opt callstack 0
  4328                           
  4329 ;; *************** function _SISendMessage *****************
  4330 ;; Defined at:
  4331 ;;		line 194 in file "si.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;  msg             2    6[COMRAM] PTR unsigned char 
  4334 ;;		 -> buttonsMessage(8), main@msgAnswer(36), 
  4335 ;;  len             1    8[COMRAM] unsigned char 
  4336 ;; Auto vars:     Size  Location     Type
  4337 ;;  leftToSend      1   15[COMRAM] char 
  4338 ;;  idx             1   14[COMRAM] unsigned char 
  4339 ;; Return value:  Size  Location     Type
  4340 ;;                  1    wreg      void 
  4341 ;; Registers used:
  4342 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4348 ;;      Params:         3       0       0       0       0       0       0       0       0
  4349 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4350 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4351 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4352 ;;Total ram usage:       10 bytes
  4353 ;; Hardware stack levels used:    1
  4354 ;; Hardware stack levels required when called:    2
  4355 ;; This function calls:
  4356 ;;		Nothing
  4357 ;; This function is called by:
  4358 ;;		_main
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           
  4362                           	psect	text21
  4363  002D12                     __ptext21:
  4364                           	opt callstack 0
  4365  002D12                     _SISendMessage:
  4366                           	opt callstack 28
  4367                           
  4368                           ;si.c: 195: int8_t leftToSend;;si.c: 196: uint8_t idx;;si.c: 203: SMT1CON1bits.GO = 0;
  4369                           
  4370                           ; BSR set to: 63
  4371                           ;incstack = 0
  4372  002D12  013F               	movlb	63	; () banked
  4373  002D14  9F1F               	bcf	31,7,b	;volatile
  4374  002D16                     l437:
  4375  002D16  013D               	movlb	61	; () banked
  4376  002D18  AB17               	btfss	23,5,b	;volatile
  4377  002D1A  D7FD               	goto	l437
  4378                           
  4379                           ; BSR set to: 61
  4380                           ;si.c: 208: TRISBbits.TRISB2 = 0;
  4381  002D1C  94C3               	bcf	16323,2,c	;volatile
  4382                           
  4383                           ; BSR set to: 61
  4384                           ;si.c: 211: SIBitCounter = 0;
  4385  002D1E  0E00               	movlw	0
  4386  002D20  6E3F               	movwf	_SIBitCounter,c
  4387                           
  4388                           ;si.c: 212: SIByteCounter = 0;
  4389  002D22  0E00               	movlw	0
  4390  002D24  6E3E               	movwf	_SIByteCounter,c
  4391                           
  4392                           ;si.c: 213: SICMDReceived = 0;
  4393  002D26  0E00               	movlw	0
  4394  002D28  6E3D               	movwf	_SICMDReceived,c
  4395                           
  4396                           ;si.c: 214: SITempByte = 0x00;
  4397  002D2A  0E00               	movlw	0
  4398  002D2C  6E3C               	movwf	_SITempByte,c
  4399                           
  4400                           ;si.c: 216: T2TMR = 0x01;
  4401  002D2E  0E01               	movlw	1
  4402  002D30  6EAA               	movwf	16298,c	;volatile
  4403                           
  4404                           ;si.c: 218: SPI1TWIDTH = 0x01;
  4405  002D32  0E01               	movlw	1
  4406  002D34  6F18               	movwf	24,b	;volatile
  4407                           
  4408                           ; BSR set to: 61
  4409                           ;si.c: 219: SPI1INTFbits.SRMTIF = 0;
  4410  002D36  9F1A               	bcf	26,7,b	;volatile
  4411                           
  4412                           ; BSR set to: 61
  4413                           ;si.c: 220: SPI1TCNTL = len;
  4414  002D38  0060  F027  FD12   	movff	SISendMessage@len,15634	;volatile
  4415                           
  4416                           ; BSR set to: 61
  4417                           ;si.c: 222: if (len == 1) {
  4418  002D3E  0409               	decf	SISendMessage@len,w,c
  4419  002D40  A4D8               	btfss	status,2,c
  4420  002D42  D00B               	goto	l3356
  4421                           
  4422                           ; BSR set to: 61
  4423                           ;si.c: 223: SPI1TXB = msg[0];
  4424  002D44  0060  F01F  FFD9   	movff	SISendMessage@msg,fsr2l
  4425  002D4A  0060  F023  FFDA   	movff	SISendMessage@msg+1,fsr2h
  4426  002D50  50DF               	movf	indf2,w,c
  4427  002D52  6F11               	movwf	17,b	;volatile
  4428                           
  4429                           ; BSR set to: 61
  4430                           ;si.c: 224: SPI1TXB = 0x80;
  4431  002D54  0E80               	movlw	128
  4432  002D56  6F11               	movwf	17,b	;volatile
  4433                           
  4434                           ;si.c: 225: } else {
  4435  002D58  D03F               	goto	u2620
  4436  002D5A                     l3356:
  4437                           
  4438                           ; BSR set to: 61
  4439                           ;si.c: 226: SPI1TXB = msg[0];
  4440  002D5A  0060  F01F  FFD9   	movff	SISendMessage@msg,fsr2l
  4441  002D60  0060  F023  FFDA   	movff	SISendMessage@msg+1,fsr2h
  4442  002D66  50DF               	movf	indf2,w,c
  4443  002D68  6F11               	movwf	17,b	;volatile
  4444                           
  4445                           ; BSR set to: 61
  4446                           ;si.c: 227: SPI1TXB = msg[1];
  4447  002D6A  EE20 F001          	lfsr	2,1
  4448  002D6E  5007               	movf	SISendMessage@msg,w,c
  4449  002D70  26D9               	addwf	fsr2l,f,c
  4450  002D72  5008               	movf	SISendMessage@msg+1,w,c
  4451  002D74  22DA               	addwfc	fsr2h,f,c
  4452  002D76  50DF               	movf	indf2,w,c
  4453  002D78  6F11               	movwf	17,b	;volatile
  4454                           
  4455                           ; BSR set to: 61
  4456                           ;si.c: 228: leftToSend = len - 2;
  4457  002D7A  5009               	movf	SISendMessage@len,w,c
  4458  002D7C  0FFE               	addlw	254
  4459  002D7E  6E10               	movwf	SISendMessage@leftToSend,c
  4460                           
  4461                           ;si.c: 229: idx = 2;
  4462  002D80  0E02               	movlw	2
  4463  002D82  6E0F               	movwf	SISendMessage@idx,c
  4464                           
  4465                           ;si.c: 231: while(leftToSend >= 0) {
  4466  002D84  D027               	goto	l3374
  4467  002D86                     l3362:
  4468                           
  4469                           ; BSR set to: 61
  4470                           ;si.c: 232: if (SPI1TCNTL < (leftToSend + 2)) {
  4471  002D86  0060  F040  F00A   	movff	SISendMessage@leftToSend,??_SISendMessage
  4472  002D8C  6A0B               	clrf	(??_SISendMessage+1)& (0+255),c
  4473  002D8E  BE0A               	btfsc	??_SISendMessage& (0+255),7,c
  4474  002D90  060B               	decf	(??_SISendMessage+1)& (0+255),f,c
  4475  002D92  0E02               	movlw	2
  4476  002D94  260A               	addwf	??_SISendMessage,f,c
  4477  002D96  0E00               	movlw	0
  4478  002D98  220B               	addwfc	??_SISendMessage+1,f,c
  4479  002D9A  5112               	movf	18,w,b	;volatile
  4480  002D9C  6E0C               	movwf	(??_SISendMessage+2)& (0+255),c
  4481  002D9E  6A0D               	clrf	(??_SISendMessage+3)& (0+255),c
  4482  002DA0  500A               	movf	??_SISendMessage,w,c
  4483  002DA2  5C0C               	subwf	??_SISendMessage+2,w,c
  4484  002DA4  500D               	movf	??_SISendMessage+3,w,c
  4485  002DA6  0A80               	xorlw	128
  4486  002DA8  6E0E               	movwf	(??_SISendMessage+4)& (0+255),c
  4487  002DAA  500B               	movf	??_SISendMessage+1,w,c
  4488  002DAC  0A80               	xorlw	128
  4489  002DAE  580E               	subwfb	(??_SISendMessage+4)& (0+255),w,c
  4490  002DB0  B0D8               	btfsc	status,0,c
  4491  002DB2  D010               	goto	l3374
  4492                           
  4493                           ; BSR set to: 61
  4494                           ;si.c: 233: if (leftToSend == 0) {
  4495  002DB4  5010               	movf	SISendMessage@leftToSend,w,c
  4496  002DB6  A4D8               	btfss	status,2,c
  4497  002DB8  D003               	goto	l3368
  4498                           
  4499                           ; BSR set to: 61
  4500                           ;si.c: 234: SPI1TXB = 0x80;
  4501  002DBA  0E80               	movlw	128
  4502  002DBC  6F11               	movwf	17,b	;volatile
  4503                           
  4504                           ;si.c: 235: } else {
  4505  002DBE  D009               	goto	l3372
  4506  002DC0                     l3368:
  4507                           
  4508                           ; BSR set to: 61
  4509                           ;si.c: 236: SPI1TXB = msg[idx++];
  4510  002DC0  500F               	movf	SISendMessage@idx,w,c
  4511  002DC2  2407               	addwf	SISendMessage@msg,w,c
  4512  002DC4  6ED9               	movwf	fsr2l,c
  4513  002DC6  0E00               	movlw	0
  4514  002DC8  2008               	addwfc	SISendMessage@msg+1,w,c
  4515  002DCA  6EDA               	movwf	fsr2h,c
  4516  002DCC  50DF               	movf	indf2,w,c
  4517  002DCE  6F11               	movwf	17,b	;volatile
  4518                           
  4519                           ; BSR set to: 61
  4520  002DD0  2A0F               	incf	SISendMessage@idx,f,c
  4521  002DD2                     l3372:
  4522                           
  4523                           ; BSR set to: 61
  4524                           ;si.c: 237: };si.c: 238: leftToSend--;
  4525  002DD2  0610               	decf	SISendMessage@leftToSend,f,c
  4526  002DD4                     l3374:
  4527                           
  4528                           ; BSR set to: 61
  4529  002DD4  AE10               	btfss	SISendMessage@leftToSend,7,c
  4530  002DD6  D7D7               	goto	l3362
  4531  002DD8                     u2620:
  4532                           
  4533                           ; BSR set to: 61
  4534  002DD8  AF1A               	btfss	26,7,b	;volatile
  4535  002DDA  D7FE               	goto	u2620
  4536  002DDC                     u2630:
  4537                           
  4538                           ; BSR set to: 61
  4539  002DDC  AB17               	btfss	23,5,b	;volatile
  4540  002DDE  D7FE               	goto	u2630
  4541                           
  4542                           ; BSR set to: 61
  4543                           ;si.c: 245: SPI1INTFbits.SRMTIF = 0;
  4544  002DE0  9F1A               	bcf	26,7,b	;volatile
  4545                           
  4546                           ;si.c: 248: SMT1CON1bits.GO = 1;
  4547  002DE2  013F               	movlb	63	; () banked
  4548  002DE4  8F1F               	bsf	31,7,b	;volatile
  4549                           
  4550                           ;si.c: 249: TRISBbits.TRISB2 = 1;
  4551  002DE6  84C3               	bsf	16323,2,c	;volatile
  4552                           
  4553                           ; BSR set to: 63
  4554  002DE8  0012               	return		;funcret
  4555  002DEA                     __end_of_SISendMessage:
  4556                           	opt callstack 0
  4557                           
  4558 ;; *************** function _SIInit *****************
  4559 ;; Defined at:
  4560 ;;		line 75 in file "si.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;		None
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;		None
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  1    wreg      void 
  4567 ;; Registers used:
  4568 ;;		wreg, status,2, cstack
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4574 ;;      Params:         0       0       0       0       0       0       0       0       0
  4575 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4576 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4577 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4578 ;;Total ram usage:        0 bytes
  4579 ;; Hardware stack levels used:    1
  4580 ;; Hardware stack levels required when called:    3
  4581 ;; This function calls:
  4582 ;;		_SIConfigureCLC
  4583 ;; This function is called by:
  4584 ;;		_main
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588                           	psect	text22
  4589  002F68                     __ptext22:
  4590                           	opt callstack 0
  4591  002F68                     _SIInit:
  4592                           	opt callstack 27
  4593                           
  4594                           ;si.c: 77: T6CON = 0x00;
  4595                           
  4596                           ; BSR set to: 63
  4597                           ;incstack = 0
  4598  002F68  0E00               	movlw	0
  4599  002F6A  6E94               	movwf	16276,c	;volatile
  4600                           
  4601                           ;si.c: 78: T6CLK = 0x01;
  4602  002F6C  0E01               	movlw	1
  4603  002F6E  6E96               	movwf	16278,c	;volatile
  4604                           
  4605                           ;si.c: 79: T6RST = 0x00;
  4606  002F70  0E00               	movlw	0
  4607  002F72  6E97               	movwf	16279,c	;volatile
  4608                           
  4609                           ;si.c: 80: T6TMR = 0x00;
  4610  002F74  0E00               	movlw	0
  4611  002F76  6E92               	movwf	16274,c	;volatile
  4612                           
  4613                           ;si.c: 81: T6PR = 0x50;
  4614  002F78  0E50               	movlw	80
  4615  002F7A  6E93               	movwf	16275,c	;volatile
  4616                           
  4617                           ;si.c: 82: T6HLT = 0x05;
  4618  002F7C  0E05               	movlw	5
  4619  002F7E  6E95               	movwf	16277,c	;volatile
  4620                           
  4621                           ;si.c: 83: PIR9bits.TMR6IF = 0;
  4622  002F80  0139               	movlb	57	; () banked
  4623  002F82  91A9               	bcf	169,0,b	;volatile
  4624                           
  4625                           ; BSR set to: 57
  4626                           ;si.c: 84: PIE9bits.TMR6IE = 1;
  4627  002F84  8199               	bsf	153,0,b	;volatile
  4628                           
  4629                           ;si.c: 88: T2CON = 0x00;
  4630  002F86  0E00               	movlw	0
  4631  002F88  6EAC               	movwf	16300,c	;volatile
  4632                           
  4633                           ;si.c: 89: T2CLK = 0x01;
  4634  002F8A  0E01               	movlw	1
  4635  002F8C  6EAE               	movwf	16302,c	;volatile
  4636                           
  4637                           ;si.c: 90: T2RST = 0x00;
  4638  002F8E  0E00               	movlw	0
  4639  002F90  6EAF               	movwf	16303,c	;volatile
  4640                           
  4641                           ;si.c: 91: T2TMR = 0x00;
  4642  002F92  0E00               	movlw	0
  4643  002F94  6EAA               	movwf	16298,c	;volatile
  4644                           
  4645                           ;si.c: 92: T2PR = 125;
  4646  002F96  0E7D               	movlw	125
  4647  002F98  6EAB               	movwf	16299,c	;volatile
  4648                           
  4649                           ; BSR set to: 57
  4650                           ;si.c: 93: PIR4bits.TMR2IF = 0;
  4651  002F9A  95A4               	bcf	164,2,b	;volatile
  4652                           
  4653                           ;si.c: 94: T2CON = 0xF0;
  4654  002F9C  0EF0               	movlw	240
  4655  002F9E  6EAC               	movwf	16300,c	;volatile
  4656                           
  4657                           ;si.c: 95: while(!PIR4bits.TMR2IF) {
  4658  002FA0  D004               	goto	l2972
  4659  002FA2                     l428:
  4660                           
  4661                           ; BSR set to: 57
  4662                           ;si.c: 96: if (PORTBbits.RB2 == 0) {
  4663  002FA2  B4CB               	btfsc	16331,2,c	;volatile
  4664  002FA4  D002               	goto	l2972
  4665                           
  4666                           ; BSR set to: 57
  4667                           ;si.c: 97: T2TMR = 0x00;
  4668  002FA6  0E00               	movlw	0
  4669  002FA8  6EAA               	movwf	16298,c	;volatile
  4670  002FAA                     l2972:
  4671                           
  4672                           ; BSR set to: 57
  4673  002FAA  A5A4               	btfss	164,2,b	;volatile
  4674  002FAC  D7FA               	goto	l428
  4675                           
  4676                           ; BSR set to: 57
  4677                           ;si.c: 98: };si.c: 99: };si.c: 101: CCPTMRS1 = 0x55;
  4678  002FAE  0E55               	movlw	85
  4679  002FB0  013F               	movlb	63	; () banked
  4680  002FB2  6F5F               	movwf	95,b	;volatile
  4681                           
  4682                           ; BSR set to: 63
  4683                           ;si.c: 103: SIConfigureCLC();
  4684  002FB4  EC18  F016         	call	_SIConfigureCLC	;wreg free
  4685                           
  4686                           ;si.c: 105: T6CON = 0x80;
  4687  002FB8  0E80               	movlw	128
  4688  002FBA  6E94               	movwf	16276,c	;volatile
  4689                           
  4690                           ;si.c: 111: SMT1PRL = 0xFF;
  4691  002FBC  013F               	movlb	63	; () banked
  4692  002FBE  691B               	setf	27,b	;volatile
  4693                           
  4694                           ; BSR set to: 63
  4695                           ;si.c: 112: SMT1PRH = 0xFF;
  4696  002FC0  691C               	setf	28,b	;volatile
  4697                           
  4698                           ; BSR set to: 63
  4699                           ;si.c: 113: SMT1PRU = 0xFF;
  4700  002FC2  691D               	setf	29,b	;volatile
  4701                           
  4702                           ; BSR set to: 63
  4703                           ;si.c: 114: SMT1TMRL = 0x00;
  4704  002FC4  0E00               	movlw	0
  4705  002FC6  6F12               	movwf	18,b	;volatile
  4706                           
  4707                           ; BSR set to: 63
  4708                           ;si.c: 115: SMT1TMRH = 0x00;
  4709  002FC8  0E00               	movlw	0
  4710  002FCA  6F13               	movwf	19,b	;volatile
  4711                           
  4712                           ; BSR set to: 63
  4713                           ;si.c: 116: SMT1TMRU = 0x00;
  4714  002FCC  0E00               	movlw	0
  4715  002FCE  6F14               	movwf	20,b	;volatile
  4716                           
  4717                           ; BSR set to: 63
  4718                           ;si.c: 117: SMT1CON0 = 0x88;
  4719  002FD0  0E88               	movlw	136
  4720  002FD2  6F1E               	movwf	30,b	;volatile
  4721                           
  4722                           ; BSR set to: 63
  4723                           ;si.c: 118: SMT1CON1 = 0x43;
  4724  002FD4  0E43               	movlw	67
  4725  002FD6  6F1F               	movwf	31,b	;volatile
  4726                           
  4727                           ; BSR set to: 63
  4728                           ;si.c: 119: SMT1CLK = 0x01;
  4729  002FD8  0E01               	movlw	1
  4730  002FDA  6F21               	movwf	33,b	;volatile
  4731                           
  4732                           ; BSR set to: 63
  4733                           ;si.c: 120: SMT1WIN = 0x00;
  4734  002FDC  0E00               	movlw	0
  4735  002FDE  6F23               	movwf	35,b	;volatile
  4736                           
  4737                           ; BSR set to: 63
  4738                           ;si.c: 121: SMT1SIG = 0x00;
  4739  002FE0  0E00               	movlw	0
  4740  002FE2  6F22               	movwf	34,b	;volatile
  4741                           
  4742                           ; BSR set to: 63
  4743                           ;si.c: 123: PIR1bits.SMT1PWAIF = 0;
  4744  002FE4  0139               	movlb	57	; () banked
  4745  002FE6  9FA1               	bcf	161,7,b	;volatile
  4746                           
  4747                           ; BSR set to: 57
  4748                           ;si.c: 124: IPR1bits.SMT1PWAIP = 1;
  4749  002FE8  8F81               	bsf	129,7,b	;volatile
  4750                           
  4751                           ; BSR set to: 57
  4752                           ;si.c: 125: PIE1bits.SMT1PWAIE = 1;
  4753  002FEA  8F91               	bsf	145,7,b	;volatile
  4754                           
  4755                           ; BSR set to: 57
  4756                           ;si.c: 126: SMT1CON1bits.GO = 1;
  4757  002FEC  013F               	movlb	63	; () banked
  4758  002FEE  8F1F               	bsf	31,7,b	;volatile
  4759                           
  4760                           ; BSR set to: 63
  4761  002FF0  0012               	return		;funcret
  4762  002FF2                     __end_of_SIInit:
  4763                           	opt callstack 0
  4764                           
  4765 ;; *************** function _SIConfigureCLC *****************
  4766 ;; Defined at:
  4767 ;;		line 129 in file "si.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;		None
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;		None
  4772 ;; Return value:  Size  Location     Type
  4773 ;;                  1    wreg      void 
  4774 ;; Registers used:
  4775 ;;		wreg, status,2
  4776 ;; Tracked objects:
  4777 ;;		On entry : 0/0
  4778 ;;		On exit  : 0/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4781 ;;      Params:         0       0       0       0       0       0       0       0       0
  4782 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4783 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4784 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4785 ;;Total ram usage:        0 bytes
  4786 ;; Hardware stack levels used:    1
  4787 ;; Hardware stack levels required when called:    2
  4788 ;; This function calls:
  4789 ;;		Nothing
  4790 ;; This function is called by:
  4791 ;;		_SIInit
  4792 ;; This function uses a non-reentrant model
  4793 ;;
  4794                           
  4795                           	psect	text23
  4796  002C30                     __ptext23:
  4797                           	opt callstack 0
  4798  002C30                     _SIConfigureCLC:
  4799                           	opt callstack 27
  4800                           
  4801                           ;si.c: 130: T2CON = 0x00;
  4802                           
  4803                           ; BSR set to: 63
  4804                           ;incstack = 0
  4805  002C30  0E00               	movlw	0
  4806  002C32  6EAC               	movwf	16300,c	;volatile
  4807                           
  4808                           ;si.c: 131: T2CLKCON = 0x01;
  4809  002C34  0E01               	movlw	1
  4810  002C36  6EAE               	movwf	16302,c	;volatile
  4811                           
  4812                           ;si.c: 132: T2HLT = 0x04;
  4813  002C38  0E04               	movlw	4
  4814  002C3A  6EAD               	movwf	16301,c	;volatile
  4815                           
  4816                           ;si.c: 133: T2RST = 0x12;
  4817  002C3C  0E12               	movlw	18
  4818  002C3E  6EAF               	movwf	16303,c	;volatile
  4819                           
  4820                           ;si.c: 134: T2PR = 0x1F;
  4821  002C40  0E1F               	movlw	31
  4822  002C42  6EAB               	movwf	16299,c	;volatile
  4823                           
  4824                           ;si.c: 135: T2TMR = 0x00;
  4825  002C44  0E00               	movlw	0
  4826  002C46  6EAA               	movwf	16298,c	;volatile
  4827                           
  4828                           ;si.c: 136: T2CON = 0x80;
  4829  002C48  0E80               	movlw	128
  4830  002C4A  6EAC               	movwf	16300,c	;volatile
  4831                           
  4832                           ;si.c: 139: PWM5DCH = 0x0F;
  4833  002C4C  0E0F               	movlw	15
  4834  002C4E  6E6D               	movwf	16237,c	;volatile
  4835                           
  4836                           ;si.c: 140: PWM5DCL = 0x00;
  4837  002C50  0E00               	movlw	0
  4838  002C52  6E6C               	movwf	16236,c	;volatile
  4839                           
  4840                           ;si.c: 141: PWM5CON = 0x80;
  4841  002C54  0E80               	movlw	128
  4842  002C56  6E6E               	movwf	16238,c	;volatile
  4843                           
  4844                           ;si.c: 143: CLC1POL = 0x00;
  4845  002C58  0E00               	movlw	0
  4846  002C5A  013C               	movlb	60	; () banked
  4847  002C5C  6F75               	movwf	117,b	;volatile
  4848                           
  4849                           ;si.c: 144: CLC1SEL0 = 0x18;
  4850  002C5E  0E18               	movlw	24
  4851  002C60  6F76               	movwf	118,b	;volatile
  4852                           
  4853                           ;si.c: 145: CLC1SEL1 = 0x05;
  4854  002C62  0E05               	movlw	5
  4855  002C64  6F77               	movwf	119,b	;volatile
  4856                           
  4857                           ;si.c: 146: CLC1SEL2 = 0x00;
  4858  002C66  0E00               	movlw	0
  4859  002C68  6F78               	movwf	120,b	;volatile
  4860                           
  4861                           ;si.c: 147: CLC1SEL3 = 0x00;
  4862  002C6A  0E00               	movlw	0
  4863  002C6C  6F79               	movwf	121,b	;volatile
  4864                           
  4865                           ;si.c: 148: CLC1GLS0 = 0x08;
  4866  002C6E  0E08               	movlw	8
  4867  002C70  6F7A               	movwf	122,b	;volatile
  4868                           
  4869                           ;si.c: 149: CLC1GLS1 = 0x02;
  4870  002C72  0E02               	movlw	2
  4871  002C74  6F7B               	movwf	123,b	;volatile
  4872                           
  4873                           ;si.c: 150: CLC1GLS2 = 0x00;
  4874  002C76  0E00               	movlw	0
  4875  002C78  6F7C               	movwf	124,b	;volatile
  4876                           
  4877                           ;si.c: 151: CLC1GLS3 = 0x00;
  4878  002C7A  0E00               	movlw	0
  4879  002C7C  6F7D               	movwf	125,b	;volatile
  4880                           
  4881                           ;si.c: 152: CLC1CON = 0x84;
  4882  002C7E  0E84               	movlw	132
  4883  002C80  6F74               	movwf	116,b	;volatile
  4884                           
  4885                           ;si.c: 154: CLC2POL = 0x00;
  4886  002C82  0E00               	movlw	0
  4887  002C84  6F6B               	movwf	107,b	;volatile
  4888                           
  4889                           ;si.c: 155: CLC2SEL0 = 0x2C;
  4890  002C86  0E2C               	movlw	44
  4891  002C88  6F6C               	movwf	108,b	;volatile
  4892                           
  4893                           ;si.c: 156: CLC2SEL1 = 0x05;
  4894  002C8A  0E05               	movlw	5
  4895  002C8C  6F6D               	movwf	109,b	;volatile
  4896                           
  4897                           ;si.c: 157: CLC2SEL2 = 0x00;
  4898  002C8E  0E00               	movlw	0
  4899  002C90  6F6E               	movwf	110,b	;volatile
  4900                           
  4901                           ;si.c: 158: CLC2SEL3 = 0x00;
  4902  002C92  0E00               	movlw	0
  4903  002C94  6F6F               	movwf	111,b	;volatile
  4904                           
  4905                           ;si.c: 159: CLC2GLS0 = 0x08;
  4906  002C96  0E08               	movlw	8
  4907  002C98  6F70               	movwf	112,b	;volatile
  4908                           
  4909                           ;si.c: 160: CLC2GLS1 = 0x01;
  4910  002C9A  0E01               	movlw	1
  4911  002C9C  6F71               	movwf	113,b	;volatile
  4912                           
  4913                           ;si.c: 161: CLC2GLS2 = 0x00;
  4914  002C9E  0E00               	movlw	0
  4915  002CA0  6F72               	movwf	114,b	;volatile
  4916                           
  4917                           ;si.c: 162: CLC2GLS3 = 0x00;
  4918  002CA2  0E00               	movlw	0
  4919  002CA4  6F73               	movwf	115,b	;volatile
  4920                           
  4921                           ;si.c: 163: CLC2CON = 0x84;
  4922  002CA6  0E84               	movlw	132
  4923  002CA8  6F6A               	movwf	106,b	;volatile
  4924                           
  4925                           ;si.c: 165: CLC3POL = 0x00;
  4926  002CAA  0E00               	movlw	0
  4927  002CAC  6F61               	movwf	97,b	;volatile
  4928                           
  4929                           ;si.c: 166: CLC3SEL0 = 0x24;
  4930  002CAE  0E24               	movlw	36
  4931  002CB0  6F62               	movwf	98,b	;volatile
  4932                           
  4933                           ;si.c: 167: CLC3SEL1 = 0x18;
  4934  002CB2  0E18               	movlw	24
  4935  002CB4  6F63               	movwf	99,b	;volatile
  4936                           
  4937                           ;si.c: 168: CLC3SEL2 = 0x2B;
  4938  002CB6  0E2B               	movlw	43
  4939  002CB8  6F64               	movwf	100,b	;volatile
  4940                           
  4941                           ;si.c: 169: CLC3SEL3 = 0x2C;
  4942  002CBA  0E2C               	movlw	44
  4943  002CBC  6F65               	movwf	101,b	;volatile
  4944                           
  4945                           ;si.c: 170: CLC3GLS0 = 0x02;
  4946  002CBE  0E02               	movlw	2
  4947  002CC0  6F66               	movwf	102,b	;volatile
  4948                           
  4949                           ;si.c: 171: CLC3GLS1 = 0x04;
  4950  002CC2  0E04               	movlw	4
  4951  002CC4  6F67               	movwf	103,b	;volatile
  4952                           
  4953                           ;si.c: 172: CLC3GLS2 = 0x90;
  4954  002CC6  0E90               	movlw	144
  4955  002CC8  6F68               	movwf	104,b	;volatile
  4956                           
  4957                           ;si.c: 173: CLC3GLS3 = 0x60;
  4958  002CCA  0E60               	movlw	96
  4959  002CCC  6F69               	movwf	105,b	;volatile
  4960                           
  4961                           ;si.c: 174: CLC3CON = 0x82;
  4962  002CCE  0E82               	movlw	130
  4963  002CD0  6F60               	movwf	96,b	;volatile
  4964                           
  4965                           ;si.c: 176: CLC4POL = 0x04;
  4966  002CD2  0E04               	movlw	4
  4967  002CD4  6F57               	movwf	87,b	;volatile
  4968                           
  4969                           ;si.c: 177: CLC4SEL0 = 0x26;
  4970  002CD6  0E26               	movlw	38
  4971  002CD8  6F58               	movwf	88,b	;volatile
  4972                           
  4973                           ;si.c: 178: CLC4SEL1 = 0x2C;
  4974  002CDA  0E2C               	movlw	44
  4975  002CDC  6F59               	movwf	89,b	;volatile
  4976                           
  4977                           ;si.c: 179: CLC4SEL2 = 0x25;
  4978  002CDE  0E25               	movlw	37
  4979  002CE0  6F5A               	movwf	90,b	;volatile
  4980                           
  4981                           ;si.c: 180: CLC4SEL3 = 0x00;
  4982  002CE2  0E00               	movlw	0
  4983  002CE4  6F5B               	movwf	91,b	;volatile
  4984                           
  4985                           ;si.c: 181: CLC4GLS0 = 0x02;
  4986  002CE6  0E02               	movlw	2
  4987  002CE8  6F5C               	movwf	92,b	;volatile
  4988                           
  4989                           ;si.c: 182: CLC4GLS1 = 0x00;
  4990  002CEA  0E00               	movlw	0
  4991  002CEC  6F5D               	movwf	93,b	;volatile
  4992                           
  4993                           ;si.c: 183: CLC4GLS2 = 0x14;
  4994  002CEE  0E14               	movlw	20
  4995  002CF0  6F5E               	movwf	94,b	;volatile
  4996                           
  4997                           ;si.c: 184: CLC4GLS3 = 0x00;
  4998  002CF2  0E00               	movlw	0
  4999  002CF4  6F5F               	movwf	95,b	;volatile
  5000                           
  5001                           ;si.c: 185: CLC4CON = 0x83;
  5002  002CF6  0E83               	movlw	131
  5003  002CF8  6F56               	movwf	86,b	;volatile
  5004                           
  5005                           ;si.c: 187: SPI1CLK = 0x05;
  5006  002CFA  0E05               	movlw	5
  5007  002CFC  013D               	movlb	61	; () banked
  5008  002CFE  6F1C               	movwf	28,b	;volatile
  5009                           
  5010                           ;si.c: 188: SPI1BAUD = 0x00;
  5011  002D00  0E00               	movlw	0
  5012  002D02  6F19               	movwf	25,b	;volatile
  5013                           
  5014                           ;si.c: 189: SPI1CON1 = 0x00;
  5015  002D04  0E00               	movlw	0
  5016  002D06  6F15               	movwf	21,b	;volatile
  5017                           
  5018                           ;si.c: 190: SPI1CON2 = 0x02;
  5019  002D08  0E02               	movlw	2
  5020  002D0A  6F16               	movwf	22,b	;volatile
  5021                           
  5022                           ;si.c: 191: SPI1CON0 = 0x82;
  5023  002D0C  0E82               	movlw	130
  5024  002D0E  6F14               	movwf	20,b	;volatile
  5025                           
  5026                           ; BSR set to: 61
  5027  002D10  0012               	return		;funcret
  5028  002D12                     __end_of_SIConfigureCLC:
  5029                           	opt callstack 0
  5030                           
  5031 ;; *************** function _SIGetCommand *****************
  5032 ;; Defined at:
  5033 ;;		line 257 in file "si.c"
  5034 ;; Parameters:    Size  Location     Type
  5035 ;;  msg             2    0[COMRAM] PTR unsigned char 
  5036 ;;		 -> main@cmd(36), 
  5037 ;; Auto vars:     Size  Location     Type
  5038 ;;  i               1    2[COMRAM] unsigned char 
  5039 ;; Return value:  Size  Location     Type
  5040 ;;                  1    wreg      unsigned char 
  5041 ;; Registers used:
  5042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5043 ;; Tracked objects:
  5044 ;;		On entry : 0/0
  5045 ;;		On exit  : 0/0
  5046 ;;		Unchanged: 0/0
  5047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5048 ;;      Params:         2       0       0       0       0       0       0       0       0
  5049 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5050 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5051 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5052 ;;Total ram usage:        3 bytes
  5053 ;; Hardware stack levels used:    1
  5054 ;; Hardware stack levels required when called:    2
  5055 ;; This function calls:
  5056 ;;		Nothing
  5057 ;; This function is called by:
  5058 ;;		_main
  5059 ;; This function uses a non-reentrant model
  5060 ;;
  5061                           
  5062                           	psect	text24
  5063  0032DC                     __ptext24:
  5064                           	opt callstack 0
  5065  0032DC                     _SIGetCommand:
  5066                           	opt callstack 28
  5067                           
  5068                           ;si.c: 258: uint8_t i;;si.c: 259: if (!SICMDReceived) {
  5069                           
  5070                           ; BSR set to: 61
  5071                           ;incstack = 0
  5072  0032DC  503D               	movf	_SICMDReceived,w,c
  5073  0032DE  A4D8               	btfss	status,2,c
  5074  0032E0  D002               	goto	l3330
  5075                           
  5076                           ;si.c: 260: return 0;
  5077  0032E2  0E00               	movlw	0
  5078  0032E4  0012               	return	
  5079  0032E6                     l3330:
  5080                           
  5081                           ;si.c: 261: };si.c: 262: for (i = 0; i < SIByteCounter; i++) {
  5082  0032E6  0E00               	movlw	0
  5083  0032E8  6E03               	movwf	SIGetCommand@i,c
  5084  0032EA  D010               	goto	l3336
  5085  0032EC                     l3332:
  5086                           
  5087                           ;si.c: 263: msg[i] = SIInputMessage[i];
  5088  0032EC  0E00               	movlw	low _SIInputMessage
  5089  0032EE  2403               	addwf	SIGetCommand@i,w,c
  5090  0032F0  6ED9               	movwf	fsr2l,c
  5091  0032F2  6ADA               	clrf	fsr2h,c
  5092  0032F4  0E01               	movlw	high _SIInputMessage
  5093  0032F6  22DA               	addwfc	fsr2h,f,c
  5094  0032F8  5003               	movf	SIGetCommand@i,w,c
  5095  0032FA  2401               	addwf	SIGetCommand@msg,w,c
  5096  0032FC  6EE1               	movwf	fsr1l,c
  5097  0032FE  0E00               	movlw	0
  5098  003300  2002               	addwfc	SIGetCommand@msg+1,w,c
  5099  003302  6EE2               	movwf	fsr1h,c
  5100  003304  006F FF7F FFE7     	movff	indf2,indf1
  5101  00330A  2A03               	incf	SIGetCommand@i,f,c
  5102  00330C                     l3336:
  5103  00330C  503E               	movf	_SIByteCounter,w,c
  5104  00330E  5C03               	subwf	SIGetCommand@i,w,c
  5105  003310  A0D8               	btfss	status,0,c
  5106  003312  D7EC               	goto	l3332
  5107                           
  5108                           ;si.c: 264: };si.c: 266: return SIByteCounter;
  5109  003314  503E               	movf	_SIByteCounter,w,c
  5110  003316  0012               	return		;funcret
  5111  003318                     __end_of_SIGetCommand:
  5112                           	opt callstack 0
  5113                           
  5114 ;; *************** function _SIClear *****************
  5115 ;; Defined at:
  5116 ;;		line 283 in file "si.c"
  5117 ;; Parameters:    Size  Location     Type
  5118 ;;		None
  5119 ;; Auto vars:     Size  Location     Type
  5120 ;;		None
  5121 ;; Return value:  Size  Location     Type
  5122 ;;                  1    wreg      void 
  5123 ;; Registers used:
  5124 ;;		wreg, status,2
  5125 ;; Tracked objects:
  5126 ;;		On entry : 0/0
  5127 ;;		On exit  : 0/0
  5128 ;;		Unchanged: 0/0
  5129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5130 ;;      Params:         0       0       0       0       0       0       0       0       0
  5131 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5132 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5133 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5134 ;;Total ram usage:        0 bytes
  5135 ;; Hardware stack levels used:    1
  5136 ;; Hardware stack levels required when called:    2
  5137 ;; This function calls:
  5138 ;;		Nothing
  5139 ;; This function is called by:
  5140 ;;		_main
  5141 ;; This function uses a non-reentrant model
  5142 ;;
  5143                           
  5144                           	psect	text25
  5145  0034B2                     __ptext25:
  5146                           	opt callstack 0
  5147  0034B2                     _SIClear:
  5148                           	opt callstack 28
  5149                           
  5150                           ;si.c: 285: SIBitCounter = 0;
  5151                           
  5152                           ;incstack = 0
  5153  0034B2  0E00               	movlw	0
  5154  0034B4  6E3F               	movwf	_SIBitCounter,c
  5155                           
  5156                           ;si.c: 286: SIByteCounter = 0;
  5157  0034B6  0E00               	movlw	0
  5158  0034B8  6E3E               	movwf	_SIByteCounter,c
  5159                           
  5160                           ;si.c: 287: SICMDReceived = 0;
  5161  0034BA  0E00               	movlw	0
  5162  0034BC  6E3D               	movwf	_SICMDReceived,c
  5163                           
  5164                           ;si.c: 288: SITempByte = 0x00;
  5165  0034BE  0E00               	movlw	0
  5166  0034C0  6E3C               	movwf	_SITempByte,c
  5167  0034C2  0012               	return		;funcret
  5168  0034C4                     __end_of_SIClear:
  5169                           	opt callstack 0
  5170                           
  5171 ;; *************** function _ADCInit *****************
  5172 ;; Defined at:
  5173 ;;		line 41 in file "adc.c"
  5174 ;; Parameters:    Size  Location     Type
  5175 ;;  sxCh            1    wreg     unsigned char 
  5176 ;;  syCh            1    0[COMRAM] unsigned char 
  5177 ;;  cxCh            1    1[COMRAM] unsigned char 
  5178 ;;  cyCh            1    2[COMRAM] unsigned char 
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;  sxCh            1    7[COMRAM] unsigned char 
  5181 ;;  i               1    8[COMRAM] unsigned char 
  5182 ;; Return value:  Size  Location     Type
  5183 ;;                  1    wreg      void 
  5184 ;; Registers used:
  5185 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5186 ;; Tracked objects:
  5187 ;;		On entry : 0/0
  5188 ;;		On exit  : 0/0
  5189 ;;		Unchanged: 0/0
  5190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5191 ;;      Params:         3       0       0       0       0       0       0       0       0
  5192 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5193 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5194 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5195 ;;Total ram usage:        9 bytes
  5196 ;; Hardware stack levels used:    1
  5197 ;; Hardware stack levels required when called:    2
  5198 ;; This function calls:
  5199 ;;		Nothing
  5200 ;; This function is called by:
  5201 ;;		_main
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           	psect	text26
  5206  002738                     __ptext26:
  5207                           	opt callstack 0
  5208  002738                     _ADCInit:
  5209                           	opt callstack 28
  5210                           
  5211                           ;incstack = 0
  5212                           ;ADCInit@sxCh stored from wreg
  5213  002738  6E08               	movwf	ADCInit@sxCh,c
  5214                           
  5215                           ;adc.c: 42: uint8_t i;;adc.c: 45: ADCON0 = 0x80;
  5216  00273A  0E80               	movlw	128
  5217  00273C  013E               	movlb	62	; () banked
  5218  00273E  6FF8               	movwf	248,b	;volatile
  5219                           
  5220                           ;adc.c: 47: ADCON1 = 0x00;
  5221  002740  0E00               	movlw	0
  5222  002742  6FF9               	movwf	249,b	;volatile
  5223                           
  5224                           ;adc.c: 48: ADCON2 = 0x03;
  5225  002744  0E03               	movlw	3
  5226  002746  6FFA               	movwf	250,b	;volatile
  5227                           
  5228                           ; BSR set to: 62
  5229                           ;adc.c: 49: ADCON2bits.CRS = 6;
  5230  002748  51FA               	movf	250,w,b	;volatile
  5231  00274A  0B8F               	andlw	-113
  5232  00274C  0960               	iorlw	96
  5233  00274E  6FFA               	movwf	250,b	;volatile
  5234                           
  5235                           ; BSR set to: 62
  5236                           ;adc.c: 50: ADCON3 = 0x07;
  5237  002750  0E07               	movlw	7
  5238  002752  6FFB               	movwf	251,b	;volatile
  5239                           
  5240                           ; BSR set to: 62
  5241                           ;adc.c: 51: ADCLK = 0x3F;
  5242  002754  0E3F               	movlw	63
  5243  002756  6FFF               	movwf	255,b	;volatile
  5244                           
  5245                           ; BSR set to: 62
  5246                           ;adc.c: 52: ADREF = 0x00;
  5247  002758  0E00               	movlw	0
  5248  00275A  6FFD               	movwf	253,b	;volatile
  5249                           
  5250                           ; BSR set to: 62
  5251                           ;adc.c: 53: ADACQL = 0xFF;
  5252  00275C  69F3               	setf	243,b	;volatile
  5253                           
  5254                           ; BSR set to: 62
  5255                           ;adc.c: 55: ADRPT = 4;
  5256  00275E  0E04               	movlw	4
  5257  002760  6FEC               	movwf	236,b	;volatile
  5258                           
  5259                           ; BSR set to: 62
  5260                           ;adc.c: 56: ADACT = 0x1D;
  5261  002762  0E1D               	movlw	29
  5262  002764  6FFE               	movwf	254,b	;volatile
  5263                           
  5264                           ; BSR set to: 62
  5265                           ;adc.c: 59: ADCPbits.CPON = 1;
  5266  002766  8FD7               	bsf	215,7,b	;volatile
  5267  002768                     l556:
  5268                           
  5269                           ; BSR set to: 62
  5270  002768  A1D7               	btfss	215,0,b	;volatile
  5271  00276A  D7FE               	goto	l556
  5272                           
  5273                           ; BSR set to: 62
  5274                           ;adc.c: 62: ADCChannels[0] = sxCh;
  5275  00276C  0060  F020  F04F   	movff	ADCInit@sxCh,_ADCChannels
  5276                           
  5277                           ;adc.c: 63: ADCChannels[1] = syCh;
  5278  002772  0060  F004  F050   	movff	ADCInit@syCh,_ADCChannels+1
  5279                           
  5280                           ;adc.c: 64: ADCChannels[2] = cxCh;
  5281  002778  0060  F008  F051   	movff	ADCInit@cxCh,_ADCChannels+2
  5282                           
  5283                           ;adc.c: 65: ADCChannels[3] = cyCh;
  5284  00277E  0060  F00C  F052   	movff	ADCInit@cyCh,_ADCChannels+3
  5285                           
  5286                           ;adc.c: 68: ADTIF = 0;
  5287  002784  0139               	movlb	57	; () banked
  5288  002786  97A1               	bcf	161,3,b	;volatile
  5289                           
  5290                           ; BSR set to: 57
  5291                           ;adc.c: 69: for (i = 0; i < 6; i++) {
  5292  002788  0E00               	movlw	0
  5293  00278A  6E09               	movwf	ADCInit@i,c
  5294  00278C                     l2906:
  5295                           
  5296                           ; BSR set to: 57
  5297                           ;adc.c: 70: ADPCH = ADCChannels[i];
  5298  00278C  0E4F               	movlw	low _ADCChannels
  5299  00278E  2409               	addwf	ADCInit@i,w,c
  5300  002790  6ED9               	movwf	fsr2l,c
  5301  002792  6ADA               	clrf	fsr2h,c
  5302  002794  0E00               	movlw	high _ADCChannels
  5303  002796  22DA               	addwfc	fsr2h,f,c
  5304  002798  50DF               	movf	indf2,w,c
  5305  00279A  013E               	movlb	62	; () banked
  5306  00279C  6FF1               	movwf	241,b	;volatile
  5307  00279E                     l561:
  5308  00279E  0139               	movlb	57	; () banked
  5309  0027A0  A7A1               	btfss	161,3,b	;volatile
  5310  0027A2  D7FD               	goto	l561
  5311                           
  5312                           ; BSR set to: 57
  5313                           ;adc.c: 72: ADTIF = 0;
  5314  0027A4  97A1               	bcf	161,3,b	;volatile
  5315                           
  5316                           ; BSR set to: 57
  5317                           ;adc.c: 73: ADCValues[i] = ADFLTRL;
  5318  0027A6  0E49               	movlw	low _ADCValues
  5319  0027A8  2409               	addwf	ADCInit@i,w,c
  5320  0027AA  6ED9               	movwf	fsr2l,c
  5321  0027AC  6ADA               	clrf	fsr2h,c
  5322  0027AE  0E00               	movlw	high _ADCValues
  5323  0027B0  22DA               	addwfc	fsr2h,f,c
  5324  0027B2  006F FB9B FFDF     	movff	16102,indf2	;volatile
  5325                           
  5326                           ; BSR set to: 57
  5327  0027B8  2A09               	incf	ADCInit@i,f,c
  5328                           
  5329                           ; BSR set to: 57
  5330  0027BA  0E05               	movlw	5
  5331  0027BC  6409               	cpfsgt	ADCInit@i,c
  5332  0027BE  D7E6               	goto	l2906
  5333                           
  5334                           ; BSR set to: 57
  5335  0027C0  0139               	banksel	14831	;# 
  5336  0027C2  0E55               	movlw	85	;# 
  5337  0027C4  6FEF               	movwf	14831,b	;# 
  5338  0027C6  0EAA               	movlw	170	;# 
  5339  0027C8  6FEF               	movwf	14831,b	;# 
  5340  0027CA  81EF               	bsf	14831,0,b	;# 
  5341                           
  5342                           ;adc.c: 85: DMA1SSAU = ((uint32_t)ADCChannels >> 16) & 0xFF;
  5343  0027CC  0E4F               	movlw	low _ADCChannels
  5344  0027CE  6E04               	movwf	??_ADCInit& (0+255),c
  5345  0027D0  0E00               	movlw	high _ADCChannels
  5346  0027D2  6E05               	movwf	(??_ADCInit+1)& (0+255),c
  5347  0027D4  6A06               	clrf	(??_ADCInit+2)& (0+255),c
  5348  0027D6  6A07               	clrf	(??_ADCInit+3)& (0+255),c
  5349  0027D8  0E11               	movlw	17
  5350  0027DA  D005               	goto	u1800
  5351  0027DC                     u1805:
  5352  0027DC  90D8               	bcf	status,0,c
  5353  0027DE  3207               	rrcf	??_ADCInit+3,f,c
  5354  0027E0  3206               	rrcf	??_ADCInit+2,f,c
  5355  0027E2  3205               	rrcf	??_ADCInit+1,f,c
  5356  0027E4  3204               	rrcf	??_ADCInit,f,c
  5357  0027E6                     u1800:
  5358  0027E6  2EE8               	decfsz	wreg,f,c
  5359  0027E8  D7F9               	goto	u1805
  5360  0027EA  5004               	movf	??_ADCInit,w,c
  5361  0027EC  013B               	movlb	59	; () banked
  5362  0027EE  6FFB               	movwf	251,b	;volatile
  5363                           
  5364                           ;adc.c: 86: DMA1SSAH = ((uint32_t)ADCChannels >> 8) & 0xFF;
  5365  0027F0  0E4F               	movlw	low _ADCChannels
  5366  0027F2  6E04               	movwf	??_ADCInit& (0+255),c
  5367  0027F4  0E00               	movlw	high _ADCChannels
  5368  0027F6  6E05               	movwf	(??_ADCInit+1)& (0+255),c
  5369  0027F8  6A06               	clrf	(??_ADCInit+2)& (0+255),c
  5370  0027FA  6A07               	clrf	(??_ADCInit+3)& (0+255),c
  5371  0027FC  0060  F014  F004   	movff	??_ADCInit+1,??_ADCInit
  5372  002802  0060  F018  F005   	movff	??_ADCInit+2,??_ADCInit+1
  5373  002808  0060  F01C  F006   	movff	??_ADCInit+3,??_ADCInit+2
  5374  00280E  6A07               	clrf	??_ADCInit+3,c
  5375  002810  5004               	movf	??_ADCInit,w,c
  5376  002812  6FFA               	movwf	250,b	;volatile
  5377                           
  5378                           ; BSR set to: 59
  5379                           ;adc.c: 87: DMA1SSAL = ((uint32_t)ADCChannels) & 0xFF;
  5380  002814  0E4F               	movlw	low (low _ADCChannels)
  5381  002816  6FF9               	movwf	249,b	;volatile
  5382                           
  5383                           ; BSR set to: 59
  5384                           ;adc.c: 88: DMA1DSAH = ((uint32_t)&ADPCH >> 8) & 0xFF;
  5385  002818  0EF1               	movlw	241
  5386  00281A  6E04               	movwf	??_ADCInit& (0+255),c
  5387  00281C  0E3E               	movlw	62
  5388  00281E  6E05               	movwf	(??_ADCInit+1)& (0+255),c
  5389  002820  6A06               	clrf	(??_ADCInit+2)& (0+255),c
  5390  002822  6A07               	clrf	(??_ADCInit+3)& (0+255),c
  5391  002824  0060  F014  F004   	movff	??_ADCInit+1,??_ADCInit
  5392  00282A  0060  F018  F005   	movff	??_ADCInit+2,??_ADCInit+1
  5393  002830  0060  F01C  F006   	movff	??_ADCInit+3,??_ADCInit+2
  5394  002836  6A07               	clrf	??_ADCInit+3,c
  5395  002838  5004               	movf	??_ADCInit,w,c
  5396  00283A  6FF1               	movwf	241,b	;volatile
  5397                           
  5398                           ;adc.c: 89: DMA1DSAL = ((uint32_t)&ADPCH) & 0xFF;
  5399  00283C  0EF1               	movlw	241
  5400  00283E  6FF0               	movwf	240,b	;volatile
  5401                           
  5402                           ;adc.c: 90: DMA1SSZH = 0x00;
  5403  002840  0E00               	movlw	0
  5404  002842  6FF8               	movwf	248,b	;volatile
  5405                           
  5406                           ;adc.c: 91: DMA1SSZL = 6;
  5407  002844  0E06               	movlw	6
  5408  002846  6FF7               	movwf	247,b	;volatile
  5409                           
  5410                           ;adc.c: 92: DMA1DSZH = 0x00;
  5411  002848  0E00               	movlw	0
  5412  00284A  6FEF               	movwf	239,b	;volatile
  5413                           
  5414                           ;adc.c: 93: DMA1DSZL = 0x01;
  5415  00284C  0E01               	movlw	1
  5416  00284E  6FEE               	movwf	238,b	;volatile
  5417                           
  5418                           ;adc.c: 94: DMA1SIRQ = 42;
  5419  002850  0E2A               	movlw	42
  5420  002852  6FFF               	movwf	255,b	;volatile
  5421                           
  5422                           ;adc.c: 95: DMA1CON1bits.DMODE = 0b00;
  5423  002854  0E3F               	movlw	-193
  5424  002856  17FD               	andwf	253,f,b	;volatile
  5425                           
  5426                           ; BSR set to: 59
  5427                           ;adc.c: 96: DMA1CON1bits.DSTP = 0;
  5428  002858  9BFD               	bcf	253,5,b	;volatile
  5429                           
  5430                           ;adc.c: 97: DMA1CON1bits.SMR = 0b00;
  5431  00285A  0EE7               	movlw	-25
  5432  00285C  17FD               	andwf	253,f,b	;volatile
  5433                           
  5434                           ;adc.c: 98: DMA1CON1bits.SMODE = 0b01;
  5435  00285E  51FD               	movf	253,w,b	;volatile
  5436  002860  0BF9               	andlw	-7
  5437  002862  0902               	iorlw	2
  5438  002864  6FFD               	movwf	253,b	;volatile
  5439                           
  5440                           ; BSR set to: 59
  5441                           ;adc.c: 99: DMA1CON1bits.SSTP = 0;
  5442  002866  91FD               	bcf	253,0,b	;volatile
  5443                           
  5444                           ;adc.c: 100: DMA1CON0 = 0xC0;
  5445  002868  0EC0               	movlw	192
  5446  00286A  6FFC               	movwf	252,b	;volatile
  5447                           
  5448                           ;adc.c: 103: DMA2SSAU = 0;
  5449  00286C  0E00               	movlw	0
  5450  00286E  6FDB               	movwf	219,b	;volatile
  5451                           
  5452                           ; BSR set to: 59
  5453                           ;adc.c: 104: DMA2SSAH = ((uint32_t)&ADFLTRL >> 8) & 0xFF;
  5454  002870  0EE6               	movlw	230
  5455  002872  6E04               	movwf	??_ADCInit& (0+255),c
  5456  002874  0E3E               	movlw	62
  5457  002876  6E05               	movwf	(??_ADCInit+1)& (0+255),c
  5458  002878  6A06               	clrf	(??_ADCInit+2)& (0+255),c
  5459  00287A  6A07               	clrf	(??_ADCInit+3)& (0+255),c
  5460  00287C  0060  F014  F004   	movff	??_ADCInit+1,??_ADCInit
  5461  002882  0060  F018  F005   	movff	??_ADCInit+2,??_ADCInit+1
  5462  002888  0060  F01C  F006   	movff	??_ADCInit+3,??_ADCInit+2
  5463  00288E  6A07               	clrf	??_ADCInit+3,c
  5464  002890  5004               	movf	??_ADCInit,w,c
  5465  002892  6FDA               	movwf	218,b	;volatile
  5466                           
  5467                           ; BSR set to: 59
  5468                           ;adc.c: 105: DMA2SSAL = ((uint32_t)&ADFLTRL) & 0xFF;
  5469  002894  0EE6               	movlw	230
  5470  002896  6FD9               	movwf	217,b	;volatile
  5471                           
  5472                           ;adc.c: 106: DMA2DSAH = ((uint32_t)ADCValues >> 8) & 0xFF;
  5473  002898  0E49               	movlw	low _ADCValues
  5474  00289A  6E04               	movwf	??_ADCInit& (0+255),c
  5475  00289C  0E00               	movlw	high _ADCValues
  5476  00289E  6E05               	movwf	(??_ADCInit+1)& (0+255),c
  5477  0028A0  6A06               	clrf	(??_ADCInit+2)& (0+255),c
  5478  0028A2  6A07               	clrf	(??_ADCInit+3)& (0+255),c
  5479  0028A4  0060  F014  F004   	movff	??_ADCInit+1,??_ADCInit
  5480  0028AA  0060  F018  F005   	movff	??_ADCInit+2,??_ADCInit+1
  5481  0028B0  0060  F01C  F006   	movff	??_ADCInit+3,??_ADCInit+2
  5482  0028B6  6A07               	clrf	??_ADCInit+3,c
  5483  0028B8  5004               	movf	??_ADCInit,w,c
  5484  0028BA  6FD1               	movwf	209,b	;volatile
  5485                           
  5486                           ; BSR set to: 59
  5487                           ;adc.c: 107: DMA2DSAL = ((uint32_t)ADCValues) & 0xFF;
  5488  0028BC  0E49               	movlw	low (low _ADCValues)
  5489  0028BE  6FD0               	movwf	208,b	;volatile
  5490                           
  5491                           ; BSR set to: 59
  5492                           ;adc.c: 108: DMA2SSZH = 0x00;
  5493  0028C0  0E00               	movlw	0
  5494  0028C2  6FD8               	movwf	216,b	;volatile
  5495                           
  5496                           ; BSR set to: 59
  5497                           ;adc.c: 109: DMA2SSZL = 0x01;
  5498  0028C4  0E01               	movlw	1
  5499  0028C6  6FD7               	movwf	215,b	;volatile
  5500                           
  5501                           ; BSR set to: 59
  5502                           ;adc.c: 110: DMA2DSZH = 0x00;
  5503  0028C8  0E00               	movlw	0
  5504  0028CA  6FCF               	movwf	207,b	;volatile
  5505                           
  5506                           ; BSR set to: 59
  5507                           ;adc.c: 111: DMA2DSZL = 6;
  5508  0028CC  0E06               	movlw	6
  5509  0028CE  6FCE               	movwf	206,b	;volatile
  5510                           
  5511                           ; BSR set to: 59
  5512                           ;adc.c: 112: DMA2SIRQ = 11;
  5513  0028D0  0E0B               	movlw	11
  5514  0028D2  6FDF               	movwf	223,b	;volatile
  5515                           
  5516                           ; BSR set to: 59
  5517                           ;adc.c: 113: DMA2CON1bits.DMODE = 0b01;
  5518  0028D4  51DD               	movf	221,w,b	;volatile
  5519  0028D6  0B3F               	andlw	-193
  5520  0028D8  0940               	iorlw	64
  5521  0028DA  6FDD               	movwf	221,b	;volatile
  5522                           
  5523                           ; BSR set to: 59
  5524                           ;adc.c: 114: DMA2CON1bits.DSTP = 0;
  5525  0028DC  9BDD               	bcf	221,5,b	;volatile
  5526                           
  5527                           ; BSR set to: 59
  5528                           ;adc.c: 115: DMA2CON1bits.SMR = 0b00;
  5529  0028DE  0EE7               	movlw	-25
  5530  0028E0  17DD               	andwf	221,f,b	;volatile
  5531                           
  5532                           ; BSR set to: 59
  5533                           ;adc.c: 116: DMA2CON1bits.SMODE = 0b00;
  5534  0028E2  0EF9               	movlw	-7
  5535  0028E4  17DD               	andwf	221,f,b	;volatile
  5536                           
  5537                           ; BSR set to: 59
  5538                           ;adc.c: 117: DMA2CON1bits.SSTP = 0;
  5539  0028E6  91DD               	bcf	221,0,b	;volatile
  5540                           
  5541                           ; BSR set to: 59
  5542                           ;adc.c: 118: DMA2CON0 = 0xC0;
  5543  0028E8  0EC0               	movlw	192
  5544  0028EA  6FDC               	movwf	220,b	;volatile
  5545                           
  5546                           ; BSR set to: 59
  5547                           ;adc.c: 120: DMA1CON0bits.DGO = 1;
  5548  0028EC  8BFC               	bsf	252,5,b	;volatile
  5549                           
  5550                           ; BSR set to: 59
  5551  0028EE  0012               	return		;funcret
  5552  0028F0                     __end_of_ADCInit:
  5553                           	opt callstack 0
  5554                           
  5555 ;; *************** function _hi_int *****************
  5556 ;; Defined at:
  5557 ;;		line 38 in file "si.c"
  5558 ;; Parameters:    Size  Location     Type
  5559 ;;		None
  5560 ;; Auto vars:     Size  Location     Type
  5561 ;;		None
  5562 ;; Return value:  Size  Location     Type
  5563 ;;                  1    wreg      void 
  5564 ;; Registers used:
  5565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5566 ;; Tracked objects:
  5567 ;;		On entry : 0/0
  5568 ;;		On exit  : 0/0
  5569 ;;		Unchanged: 0/0
  5570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5571 ;;      Params:         0       0       0       0       0       0       0       0       0
  5572 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5573 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5574 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5575 ;;Total ram usage:        0 bytes
  5576 ;; Hardware stack levels used:    1
  5577 ;; Hardware stack levels required when called:    1
  5578 ;; This function calls:
  5579 ;;		i2_SIClear
  5580 ;; This function is called by:
  5581 ;;		Interrupt level 2
  5582 ;; This function uses a non-reentrant model
  5583 ;;
  5584                           
  5585                           	psect	text27
  5586  003170                     __ptext27:
  5587                           	opt callstack 0
  5588  003170                     _hi_int:
  5589                           	opt callstack 25
  5590                           
  5591                           ;si.c: 40: if (SMT1PWAIE && SMT1PWAIF)
  5592                           
  5593                           ; BSR set to: 59
  5594                           ;incstack = 0
  5595  003170  0139               	movlb	57	; () banked
  5596  003172  BF91               	btfsc	145,7,b	;volatile
  5597                           
  5598                           ; BSR set to: 57
  5599  003174  AFA1               	btfss	161,7,b	;volatile
  5600  003176  D023               	goto	i2l3778
  5601                           
  5602                           ; BSR set to: 57
  5603                           ;si.c: 41: {;si.c: 42: SMT1PWAIF = 0;
  5604  003178  9FA1               	bcf	161,7,b	;volatile
  5605                           
  5606                           ; BSR set to: 57
  5607                           ;si.c: 44: SITempByte <<= 1;
  5608  00317A  90D8               	bcf	status,0,c
  5609  00317C  363C               	rlcf	_SITempByte,f,c
  5610                           
  5611                           ;si.c: 45: SITempByte |= (SMT1CPWL < 128) ? 1U : 0U;
  5612  00317E  0E7F               	movlw	127
  5613  003180  013F               	movlb	63	; () banked
  5614  003182  6518               	cpfsgt	24,b	;volatile
  5615  003184  D001               	goto	i2u304_41
  5616  003186  D002               	goto	i2u304_40
  5617  003188                     i2u304_41:
  5618  003188  0E01               	movlw	1
  5619  00318A  D001               	goto	i2u305_40
  5620  00318C                     i2u304_40:
  5621  00318C  0E00               	movlw	0
  5622  00318E                     i2u305_40:
  5623  00318E  123C               	iorwf	_SITempByte,f,c
  5624                           
  5625                           ; BSR set to: 63
  5626                           ;si.c: 48: SICMDReceived = 0;
  5627  003190  0E00               	movlw	0
  5628  003192  6E3D               	movwf	_SICMDReceived,c
  5629                           
  5630                           ; BSR set to: 63
  5631                           ;si.c: 49: T6TMR = 0;
  5632  003194  0E00               	movlw	0
  5633  003196  6E92               	movwf	16274,c	;volatile
  5634                           
  5635                           ; BSR set to: 63
  5636                           ;si.c: 52: ++SIBitCounter;
  5637  003198  2A3F               	incf	_SIBitCounter,f,c
  5638                           
  5639                           ; BSR set to: 63
  5640                           ;si.c: 53: if (SIBitCounter == 8) {
  5641  00319A  0E08               	movlw	8
  5642  00319C  183F               	xorwf	_SIBitCounter,w,c
  5643  00319E  A4D8               	btfss	status,2,c
  5644  0031A0  D00E               	goto	i2l3778
  5645                           
  5646                           ; BSR set to: 63
  5647                           ;si.c: 54: SIInputMessage[SIByteCounter] = SITempByte;
  5648  0031A2  0E00               	movlw	low _SIInputMessage
  5649  0031A4  243E               	addwf	_SIByteCounter,w,c
  5650  0031A6  6ED9               	movwf	fsr2l,c
  5651  0031A8  6ADA               	clrf	fsr2h,c
  5652  0031AA  0E01               	movlw	high _SIInputMessage
  5653  0031AC  22DA               	addwfc	fsr2h,f,c
  5654  0031AE  0060  F0F3  FFDF   	movff	_SITempByte,indf2
  5655                           
  5656                           ; BSR set to: 63
  5657                           ;si.c: 55: SITempByte = 0x00;
  5658  0031B4  0E00               	movlw	0
  5659  0031B6  6E3C               	movwf	_SITempByte,c
  5660                           
  5661                           ; BSR set to: 63
  5662                           ;si.c: 56: SIBitCounter = 0;
  5663  0031B8  0E00               	movlw	0
  5664  0031BA  6E3F               	movwf	_SIBitCounter,c
  5665                           
  5666                           ; BSR set to: 63
  5667                           ;si.c: 57: ++SIByteCounter;
  5668  0031BC  2A3E               	incf	_SIByteCounter,f,c
  5669  0031BE                     i2l3778:
  5670                           
  5671                           ;si.c: 58: };si.c: 63: };si.c: 65: if (PIR9bits.TMR6IF) {
  5672  0031BE  0139               	movlb	57	; () banked
  5673  0031C0  A1A9               	btfss	169,0,b	;volatile
  5674  0031C2  0011               	retfie		f
  5675                           
  5676                           ; BSR set to: 57
  5677                           ;si.c: 66: if (SIByteCounter) {
  5678  0031C4  503E               	movf	_SIByteCounter,w,c
  5679  0031C6  B4D8               	btfsc	status,2,c
  5680  0031C8  D003               	goto	i2l3784
  5681                           
  5682                           ; BSR set to: 57
  5683                           ;si.c: 67: SICMDReceived = 1;
  5684  0031CA  0E01               	movlw	1
  5685  0031CC  6E3D               	movwf	_SICMDReceived,c
  5686                           
  5687                           ;si.c: 68: } else {
  5688  0031CE  D002               	goto	i2l3786
  5689  0031D0                     i2l3784:
  5690                           
  5691                           ; BSR set to: 57
  5692                           ;si.c: 69: SIClear();
  5693  0031D0  EC62  F01A         	call	i2_SIClear	;wreg free
  5694  0031D4                     i2l3786:
  5695                           
  5696                           ;si.c: 70: };si.c: 71: PIR9bits.TMR6IF = 0;
  5697  0031D4  0139               	movlb	57	; () banked
  5698  0031D6  91A9               	bcf	169,0,b	;volatile
  5699                           
  5700                           ; BSR set to: 57
  5701  0031D8  0011               	retfie		f
  5702  0031DA                     __end_of_hi_int:
  5703                           	opt callstack 0
  5704                           
  5705 ;; *************** function i2_SIClear *****************
  5706 ;; Defined at:
  5707 ;;		line 283 in file "si.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;		None
  5710 ;; Auto vars:     Size  Location     Type
  5711 ;;		None
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  1    wreg      void 
  5714 ;; Registers used:
  5715 ;;		wreg, status,2
  5716 ;; Tracked objects:
  5717 ;;		On entry : 0/0
  5718 ;;		On exit  : 0/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5721 ;;      Params:         0       0       0       0       0       0       0       0       0
  5722 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5723 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5724 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5725 ;;Total ram usage:        0 bytes
  5726 ;; Hardware stack levels used:    1
  5727 ;; This function calls:
  5728 ;;		Nothing
  5729 ;; This function is called by:
  5730 ;;		_hi_int
  5731 ;; This function uses a non-reentrant model
  5732 ;;
  5733                           
  5734                           	psect	text28
  5735  0034C4                     __ptext28:
  5736                           	opt callstack 0
  5737  0034C4                     i2_SIClear:
  5738                           	opt callstack 25
  5739                           
  5740                           ;si.c: 285: SIBitCounter = 0;
  5741                           
  5742                           ; BSR set to: 57
  5743                           ;incstack = 0
  5744  0034C4  0E00               	movlw	0
  5745  0034C6  6E3F               	movwf	_SIBitCounter,c
  5746                           
  5747                           ;si.c: 286: SIByteCounter = 0;
  5748  0034C8  0E00               	movlw	0
  5749  0034CA  6E3E               	movwf	_SIByteCounter,c
  5750                           
  5751                           ;si.c: 287: SICMDReceived = 0;
  5752  0034CC  0E00               	movlw	0
  5753  0034CE  6E3D               	movwf	_SICMDReceived,c
  5754                           
  5755                           ;si.c: 288: SITempByte = 0x00;
  5756  0034D0  0E00               	movlw	0
  5757  0034D2  6E3C               	movwf	_SITempByte,c
  5758  0034D4  0012               	return		;funcret
  5759  0034D6                     __end_ofi2_SIClear:
  5760                           	opt callstack 0
  5761                           
  5762                           ;
  5763                           ; Interrupt Vector Table @ 0x200C
  5764                           ;
  5765                           
  5766                           	psect	ivt0x200C
  5767  00200C                     __pivt0x200C:
  5768                           	opt callstack 0
  5769  00200C                     ivt0x200C_base:
  5770                           	opt callstack 0
  5771                           
  5772                           ; high-priority vector
  5773  00200C  EFB8  F018         	goto	_hi_int
  5774  00201C                     	org	16
  5775                           
  5776                           ; low-priority vector
  5777  00201C  00FF               	reset	
  5778  0000                     
  5779                           	psect	rparam
  5780  0000                     tosu	equ	0x3FFF
  5781                           tosh	equ	0x3FFE
  5782                           tosl	equ	0x3FFD
  5783                           stkptr	equ	0x3FFC
  5784                           pclatu	equ	0x3FFB
  5785                           pclath	equ	0x3FFA
  5786                           pcl	equ	0x3FF9
  5787                           tblptru	equ	0x3FF8
  5788                           tblptrh	equ	0x3FF7
  5789                           tblptrl	equ	0x3FF6
  5790                           tablat	equ	0x3FF5
  5791                           prodh	equ	0x3FF4
  5792                           prodl	equ	0x3FF3
  5793                           indf0	equ	0x3FEF
  5794                           postinc0	equ	0x3FEE
  5795                           postdec0	equ	0x3FED
  5796                           preinc0	equ	0x3FEC
  5797                           plusw0	equ	0x3FEB
  5798                           fsr0h	equ	0x3FEA
  5799                           fsr0l	equ	0x3FE9
  5800                           wreg	equ	0x3FE8
  5801                           indf1	equ	0x3FE7
  5802                           postinc1	equ	0x3FE6
  5803                           postdec1	equ	0x3FE5
  5804                           preinc1	equ	0x3FE4
  5805                           plusw1	equ	0x3FE3
  5806                           fsr1h	equ	0x3FE2
  5807                           fsr1l	equ	0x3FE1
  5808                           bsr	equ	0x3FE0
  5809                           indf2	equ	0x3FDF
  5810                           postinc2	equ	0x3FDE
  5811                           postdec2	equ	0x3FDD
  5812                           preinc2	equ	0x3FDC
  5813                           plusw2	equ	0x3FDB
  5814                           fsr2h	equ	0x3FDA
  5815                           fsr2l	equ	0x3FD9
  5816                           status	equ	0x3FD8


Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         1149
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     37      84
    BANK0           160     86     140
    BANK1           256      0      36
    BANK2           256      0     256
    BANK3           256      0     256
    BANK4           256      0     256
    BANK5           256      0     256
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(2) Largest target is 24
		 -> buttonsMapByte1(BANK0[15]), buttonsMapByte0(BANK0[15]), config(BANK0[24]), 

    memset@p	PTR unsigned char  size(2) Largest target is 24
		 -> buttonsMapByte1(BANK0[15]), buttonsMapByte0(BANK0[15]), config(BANK0[24]), 

    buttonsBuildLUT@LUT	PTR unsigned char  size(2) Largest target is 256
		 -> LUT_CY(BANK3[256]), LUT_CX(BANK2[256]), LUT_SY(BANK5[256]), LUT_SX(BANK4[256]), 

    buttonsSetMapByte1@map	PTR unsigned char  size(2) Largest target is 36
		 -> main@cmd(BANK0[36]), 

    buttonsSetMapByte0@map	PTR unsigned char  size(2) Largest target is 36
		 -> main@cmd(BANK0[36]), 

    SIGetCommand@msg	PTR unsigned char  size(2) Largest target is 36
		 -> main@cmd(BANK0[36]), 

    SISendMessage@msg	PTR unsigned char  size(2) Largest target is 36
		 -> buttonsMessage(COMRAM[8]), main@msgAnswer(BANK0[36]), 

    configFlashAll@data	PTR unsigned char  size(2) Largest target is 24
		 -> config(BANK0[24]), 

    sp__memset	PTR void  size(2) Largest target is 24
		 -> buttonsMapByte1(BANK0[15]), buttonsMapByte0(BANK0[15]), config(BANK0[24]), 

    configInit@data	PTR unsigned char  size(2) Largest target is 24
		 -> config(BANK0[24]), 

    sp__buttonsGetMapByte1	PTR unsigned char  size(2) Largest target is 8
		 -> buttonsMessage(COMRAM[8]), 

    main@btnMsg_320	PTR unsigned char  size(2) Largest target is 8
		 -> buttonsMessage(COMRAM[8]), 

    sp__buttonsGetMapByte0	PTR unsigned char  size(2) Largest target is 8
		 -> buttonsMessage(COMRAM[8]), 

    main@btnMsg	PTR unsigned char  size(2) Largest target is 8
		 -> buttonsMessage(COMRAM[8]), 

    sp__buttonsGetMessage	PTR unsigned char  size(2) Largest target is 8
		 -> buttonsMessage(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _configSetDefault->_memset
    _configFlashAll->_EEPROMWriteByte
    _buttonsInit->_memset
    _buttonsBuildLUTs->_buttonsBuildLUT
    _buttonsBuildLUT->___awdiv
    ___awdiv->___wmul
    _SISendMessage->_buttonsGetMessage

Critical Paths under _hi_int in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _hi_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _hi_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _hi_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _hi_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _hi_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _hi_int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _hi_int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _hi_int in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               152   152      0   18360
                                             35 COMRAM     2     2      0
                                              0 BANK0     86    86      0
                            _ADCInit
                     _EEPROMReadByte
                    _EEPROMWriteByte
                            _SIClear
                       _SIGetCommand
                             _SIInit
                      _SISendMessage
                     _bootBootloader
                   _buttonsBuildLUTs
                 _buttonsGetMapByte0
                 _buttonsGetMapByte1
                  _buttonsGetMessage
                        _buttonsInit
                 _buttonsSetMapByte0
                 _buttonsSetMapByte1
                      _buttonsUpdate
                     _configFlashAll
                         _configInit
                   _configSetDefault
                          _portsInit
 ---------------------------------------------------------------------------------
 (1) _portsInit                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configInit                                           3     3      0    1389
                                              8 COMRAM     3     3      0
                     _EEPROMReadByte
                     _configFlashAll
                   _configSetDefault
 ---------------------------------------------------------------------------------
 (1) _configSetDefault                                     0     0      0     897
                             _memset
 ---------------------------------------------------------------------------------
 (2) _configFlashAll                                       3     3      0     335
                                              2 COMRAM     3     3      0
                    _EEPROMWriteByte
 ---------------------------------------------------------------------------------
 (3) _EEPROMWriteByte                                      2     1      1     222
                                              0 COMRAM     2     1      1
                          _NVMUnlock
 ---------------------------------------------------------------------------------
 (4) _NVMUnlock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EEPROMReadByte                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _buttonsUpdate                                        7     7      0     591
                                              0 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 (1) _buttonsSetMapByte1                                   3     1      2     201
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _buttonsSetMapByte0                                   3     1      2     201
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _buttonsInit                                          0     0      0     897
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     897
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _buttonsGetMessage                                    6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _buttonsGetMapByte1                                   3     1      2      90
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _buttonsGetMapByte0                                   3     1      2      90
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _buttonsBuildLUTs                                     0     0      0    4914
                    _buttonsBuildLUT
 ---------------------------------------------------------------------------------
 (2) _buttonsBuildLUT                                     21    13      8    4914
                                             14 COMRAM    21    13      8
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     693
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1012
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _bootBootloader                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SISendMessage                                       10     7      3    5052
                                              6 COMRAM    10     7      3
                  _buttonsGetMessage (ARG)
 ---------------------------------------------------------------------------------
 (1) _SIInit                                               0     0      0       0
                     _SIConfigureCLC
 ---------------------------------------------------------------------------------
 (2) _SIConfigureCLC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SIGetCommand                                         3     1      2     179
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _SIClear                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCInit                                              9     6      3     445
                                              0 COMRAM     9     6      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _hi_int                                               0     0      0       0
                          i2_SIClear
 ---------------------------------------------------------------------------------
 (6) i2_SIClear                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCInit
   _EEPROMReadByte
   _EEPROMWriteByte
     _NVMUnlock
   _SIClear
   _SIGetCommand
   _SIInit
     _SIConfigureCLC
   _SISendMessage
     _buttonsGetMessage (ARG)
   _bootBootloader
   _buttonsBuildLUTs
     _buttonsBuildLUT
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _buttonsGetMapByte0
   _buttonsGetMapByte1
   _buttonsGetMessage
   _buttonsInit
     _memset
   _buttonsSetMapByte0
   _buttonsSetMapByte1
   _buttonsUpdate
   _configFlashAll
     _EEPROMWriteByte
       _NVMUnlock
   _configInit
     _EEPROMReadByte
     _configFlashAll
       _EEPROMWriteByte
         _NVMUnlock
     _configSetDefault
       _memset
   _configSetDefault
     _memset
   _portsInit

 _hi_int (ROOT)
   i2_SIClear

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      20        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      17        0.0%
BANK7              100      0       0      18        0.0%
BITBANK6           100      0       0      15        0.0%
BANK6              100      0       0      16        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0     100      14      100.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0     100      12      100.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0     100      10      100.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0     100       8      100.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      24       6       14.1%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     56      8C       4       87.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     25      54       1       88.4%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     504      19        0.0%
DATA                 0      0     504      21        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Mar 26 22:31:49 2020

                  __CFG_CP$OFF 000000                   ___awdiv@sign 000C            ___wmul@multiplicand 0003  
                   _SITempByte 003C                   __CFG_BBEN$ON 000000                    configInit@i 000B  
                  __CFG_LVP$ON 000000        __size_of_EEPROMReadByte 0014                  SIGetCommand@i 0003  
                          l132 217E                            l134 21C2                            l209 324C  
                          l156 2296                            l428 2FA2                            l437 2D16  
                          l561 279E                            l705 295E                            l556 2768  
                          l661 2734                            l741 3482                            l670 2AF2  
                          l665 2AE4                            l658 271E                            _GIE 01FE97  
                          _PCL 003FF9     __end_of_buttonsGetMapByte0 33B6     __end_of_buttonsGetMapByte1 3382  
              __end_of_ADCInit 28F0                            wreg 003FE8                   __CFG_ZCD$OFF 000000  
                         l3030 2470                           l3050 2498                           l3042 2488  
                         l3034 2478                           l3026 2468                           l3300 26F6  
                         l3220 262E                           l3212 261A                           l3204 2606  
                         l3140 2566                           l3132 2552                           l3124 253E  
                         l3116 252A                           l3108 2516                           l3070 24C0  
                         l3062 24B0                           l3054 24A0                           l3046 2490  
                         l3038 2480                           l3330 32E6                           l3082 24D8  
                         l3074 24C8                           l3066 24B8                           l3058 24A8  
                         l3332 32EC                           l3412 2BD4                           l3420 2BF4  
                         l3316 2720                           l3308 270A                           l3260 2692  
                         l3252 267E                           l3244 266A                           l3236 2656  
                         l3228 2642                           l3180 25CA                           l3172 25B6  
                         l3164 25A2                           l3156 258E                           l3148 257A  
                         l3092 24E4                           l3406 2BA6                           l3422 2C26  
                         l3078 24D0                           l3336 330C                           l2704 302C  
                         l2720 305E                           l3362 2D86                           l2706 3034  
                         l2810 2938                           l3450 3414                           l3602 2208  
                         l3522 208A          buttonsBuildLUT@dzMode 0015                           l3372 2DD2  
                         l3356 2D5A                           l2724 306C                           l2716 3054  
                         l2804 291C                           l3292 26E2                           l3284 26CE  
                         l3276 26BA                           l3268 26A6                           l3196 25F2  
                         l3188 25DE                           l3508 2054                           l3374 2DD4  
                         l2822 29D2                           l2814 296A                           l3462 3386  
                         l3390 2B2C                           l3438 3440                           l3702 2312  
                         l3614 2216                           l3526 2092                           l3368 2DC0  
                         l2840 2A92                           l2672 3326                           l3712 234A  
                         l3640 2276                           l3608 2212                           l3560 214E  
                         l3552 20EA                           l2906 278C                           l2834 2A70  
                         l2826 2A1A                           l2818 2996                           l3706 231A  
                         l3634 224C                           l3546 20CC                           l2692 3006  
                         l3388 2B26                           l2676 333C                           l3724 237C  
                         l3716 235C                           l3652 229A                           l3572 217A  
                         l3556 2114                           l2838 2A80                           l3478 3352  
                         l3398 2B64                           l3662 22BA                           l3574 2184  
                         l3728 2384                           l3584 21C6                           l3576 2196  
                         l3752 23C6                           l2698 3016                           l2778 33F0  
                         l3738 23B4                           l2972 2FAA                           l3748 23C0  
                         l3596 21EA                           l2878 328E                           l3694 22F2  
                         l3678 22D6                   __CFG_WDTE$ON 000000                           _LATB 003FBB  
                         u1600 3038          buttonsBuildLUT@maxVal 0012                           u1800 27E6  
                         u1720 320E                           _T2PR 003FAB                           u2620 2DD8  
                         u1805 27DC                           u2630 2DDC                           u1750 3286  
                         u1735 3210                           u1680 29E0                           u2910 2284  
                         u2760 20AE                           _T6PR 003F93          buttonsBuildLUT@minVal 0011  
        buttonsBuildLUT@radius 0022                           _WPUA 003A41                           _WPUB 003A51  
                         _WPUC 003A61          buttonsBuildLUT@invert 0016                  __CFG_FCMEN$ON 000000  
        buttonsBuildLUT@origin 0013                   __CFG_WRTB$ON 000000              ??_buttonsBuildLUT 0017  
                         _main 2022                __end_of_SIClear 34C4                           fsr1h 003FE2  
                         fsr2h 003FDA                           indf1 003FE7                           indf2 003FDF  
                         fsr1l 003FE1                           fsr2l 003FD9                           prodh 003FF4  
                         prodl 003FF3                           start 201E                  __CFG_CSWEN$ON 000000  
               _SPI1STATUSbits 003D17      __size_of_configSetDefault 0076                   ___param_bank 000000  
                __CFG_SAFEN$ON 000000        SISendMessage@leftToSend 0010                          PRLOCK 0039EF  
                        _ADACT 003EFE                          ?_main 0001                          _ADCLK 003EFF  
                        _ADPCH 003EF1                  _SISendMessage 2D12                          _ADREF 003EFD  
              __end_of___awdiv 307A                          _ADTIF 01CD0B                SIGetCommand@msg 0001  
                        _ADRPT 003EEC                ___awdiv@divisor 0009                          _T2CLK 003FAE  
                        _T2CON 003FAC                          _T2HLT 003FAD                          _T6CLK 003F96  
                        _T6CON 003F94                 __CFG_DEBUG$OFF 000000                          _T6HLT 003F95  
                        _T2TMR 003FAA                          _T2RST 003FAF                          _T6TMR 003F92  
                        _T6RST 003F97                ___awdiv@counter 000B             __size_ofi2_SIClear 0012  
                        _TMR0H 003FB7                          _PORTA 003FCA                          _PORTB 003FCB  
                        _PORTC 003FCC                          _TRISA 003FC2                          _TRISB 003FC3  
                        _TRISC 003FC4              ?_buttonsBuildLUTs 0001                   ?_buttonsInit 0001  
       buttonsBuildLUT@tempVal 001E                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
                 _DMA1CON0bits 003BFC                   _DMA1CON1bits 003BFD             ??_buttonsBuildLUTs 0024  
                 _DMA2CON1bits 003BDD             __CFG_MCLRE$EXTMCLR 000000                          main@i 00B5  
        EEPROMReadByte@address 0001       __size_of_EEPROMWriteByte 0024                          tablat 003FF5  
             ??_bootBootloader 0001             __size_of_NVMUnlock 0012                          status 003FD8  
               _SIInputMessage 0100             configFlashAll@data 0003                __initialization 2EBC  
                 __end_of_main 242A                      ??_ADCInit 0004                  main@gcpLocked 00B1  
               ?_SISendMessage 0007                         ??_main 0024                 configInit@data 0009  
                __activetblptr 000002              _buttonsGetMessage 2AA2             main@flashBufferIdx 0084  
                       _ADACQL 003EF3                         _ADCON0 003EF8                         _ADCON1 003EF9  
                       _ADCON2 003EFA                         _ADCON3 003EFB                      ??_SIClear 0001  
           ?_buttonsGetMessage 0001               ??_configFlashAll 0003               ___awdiv@dividend 0007  
                       _ANSELA 003A40                         _ANSELB 003A50                         _ANSELC 003A60  
                       _T0CON0 003FB8                         _T0CON1 003FB9                         _RB4PPS 003A0C  
                       _ODCONA 003A42                         _ODCONB 003A52                         _ODCONC 003A62  
                       _PCLATH 003FFA                         _PCLATU 003FFB                         i2l3784 31D0  
                       i2l3786 31D4                         i2l3778 31BE                         _NVMDAT 0039E3  
                       _TMR0IF 01CD1F                         _LUT_CX 0200                         _LUT_CY 0300  
                       _LUT_SX 0400                         _LUT_SY 0500                         _STKPTR 003FFC  
                       _SIInit 2F68            ??_buttonsGetMessage 0003              __end_ofi2_SIClear 34D6  
                main@msgAnswer 0089                 __CFG_XINST$OFF 000000                         ___wmul 33B6  
                    ??___awdiv 000B                 __CFG_STVREN$ON 000000                         _hi_int 3170  
                       _config 00B6                         _memset 3318                         clear_0 2EE6  
                       clear_1 2EFA                         clear_2 2F0E                         clear_3 2F22  
                       clear_4 2F34                         clear_5 2F40                         clear_6 2F4C  
             ___awdiv@quotient 000D                 _EEPROMReadByte 348C              __end_of_NVMUnlock 34B2  
    __end_of_buttonsGetMessage 2C30                   __pdataCOMRAM 0049     __end_of_buttonsSetMapByte0 3468  
   __end_of_buttonsSetMapByte1 343C                         tblptrh 003FF7                         tblptrl 003FF6  
                       tblptru 003FF8         __size_of_buttonsUpdate 030E               ??_SIConfigureCLC 0001  
                   __accesstop 0060        __end_of__initialization 2F5E                  ___rparam_used 000001  
            ??_EEPROMWriteByte 0002               _configSetDefault 30FA                configFlashAll@i 0005  
               __pcstackCOMRAM 0001                ??_SISendMessage 000A         __end_of_EEPROMReadByte 34A0  
              _buttonsBuildLUT 28F0                _buttonsMapByte0 00DD                _buttonsMapByte1 00CE  
         __size_of_buttonsInit 0080                __CFG_PR1WAY$OFF 000000                     __pbssBANK0 00B6  
                   __pbssBANK1 0100                     __pbssBANK2 0200                     __pbssBANK3 0300  
                   __pbssBANK4 0400                     __pbssBANK5 0500                 main@btnMsg_320 0087  
           _buttonsGetMapByte0 3382             _buttonsGetMapByte1 334E                __CFG_MVECEN$OFF 000000  
                      ?_SIInit 0001                        IVTBASEH 003FD6                        IVTBASEL 003FD5  
                      IVTBASEU 003FD7                  _buttonsTimers 0026                  _buttonsUpdate 242A  
          ?_buttonsGetMapByte0 0001            ?_buttonsGetMapByte1 0001                        ?___wmul 0001  
                      ?_hi_int 0001                ?_EEPROMReadByte 0001               buttonsBuildLUT@i 0020  
                      _ADFLTRL 003EE6                        _CLC1CON 003C74                        _CLC2CON 003C6A  
                      _CLC3CON 003C60                        _CLC4CON 003C56                        ?_memset 0001  
                      _CLC1POL 003C75                        _CLC2POL 003C6B                        _CLC3POL 003C61  
                      _ADCInit 2738                        _CLC4POL 003C57     __size_of_buttonsGetMessage 018E  
                      _T6INPPS 003ACC            __CFG_PWRTS$PWRT_OFF 000000                        _INTCON0 003FD2  
                   _configInit 3240                        _IVTBASE 003FD5           ??_buttonsGetMapByte0 0003  
         ??_buttonsGetMapByte1 0003            buttonsSetMapByte0@i 0003            buttonsSetMapByte1@i 0003  
                      _IVTLOCK 003FD4                        _SPI1CLK 003D1C             __size_of_portsInit 0066  
                      _SMT1CLK 003F21                        _NVMADRL 0039E0                        _SPI1TXB 003D11  
                      _NVMCON1 0039E5                        _NVMCON2 0039E6                        _PWM5DCH 003F6D  
                      _PWM5DCL 003F6C                        _SMT1SIG 003F22                        _PWM5CON 003F6E  
                      _SMT1PRH 003F1C                        _SMT1PRL 003F1B                        _SMT1PRU 003F1D  
                      _SMT1WIN 003F23                        _PPSLOCK 003ABF                        _SIClear 34B2  
           buttonsBuildLUT@LUT 000F        __CFG_BBSIZE$BBSIZE_4096 000000                __size_of_SIInit 008A  
    __size_of_buttonsBuildLUTs 00D2                      _ADCValues 0049                 ?_buttonsUpdate 0001  
                      __Hparam 0000                        __Lparam 0000     __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
                      ___awdiv 2FF2                __size_of___wmul 002E                __size_of_hi_int 006A  
      __end_of_buttonsBuildLUT 2AA2                        __pcinit 2EBC                  ivt0x200C_base 200C  
              __size_of_memset 0036                        __ramtop 0800                  _SICMDReceived 003D  
                      __ptext0 2022                        __ptext1 31DA                        __ptext2 3240  
                      __ptext3 30FA                        __ptext4 33E4                        __ptext5 3468  
                      __ptext6 34A0                        __ptext7 348C                        __ptext8 242A  
                      __ptext9 3410                __CFG_WRTAPP$OFF 000000                __CFG_WRTSAF$OFF 000000  
                      main@cmd 0060                        main@len 00AD           end_of_initialization 2F5E  
                      memset@c 0003                        memset@n 0005                        memset@p 0007  
                __Lmediumconst 0000           _buttonsBuildLUT$1495 001A          buttonsSetMapByte0@map 0001  
        buttonsSetMapByte1@map 0001                      _IVTLOCKED 01FEA0                      _SPI1TCNTL 003D12  
                ?_SIGetCommand 0001              __end_of_portsInit 3240                        postdec1 003FE5  
                      postinc0 003FEE                      i2_SIClear 34C4                      _SMT1PWAIE 01CC8F  
                    _SMT1PWAIF 01CD0F            EEPROMWriteByte@data 0001                 portsInit@state 0001  
        __CFG_WDTCPS$WDTCPS_12 000000                     _outButtons 0035    buttonsUpdate@toggledButtons 0005  
                    _PORTBbits 003FCB                    ?_configInit 0001           __CFG_WDTCCS$LFINTOSC 000000  
                    _TRISBbits 003FC3                      _NVMUnlock 34A0       __end_of_configSetDefault 3170  
              _EEPROMWriteByte 3468               __CFG_FEXTOSC$OFF 000000                     main@cmdLen 00B0  
                   main@btnMsg 0085             _buttonsSetMapByte0 343C             _buttonsSetMapByte1 3410  
              ??_buttonsUpdate 0001           buttonsBuildLUT@range 001C                 __end_of_SIInit 2FF2  
               ??_SIGetCommand 0003                    _ADCChannels 004F            ?_buttonsSetMapByte0 0001  
          ?_buttonsSetMapByte1 0001                     ?i2_SIClear 0001        __size_of_bootBootloader 0044  
               __end_of___wmul 33E4               SISendMessage@idx 000F               SISendMessage@len 0009  
             SISendMessage@msg 0007               ?_buttonsBuildLUT 000F                  __pidataCOMRAM 34D6  
               __end_of_hi_int 31DA            buttonsGetMapByte0@i 0003            buttonsGetMapByte1@i 0003  
               __end_of_memset 334E            start_initialization 2EBC                     ?_NVMUnlock 0001  
         ??_buttonsSetMapByte0 0003           ??_buttonsSetMapByte1 0003                      _ButtonsID 0040  
                     ADCInit@i 0009                       ??_SIInit 0001               _buttonsBuildLUTs 2DEA  
             ??_EEPROMReadByte 0001               __CFG_LPBOREN$OFF 000000        __size_of_configFlashAll 002C  
          __size_of_configInit 0058                       ??___wmul 0005                       ??_hi_int 0001  
                     ??_memset 0007                       ?_ADCInit 0001            buttonsGetMessage@la 0006  
          buttonsGetMessage@ra 0005          __end_of_SISendMessage 2DEA               __CFG_IVT1WAY$OFF 000000  
      __end_of_EEPROMWriteByte 348C                  ??_buttonsInit 0009                    __pbssCOMRAM 0026  
                __pcstackBANK0 0060                       ?_SIClear 0001                 _buttonsMessage 0041  
                  __pivt0x200C 200C        __size_of_SIConfigureCLC 00E2                    ??i2_SIClear 0001  
                     ?___awdiv 0007                    ADCInit@cxCh 0002                    ADCInit@cyCh 0003  
                  ADCInit@sxCh 0008                    ADCInit@syCh 0001               __CFG_PPS1WAY$OFF 000000  
            buttonsBuildLUT@dz 0014                       _CLC1GLS0 003C7A                       _CLC1GLS1 003C7B  
                     _CLC1GLS2 003C7C                       _CLC1GLS3 003C7D                       _CLC2GLS0 003C70  
                     _CLC2GLS1 003C71                       _CLC2GLS2 003C72                       _CLC2GLS3 003C73  
                     _CLC3GLS0 003C66                       _CLC3GLS1 003C67                       _CLC3GLS2 003C68  
                     _CLC3GLS3 003C69                       _CLC4GLS0 003C5C                       _CLC4GLS1 003C5D  
                     _CLC4GLS2 003C5E                       _CLC4GLS3 003C5F                       _CLC1SEL0 003C76  
                     _CLC1SEL1 003C77                       _CLC1SEL2 003C78                       _CLC1SEL3 003C79  
                     _CLC2SEL0 003C6C                       _CLC2SEL1 003C6D                       _CLC2SEL2 003C6E  
                     _CLC2SEL3 003C6F                       _CLC3SEL0 003C62                       _CLC3SEL1 003C63  
                     _CLC3SEL2 003C64                       _CLC3SEL3 003C65                       _DMA1CON0 003BFC  
                     _CLC4SEL0 003C58                       _CLC4SEL1 003C59                       _CLC4SEL2 003C5A  
                     _CLC4SEL3 003C5B                       _DMA2CON0 003BDC                       _DMA1DSAH 003BF1  
                     _DMA1DSAL 003BF0                       _DMA2DSAH 003BD1                       _DMA2DSAL 003BD0  
                     _DMA1DSZH 003BEF                       _DMA1DSZL 003BEE                       _DMA2DSZH 003BCF  
                     _DMA2DSZL 003BCE                       _ADCPbits 003ED7                       _DMA1SSAH 003BFA  
                     _DMA1SIRQ 003BFF                       _DMA1SSAL 003BF9                       _DMA1SSAU 003BFB  
                     _DMA2SSAH 003BDA                       _DMA2SIRQ 003BDF                       _DMA2SSAL 003BD9  
                     _DMA2SSAU 003BDB                       _DMA1SSZH 003BF8                       _DMA1SSZL 003BF7  
                     _DMA2SSZH 003BD8                       _DMA2SSZL 003BD7                    ??_NVMUnlock 0001  
                     _CCPTMRS1 003F5F    __size_of_buttonsGetMapByte0 0034    __size_of_buttonsGetMapByte1 0034  
         __end_of_SIGetCommand 3318                       _T2CLKCON 003FAE                       _NCO1ACCL 003F38  
          __end_of_buttonsInit 30FA                 ___wmul@product 0005                       _IPR1bits 003981  
                     _PIE1bits 003991            __CFG_BORV$VBOR_2P85 000000                       _PIE9bits 003999  
                     i2u304_40 318C                       i2u304_41 3188                       i2u305_40 318E  
                     _PIR1bits 0039A1                       _SPI1BAUD 003D19                       _PIR4bits 0039A4  
                     _SPI1CON0 003D14                       _SPI1CON1 003D15                       _SPI1CON2 003D16  
                     _PIR9bits 0039A9                       _SMT1CON0 003F1E                       _SMT1CON1 003F1F  
                     _SMT1CPWL 003F18                buttonsUpdate@PA 0001                buttonsUpdate@PB 0002  
               _bootBootloader 3298                buttonsUpdate@PC 0003                       _SMT1TMRH 003F13  
                     _SMT1TMRL 003F12                       _SMT1TMRU 003F14    buttonsGetMessage@analogMode 0004  
                 _SPI1INTFbits 003D1A                      _portsInit 31DA               __size_of_ADCInit 01B8  
                   _ADCON2bits 003EFA              ___wmul@multiplier 0001               ?_EEPROMWriteByte 0001  
                    main@inBut 00B2                   ??_configInit 0009              ?_configSetDefault 0001  
                 _SMT1CON1bits 003F1F                    _INTCON0bits 003FD2                      copy_data0 2ED0  
             __size_of_SIClear 0012             ??_configSetDefault 0009         __end_of_bootBootloader 32DC  
                     __Hrparam 0000                 _configFlashAll 33E4                       __Lrparam 0000  
           __CFG_BOREN$SBORDIS 000000             __end_of_configInit 3298               __size_of___awdiv 0088  
       EEPROMWriteByte@address 0002                     ?_portsInit 0001       __end_of_buttonsBuildLUTs 2EBC  
                  _buttonsInit 307A                       __ptext10 343C                       __ptext11 307A  
                     __ptext20 3298                       __ptext12 3318                       __ptext21 2D12  
                     __ptext13 2AA2                       __ptext22 2F68                       __ptext14 334E  
                     __ptext23 2C30                       __ptext15 3382                       __ptext24 32DC  
                     __ptext16 2DEA                       __ptext25 34B2                       __ptext17 28F0  
                     __ptext26 2738                       __ptext18 33B6                       __ptext27 3170  
                     __ptext19 2FF2                       __ptext28 34C4                  __size_of_main 0408  
       __end_of_configFlashAll 3410           __CFG_WDTCWS$WDTCWS_7 000000          __end_of_buttonsUpdate 2738  
              ?_bootBootloader 0001                 _SIConfigureCLC 2C30                 buttonsUpdate@i 0004  
                     main@addr 00AE          __size_of_SIGetCommand 003C                    _NVMCON1bits 0039E5  
     __size_of_buttonsBuildLUT 01B2    __size_of_buttonsSetMapByte0 002C    __size_of_buttonsSetMapByte1 002C  
                     memset@p1 0001                       intlevel2 0000                   _SIBitCounter 003F  
buttonsGetMessage@triggersMode 0001                ?_configFlashAll 0001              __CFG_CLKOUTEN$OFF 000000  
                  _PPSLOCKbits 003ABF         __end_of_SIConfigureCLC 2D12                   _SIGetCommand 32DC  
                   _SPI1TWIDTH 003D18                    _prevButtons 0039                    ??_portsInit 0001  
                   _SMT1SIGPPS 003AD2         __size_of_SISendMessage 00D8                  _SIByteCounter 003E  
              ?_SIConfigureCLC 0001  
